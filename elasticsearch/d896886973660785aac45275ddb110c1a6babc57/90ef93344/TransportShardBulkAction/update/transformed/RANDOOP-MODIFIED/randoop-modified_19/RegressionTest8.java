import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest8 {

    public static boolean debug = false;

    @Test
    public void test4001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4001");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData6 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData6);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap8 = indexMetaData6.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet9 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple10 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData6, indexShardStateSet9);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters11 = indexMetaData6.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder12 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData6);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff13 = indexMetaData0.diff(indexMetaData6);
        int int14 = indexMetaData0.getNumberOfReplicas();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder15 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        long long16 = indexMetaData0.getVersion();
        int int17 = indexMetaData0.getNumberOfShards();
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap18 = indexMetaData0.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters19 = indexMetaData0.getInitialRecoveryFilters();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder20 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params21 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder22 = indexMetaData0.toXContent(xContentBuilder20, params21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNotNull(indexMetaData6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap8);
        org.junit.Assert.assertNotNull(indexShardStateSet9);
        org.junit.Assert.assertNull(discoveryNodeFilters11);
        org.junit.Assert.assertNotNull(indexMetaDataDiff13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap18);
        org.junit.Assert.assertNull(discoveryNodeFilters19);
        org.junit.Assert.assertNotNull(params21);
    }

    @Test
    public void test4002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4002");
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        java.lang.Throwable throwable7 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult8 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult9 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest4, false, throwable7, writeResult8);
        org.elasticsearch.action.update.UpdateHelper.Result result10 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest12 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest13 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest12);
        org.elasticsearch.action.update.UpdateHelper.Result result14 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest16 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest17 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest16);
        java.lang.Throwable throwable19 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult20 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult21 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result14, (org.elasticsearch.action.ActionRequest) bulkShardRequest16, false, throwable19, writeResult20);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple22 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest13, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest16);
        java.lang.Throwable throwable24 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult25 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult26 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result10, (org.elasticsearch.action.ActionRequest) bulkShardRequest16, true, throwable24, writeResult25);
        org.elasticsearch.index.shard.ShardId shardId27 = bulkShardRequest16.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue28 = bulkShardRequest16.timeout();
        org.elasticsearch.tasks.TaskId taskId29 = bulkShardRequest16.getParentTask();
        bulkShardRequest4.setParentTask(taskId29);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest31 = new org.elasticsearch.action.bulk.BulkItemRequest((int) '#', (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest32 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.ActionRequest actionRequest35 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest36 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest35);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest37 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple38 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest36, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest37);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest39 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest37);
        org.elasticsearch.index.shard.ShardId shardId40 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest41 = bulkShardRequest37.setShardId(shardId40);
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest43 = bulkShardRequest37.setShardId(shardId42);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple44 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest32, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest37);
        java.lang.String[] strArray57 = new java.lang.String[] { "index.blocks.write", "index.creation_date_string", "current version [10] is higher than the one provided [98]", "current version [97] is different than the one provided [1]", "index.version.upgraded", "index.creation_date_string", "index.version.minimum_compatible", "", "delete", "index.shadow_replicas", "index.shadow_replicas", "index.version.minimum_compatible" };
        java.util.ArrayList<java.lang.String> strList58 = new java.util.ArrayList<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData60 = null;
        org.elasticsearch.common.collect.Tuple<java.util.AbstractCollection<java.lang.String>, org.elasticsearch.cluster.metadata.IndexMetaData> strCollectionTuple61 = new org.elasticsearch.common.collect.Tuple<java.util.AbstractCollection<java.lang.String>, org.elasticsearch.cluster.metadata.IndexMetaData>((java.util.AbstractCollection<java.lang.String>) strList58, indexMetaData60);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>, java.util.List<java.lang.String>> bulkItemRequestTupleTuple62 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>, java.util.List<java.lang.String>>(bulkItemRequestTuple44, (java.util.List<java.lang.String>) strList58);
        org.elasticsearch.transport.TransportMessage transportMessage63 = null;
        org.elasticsearch.common.collect.Tuple<java.util.RandomAccess, org.elasticsearch.transport.TransportMessage> randomAccessTuple64 = org.elasticsearch.common.collect.Tuple.tuple((java.util.RandomAccess) strList58, transportMessage63);
        org.junit.Assert.assertNull(shardId27);
        org.junit.Assert.assertNotNull(timeValue28);
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(bulkShardRequest41);
        org.junit.Assert.assertNotNull(bulkShardRequest43);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(randomAccessTuple64);
    }

    @Test
    public void test4003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4003");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.ActionRequest actionRequest2 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest3 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest2);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple5 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        bulkShardRequest4.remoteAddress(transportAddress6);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult8 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult9 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest4, writeResult8);
        bulkShardRequest4.setParentTask("current version [97] is higher than the one provided [10]", 0L);
    }

    @Test
    public void test4004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4004");
        org.elasticsearch.action.ActionRequest actionRequest3 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest3);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple6 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest10 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        org.elasticsearch.action.update.UpdateHelper.Result result11 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest13 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest13);
        java.lang.Throwable throwable16 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult17 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult18 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result11, (org.elasticsearch.action.ActionRequest) bulkShardRequest13, false, throwable16, writeResult17);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple19 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest10, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest13);
        org.elasticsearch.action.ActionRequest actionRequest21 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest21);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest23 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple24 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest22, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest23);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple25 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest10, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest23);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple26 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest7, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest23);
        bulkShardRequest23.setParentTask("index.version.created", (long) (byte) 1);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest30 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 10, (org.elasticsearch.action.ActionRequest) bulkShardRequest23);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str31 = bulkItemRequest30.index();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test4005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4005");
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.update.UpdateHelper.Result result6 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult12 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult13 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result6, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable11, writeResult12);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest8);
        java.lang.Throwable throwable16 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult17 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult18 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, true, throwable16, writeResult17);
        org.elasticsearch.index.shard.ShardId shardId19 = bulkShardRequest8.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue20 = bulkShardRequest8.timeout();
        long long21 = bulkShardRequest8.seqNo();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.action.support.IndicesOptions indicesOptions23 = bulkShardRequest8.indicesOptions();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest24 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 3, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting26 = null;
        java.lang.Throwable throwable28 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure30 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting26, "", throwable28, "");
        org.elasticsearch.action.update.UpdateHelper.Result result31 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest32 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable34 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult35 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult36 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result31, (org.elasticsearch.action.ActionRequest) bulkShardRequest32, false, throwable34, writeResult35);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple37 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure30, (org.elasticsearch.transport.TransportMessage) bulkShardRequest32);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest39 = bulkShardRequest32.index("hi!");
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest40 = new org.elasticsearch.action.bulk.BulkItemRequest((int) '#', (org.elasticsearch.action.ActionRequest) bulkShardRequest39);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest41 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.String str42 = bulkShardRequest41.index();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple43 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest40, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest41);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest46 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest47 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest46);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel48 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest49 = bulkShardRequest46.consistencyLevel(writeConsistencyLevel48);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest50 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest49);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple51 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest40, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest49);
        org.elasticsearch.action.ActionRequest actionRequest54 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest55 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest54);
        org.elasticsearch.action.ActionRequest actionRequest58 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest59 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest58);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest60 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple61 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest59, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest60);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest62 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest60);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple63 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest55, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest60);
        org.elasticsearch.common.transport.TransportAddress transportAddress64 = null;
        bulkShardRequest60.remoteAddress(transportAddress64);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest66 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest60);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>, org.elasticsearch.action.IndicesRequest> bulkItemRequestTupleTuple67 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>, org.elasticsearch.action.IndicesRequest>(bulkItemRequestTuple51, (org.elasticsearch.action.IndicesRequest) bulkShardRequest60);
        org.elasticsearch.common.transport.TransportAddress transportAddress68 = null;
        bulkShardRequest60.remoteAddress(transportAddress68);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple70 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest24, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest60);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData71 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder72 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData71);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap73 = indexMetaData71.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet74 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple75 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData71, indexShardStateSet74);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters76 = indexMetaData71.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder77 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData71);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters78 = indexMetaData71.excludeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder79 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData71);
        boolean boolean80 = bulkItemRequestTuple70.equals((java.lang.Object) indexMetaData71);
        org.elasticsearch.common.settings.Settings settings81 = indexMetaData71.getSettings();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters82 = indexMetaData71.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder83 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData71);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder85 = builder83.removeAlias("hi!");
        org.elasticsearch.cluster.metadata.AliasMetaData.Builder builder86 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder87 = builder85.putAlias(builder86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertNotNull(indicesOptions23);
        org.junit.Assert.assertNotNull(bulkShardRequest39);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(bulkShardRequest49);
        org.junit.Assert.assertNotNull(indexMetaData71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap73);
        org.junit.Assert.assertNotNull(indexShardStateSet74);
        org.junit.Assert.assertNull(discoveryNodeFilters76);
        org.junit.Assert.assertNull(discoveryNodeFilters78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(settings81);
        org.junit.Assert.assertNull(discoveryNodeFilters82);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(builder85);
    }

    @Test
    public void test4006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4006");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure6 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", throwable4, "");
        org.elasticsearch.action.update.UpdateHelper.Result result7 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult11 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult12 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result7, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable10, writeResult11);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure6, (org.elasticsearch.transport.TransportMessage) bulkShardRequest8);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest15 = bulkShardRequest8.index("index.version.created");
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = bulkShardRequest8.remoteAddress();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest17 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.action.update.UpdateHelper.Result result18 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest20 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest20);
        org.elasticsearch.action.update.UpdateHelper.Result result22 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest24 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest25 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest24);
        java.lang.Throwable throwable27 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult28 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult29 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result22, (org.elasticsearch.action.ActionRequest) bulkShardRequest24, false, throwable27, writeResult28);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple30 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest21, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest24);
        org.elasticsearch.tasks.TaskId taskId31 = null;
        bulkShardRequest24.setParentTask(taskId31);
        org.elasticsearch.index.shard.ShardId shardId33 = bulkShardRequest24.shardId();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult34 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult35 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result18, (org.elasticsearch.action.ActionRequest) bulkShardRequest24, writeResult34);
        org.elasticsearch.common.unit.TimeValue timeValue36 = bulkShardRequest24.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest37 = bulkShardRequest8.timeout(timeValue36);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException38 = bulkShardRequest37.validate();
        org.elasticsearch.action.update.UpdateHelper.Result result41 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest43 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest44 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest43);
        org.elasticsearch.action.update.UpdateHelper.Result result45 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest47 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest48 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest47);
        java.lang.Throwable throwable50 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult51 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult52 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result45, (org.elasticsearch.action.ActionRequest) bulkShardRequest47, false, throwable50, writeResult51);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple53 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest44, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest47);
        org.elasticsearch.tasks.TaskId taskId54 = null;
        bulkShardRequest47.setParentTask(taskId54);
        java.lang.Throwable throwable57 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult58 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult59 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result41, (org.elasticsearch.action.ActionRequest) bulkShardRequest47, true, throwable57, writeResult58);
        org.elasticsearch.action.support.IndicesOptions indicesOptions60 = bulkShardRequest47.indicesOptions();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest61 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest47);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException62 = bulkShardRequest47.validate();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult63 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult64 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest37, true, (java.lang.Throwable) actionRequestValidationException62, writeResult63);
        org.elasticsearch.action.ActionRequest actionRequest65 = updateResult64.actionRequest;
        org.elasticsearch.action.update.UpdateResponse updateResponse66 = updateResult64.noopResult;
        java.lang.Throwable throwable67 = updateResult64.error;
        boolean boolean68 = updateResult64.failure();
        org.junit.Assert.assertNotNull(bulkShardRequest15);
        org.junit.Assert.assertNull(transportAddress16);
        org.junit.Assert.assertNull(shardId33);
        org.junit.Assert.assertNotNull(timeValue36);
        org.junit.Assert.assertNotNull(bulkShardRequest37);
        org.junit.Assert.assertNull(actionRequestValidationException38);
        org.junit.Assert.assertNotNull(indicesOptions60);
        org.junit.Assert.assertNotNull(actionRequestValidationException62);
        org.junit.Assert.assertNotNull(actionRequest65);
        org.junit.Assert.assertNull(updateResponse66);
        org.junit.Assert.assertNotNull(throwable67);
        org.junit.Assert.assertEquals(throwable67.getLocalizedMessage(), "Validation Failed: 1: index is missing;");
        org.junit.Assert.assertEquals(throwable67.getMessage(), "Validation Failed: 1: index is missing;");
        org.junit.Assert.assertEquals(throwable67.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    }

    @Test
    public void test4007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4007");
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.update.UpdateHelper.Result result6 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult12 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult13 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result6, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable11, writeResult12);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest8);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest15 = new org.elasticsearch.action.bulk.BulkItemRequest((int) 'a', (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        java.lang.Throwable throwable17 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult18 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult19 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable17, writeResult18);
        org.elasticsearch.common.transport.TransportAddress transportAddress20 = bulkShardRequest8.remoteAddress();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest(35, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.index.VersionType versionType23 = org.elasticsearch.index.VersionType.fromValue((byte) 3);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, java.lang.Enum<org.elasticsearch.index.VersionType>> bulkItemRequestTuple24 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, java.lang.Enum<org.elasticsearch.index.VersionType>>(bulkItemRequest21, (java.lang.Enum<org.elasticsearch.index.VersionType>) versionType23);
        org.elasticsearch.index.VersionType versionType25 = versionType23.versionTypeForReplicationAndRecovery();
        org.elasticsearch.index.VersionType versionType26 = versionType25.versionTypeForReplicationAndRecovery();
        long long29 = versionType25.updateVersion(2L, 10L);
        org.junit.Assert.assertNull(transportAddress20);
        org.junit.Assert.assertNotNull(versionType23);
        org.junit.Assert.assertNotNull(versionType25);
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 10L + "'", long29 == 10L);
    }

    @Test
    public void test4008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4008");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = builder1.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = builder2.version((long) 1);
        org.elasticsearch.cluster.metadata.IndexMetaData.Custom custom6 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = builder4.putCustom("current version [2] is higher than the one provided [-1]", custom6);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = builder7.numberOfReplicas(52);
        org.elasticsearch.cluster.metadata.IndexMetaData.Custom custom11 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder12 = builder7.putCustom("index.version.created", custom11);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData13 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder14 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData13);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap15 = indexMetaData13.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet16 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData13, indexShardStateSet16);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters18 = indexMetaData13.includeFilters();
        org.elasticsearch.common.settings.Settings settings19 = indexMetaData13.getSettings();
        org.elasticsearch.common.settings.Settings settings20 = org.elasticsearch.cluster.metadata.IndexMetaData.addHumanReadableSettings(settings19);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting21 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting23 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting25 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result27 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest29 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest30 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest29);
        org.elasticsearch.action.update.UpdateHelper.Result result31 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest33 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest34 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest33);
        java.lang.Throwable throwable36 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult37 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult38 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result31, (org.elasticsearch.action.ActionRequest) bulkShardRequest33, false, throwable36, writeResult37);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple39 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest30, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest33);
        org.elasticsearch.tasks.TaskId taskId40 = null;
        bulkShardRequest33.setParentTask(taskId40);
        org.elasticsearch.index.shard.ShardId shardId42 = bulkShardRequest33.shardId();
        bulkShardRequest33.seqNo((long) 0);
        java.lang.Throwable throwable46 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult47 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult48 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result27, (org.elasticsearch.action.ActionRequest) bulkShardRequest33, false, throwable46, writeResult47);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException49 = bulkShardRequest33.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure51 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting25, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException49, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure53 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting23, "update", (java.lang.Throwable) actionRequestValidationException49, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure55 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting21, "_na_", (java.lang.Throwable) actionRequestValidationException49, "index.shadow_replicas");
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.ToXContent, java.io.Serializable> toXContentTuple56 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.ToXContent) settings20, (java.io.Serializable) actionRequestValidationException49);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder57 = builder12.settings(settings20);
        org.elasticsearch.transport.TransportService transportService58 = null;
        org.elasticsearch.cluster.service.ClusterService clusterService59 = null;
        org.elasticsearch.indices.IndicesService indicesService60 = null;
        org.elasticsearch.threadpool.ThreadPool threadPool61 = null;
        org.elasticsearch.cluster.action.shard.ShardStateAction shardStateAction62 = null;
        org.elasticsearch.cluster.action.index.MappingUpdatedAction mappingUpdatedAction63 = null;
        org.elasticsearch.action.update.UpdateHelper updateHelper64 = null;
        org.elasticsearch.action.support.ActionFilters actionFilters65 = null;
        org.elasticsearch.cluster.metadata.IndexNameExpressionResolver indexNameExpressionResolver66 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.bulk.TransportShardBulkAction transportShardBulkAction67 = new org.elasticsearch.action.bulk.TransportShardBulkAction(settings20, transportService58, clusterService59, indicesService60, threadPool61, shardStateAction62, mappingUpdatedAction63, updateHelper64, actionFilters65, indexNameExpressionResolver66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(indexMetaData13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap15);
        org.junit.Assert.assertNotNull(indexShardStateSet16);
        org.junit.Assert.assertNull(discoveryNodeFilters18);
        org.junit.Assert.assertNotNull(settings19);
        org.junit.Assert.assertNotNull(settings20);
        org.junit.Assert.assertNull(shardId42);
        org.junit.Assert.assertNotNull(actionRequestValidationException49);
        org.junit.Assert.assertNotNull(toXContentTuple56);
        org.junit.Assert.assertNotNull(builder57);
    }

    @Test
    public void test4009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4009");
        java.lang.reflect.Type type0 = null;
        org.elasticsearch.cluster.block.ClusterBlock clusterBlock1 = org.elasticsearch.cluster.metadata.IndexMetaData.INDEX_WRITE_BLOCK;
        org.elasticsearch.common.settings.Setting<java.lang.String> strSetting2 = org.elasticsearch.cluster.metadata.IndexMetaData.INDEX_SHRINK_SOURCE_UUID;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.action.support.ToXContentToBytes> streamableTuple3 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.action.support.ToXContentToBytes>((org.elasticsearch.common.io.stream.Streamable) clusterBlock1, (org.elasticsearch.action.support.ToXContentToBytes) strSetting2);
        org.elasticsearch.common.collect.Tuple<java.lang.reflect.Type, org.elasticsearch.cluster.block.ClusterBlock> typeTuple4 = new org.elasticsearch.common.collect.Tuple<java.lang.reflect.Type, org.elasticsearch.cluster.block.ClusterBlock>(type0, clusterBlock1);
        org.junit.Assert.assertNotNull(clusterBlock1);
        org.junit.Assert.assertNotNull(strSetting2);
    }

    @Test
    public void test4010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4010");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result8 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest10 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest11 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest10);
        org.elasticsearch.action.update.UpdateHelper.Result result12 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest14 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest15 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest14);
        java.lang.Throwable throwable17 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult18 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult19 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result12, (org.elasticsearch.action.ActionRequest) bulkShardRequest14, false, throwable17, writeResult18);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple20 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest11, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest14);
        org.elasticsearch.tasks.TaskId taskId21 = null;
        bulkShardRequest14.setParentTask(taskId21);
        org.elasticsearch.index.shard.ShardId shardId23 = bulkShardRequest14.shardId();
        bulkShardRequest14.seqNo((long) 0);
        java.lang.Throwable throwable27 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult28 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult29 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result8, (org.elasticsearch.action.ActionRequest) bulkShardRequest14, false, throwable27, writeResult28);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException30 = bulkShardRequest14.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException30, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "update", (java.lang.Throwable) actionRequestValidationException30, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "index.priority", (java.lang.Throwable) actionRequestValidationException30, "index.uuid");
        org.elasticsearch.action.update.UpdateHelper.Result result37 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result38 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest40 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest41 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest40);
        org.elasticsearch.action.update.UpdateHelper.Result result42 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest44 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest45 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest44);
        java.lang.Throwable throwable47 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult48 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult49 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result42, (org.elasticsearch.action.ActionRequest) bulkShardRequest44, false, throwable47, writeResult48);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple50 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest41, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest44);
        java.lang.Throwable throwable52 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult53 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult54 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result38, (org.elasticsearch.action.ActionRequest) bulkShardRequest44, true, throwable52, writeResult53);
        org.elasticsearch.index.shard.ShardId shardId55 = bulkShardRequest44.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue56 = bulkShardRequest44.timeout();
        org.elasticsearch.tasks.TaskId taskId57 = bulkShardRequest44.getParentTask();
        org.elasticsearch.cluster.routing.ShardRouting shardRouting59 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting61 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting63 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result65 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest67 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest68 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest67);
        org.elasticsearch.action.update.UpdateHelper.Result result69 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest71 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest72 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest71);
        java.lang.Throwable throwable74 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult75 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult76 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result69, (org.elasticsearch.action.ActionRequest) bulkShardRequest71, false, throwable74, writeResult75);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple77 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest68, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest71);
        org.elasticsearch.tasks.TaskId taskId78 = null;
        bulkShardRequest71.setParentTask(taskId78);
        org.elasticsearch.index.shard.ShardId shardId80 = bulkShardRequest71.shardId();
        bulkShardRequest71.seqNo((long) 0);
        java.lang.Throwable throwable84 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult85 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult86 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result65, (org.elasticsearch.action.ActionRequest) bulkShardRequest71, false, throwable84, writeResult85);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException87 = bulkShardRequest71.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure89 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting63, "index.number_of_shards", (java.lang.Throwable) actionRequestValidationException87, "update");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure91 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting61, "index.uuid", (java.lang.Throwable) actionRequestValidationException87, "index.blocks.metadata");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure93 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting59, "delete", (java.lang.Throwable) actionRequestValidationException87, "");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult94 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult95 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result37, (org.elasticsearch.action.ActionRequest) bulkShardRequest44, false, (java.lang.Throwable) actionRequestValidationException87, writeResult94);
        org.elasticsearch.common.collect.Tuple<java.lang.RuntimeException, org.elasticsearch.common.ValidationException> runtimeExceptionTuple96 = new org.elasticsearch.common.collect.Tuple<java.lang.RuntimeException, org.elasticsearch.common.ValidationException>((java.lang.RuntimeException) actionRequestValidationException30, (org.elasticsearch.common.ValidationException) actionRequestValidationException87);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure98 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException30, "current version [10] is different than the one provided [-1]");
        org.junit.Assert.assertNull(shardId23);
        org.junit.Assert.assertNotNull(actionRequestValidationException30);
        org.junit.Assert.assertNull(shardId55);
        org.junit.Assert.assertNotNull(timeValue56);
        org.junit.Assert.assertNotNull(taskId57);
        org.junit.Assert.assertNull(shardId80);
        org.junit.Assert.assertNotNull(actionRequestValidationException87);
    }

    @Test
    public void test4011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4011");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData3 = indexMetaData0.mapping("index.blocks.write");
        java.util.Set<java.lang.String> strSet5 = indexMetaData0.activeAllocationIds(0);
        long long6 = indexMetaData0.getVersion();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.MappingMetaData> strImmutableOpenMap7 = indexMetaData0.getMappings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNull(mappingMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
        org.junit.Assert.assertNotNull(strImmutableOpenMap7);
    }

    @Test
    public void test4012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4012");
        org.elasticsearch.cluster.metadata.IndexMetaData.State state0 = org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN;
        byte byte1 = state0.id();
        org.junit.Assert.assertTrue("'" + state0 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state0.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertTrue("'" + byte1 + "' != '" + (byte) 0 + "'", byte1 == (byte) 0);
    }

    @Test
    public void test4013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4013");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters2 = indexMetaData0.requireFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData3);
        org.elasticsearch.Version version5 = indexMetaData3.getCreationVersion();
        long long6 = indexMetaData3.getCreationDate();
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap8 = indexMetaData3.getActiveAllocationIds();
        boolean boolean9 = indexMetaData0.equals((java.lang.Object) indexMetaData3);
        org.elasticsearch.common.xcontent.XContentParser xContentParser10 = null;
        org.elasticsearch.common.ParseFieldMatcher parseFieldMatcher11 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData12 = indexMetaData0.fromXContent(xContentParser10, parseFieldMatcher11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNull(discoveryNodeFilters2);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(version5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test4014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4014");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData6 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData6);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap8 = indexMetaData6.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet9 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple10 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData6, indexShardStateSet9);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters11 = indexMetaData6.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder12 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData6);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff13 = indexMetaData0.diff(indexMetaData6);
        int int14 = indexMetaData0.getNumberOfReplicas();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder15 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        long long16 = indexMetaData0.getVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters18 = indexMetaData0.excludeFilters();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNotNull(indexMetaData6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap8);
        org.junit.Assert.assertNotNull(indexShardStateSet9);
        org.junit.Assert.assertNull(discoveryNodeFilters11);
        org.junit.Assert.assertNotNull(indexMetaDataDiff13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNull(discoveryNodeFilters18);
    }

    @Test
    public void test4015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4015");
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.update.UpdateHelper.Result result6 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult12 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult13 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result6, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable11, writeResult12);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest8);
        java.lang.Throwable throwable16 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult17 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult18 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, true, throwable16, writeResult17);
        org.elasticsearch.index.shard.ShardId shardId19 = bulkShardRequest8.shardId();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest20 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.common.unit.TimeValue timeValue21 = bulkShardRequest8.timeout();
        bulkShardRequest8.primaryTerm((long) '#');
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest25 = bulkShardRequest8.index("index.version.created");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel26 = bulkShardRequest25.consistencyLevel();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest27 = new org.elasticsearch.action.bulk.BulkItemRequest(97, (org.elasticsearch.action.ActionRequest) bulkShardRequest25);
        org.elasticsearch.action.ActionRequest actionRequest28 = bulkItemRequest27.request();
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertNotNull(timeValue21);
        org.junit.Assert.assertNotNull(bulkShardRequest25);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel26 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel26.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(actionRequest28);
    }

    @Test
    public void test4016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4016");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("current version [97] is different than the one provided [97]");
        java.lang.String str2 = builder1.index();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int5 = builder4.numberOfShards();
        java.lang.String[] strArray9 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet10 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet10, strArray9);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder12 = builder4.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet10);
        org.elasticsearch.cluster.metadata.IndexMetaData.State state13 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder14 = builder12.state(state13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder12.removeAlias("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData17 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder18 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData17);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap19 = indexMetaData17.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet20 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple21 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData17, indexShardStateSet20);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters22 = indexMetaData17.includeFilters();
        org.elasticsearch.common.settings.Settings settings23 = indexMetaData17.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder24 = builder12.settings(settings23);
        boolean boolean25 = org.elasticsearch.cluster.metadata.IndexMetaData.isOnSharedFilesystem(settings23);
        org.elasticsearch.common.settings.Settings settings26 = org.elasticsearch.cluster.metadata.IndexMetaData.addHumanReadableSettings(settings23);
        boolean boolean27 = org.elasticsearch.cluster.metadata.IndexMetaData.isIndexUsingShadowReplicas(settings26);
        boolean boolean28 = org.elasticsearch.cluster.metadata.IndexMetaData.isIndexUsingShadowReplicas(settings26);
        org.elasticsearch.common.settings.Settings settings29 = org.elasticsearch.cluster.metadata.IndexMetaData.addHumanReadableSettings(settings26);
        boolean boolean30 = org.elasticsearch.cluster.metadata.IndexMetaData.isIndexUsingShadowReplicas(settings29);
        org.elasticsearch.common.settings.Settings settings31 = org.elasticsearch.cluster.metadata.IndexMetaData.addHumanReadableSettings(settings29);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder32 = builder1.settings(settings29);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder35 = builder1.primaryTerm(10, (long) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 10");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "current version [97] is different than the one provided [97]" + "'", str2, "current version [97] is different than the one provided [97]");
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(indexMetaData17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap19);
        org.junit.Assert.assertNotNull(indexShardStateSet20);
        org.junit.Assert.assertNull(discoveryNodeFilters22);
        org.junit.Assert.assertNotNull(settings23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(settings26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(settings29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(settings31);
        org.junit.Assert.assertNotNull(builder32);
    }

    @Test
    public void test4017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4017");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest1 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest1);
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, false, throwable8, writeResult9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.index.VersionType versionType12 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean16 = versionType12.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest2, versionType12);
        boolean boolean21 = versionType12.isVersionConflictForWrites(10L, (long) (byte) 0, false);
        boolean boolean23 = versionType12.validateVersionForReads(10L);
        boolean boolean26 = versionType12.isVersionConflictForReads(100L, (long) 'a');
        boolean boolean28 = versionType12.validateVersionForWrites((long) (short) 10);
        long long31 = versionType12.updateVersion(1L, (long) '4');
        long long34 = versionType12.updateVersion(0L, (long) 35);
        org.elasticsearch.common.collect.Tuple<java.lang.Enum<org.elasticsearch.index.VersionType>, java.lang.String> versionTypeEnumTuple36 = new org.elasticsearch.common.collect.Tuple<java.lang.Enum<org.elasticsearch.index.VersionType>, java.lang.String>((java.lang.Enum<org.elasticsearch.index.VersionType>) versionType12, "indices:data/write/bulk[s]");
        boolean boolean38 = versionType12.validateVersionForWrites((long) 'a');
        boolean boolean41 = versionType12.isVersionConflictForReads(10L, (long) (-1));
        boolean boolean43 = versionType12.validateVersionForReads((-1L));
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 52L + "'", long31 == 52L);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 35L + "'", long34 == 35L);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test4018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4018");
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.update.UpdateHelper.Result result6 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult12 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult13 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result6, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable11, writeResult12);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest8);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest15 = new org.elasticsearch.action.bulk.BulkItemRequest((int) 'a', (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        java.lang.Throwable throwable17 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult18 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult19 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable17, writeResult18);
        org.elasticsearch.common.transport.TransportAddress transportAddress20 = bulkShardRequest8.remoteAddress();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest(35, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.index.VersionType versionType23 = org.elasticsearch.index.VersionType.fromValue((byte) 3);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, java.lang.Enum<org.elasticsearch.index.VersionType>> bulkItemRequestTuple24 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, java.lang.Enum<org.elasticsearch.index.VersionType>>(bulkItemRequest21, (java.lang.Enum<org.elasticsearch.index.VersionType>) versionType23);
        org.elasticsearch.index.VersionType versionType25 = versionType23.versionTypeForReplicationAndRecovery();
        boolean boolean27 = versionType25.validateVersionForWrites((long) 52);
        org.junit.Assert.assertNull(transportAddress20);
        org.junit.Assert.assertNotNull(versionType23);
        org.junit.Assert.assertNotNull(versionType25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test4019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4019");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.version.created_string");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder1.numberOfShards((int) (byte) 1);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData4 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData4);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap6 = indexMetaData4.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet7 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple8 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData4, indexShardStateSet7);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters9 = indexMetaData4.includeFilters();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        org.elasticsearch.action.update.UpdateHelper.Result result13 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest15 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest16 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest15);
        java.lang.Throwable throwable18 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult19 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult20 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result13, (org.elasticsearch.action.ActionRequest) bulkShardRequest15, false, throwable18, writeResult19);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple21 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest12, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest15);
        org.elasticsearch.index.VersionType versionType22 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean26 = versionType22.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple27 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest12, versionType22);
        boolean boolean31 = versionType22.isVersionConflictForWrites((long) 0, (long) (short) 0, false);
        boolean boolean32 = indexMetaData4.equals((java.lang.Object) boolean31);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters33 = indexMetaData4.getInitialRecoveryFilters();
        long long35 = indexMetaData4.primaryTerm(0);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters36 = indexMetaData4.requireFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state37 = indexMetaData4.getState();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder38 = builder3.state(state37);
        byte byte39 = state37.id();
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(indexMetaData4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap6);
        org.junit.Assert.assertNotNull(indexShardStateSet7);
        org.junit.Assert.assertNull(discoveryNodeFilters9);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(discoveryNodeFilters33);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
        org.junit.Assert.assertNull(discoveryNodeFilters36);
        org.junit.Assert.assertTrue("'" + state37 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state37.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + byte39 + "' != '" + (byte) 0 + "'", byte39 == (byte) 0);
    }

    @Test
    public void test4020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4020");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.update.UpdateHelper.Result result6 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult12 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult13 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result6, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable11, writeResult12);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest8);
        org.elasticsearch.tasks.TaskId taskId15 = null;
        bulkShardRequest8.setParentTask(taskId15);
        org.elasticsearch.index.shard.ShardId shardId17 = bulkShardRequest8.shardId();
        bulkShardRequest8.seqNo((long) 0);
        java.lang.Throwable throwable21 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult22 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult23 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable21, writeResult22);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException24 = bulkShardRequest8.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure26 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", (java.lang.Throwable) actionRequestValidationException24, "update");
        java.lang.String str27 = shardFailure26.indexUUID;
        java.lang.Throwable throwable28 = shardFailure26.cause;
        java.lang.Throwable throwable29 = shardFailure26.cause;
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNotNull(actionRequestValidationException24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "update" + "'", str27, "update");
        org.junit.Assert.assertNotNull(throwable28);
        org.junit.Assert.assertEquals(throwable28.getLocalizedMessage(), "Validation Failed: 1: index is missing;");
        org.junit.Assert.assertEquals(throwable28.getMessage(), "Validation Failed: 1: index is missing;");
        org.junit.Assert.assertEquals(throwable28.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;");
        org.junit.Assert.assertNotNull(throwable29);
        org.junit.Assert.assertEquals(throwable29.getLocalizedMessage(), "Validation Failed: 1: index is missing;");
        org.junit.Assert.assertEquals(throwable29.getMessage(), "Validation Failed: 1: index is missing;");
        org.junit.Assert.assertEquals(throwable29.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;");
    }

    @Test
    public void test4021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4021");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.update.UpdateHelper.Result result6 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult12 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult13 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result6, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable11, writeResult12);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest8);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest16 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest17 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest16);
        org.elasticsearch.action.update.UpdateHelper.Result result18 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest20 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest20);
        java.lang.Throwable throwable23 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult24 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult25 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result18, (org.elasticsearch.action.ActionRequest) bulkShardRequest20, false, throwable23, writeResult24);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple26 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest17, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest20);
        org.elasticsearch.tasks.TaskId taskId27 = null;
        bulkShardRequest20.setParentTask(taskId27);
        boolean boolean29 = bulkItemRequestTuple14.equals((java.lang.Object) taskId27);
        org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestReplicationRequest30 = bulkItemRequestTuple14.v2();
        org.elasticsearch.cluster.routing.ShardRouting shardRouting32 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting34 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting36 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting38 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result40 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest42 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest43 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest42);
        org.elasticsearch.action.update.UpdateHelper.Result result44 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest46 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest47 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest46);
        java.lang.Throwable throwable49 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult50 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult51 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result44, (org.elasticsearch.action.ActionRequest) bulkShardRequest46, false, throwable49, writeResult50);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple52 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest43, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest46);
        org.elasticsearch.tasks.TaskId taskId53 = null;
        bulkShardRequest46.setParentTask(taskId53);
        org.elasticsearch.index.shard.ShardId shardId55 = bulkShardRequest46.shardId();
        bulkShardRequest46.seqNo((long) 0);
        java.lang.Throwable throwable59 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult60 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult61 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result40, (org.elasticsearch.action.ActionRequest) bulkShardRequest46, false, throwable59, writeResult60);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException62 = bulkShardRequest46.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure64 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting38, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException62, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure66 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting36, "update", (java.lang.Throwable) actionRequestValidationException62, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure68 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting34, "_na_", (java.lang.Throwable) actionRequestValidationException62, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure70 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting32, "index.blocks.metadata", (java.lang.Throwable) actionRequestValidationException62, "index.priority");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult71 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult72 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequestReplicationRequest30, true, (java.lang.Throwable) actionRequestValidationException62, writeResult71);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure74 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "hi!", (java.lang.Throwable) actionRequestValidationException62, "index.shared_filesystem");
        java.lang.String str75 = shardFailure74.indexUUID;
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(bulkShardRequestReplicationRequest30);
        org.junit.Assert.assertNull(shardId55);
        org.junit.Assert.assertNotNull(actionRequestValidationException62);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "index.shared_filesystem" + "'", str75, "index.shared_filesystem");
    }

    @Test
    public void test4022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4022");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters3 = indexMetaData0.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.apache.lucene.util.Version version5 = indexMetaData0.getMinimumCompatibleVersion();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters6 = indexMetaData0.requireFilters();
        java.util.Set<java.lang.String> strSet8 = null; // flaky: indexMetaData0.activeAllocationIds((int) (short) 10);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.IndexMetaData.Custom> strImmutableOpenMap10 = indexMetaData0.getCustoms();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters12 = indexMetaData0.includeFilters();
        long long13 = indexMetaData0.getVersion();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNull(discoveryNodeFilters3);
        org.junit.Assert.assertNull(version5);
        org.junit.Assert.assertNull(discoveryNodeFilters6);
        org.junit.Assert.assertNull(strSet8);
        org.junit.Assert.assertNotNull(strImmutableOpenMap10);
        org.junit.Assert.assertNull(discoveryNodeFilters12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
    }

    @Test
    public void test4023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4023");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.uuid");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder3.version((long) (short) 100);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = builder3.removeAlias("");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData8 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData8);
        org.elasticsearch.Version version10 = indexMetaData8.getCreationVersion();
        long long11 = indexMetaData8.getCreationDate();
        int int12 = indexMetaData8.getTotalNumberOfShards();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state13 = indexMetaData8.getState();
        byte byte14 = state13.id();
        byte byte15 = state13.id();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder3.state(state13);
        byte byte17 = state13.id();
        byte byte18 = state13.id();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder19 = builder1.state(state13);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest21 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest21);
        org.elasticsearch.action.update.UpdateHelper.Result result23 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest25 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest26 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest25);
        java.lang.Throwable throwable28 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult29 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult30 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result23, (org.elasticsearch.action.ActionRequest) bulkShardRequest25, false, throwable28, writeResult29);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple31 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest22, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest25);
        org.elasticsearch.index.VersionType versionType32 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean36 = versionType32.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple37 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest22, versionType32);
        boolean boolean41 = versionType32.isVersionConflictForWrites(10L, (long) (byte) 0, false);
        boolean boolean43 = versionType32.validateVersionForWrites(0L);
        boolean boolean46 = versionType32.isVersionConflictForReads((long) '#', 0L);
        boolean boolean49 = versionType32.isVersionConflictForReads(1L, (long) 3);
        org.elasticsearch.index.VersionType versionType50 = versionType32.versionTypeForReplicationAndRecovery();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData.State, java.lang.Enum<org.elasticsearch.index.VersionType>> stateTuple51 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData.State, java.lang.Enum<org.elasticsearch.index.VersionType>>(state13, (java.lang.Enum<org.elasticsearch.index.VersionType>) versionType32);
        boolean boolean53 = versionType32.validateVersionForReads((long) (byte) 10);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(indexMetaData8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(version10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + state13 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state13.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertTrue("'" + byte14 + "' != '" + (byte) 0 + "'", byte14 == (byte) 0);
        org.junit.Assert.assertTrue("'" + byte15 + "' != '" + (byte) 0 + "'", byte15 == (byte) 0);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + byte17 + "' != '" + (byte) 0 + "'", byte17 == (byte) 0);
        org.junit.Assert.assertTrue("'" + byte18 + "' != '" + (byte) 0 + "'", byte18 == (byte) 0);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(versionType32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(versionType50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
    }

    @Test
    public void test4024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4024");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters3 = indexMetaData0.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.apache.lucene.util.Version version5 = indexMetaData0.getMinimumCompatibleVersion();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters6 = indexMetaData0.requireFilters();
        java.util.Set<java.lang.String> strSet8 = null; // flaky: indexMetaData0.activeAllocationIds((int) (short) 10);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.IndexMetaData.Custom> strImmutableOpenMap10 = indexMetaData0.getCustoms();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters12 = indexMetaData0.includeFilters();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters13 = indexMetaData0.excludeFilters();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNull(discoveryNodeFilters3);
        org.junit.Assert.assertNull(version5);
        org.junit.Assert.assertNull(discoveryNodeFilters6);
        org.junit.Assert.assertNull(strSet8);
        org.junit.Assert.assertNotNull(strImmutableOpenMap10);
        org.junit.Assert.assertNull(discoveryNodeFilters12);
        org.junit.Assert.assertNull(discoveryNodeFilters13);
    }

    @Test
    public void test4025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4025");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("state-");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int4 = builder3.numberOfShards();
        java.lang.String[] strArray8 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet9 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet9, strArray8);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = builder3.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet9);
        org.elasticsearch.cluster.metadata.IndexMetaData.State state12 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder13 = builder11.state(state12);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder15 = builder11.removeAlias("hi!");
        long long16 = builder11.version();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state17 = org.elasticsearch.cluster.metadata.IndexMetaData.State.CLOSE;
        byte byte18 = state17.id();
        byte byte19 = state17.id();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder20 = builder11.state(state17);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData21 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder22 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData21);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap23 = indexMetaData21.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet24 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple25 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData21, indexShardStateSet24);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters26 = indexMetaData21.includeFilters();
        org.elasticsearch.common.settings.Settings settings27 = indexMetaData21.getSettings();
        org.elasticsearch.common.settings.Settings settings28 = org.elasticsearch.cluster.metadata.IndexMetaData.addHumanReadableSettings(settings27);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder29 = builder11.settings(settings28);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder30 = builder1.settings(settings28);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder32 = builder30.removeAlias("index.blocks.metadata");
        org.elasticsearch.common.settings.Settings.Builder builder33 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder34 = builder30.settings(builder33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertTrue("'" + state17 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.CLOSE + "'", state17.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.CLOSE));
        org.junit.Assert.assertTrue("'" + byte18 + "' != '" + (byte) 1 + "'", byte18 == (byte) 1);
        org.junit.Assert.assertTrue("'" + byte19 + "' != '" + (byte) 1 + "'", byte19 == (byte) 1);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(indexMetaData21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap23);
        org.junit.Assert.assertNotNull(indexShardStateSet24);
        org.junit.Assert.assertNull(discoveryNodeFilters26);
        org.junit.Assert.assertNotNull(settings27);
        org.junit.Assert.assertNotNull(settings28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
    }

    @Test
    public void test4026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4026");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData6 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData6);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap8 = indexMetaData6.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet9 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple10 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData6, indexShardStateSet9);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters11 = indexMetaData6.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder12 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData6);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff13 = indexMetaData0.diff(indexMetaData6);
        int int14 = indexMetaData0.getNumberOfReplicas();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters15 = indexMetaData0.getInitialRecoveryFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters17 = indexMetaData0.requireFilters();
        org.elasticsearch.Version version18 = indexMetaData0.getCreationVersion();
        org.elasticsearch.common.io.stream.StreamInput streamInput19 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff20 = indexMetaData0.readDiffFrom(streamInput19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNotNull(indexMetaData6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap8);
        org.junit.Assert.assertNotNull(indexShardStateSet9);
        org.junit.Assert.assertNull(discoveryNodeFilters11);
        org.junit.Assert.assertNotNull(indexMetaDataDiff13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(discoveryNodeFilters15);
        org.junit.Assert.assertNull(discoveryNodeFilters17);
        org.junit.Assert.assertNotNull(version18);
    }

    @Test
    public void test4027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4027");
        org.elasticsearch.index.VersionType versionType0 = org.elasticsearch.index.VersionType.EXTERNAL_GTE;
        boolean boolean3 = versionType0.isVersionConflictForReads((long) 10, (long) (byte) -1);
        boolean boolean7 = versionType0.isVersionConflictForWrites((long) (short) 10, (long) 10, false);
        boolean boolean9 = versionType0.validateVersionForReads((-1L));
        org.elasticsearch.index.VersionType versionType10 = versionType0.versionTypeForReplicationAndRecovery();
        org.junit.Assert.assertNotNull(versionType0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(versionType10);
    }

    @Test
    public void test4028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4028");
        org.elasticsearch.action.ActionRequest actionRequest3 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest3);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple6 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest10 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        org.elasticsearch.action.update.UpdateHelper.Result result11 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest13 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest13);
        java.lang.Throwable throwable16 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult17 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult18 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result11, (org.elasticsearch.action.ActionRequest) bulkShardRequest13, false, throwable16, writeResult17);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple19 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest10, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest13);
        org.elasticsearch.action.ActionRequest actionRequest21 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest21);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest23 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple24 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest22, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest23);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple25 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest10, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest23);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple26 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest7, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest23);
        bulkShardRequest23.setParentTask("index.version.created", (long) (byte) 1);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest30 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 10, (org.elasticsearch.action.ActionRequest) bulkShardRequest23);
        bulkShardRequest23.primaryTerm((long) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str33 = bulkShardRequest23.toString();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test4029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4029");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = builder1.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = builder2.version((long) 1);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = builder2.numberOfReplicas((int) '4');
        java.lang.String str7 = builder2.index();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = builder2.numberOfReplicas((int) ' ');
        java.lang.String str10 = builder2.index();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
    }

    @Test
    public void test4030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4030");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.ActionRequest actionRequest3 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest3);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple6 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        long long8 = bulkShardRequest5.primaryTerm();
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting18 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting20 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting22 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result24 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest26 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest27 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest26);
        org.elasticsearch.action.update.UpdateHelper.Result result28 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest30 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest31 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest30);
        java.lang.Throwable throwable33 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult34 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult35 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result28, (org.elasticsearch.action.ActionRequest) bulkShardRequest30, false, throwable33, writeResult34);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple36 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest27, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest30);
        org.elasticsearch.tasks.TaskId taskId37 = null;
        bulkShardRequest30.setParentTask(taskId37);
        org.elasticsearch.index.shard.ShardId shardId39 = bulkShardRequest30.shardId();
        bulkShardRequest30.seqNo((long) 0);
        java.lang.Throwable throwable43 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult44 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult45 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result24, (org.elasticsearch.action.ActionRequest) bulkShardRequest30, false, throwable43, writeResult44);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException46 = bulkShardRequest30.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting22, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException46, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting20, "update", (java.lang.Throwable) actionRequestValidationException46, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure52 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting18, "_na_", (java.lang.Throwable) actionRequestValidationException46, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure54 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting16, "_na_", (java.lang.Throwable) actionRequestValidationException46, "index.version.upgraded");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure56 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "index.shadow_replicas", (java.lang.Throwable) actionRequestValidationException46, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure58 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "index.blocks.write", (java.lang.Throwable) actionRequestValidationException46, "primary_terms");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure60 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "index.blocks.metadata", (java.lang.Throwable) actionRequestValidationException46, "delete");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult61 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult62 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, true, (java.lang.Throwable) actionRequestValidationException46, writeResult61);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData63 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder64 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData63);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap65 = indexMetaData63.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet66 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple67 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData63, indexShardStateSet66);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters68 = indexMetaData63.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder69 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData63);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters70 = indexMetaData63.excludeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder71 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData63);
        org.elasticsearch.index.Index index72 = indexMetaData63.getMergeSourceIndex();
        org.elasticsearch.action.ActionRequest actionRequest75 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest76 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest75);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest77 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple78 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest76, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest77);
        boolean boolean79 = bulkShardRequest77.getShouldPersistResult();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest80 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest77);
        java.lang.String str81 = bulkShardRequest77.index();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel82 = bulkShardRequest77.consistencyLevel();
        boolean boolean83 = indexMetaData63.equals((java.lang.Object) writeConsistencyLevel82);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest84 = bulkShardRequest5.consistencyLevel(writeConsistencyLevel82);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNull(shardId39);
        org.junit.Assert.assertNotNull(actionRequestValidationException46);
        org.junit.Assert.assertNotNull(indexMetaData63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap65);
        org.junit.Assert.assertNotNull(indexShardStateSet66);
        org.junit.Assert.assertNull(discoveryNodeFilters68);
        org.junit.Assert.assertNull(discoveryNodeFilters70);
        org.junit.Assert.assertNull(index72);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel82 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel82.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(bulkShardRequest84);
    }

    @Test
    public void test4031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4031");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = builder1.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = builder2.numberOfReplicas((int) '#');
        org.elasticsearch.action.ActionRequest actionRequest7 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest7);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple10 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest8, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest9);
        boolean boolean11 = bulkShardRequest9.getShouldPersistResult();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder13 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int14 = builder13.numberOfShards();
        java.lang.String[] strArray18 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder21 = builder13.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet19);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>> streamableTuple22 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>>((org.elasticsearch.common.io.stream.Streamable) bulkShardRequest9, strSet19);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder23 = builder2.putActiveAllocationIds((int) (short) 10, (java.util.Set<java.lang.String>) strSet19);
        int int24 = builder23.numberOfShards();
        java.lang.String str25 = builder23.index();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData26 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder28 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder29 = builder28.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder31 = builder29.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder34 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int35 = builder34.numberOfShards();
        java.lang.String[] strArray39 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet40 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet40, strArray39);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder42 = builder34.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet40);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder43 = builder29.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet40);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple44 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData26, (java.lang.Iterable<java.lang.String>) strSet40);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap45 = indexMetaData26.getAliases();
        int int46 = indexMetaData26.getNumberOfShards();
        org.elasticsearch.Version version47 = indexMetaData26.getCreationVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData48 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData49 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder50 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData49);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap51 = indexMetaData49.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters52 = indexMetaData49.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff53 = indexMetaData48.diff(indexMetaData49);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters54 = indexMetaData49.requireFilters();
        org.elasticsearch.Version version55 = indexMetaData49.getUpgradedVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData56 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder57 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData56);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap58 = indexMetaData56.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet59 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple60 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData56, indexShardStateSet59);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff61 = indexMetaData49.diff(indexMetaData56);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff62 = indexMetaData26.diff(indexMetaData49);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap63 = indexMetaData49.getActiveAllocationIds();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder64 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData49);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder65 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData49);
        org.elasticsearch.common.settings.Settings settings66 = indexMetaData49.getSettings();
        org.elasticsearch.common.settings.Settings settings67 = org.elasticsearch.cluster.metadata.IndexMetaData.addHumanReadableSettings(settings66);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder68 = builder23.settings(settings67);
        org.elasticsearch.cluster.metadata.AliasMetaData aliasMetaData69 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder70 = builder68.putAlias(aliasMetaData69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(indexMetaData26);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple44);
        org.junit.Assert.assertNotNull(strImmutableOpenMap45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertNotNull(version47);
        org.junit.Assert.assertNotNull(indexMetaData48);
        org.junit.Assert.assertNotNull(indexMetaData49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap51);
        org.junit.Assert.assertNull(discoveryNodeFilters52);
        org.junit.Assert.assertNotNull(indexMetaDataDiff53);
        org.junit.Assert.assertNull(discoveryNodeFilters54);
        org.junit.Assert.assertNotNull(version55);
        org.junit.Assert.assertNotNull(indexMetaData56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap58);
        org.junit.Assert.assertNotNull(indexShardStateSet59);
        org.junit.Assert.assertNotNull(indexMetaDataDiff61);
        org.junit.Assert.assertNotNull(indexMetaDataDiff62);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap63);
        org.junit.Assert.assertNotNull(settings66);
        org.junit.Assert.assertNotNull(settings67);
        org.junit.Assert.assertNotNull(builder68);
    }

    @Test
    public void test4032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4032");
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result4 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.action.update.UpdateHelper.Result result9 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult15 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult16 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result9, (org.elasticsearch.action.ActionRequest) bulkShardRequest11, false, throwable14, writeResult15);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest8, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest11);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest18 = new org.elasticsearch.action.bulk.BulkItemRequest((int) 'a', (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        java.lang.Throwable throwable20 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult21 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult22 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result4, (org.elasticsearch.action.ActionRequest) bulkShardRequest11, false, throwable20, writeResult21);
        org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestReplicationRequest23 = updateResult22.request();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest24 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 100, (org.elasticsearch.action.ActionRequest) bulkShardRequestReplicationRequest23);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult25 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult26 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequestReplicationRequest23, writeResult25);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest27 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequestReplicationRequest23);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest28 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequestReplicationRequest23);
        org.junit.Assert.assertNotNull(bulkShardRequestReplicationRequest23);
    }

    @Test
    public void test4033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4033");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure8 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "", throwable6, "");
        org.elasticsearch.action.update.UpdateHelper.Result result9 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest10 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable12 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult13 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult14 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result9, (org.elasticsearch.action.ActionRequest) bulkShardRequest10, false, throwable12, writeResult13);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple15 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure8, (org.elasticsearch.transport.TransportMessage) bulkShardRequest10);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest17 = bulkShardRequest10.index("index.version.created");
        org.elasticsearch.common.transport.TransportAddress transportAddress18 = bulkShardRequest10.remoteAddress();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest19 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest10);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest20 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest10);
        org.elasticsearch.tasks.TaskId taskId21 = bulkShardRequest10.getParentTask();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel22 = bulkShardRequest10.consistencyLevel();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest23 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest10);
        org.elasticsearch.action.update.UpdateHelper.Result result25 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest27 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest28 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest27);
        org.elasticsearch.action.update.UpdateHelper.Result result29 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest31 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest32 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest31);
        java.lang.Throwable throwable34 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult35 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult36 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result29, (org.elasticsearch.action.ActionRequest) bulkShardRequest31, false, throwable34, writeResult35);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple37 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest28, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest31);
        java.lang.Throwable throwable39 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult40 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult41 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result25, (org.elasticsearch.action.ActionRequest) bulkShardRequest31, true, throwable39, writeResult40);
        org.elasticsearch.index.shard.ShardId shardId42 = bulkShardRequest31.shardId();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest43 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest31);
        org.elasticsearch.common.unit.TimeValue timeValue44 = bulkShardRequest31.timeout();
        bulkShardRequest31.primaryTerm((long) '#');
        long long47 = bulkShardRequest31.seqNo();
        org.elasticsearch.tasks.TaskId taskId48 = bulkShardRequest31.getParentTask();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple49 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest23, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest31);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult50 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult51 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest31, writeResult50);
        org.junit.Assert.assertNotNull(bulkShardRequest17);
        org.junit.Assert.assertNull(transportAddress18);
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel22 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel22.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(shardId42);
        org.junit.Assert.assertNotNull(timeValue44);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 0L + "'", long47 == 0L);
        org.junit.Assert.assertNotNull(taskId48);
    }

    @Test
    public void test4034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4034");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int2 = builder1.numberOfShards();
        java.lang.String[] strArray6 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = builder1.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet7);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData11 = builder1.mapping("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder14 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int15 = builder14.numberOfShards();
        java.lang.String[] strArray19 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder22 = builder14.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet20);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder23 = builder1.putActiveAllocationIds((int) (byte) 3, (java.util.Set<java.lang.String>) strSet20);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder25 = builder23.index("active_allocations");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder27 = builder25.version(52L);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder29 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder30 = builder29.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder32 = builder30.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder35 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int36 = builder35.numberOfShards();
        java.lang.String[] strArray40 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet41 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet41, strArray40);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder43 = builder35.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet41);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder44 = builder30.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet41);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData46 = builder30.mapping("index.blocks.metadata");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder48 = builder30.numberOfReplicas((int) (byte) 3);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder50 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.version.created");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder52 = builder50.numberOfShards(100);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData53 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder54 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData53);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap55 = indexMetaData53.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet56 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple57 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData53, indexShardStateSet56);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters58 = indexMetaData53.includeFilters();
        org.elasticsearch.common.settings.Settings settings59 = indexMetaData53.getSettings();
        org.elasticsearch.common.settings.Settings settings60 = org.elasticsearch.cluster.metadata.IndexMetaData.addHumanReadableSettings(settings59);
        org.elasticsearch.common.settings.Settings settings61 = org.elasticsearch.cluster.metadata.IndexMetaData.addHumanReadableSettings(settings60);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder62 = builder50.settings(settings61);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder63 = builder48.settings(settings61);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder64 = builder27.settings(settings61);
        org.elasticsearch.transport.TransportService transportService65 = null;
        org.elasticsearch.cluster.service.ClusterService clusterService66 = null;
        org.elasticsearch.indices.IndicesService indicesService67 = null;
        org.elasticsearch.threadpool.ThreadPool threadPool68 = null;
        org.elasticsearch.cluster.action.shard.ShardStateAction shardStateAction69 = null;
        org.elasticsearch.cluster.action.index.MappingUpdatedAction mappingUpdatedAction70 = null;
        org.elasticsearch.action.update.UpdateHelper updateHelper71 = null;
        org.elasticsearch.action.support.ActionFilters actionFilters72 = null;
        org.elasticsearch.cluster.metadata.IndexNameExpressionResolver indexNameExpressionResolver73 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.bulk.TransportShardBulkAction transportShardBulkAction74 = new org.elasticsearch.action.bulk.TransportShardBulkAction(settings61, transportService65, clusterService66, indicesService67, threadPool68, shardStateAction69, mappingUpdatedAction70, updateHelper71, actionFilters72, indexNameExpressionResolver73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNull(mappingMetaData11);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNull(mappingMetaData46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(indexMetaData53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap55);
        org.junit.Assert.assertNotNull(indexShardStateSet56);
        org.junit.Assert.assertNull(discoveryNodeFilters58);
        org.junit.Assert.assertNotNull(settings59);
        org.junit.Assert.assertNotNull(settings60);
        org.junit.Assert.assertNotNull(settings61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder64);
    }

    @Test
    public void test4035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4035");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.Version version2 = indexMetaData0.getCreationVersion();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters3 = indexMetaData0.includeFilters();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters4 = indexMetaData0.includeFilters();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters5 = indexMetaData0.excludeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(version2);
        org.junit.Assert.assertNull(discoveryNodeFilters3);
        org.junit.Assert.assertNull(discoveryNodeFilters4);
        org.junit.Assert.assertNull(discoveryNodeFilters5);
    }

    @Test
    public void test4036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4036");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result4 = null;
        org.elasticsearch.action.ActionRequest actionRequest6 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest6);
        org.elasticsearch.action.ActionRequest actionRequest10 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest11 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest10);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest12 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest11, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest12);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest12);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple15 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest7, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest12);
        org.elasticsearch.action.update.UpdateHelper.Result result16 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result17 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest18 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable20 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult21 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult22 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result17, (org.elasticsearch.action.ActionRequest) bulkShardRequest18, false, throwable20, writeResult21);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult23 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult24 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result16, (org.elasticsearch.action.ActionRequest) bulkShardRequest18, writeResult23);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest26 = bulkShardRequest18.consistencyLevel(writeConsistencyLevel25);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple27 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest7, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest26);
        bulkShardRequest26.primaryTerm((long) (-1));
        org.elasticsearch.cluster.routing.ShardRouting shardRouting31 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting33 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting35 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting37 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting39 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting41 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result43 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest45 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest46 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest45);
        org.elasticsearch.action.update.UpdateHelper.Result result47 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest49 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest50 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest49);
        java.lang.Throwable throwable52 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult53 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult54 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result47, (org.elasticsearch.action.ActionRequest) bulkShardRequest49, false, throwable52, writeResult53);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple55 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest46, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest49);
        org.elasticsearch.tasks.TaskId taskId56 = null;
        bulkShardRequest49.setParentTask(taskId56);
        org.elasticsearch.index.shard.ShardId shardId58 = bulkShardRequest49.shardId();
        bulkShardRequest49.seqNo((long) 0);
        java.lang.Throwable throwable62 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult63 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult64 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result43, (org.elasticsearch.action.ActionRequest) bulkShardRequest49, false, throwable62, writeResult63);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException65 = bulkShardRequest49.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure67 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting41, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException65, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure69 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting39, "update", (java.lang.Throwable) actionRequestValidationException65, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure71 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting37, "_na_", (java.lang.Throwable) actionRequestValidationException65, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure73 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting35, "primary_terms", (java.lang.Throwable) actionRequestValidationException65, "delete");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure75 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting33, "current version [97] is different than the one provided [35]", (java.lang.Throwable) actionRequestValidationException65, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure77 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting31, "index.", (java.lang.Throwable) actionRequestValidationException65, "_na_");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult78 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult79 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result4, (org.elasticsearch.action.ActionRequest) bulkShardRequest26, true, (java.lang.Throwable) actionRequestValidationException65, writeResult78);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure81 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "state-", (java.lang.Throwable) actionRequestValidationException65, "delete");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure83 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "index.priority", (java.lang.Throwable) actionRequestValidationException65, "current version [-1] is higher than the one provided [52]");
        org.junit.Assert.assertNotNull(bulkShardRequest26);
        org.junit.Assert.assertNull(shardId58);
        org.junit.Assert.assertNotNull(actionRequestValidationException65);
    }

    @Test
    public void test4037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4037");
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult7 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult8 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest4, false, throwable6, writeResult7);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest4, writeResult9);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest12 = bulkShardRequest4.consistencyLevel(writeConsistencyLevel11);
        long long13 = bulkShardRequest4.seqNo();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = new org.elasticsearch.action.bulk.BulkItemRequest((int) 'a', (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.ActionRequest actionRequest18 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest19 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest18);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest20 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple21 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest19, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest20);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest20);
        org.elasticsearch.action.ActionRequest actionRequest24 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest25 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest24);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest26 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple27 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest25, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest26);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple28 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest22, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest26);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest29 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest26);
        java.lang.String str30 = bulkShardRequest26.index();
        bulkShardRequest26.setParentTask("index.auto_expand_replicas", 0L);
        long long34 = bulkShardRequest26.primaryTerm();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple35 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest14, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest26);
        org.elasticsearch.action.update.UpdateHelper.Result result36 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest38 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest39 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest38);
        java.lang.Throwable throwable41 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult42 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult43 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result36, (org.elasticsearch.action.ActionRequest) bulkShardRequest38, false, throwable41, writeResult42);
        org.elasticsearch.action.update.UpdateHelper.Result result44 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest46 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest47 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest46);
        org.elasticsearch.action.update.UpdateHelper.Result result48 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest50 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest51 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest50);
        java.lang.Throwable throwable53 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult54 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult55 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result48, (org.elasticsearch.action.ActionRequest) bulkShardRequest50, false, throwable53, writeResult54);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple56 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest47, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest50);
        java.lang.Throwable throwable58 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult59 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult60 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result44, (org.elasticsearch.action.ActionRequest) bulkShardRequest50, true, throwable58, writeResult59);
        org.elasticsearch.index.shard.ShardId shardId61 = bulkShardRequest50.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue62 = bulkShardRequest50.timeout();
        org.elasticsearch.tasks.TaskId taskId63 = bulkShardRequest50.getParentTask();
        bulkShardRequest38.setParentTask(taskId63);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple65 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest14, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest38);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting67 = null;
        java.lang.Throwable throwable69 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure71 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting67, "", throwable69, "");
        org.elasticsearch.action.update.UpdateHelper.Result result72 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest73 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable75 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult76 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult77 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result72, (org.elasticsearch.action.ActionRequest) bulkShardRequest73, false, throwable75, writeResult76);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple78 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure71, (org.elasticsearch.transport.TransportMessage) bulkShardRequest73);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest80 = bulkShardRequest73.index("index.version.created");
        org.elasticsearch.common.transport.TransportAddress transportAddress81 = bulkShardRequest73.remoteAddress();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest82 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest73);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting83 = null;
        java.lang.Throwable throwable85 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure87 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting83, "", throwable85, "");
        org.elasticsearch.action.update.UpdateHelper.Result result88 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest89 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable91 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult92 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult93 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result88, (org.elasticsearch.action.ActionRequest) bulkShardRequest89, false, throwable91, writeResult92);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple94 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure87, (org.elasticsearch.transport.TransportMessage) bulkShardRequest89);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple95 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest82, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest89);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple96 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest14, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest89);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest97 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 10, (org.elasticsearch.action.ActionRequest) bulkShardRequest89);
        org.junit.Assert.assertNotNull(bulkShardRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
        org.junit.Assert.assertNull(shardId61);
        org.junit.Assert.assertNotNull(timeValue62);
        org.junit.Assert.assertNotNull(taskId63);
        org.junit.Assert.assertNotNull(bulkShardRequest80);
        org.junit.Assert.assertNull(transportAddress81);
    }

    @Test
    public void test4038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4038");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = builder1.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = builder2.version((long) 1);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = builder4.numberOfShards(0);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData7 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData8 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData8);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap10 = indexMetaData8.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters11 = indexMetaData8.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff12 = indexMetaData7.diff(indexMetaData8);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters13 = indexMetaData8.requireFilters();
        org.elasticsearch.Version version14 = indexMetaData8.getUpgradedVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData15 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData15);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap17 = indexMetaData15.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet18 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple19 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData15, indexShardStateSet18);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff20 = indexMetaData8.diff(indexMetaData15);
        org.elasticsearch.common.settings.Settings settings21 = indexMetaData15.getSettings();
        org.elasticsearch.common.settings.Settings settings22 = org.elasticsearch.cluster.metadata.IndexMetaData.addHumanReadableSettings(settings21);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder23 = builder4.settings(settings21);
        org.elasticsearch.transport.TransportService transportService24 = null;
        org.elasticsearch.cluster.service.ClusterService clusterService25 = null;
        org.elasticsearch.indices.IndicesService indicesService26 = null;
        org.elasticsearch.threadpool.ThreadPool threadPool27 = null;
        org.elasticsearch.cluster.action.shard.ShardStateAction shardStateAction28 = null;
        org.elasticsearch.cluster.action.index.MappingUpdatedAction mappingUpdatedAction29 = null;
        org.elasticsearch.action.update.UpdateHelper updateHelper30 = null;
        org.elasticsearch.action.support.ActionFilters actionFilters31 = null;
        org.elasticsearch.cluster.metadata.IndexNameExpressionResolver indexNameExpressionResolver32 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.bulk.TransportShardBulkAction transportShardBulkAction33 = new org.elasticsearch.action.bulk.TransportShardBulkAction(settings21, transportService24, clusterService25, indicesService26, threadPool27, shardStateAction28, mappingUpdatedAction29, updateHelper30, actionFilters31, indexNameExpressionResolver32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(indexMetaData7);
        org.junit.Assert.assertNotNull(indexMetaData8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap10);
        org.junit.Assert.assertNull(discoveryNodeFilters11);
        org.junit.Assert.assertNotNull(indexMetaDataDiff12);
        org.junit.Assert.assertNull(discoveryNodeFilters13);
        org.junit.Assert.assertNotNull(version14);
        org.junit.Assert.assertNotNull(indexMetaData15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap17);
        org.junit.Assert.assertNotNull(indexShardStateSet18);
        org.junit.Assert.assertNotNull(indexMetaDataDiff20);
        org.junit.Assert.assertNotNull(settings21);
        org.junit.Assert.assertNotNull(settings22);
        org.junit.Assert.assertNotNull(builder23);
    }

    @Test
    public void test4039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4039");
        org.elasticsearch.action.ActionRequest actionRequest4 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest4);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest6 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple7 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest6);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest6);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest10 = bulkShardRequest6.setShardId(shardId9);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest11 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest10);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest10);
        org.junit.Assert.assertNotNull(bulkShardRequest10);
    }

    @Test
    public void test4040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4040");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest2 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest3 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest2);
        org.elasticsearch.action.update.UpdateHelper.Result result4 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest6 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest6);
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult10 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult11 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result4, (org.elasticsearch.action.ActionRequest) bulkShardRequest6, false, throwable9, writeResult10);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest6);
        org.elasticsearch.tasks.TaskId taskId13 = null;
        bulkShardRequest6.setParentTask(taskId13);
        org.elasticsearch.index.shard.ShardId shardId15 = bulkShardRequest6.shardId();
        bulkShardRequest6.seqNo((long) 0);
        org.elasticsearch.action.support.IndicesOptions indicesOptions18 = bulkShardRequest6.indicesOptions();
        bulkShardRequest6.primaryTerm(0L);
        bulkShardRequest6.primaryTerm((long) (-1));
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest24 = bulkShardRequest6.setShardId(shardId23);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult25 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult26 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest6, writeResult25);
        org.elasticsearch.common.unit.TimeValue timeValue27 = bulkShardRequest6.timeout();
        org.elasticsearch.action.update.UpdateHelper.Result result29 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest31 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest32 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest31);
        org.elasticsearch.action.update.UpdateHelper.Result result33 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest35 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest36 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest35);
        java.lang.Throwable throwable38 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult39 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult40 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result33, (org.elasticsearch.action.ActionRequest) bulkShardRequest35, false, throwable38, writeResult39);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple41 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest32, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest35);
        org.elasticsearch.tasks.TaskId taskId42 = null;
        bulkShardRequest35.setParentTask(taskId42);
        org.elasticsearch.index.shard.ShardId shardId44 = bulkShardRequest35.shardId();
        bulkShardRequest35.seqNo((long) 0);
        java.lang.Throwable throwable48 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult49 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult50 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result29, (org.elasticsearch.action.ActionRequest) bulkShardRequest35, false, throwable48, writeResult49);
        long long51 = bulkShardRequest35.seqNo();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest52 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 10, (org.elasticsearch.action.ActionRequest) bulkShardRequest35);
        org.elasticsearch.common.unit.TimeValue timeValue53 = bulkShardRequest35.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest54 = bulkShardRequest6.timeout(timeValue53);
        org.junit.Assert.assertNull(shardId15);
        org.junit.Assert.assertNotNull(indicesOptions18);
        org.junit.Assert.assertNotNull(bulkShardRequest24);
        org.junit.Assert.assertNotNull(timeValue27);
        org.junit.Assert.assertNull(shardId44);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
        org.junit.Assert.assertNotNull(timeValue53);
        org.junit.Assert.assertNotNull(bulkShardRequest54);
    }

    @Test
    public void test4041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4041");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest1 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest1);
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, false, throwable8, writeResult9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.index.VersionType versionType12 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean16 = versionType12.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest2, versionType12);
        boolean boolean21 = versionType12.isVersionConflictForWrites(10L, (long) (byte) 0, false);
        boolean boolean23 = versionType12.validateVersionForReads((long) (byte) 0);
        boolean boolean25 = versionType12.validateVersionForReads((-1L));
        org.elasticsearch.index.VersionType versionType26 = versionType12.versionTypeForReplicationAndRecovery();
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(versionType26);
    }

    @Test
    public void test4042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4042");
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.update.UpdateHelper.Result result6 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult12 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult13 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result6, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable11, writeResult12);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest8);
        java.lang.Throwable throwable16 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult17 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult18 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, true, throwable16, writeResult17);
        org.elasticsearch.index.shard.ShardId shardId19 = bulkShardRequest8.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue20 = bulkShardRequest8.timeout();
        long long21 = bulkShardRequest8.seqNo();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.action.support.IndicesOptions indicesOptions23 = bulkShardRequest8.indicesOptions();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest24 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 3, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting26 = null;
        java.lang.Throwable throwable28 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure30 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting26, "", throwable28, "");
        org.elasticsearch.action.update.UpdateHelper.Result result31 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest32 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable34 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult35 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult36 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result31, (org.elasticsearch.action.ActionRequest) bulkShardRequest32, false, throwable34, writeResult35);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple37 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure30, (org.elasticsearch.transport.TransportMessage) bulkShardRequest32);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest39 = bulkShardRequest32.index("hi!");
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest40 = new org.elasticsearch.action.bulk.BulkItemRequest((int) '#', (org.elasticsearch.action.ActionRequest) bulkShardRequest39);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest41 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.String str42 = bulkShardRequest41.index();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple43 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest40, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest41);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest46 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest47 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest46);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel48 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest49 = bulkShardRequest46.consistencyLevel(writeConsistencyLevel48);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest50 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest49);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple51 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest40, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest49);
        org.elasticsearch.action.ActionRequest actionRequest54 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest55 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest54);
        org.elasticsearch.action.ActionRequest actionRequest58 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest59 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest58);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest60 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple61 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest59, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest60);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest62 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest60);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple63 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest55, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest60);
        org.elasticsearch.common.transport.TransportAddress transportAddress64 = null;
        bulkShardRequest60.remoteAddress(transportAddress64);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest66 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest60);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>, org.elasticsearch.action.IndicesRequest> bulkItemRequestTupleTuple67 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>, org.elasticsearch.action.IndicesRequest>(bulkItemRequestTuple51, (org.elasticsearch.action.IndicesRequest) bulkShardRequest60);
        org.elasticsearch.common.transport.TransportAddress transportAddress68 = null;
        bulkShardRequest60.remoteAddress(transportAddress68);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple70 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest24, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest60);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData71 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder72 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData71);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap73 = indexMetaData71.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet74 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple75 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData71, indexShardStateSet74);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters76 = indexMetaData71.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder77 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData71);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters78 = indexMetaData71.excludeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder79 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData71);
        boolean boolean80 = bulkItemRequestTuple70.equals((java.lang.Object) indexMetaData71);
        org.elasticsearch.common.settings.Settings settings81 = indexMetaData71.getSettings();
        org.elasticsearch.Version version82 = indexMetaData71.getCreationVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder83 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData71);
        java.lang.String str84 = builder83.index();
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertNotNull(indicesOptions23);
        org.junit.Assert.assertNotNull(bulkShardRequest39);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(bulkShardRequest49);
        org.junit.Assert.assertNotNull(indexMetaData71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap73);
        org.junit.Assert.assertNotNull(indexShardStateSet74);
        org.junit.Assert.assertNull(discoveryNodeFilters76);
        org.junit.Assert.assertNull(discoveryNodeFilters78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(settings81);
        org.junit.Assert.assertNotNull(version82);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "" + "'", str84, "");
    }

    @Test
    public void test4043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4043");
        org.elasticsearch.action.ActionRequest actionRequest3 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest3);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple6 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue9 = bulkShardRequest8.timeout();
        java.lang.String str10 = bulkShardRequest8.index();
        org.elasticsearch.common.unit.TimeValue timeValue11 = bulkShardRequest8.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest12 = bulkShardRequest5.timeout(timeValue11);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest13 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest12);
        org.elasticsearch.action.ActionRequest actionRequest17 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest18 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest17);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest19 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple20 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest18, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest19);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest19);
        org.elasticsearch.action.ActionRequest actionRequest23 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest24 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest23);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest25 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple26 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest24, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest25);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple27 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest21, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest25);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest28 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest25);
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest30 = bulkShardRequest25.setShardId(shardId29);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple31 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest13, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest25);
        long long32 = bulkShardRequest25.seqNo();
        long long33 = bulkShardRequest25.primaryTerm();
        org.junit.Assert.assertNotNull(timeValue9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(timeValue11);
        org.junit.Assert.assertNotNull(bulkShardRequest12);
        org.junit.Assert.assertNotNull(bulkShardRequest30);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
    }

    @Test
    public void test4044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4044");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.Version version2 = indexMetaData0.getCreationVersion();
        long long3 = indexMetaData0.getCreationDate();
        int int4 = indexMetaData0.getTotalNumberOfShards();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap5 = indexMetaData0.getAliases();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters6 = indexMetaData0.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData7 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData7);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap9 = indexMetaData7.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet10 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData7, indexShardStateSet10);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters12 = indexMetaData7.includeFilters();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest14 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest15 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest14);
        org.elasticsearch.action.update.UpdateHelper.Result result16 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest18 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest19 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest18);
        java.lang.Throwable throwable21 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult22 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult23 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result16, (org.elasticsearch.action.ActionRequest) bulkShardRequest18, false, throwable21, writeResult22);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple24 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest15, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest18);
        org.elasticsearch.index.VersionType versionType25 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean29 = versionType25.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple30 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest15, versionType25);
        boolean boolean34 = versionType25.isVersionConflictForWrites((long) 0, (long) (short) 0, false);
        boolean boolean35 = indexMetaData7.equals((java.lang.Object) boolean34);
        int int36 = indexMetaData7.getNumberOfReplicas();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state37 = indexMetaData7.getState();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData38 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder40 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder41 = builder40.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder43 = builder41.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder46 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int47 = builder46.numberOfShards();
        java.lang.String[] strArray51 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet52 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet52, strArray51);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder54 = builder46.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet52);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder55 = builder41.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet52);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple56 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData38, (java.lang.Iterable<java.lang.String>) strSet52);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap57 = indexMetaData38.getAliases();
        int int58 = indexMetaData38.getNumberOfShards();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters59 = indexMetaData38.excludeFilters();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap60 = indexMetaData38.getAliases();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff61 = indexMetaData7.diff(indexMetaData38);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff62 = indexMetaData0.diff(indexMetaData7);
        org.elasticsearch.Version version63 = indexMetaData0.getUpgradedVersion();
        long long64 = indexMetaData0.getVersion();
        int int65 = indexMetaData0.getTotalNumberOfShards();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap66 = indexMetaData0.getAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder67 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder69 = builder67.numberOfReplicas(10);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData70 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder71 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData70);
        org.elasticsearch.Version version72 = indexMetaData70.getCreationVersion();
        long long73 = indexMetaData70.getCreationDate();
        int int74 = indexMetaData70.getTotalNumberOfShards();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state75 = indexMetaData70.getState();
        byte byte76 = state75.id();
        byte byte77 = state75.id();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder78 = builder69.state(state75);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(version2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(strImmutableOpenMap5);
        org.junit.Assert.assertNull(discoveryNodeFilters6);
        org.junit.Assert.assertNotNull(indexMetaData7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap9);
        org.junit.Assert.assertNotNull(indexShardStateSet10);
        org.junit.Assert.assertNull(discoveryNodeFilters12);
        org.junit.Assert.assertNotNull(versionType25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + state37 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state37.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertNotNull(indexMetaData38);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple56);
        org.junit.Assert.assertNotNull(strImmutableOpenMap57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNull(discoveryNodeFilters59);
        org.junit.Assert.assertNotNull(strImmutableOpenMap60);
        org.junit.Assert.assertNotNull(indexMetaDataDiff61);
        org.junit.Assert.assertNotNull(indexMetaDataDiff62);
        org.junit.Assert.assertNotNull(version63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 1L + "'", long64 == 1L);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertNotNull(strImmutableOpenMap66);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(indexMetaData70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(version72);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + (-1L) + "'", long73 == (-1L));
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertTrue("'" + state75 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state75.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertTrue("'" + byte76 + "' != '" + (byte) 0 + "'", byte76 == (byte) 0);
        org.junit.Assert.assertTrue("'" + byte77 + "' != '" + (byte) 0 + "'", byte77 == (byte) 0);
        org.junit.Assert.assertNotNull(builder78);
    }

    @Test
    public void test4045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4045");
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        org.elasticsearch.action.update.UpdateHelper.Result result7 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest10 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        java.lang.Throwable throwable12 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult13 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult14 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result7, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, false, throwable12, writeResult13);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple15 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest6, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest9);
        org.elasticsearch.tasks.TaskId taskId16 = null;
        bulkShardRequest9.setParentTask(taskId16);
        org.elasticsearch.index.shard.ShardId shardId18 = bulkShardRequest9.shardId();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult19 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult20 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, writeResult19);
        long long21 = bulkShardRequest9.seqNo();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest23 = new org.elasticsearch.action.bulk.BulkItemRequest((int) '#', (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest24 = new org.elasticsearch.action.bulk.BulkItemRequest((int) '4', (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        org.elasticsearch.action.update.UpdateHelper.Result result26 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result28 = null;
        org.elasticsearch.action.ActionRequest actionRequest32 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest33 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest32);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest34 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple35 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest33, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest34);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest36 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest34);
        org.elasticsearch.action.ActionRequest actionRequest38 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest39 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest38);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest40 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple41 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest39, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest40);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple42 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest36, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest40);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest43 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue44 = bulkShardRequest43.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest45 = bulkShardRequest40.timeout(timeValue44);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest46 = new org.elasticsearch.action.bulk.BulkItemRequest((-1), (org.elasticsearch.action.ActionRequest) bulkShardRequest45);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult47 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult48 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result28, (org.elasticsearch.action.ActionRequest) bulkShardRequest45, writeResult47);
        org.elasticsearch.action.update.UpdateHelper.Result result49 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest51 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest52 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest51);
        org.elasticsearch.action.update.UpdateHelper.Result result53 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest55 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest56 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest55);
        java.lang.Throwable throwable58 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult59 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult60 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result53, (org.elasticsearch.action.ActionRequest) bulkShardRequest55, false, throwable58, writeResult59);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple61 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest52, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest55);
        java.lang.Throwable throwable63 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult64 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult65 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result49, (org.elasticsearch.action.ActionRequest) bulkShardRequest55, true, throwable63, writeResult64);
        org.elasticsearch.index.shard.ShardId shardId66 = bulkShardRequest55.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue67 = bulkShardRequest55.timeout();
        org.elasticsearch.tasks.TaskId taskId68 = bulkShardRequest55.getParentTask();
        bulkShardRequest45.setParentTask(taskId68);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest70 = new org.elasticsearch.action.bulk.BulkItemRequest(0, (org.elasticsearch.action.ActionRequest) bulkShardRequest45);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult71 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult72 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result26, (org.elasticsearch.action.ActionRequest) bulkShardRequest45, writeResult71);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest73 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest45);
        org.elasticsearch.action.update.UpdateHelper.Result result76 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest78 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest79 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest78);
        java.lang.Throwable throwable81 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult82 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult83 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result76, (org.elasticsearch.action.ActionRequest) bulkShardRequest78, false, throwable81, writeResult82);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest84 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest78);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest85 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest78);
        bulkShardRequest78.setParentTask("index.version.upgraded", (long) ' ');
        org.elasticsearch.tasks.TaskId taskId89 = bulkShardRequest78.getParentTask();
        org.elasticsearch.tasks.TaskId taskId90 = bulkShardRequest78.getParentTask();
        bulkShardRequest45.setParentTask(taskId90);
        bulkShardRequest45.setParentTask("current version [97] is different than the one provided [1]", 35L);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel95 = bulkShardRequest45.consistencyLevel();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest96 = bulkShardRequest9.consistencyLevel(writeConsistencyLevel95);
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertNotNull(timeValue44);
        org.junit.Assert.assertNotNull(bulkShardRequest45);
        org.junit.Assert.assertNull(shardId66);
        org.junit.Assert.assertNotNull(timeValue67);
        org.junit.Assert.assertNotNull(taskId68);
        org.junit.Assert.assertNotNull(taskId89);
        org.junit.Assert.assertNotNull(taskId90);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel95 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel95.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(bulkShardRequest96);
    }

    @Test
    public void test4046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4046");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result16 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest18 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest19 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest18);
        org.elasticsearch.action.update.UpdateHelper.Result result20 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest22 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest23 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest22);
        java.lang.Throwable throwable25 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult26 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult27 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result20, (org.elasticsearch.action.ActionRequest) bulkShardRequest22, false, throwable25, writeResult26);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple28 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest19, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest22);
        org.elasticsearch.tasks.TaskId taskId29 = null;
        bulkShardRequest22.setParentTask(taskId29);
        org.elasticsearch.index.shard.ShardId shardId31 = bulkShardRequest22.shardId();
        bulkShardRequest22.seqNo((long) 0);
        java.lang.Throwable throwable35 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult36 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult37 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result16, (org.elasticsearch.action.ActionRequest) bulkShardRequest22, false, throwable35, writeResult36);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException38 = bulkShardRequest22.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException38, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "update", (java.lang.Throwable) actionRequestValidationException38, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "_na_", (java.lang.Throwable) actionRequestValidationException38, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "primary_terms", (java.lang.Throwable) actionRequestValidationException38, "delete");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "current version [97] is different than the one provided [35]", (java.lang.Throwable) actionRequestValidationException38, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "", (java.lang.Throwable) actionRequestValidationException38, "index.blocks.metadata");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure52 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "index.shadow_replicas", (java.lang.Throwable) actionRequestValidationException38, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure54 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "current version [100] is higher than the one provided [-1]", (java.lang.Throwable) actionRequestValidationException38, "index.version.created");
        java.lang.Throwable throwable55 = shardFailure54.cause;
        org.junit.Assert.assertNull(shardId31);
        org.junit.Assert.assertNotNull(actionRequestValidationException38);
        org.junit.Assert.assertNotNull(throwable55);
        org.junit.Assert.assertEquals(throwable55.getLocalizedMessage(), "Validation Failed: 1: index is missing;");
        org.junit.Assert.assertEquals(throwable55.getMessage(), "Validation Failed: 1: index is missing;");
        org.junit.Assert.assertEquals(throwable55.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;");
    }

    @Test
    public void test4047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4047");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters5 = indexMetaData0.includeFilters();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.action.update.UpdateHelper.Result result9 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult15 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult16 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result9, (org.elasticsearch.action.ActionRequest) bulkShardRequest11, false, throwable14, writeResult15);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest8, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest11);
        org.elasticsearch.index.VersionType versionType18 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean22 = versionType18.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple23 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest8, versionType18);
        boolean boolean27 = versionType18.isVersionConflictForWrites((long) 0, (long) (short) 0, false);
        boolean boolean28 = indexMetaData0.equals((java.lang.Object) boolean27);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder29 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        long long30 = indexMetaData0.getCreationDate();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder31 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        long long33 = indexMetaData0.primaryTerm(0);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters34 = indexMetaData0.requireFilters();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNull(discoveryNodeFilters5);
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertNull(discoveryNodeFilters34);
    }

    @Test
    public void test4048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4048");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("index.version.upgraded");
        java.lang.String str2 = builder1.index();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = builder1.index("index.auto_expand_replicas");
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = builder1.putMapping(mappingMetaData5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "index.version.upgraded" + "'", str2, "index.version.upgraded");
        org.junit.Assert.assertNotNull(builder4);
    }

    @Test
    public void test4049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4049");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", throwable2, "");
        org.elasticsearch.action.update.UpdateHelper.Result result5 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest6 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result5, (org.elasticsearch.action.ActionRequest) bulkShardRequest6, false, throwable8, writeResult9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure4, (org.elasticsearch.transport.TransportMessage) bulkShardRequest6);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest13 = bulkShardRequest6.index("index.version.created");
        long long14 = bulkShardRequest6.seqNo();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest16 = bulkShardRequest6.index("current version [10] is higher than the one provided [98]");
        org.junit.Assert.assertNotNull(bulkShardRequest13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(bulkShardRequest16);
    }

    @Test
    public void test4050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4050");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        bulkShardRequest4.primaryTerm((long) (-1));
        org.elasticsearch.action.update.UpdateHelper.Result result9 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest13 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest13);
        org.elasticsearch.action.update.UpdateHelper.Result result15 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest17 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest18 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest17);
        java.lang.Throwable throwable20 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult21 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult22 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result15, (org.elasticsearch.action.ActionRequest) bulkShardRequest17, false, throwable20, writeResult21);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple23 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest14, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest17);
        org.elasticsearch.tasks.TaskId taskId24 = null;
        bulkShardRequest17.setParentTask(taskId24);
        org.elasticsearch.index.shard.ShardId shardId26 = bulkShardRequest17.shardId();
        bulkShardRequest17.seqNo((long) 0);
        org.elasticsearch.action.support.IndicesOptions indicesOptions29 = bulkShardRequest17.indicesOptions();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest30 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest17);
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest32 = bulkShardRequest17.setShardId(shardId31);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest33 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest32);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting35 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting37 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting39 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result41 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest43 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest44 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest43);
        org.elasticsearch.action.update.UpdateHelper.Result result45 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest47 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest48 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest47);
        java.lang.Throwable throwable50 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult51 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult52 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result45, (org.elasticsearch.action.ActionRequest) bulkShardRequest47, false, throwable50, writeResult51);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple53 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest44, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest47);
        org.elasticsearch.tasks.TaskId taskId54 = null;
        bulkShardRequest47.setParentTask(taskId54);
        org.elasticsearch.index.shard.ShardId shardId56 = bulkShardRequest47.shardId();
        bulkShardRequest47.seqNo((long) 0);
        java.lang.Throwable throwable60 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult61 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult62 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result41, (org.elasticsearch.action.ActionRequest) bulkShardRequest47, false, throwable60, writeResult61);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException63 = bulkShardRequest47.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure65 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting39, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException63, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure67 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting37, "update", (java.lang.Throwable) actionRequestValidationException63, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure69 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting35, "index.shared_filesystem", (java.lang.Throwable) actionRequestValidationException63, "index.version.minimum_compatible");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult70 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult71 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result9, (org.elasticsearch.action.ActionRequest) bulkShardRequest32, false, (java.lang.Throwable) actionRequestValidationException63, writeResult70);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult72 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult73 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest4, false, (java.lang.Throwable) actionRequestValidationException63, writeResult72);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure75 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "index.blocks.read", (java.lang.Throwable) actionRequestValidationException63, "update");
        java.lang.String str76 = shardFailure75.indexUUID;
        java.lang.Class<?> wildcardClass77 = shardFailure75.getClass();
        org.junit.Assert.assertNull(shardId26);
        org.junit.Assert.assertNotNull(indicesOptions29);
        org.junit.Assert.assertNotNull(bulkShardRequest32);
        org.junit.Assert.assertNull(shardId56);
        org.junit.Assert.assertNotNull(actionRequestValidationException63);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "update" + "'", str76, "update");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test4051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4051");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("state-");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int4 = builder3.numberOfShards();
        java.lang.String[] strArray8 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet9 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet9, strArray8);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = builder3.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet9);
        org.elasticsearch.cluster.metadata.IndexMetaData.State state12 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder13 = builder11.state(state12);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder15 = builder11.removeAlias("hi!");
        long long16 = builder11.version();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state17 = org.elasticsearch.cluster.metadata.IndexMetaData.State.CLOSE;
        byte byte18 = state17.id();
        byte byte19 = state17.id();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder20 = builder11.state(state17);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData21 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder22 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData21);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap23 = indexMetaData21.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet24 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple25 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData21, indexShardStateSet24);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters26 = indexMetaData21.includeFilters();
        org.elasticsearch.common.settings.Settings settings27 = indexMetaData21.getSettings();
        org.elasticsearch.common.settings.Settings settings28 = org.elasticsearch.cluster.metadata.IndexMetaData.addHumanReadableSettings(settings27);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder29 = builder11.settings(settings28);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder30 = builder1.settings(settings28);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder32 = builder30.removeAlias("index.blocks.metadata");
        org.elasticsearch.common.settings.Settings.Builder builder33 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder34 = builder32.settings(builder33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertTrue("'" + state17 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.CLOSE + "'", state17.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.CLOSE));
        org.junit.Assert.assertTrue("'" + byte18 + "' != '" + (byte) 1 + "'", byte18 == (byte) 1);
        org.junit.Assert.assertTrue("'" + byte19 + "' != '" + (byte) 1 + "'", byte19 == (byte) 1);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(indexMetaData21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap23);
        org.junit.Assert.assertNotNull(indexShardStateSet24);
        org.junit.Assert.assertNull(discoveryNodeFilters26);
        org.junit.Assert.assertNotNull(settings27);
        org.junit.Assert.assertNotNull(settings28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
    }

    @Test
    public void test4052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4052");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int2 = builder1.numberOfShards();
        java.lang.String[] strArray6 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = builder1.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet7);
        org.elasticsearch.cluster.metadata.IndexMetaData.State state10 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = builder9.state(state10);
        int int12 = builder9.numberOfShards();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder14 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder15 = builder14.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder15.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder20 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int21 = builder20.numberOfShards();
        java.lang.String[] strArray25 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet26 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet26, strArray25);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder28 = builder20.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet26);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder29 = builder15.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet26);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder31 = builder29.creationDate((long) (byte) 10);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData32 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder33 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData32);
        java.lang.String str34 = builder33.index();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder36 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int37 = builder36.numberOfShards();
        java.lang.String[] strArray41 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet42 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet42, strArray41);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder44 = builder36.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet42);
        org.elasticsearch.cluster.metadata.IndexMetaData.State state45 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder46 = builder44.state(state45);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder48 = builder44.removeAlias("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData49 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder50 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData49);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap51 = indexMetaData49.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet52 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple53 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData49, indexShardStateSet52);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters54 = indexMetaData49.includeFilters();
        org.elasticsearch.common.settings.Settings settings55 = indexMetaData49.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder56 = builder44.settings(settings55);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder57 = builder33.settings(settings55);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder58 = builder29.settings(settings55);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder59 = builder9.settings(settings55);
        org.elasticsearch.common.settings.Settings settings60 = org.elasticsearch.cluster.metadata.IndexMetaData.addHumanReadableSettings(settings55);
        org.elasticsearch.common.settings.Settings settings61 = org.elasticsearch.cluster.metadata.IndexMetaData.addHumanReadableSettings(settings55);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(indexMetaData32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(indexMetaData49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap51);
        org.junit.Assert.assertNotNull(indexShardStateSet52);
        org.junit.Assert.assertNull(discoveryNodeFilters54);
        org.junit.Assert.assertNotNull(settings55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(settings60);
        org.junit.Assert.assertNotNull(settings61);
    }

    @Test
    public void test4053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4053");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData1 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData1);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap3 = indexMetaData1.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters4 = indexMetaData1.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff5 = indexMetaData0.diff(indexMetaData1);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters6 = indexMetaData1.requireFilters();
        org.elasticsearch.Version version7 = indexMetaData1.getUpgradedVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData8 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData8);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap10 = indexMetaData8.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet11 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData8, indexShardStateSet11);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff13 = indexMetaData1.diff(indexMetaData8);
        org.elasticsearch.common.settings.Settings settings14 = indexMetaData8.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder15 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData8);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData17 = indexMetaData8.mapping("index.blocks.read");
        long long18 = indexMetaData8.getVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder19 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData8);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder20 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData8);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest22 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest23 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest22);
        org.elasticsearch.action.update.UpdateHelper.Result result24 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest26 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest27 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest26);
        java.lang.Throwable throwable29 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult30 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult31 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result24, (org.elasticsearch.action.ActionRequest) bulkShardRequest26, false, throwable29, writeResult30);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple32 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest23, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest26);
        org.elasticsearch.index.VersionType versionType33 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean37 = versionType33.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple38 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest23, versionType33);
        boolean boolean42 = versionType33.isVersionConflictForWrites(10L, (long) (byte) 0, false);
        boolean boolean44 = versionType33.validateVersionForReads(10L);
        boolean boolean47 = versionType33.isVersionConflictForReads(100L, (long) 'a');
        boolean boolean49 = versionType33.validateVersionForWrites((long) 100);
        boolean boolean52 = versionType33.isVersionConflictForReads((long) 'a', (long) (byte) 2);
        boolean boolean54 = versionType33.validateVersionForWrites((long) ' ');
        boolean boolean55 = indexMetaData8.equals((java.lang.Object) versionType33);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData57 = indexMetaData8.mappingOrDefault("current version [100] is different than the one provided [1]");
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(indexMetaData1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap3);
        org.junit.Assert.assertNull(discoveryNodeFilters4);
        org.junit.Assert.assertNotNull(indexMetaDataDiff5);
        org.junit.Assert.assertNull(discoveryNodeFilters6);
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertNotNull(indexMetaData8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap10);
        org.junit.Assert.assertNotNull(indexShardStateSet11);
        org.junit.Assert.assertNotNull(indexMetaDataDiff13);
        org.junit.Assert.assertNotNull(settings14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNull(mappingMetaData17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(versionType33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(mappingMetaData57);
    }

    @Test
    public void test4054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4054");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters4 = indexMetaData0.requireFilters();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData6 = indexMetaData0.mappingOrDefault("current version [97] is different than the one provided [35]");
        org.elasticsearch.index.Index index7 = indexMetaData0.getMergeSourceIndex();
        long long8 = indexMetaData0.getCreationDate();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput9 = null;
        // The following exception was thrown during execution in test generation
        try {
            indexMetaData0.writeTo(streamOutput9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(discoveryNodeFilters4);
        org.junit.Assert.assertNull(mappingMetaData6);
        org.junit.Assert.assertNull(index7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
    }

    @Test
    public void test4055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4055");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = builder1.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = builder2.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int8 = builder7.numberOfShards();
        java.lang.String[] strArray12 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder15 = builder7.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder2.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder18 = builder16.creationDate((long) (byte) 10);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData19 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder20 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData19);
        java.lang.String str21 = builder20.index();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder23 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int24 = builder23.numberOfShards();
        java.lang.String[] strArray28 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet29 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet29, strArray28);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder31 = builder23.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet29);
        org.elasticsearch.cluster.metadata.IndexMetaData.State state32 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder33 = builder31.state(state32);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder35 = builder31.removeAlias("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData36 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder37 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData36);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap38 = indexMetaData36.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet39 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple40 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData36, indexShardStateSet39);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters41 = indexMetaData36.includeFilters();
        org.elasticsearch.common.settings.Settings settings42 = indexMetaData36.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder43 = builder31.settings(settings42);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder44 = builder20.settings(settings42);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder45 = builder16.settings(settings42);
        long long47 = builder16.primaryTerm((int) (byte) 0);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData48 = builder16.build();
        int int49 = indexMetaData48.getNumberOfReplicas();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(indexMetaData19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(indexMetaData36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap38);
        org.junit.Assert.assertNotNull(indexShardStateSet39);
        org.junit.Assert.assertNull(discoveryNodeFilters41);
        org.junit.Assert.assertNotNull(settings42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 0L + "'", long47 == 0L);
        org.junit.Assert.assertNotNull(indexMetaData48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
    }

    @Test
    public void test4056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4056");
        org.elasticsearch.action.ActionRequest actionRequest1 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 100, actionRequest1);
    }

    @Test
    public void test4057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4057");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("current version [1] is higher than the one provided [2]");
    }

    @Test
    public void test4058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4058");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result4 = null;
        org.elasticsearch.action.ActionRequest actionRequest6 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest6);
        org.elasticsearch.action.ActionRequest actionRequest10 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest11 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest10);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest12 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest11, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest12);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest12);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple15 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest7, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest12);
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = null;
        bulkShardRequest12.remoteAddress(transportAddress16);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting19 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting21 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting23 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting25 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting27 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result29 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest31 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest32 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest31);
        org.elasticsearch.action.update.UpdateHelper.Result result33 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest35 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest36 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest35);
        java.lang.Throwable throwable38 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult39 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult40 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result33, (org.elasticsearch.action.ActionRequest) bulkShardRequest35, false, throwable38, writeResult39);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple41 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest32, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest35);
        org.elasticsearch.tasks.TaskId taskId42 = null;
        bulkShardRequest35.setParentTask(taskId42);
        org.elasticsearch.index.shard.ShardId shardId44 = bulkShardRequest35.shardId();
        bulkShardRequest35.seqNo((long) 0);
        java.lang.Throwable throwable48 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult49 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult50 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result29, (org.elasticsearch.action.ActionRequest) bulkShardRequest35, false, throwable48, writeResult49);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException51 = bulkShardRequest35.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure53 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting27, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException51, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure55 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting25, "update", (java.lang.Throwable) actionRequestValidationException51, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure57 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting23, "_na_", (java.lang.Throwable) actionRequestValidationException51, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure59 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting21, "_na_", (java.lang.Throwable) actionRequestValidationException51, "index.version.upgraded");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure61 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting19, "index.shadow_replicas", (java.lang.Throwable) actionRequestValidationException51, "");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult62 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult63 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result4, (org.elasticsearch.action.ActionRequest) bulkShardRequest12, false, (java.lang.Throwable) actionRequestValidationException51, writeResult62);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure65 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "indices:data/write/bulk[s]", (java.lang.Throwable) actionRequestValidationException51, "index.version.created");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure67 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "state-", (java.lang.Throwable) actionRequestValidationException51, "index.version.created_string");
        org.junit.Assert.assertNull(shardId44);
        org.junit.Assert.assertNotNull(actionRequestValidationException51);
    }

    @Test
    public void test4059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4059");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("index.blocks.write");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder1.creationDate((long) 1);
        int int4 = builder1.numberOfReplicas();
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test4060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4060");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData1 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData1);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap3 = indexMetaData1.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters4 = indexMetaData1.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff5 = indexMetaData0.diff(indexMetaData1);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters6 = indexMetaData1.requireFilters();
        org.elasticsearch.Version version7 = indexMetaData1.getCreationVersion();
        // The following exception was thrown during execution in test generation
        try {
            long long9 = indexMetaData1.primaryTerm((int) (byte) 3);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(indexMetaData1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap3);
        org.junit.Assert.assertNull(discoveryNodeFilters4);
        org.junit.Assert.assertNotNull(indexMetaDataDiff5);
        org.junit.Assert.assertNull(discoveryNodeFilters6);
        org.junit.Assert.assertNotNull(version7);
    }

    @Test
    public void test4061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4061");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData6 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData6);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap8 = indexMetaData6.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet9 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple10 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData6, indexShardStateSet9);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters11 = indexMetaData6.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder12 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData6);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff13 = indexMetaData0.diff(indexMetaData6);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData14 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder16.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder19 = builder17.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder22 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int23 = builder22.numberOfShards();
        java.lang.String[] strArray27 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet28 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet28, strArray27);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder30 = builder22.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet28);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder31 = builder17.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet28);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple32 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData14, (java.lang.Iterable<java.lang.String>) strSet28);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap33 = indexMetaData14.getAliases();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff34 = indexMetaData0.diff(indexMetaData14);
        java.lang.String str35 = indexMetaData14.getIndexUUID();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder36 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData14);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder38 = builder36.numberOfReplicas(32);
        // The following exception was thrown during execution in test generation
        try {
            long long40 = builder36.primaryTerm((int) (byte) 3);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNotNull(indexMetaData6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap8);
        org.junit.Assert.assertNotNull(indexShardStateSet9);
        org.junit.Assert.assertNull(discoveryNodeFilters11);
        org.junit.Assert.assertNotNull(indexMetaDataDiff13);
        org.junit.Assert.assertNotNull(indexMetaData14);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple32);
        org.junit.Assert.assertNotNull(strImmutableOpenMap33);
        org.junit.Assert.assertNotNull(indexMetaDataDiff34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "_na_" + "'", str35, "_na_");
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
    }

    @Test
    public void test4062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4062");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest1 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest1);
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, false, throwable8, writeResult9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.index.VersionType versionType12 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean16 = versionType12.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest2, versionType12);
        boolean boolean21 = versionType12.isVersionConflictForWrites(10L, (long) (byte) 0, false);
        boolean boolean23 = versionType12.validateVersionForReads((long) (byte) 100);
        long long26 = versionType12.updateVersion((long) (byte) 0, (long) (byte) -1);
        org.elasticsearch.index.VersionType versionType27 = versionType12.versionTypeForReplicationAndRecovery();
        org.elasticsearch.index.VersionType versionType28 = versionType27.versionTypeForReplicationAndRecovery();
        boolean boolean31 = versionType28.isVersionConflictForReads((long) (-1), (long) (short) 10);
        boolean boolean33 = versionType28.validateVersionForWrites((long) (short) 100);
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(versionType27);
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test4063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4063");
        org.elasticsearch.action.ActionRequest actionRequest2 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest3 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest2);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple5 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest4);
        org.elasticsearch.action.ActionRequest actionRequest8 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest8);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest10 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest9, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest10);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest10);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest10);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 100, (org.elasticsearch.action.ActionRequest) bulkShardRequest10);
        org.elasticsearch.action.ActionRequest actionRequest17 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest18 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest17);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest19 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple20 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest18, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest19);
        boolean boolean21 = bulkShardRequest19.getShouldPersistResult();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest19);
        org.elasticsearch.action.update.UpdateHelper.Result result23 = null;
        org.elasticsearch.action.ActionRequest actionRequest26 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest27 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest26);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest28 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple29 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest27, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest28);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest30 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest28);
        bulkShardRequest28.primaryTerm((long) 1);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult33 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult34 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result23, (org.elasticsearch.action.ActionRequest) bulkShardRequest28, writeResult33);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple35 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest22, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest28);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple36 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest14, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest28);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest37 = bulkItemRequestTuple36.v1();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData38 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder39 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData38);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData41 = indexMetaData38.mapping("_na_");
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters42 = indexMetaData38.getInitialRecoveryFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder43 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData38);
        boolean boolean44 = bulkItemRequestTuple36.equals((java.lang.Object) builder43);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest45 = bulkItemRequestTuple36.v1();
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(bulkItemRequest37);
        org.junit.Assert.assertNotNull(indexMetaData38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNull(mappingMetaData41);
        org.junit.Assert.assertNull(discoveryNodeFilters42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(bulkItemRequest45);
    }

    @Test
    public void test4064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4064");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.ActionRequest actionRequest5 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest5);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple8 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest6, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest7);
        boolean boolean9 = bulkShardRequest7.getShouldPersistResult();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest10 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest11 = new org.elasticsearch.action.bulk.BulkItemRequest(3, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = new org.elasticsearch.action.bulk.BulkItemRequest((int) '#', (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        bulkShardRequest7.seqNo(0L);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting18 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting20 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting22 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting24 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result26 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest28 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest29 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest28);
        org.elasticsearch.action.update.UpdateHelper.Result result30 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest32 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest33 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest32);
        java.lang.Throwable throwable35 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult36 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult37 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result30, (org.elasticsearch.action.ActionRequest) bulkShardRequest32, false, throwable35, writeResult36);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple38 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest29, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest32);
        org.elasticsearch.tasks.TaskId taskId39 = null;
        bulkShardRequest32.setParentTask(taskId39);
        org.elasticsearch.index.shard.ShardId shardId41 = bulkShardRequest32.shardId();
        bulkShardRequest32.seqNo((long) 0);
        java.lang.Throwable throwable45 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult46 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult47 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result26, (org.elasticsearch.action.ActionRequest) bulkShardRequest32, false, throwable45, writeResult46);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException48 = bulkShardRequest32.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting24, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException48, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure52 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting22, "update", (java.lang.Throwable) actionRequestValidationException48, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure54 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting20, "index.shared_filesystem", (java.lang.Throwable) actionRequestValidationException48, "index.version.minimum_compatible");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure56 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting18, "current version [97] is different than the one provided [35]", (java.lang.Throwable) actionRequestValidationException48, "index.");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure58 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting16, "index.blocks.write", (java.lang.Throwable) actionRequestValidationException48, "index.uuid");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult59 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult60 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, false, (java.lang.Throwable) actionRequestValidationException48, writeResult59);
        java.lang.Throwable throwable61 = updateResult60.error;
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(shardId41);
        org.junit.Assert.assertNotNull(actionRequestValidationException48);
        org.junit.Assert.assertNotNull(throwable61);
        org.junit.Assert.assertEquals(throwable61.getLocalizedMessage(), "Validation Failed: 1: index is missing;");
        org.junit.Assert.assertEquals(throwable61.getMessage(), "Validation Failed: 1: index is missing;");
        org.junit.Assert.assertEquals(throwable61.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;");
    }

    @Test
    public void test4065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4065");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder1.version((long) (short) 100);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder1.removeAlias("");
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet7 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.action.ActionRequest actionRequest9 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest10 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest9);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest10, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest11);
        boolean boolean13 = bulkShardRequest11.getShouldPersistResult();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder15 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int16 = builder15.numberOfShards();
        java.lang.String[] strArray20 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet21 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet21, strArray20);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder23 = builder15.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet21);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>> streamableTuple24 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>>((org.elasticsearch.common.io.stream.Streamable) bulkShardRequest11, strSet21);
        org.elasticsearch.common.collect.Tuple<java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>, java.lang.Iterable<java.lang.String>> indexShardStateSetTuple25 = new org.elasticsearch.common.collect.Tuple<java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>, java.lang.Iterable<java.lang.String>>(indexShardStateSet7, (java.lang.Iterable<java.lang.String>) strSet21);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting26 = null;
        java.lang.Throwable throwable28 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure30 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting26, "index.uuid", throwable28, "hi!");
        java.lang.Class<?> wildcardClass31 = shardFailure30.getClass();
        org.elasticsearch.common.collect.Tuple<java.util.Collection<java.lang.String>, java.lang.reflect.Type> strCollectionTuple32 = new org.elasticsearch.common.collect.Tuple<java.util.Collection<java.lang.String>, java.lang.reflect.Type>((java.util.Collection<java.lang.String>) strSet21, (java.lang.reflect.Type) wildcardClass31);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder33 = builder1.putActiveAllocationIds(0, (java.util.Set<java.lang.String>) strSet21);
        org.elasticsearch.cluster.metadata.IndexMetaData.Custom custom35 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder36 = builder1.putCustom("delete", custom35);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder38 = builder36.creationDate((long) 0);
        org.elasticsearch.cluster.metadata.AliasMetaData.Builder builder39 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder40 = builder38.putAlias(builder39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(indexShardStateSet7);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
    }

    @Test
    public void test4066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4066");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters5 = indexMetaData0.includeFilters();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.action.update.UpdateHelper.Result result9 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult15 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult16 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result9, (org.elasticsearch.action.ActionRequest) bulkShardRequest11, false, throwable14, writeResult15);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest8, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest11);
        org.elasticsearch.index.VersionType versionType18 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean22 = versionType18.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple23 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest8, versionType18);
        boolean boolean27 = versionType18.isVersionConflictForWrites((long) 0, (long) (short) 0, false);
        boolean boolean28 = indexMetaData0.equals((java.lang.Object) boolean27);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters29 = indexMetaData0.getInitialRecoveryFilters();
        long long31 = indexMetaData0.primaryTerm(0);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters32 = indexMetaData0.requireFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder33 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder35 = builder33.numberOfShards(100);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData36 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder37 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData36);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters38 = indexMetaData36.requireFilters();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.MappingMetaData> strImmutableOpenMap39 = indexMetaData36.getMappings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder40 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData36);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap41 = indexMetaData36.getActiveAllocationIds();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state42 = indexMetaData36.getState();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder43 = builder35.state(state42);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNull(discoveryNodeFilters5);
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(discoveryNodeFilters29);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertNull(discoveryNodeFilters32);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(indexMetaData36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNull(discoveryNodeFilters38);
        org.junit.Assert.assertNotNull(strImmutableOpenMap39);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap41);
        org.junit.Assert.assertTrue("'" + state42 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state42.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertNotNull(builder43);
    }

    @Test
    public void test4067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4067");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int2 = builder1.numberOfShards();
        java.lang.String[] strArray6 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = builder1.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet7);
        org.elasticsearch.cluster.metadata.IndexMetaData.State state10 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = builder9.state(state10);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder13 = builder9.removeAlias("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData14 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder15 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData14);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap16 = indexMetaData14.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet17 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple18 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData14, indexShardStateSet17);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters19 = indexMetaData14.includeFilters();
        org.elasticsearch.common.settings.Settings settings20 = indexMetaData14.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder21 = builder9.settings(settings20);
        int int22 = builder9.numberOfReplicas();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder24 = builder9.removeAlias("active_allocations");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder26 = builder9.creationDate(100L);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder27 = builder26.removeAllAliases();
        java.lang.Class<?> wildcardClass28 = builder27.getClass();
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(indexMetaData14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap16);
        org.junit.Assert.assertNotNull(indexShardStateSet17);
        org.junit.Assert.assertNull(discoveryNodeFilters19);
        org.junit.Assert.assertNotNull(settings20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test4068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4068");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData1 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData1);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap3 = indexMetaData1.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters4 = indexMetaData1.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff5 = indexMetaData0.diff(indexMetaData1);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters6 = indexMetaData1.requireFilters();
        org.elasticsearch.Version version7 = indexMetaData1.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings8 = indexMetaData1.getSettings();
        java.lang.String str9 = indexMetaData1.getIndexUUID();
        int int10 = indexMetaData1.getTotalNumberOfShards();
        int int11 = indexMetaData1.getNumberOfReplicas();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder12 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params13 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.action.update.UpdateHelper.Result result14 = null;
        org.elasticsearch.action.ActionRequest actionRequest18 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest19 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest18);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest20 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple21 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest19, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest20);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest20);
        org.elasticsearch.action.ActionRequest actionRequest24 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest25 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest24);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest26 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple27 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest25, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest26);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple28 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest22, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest26);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest29 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue30 = bulkShardRequest29.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest31 = bulkShardRequest26.timeout(timeValue30);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest32 = new org.elasticsearch.action.bulk.BulkItemRequest((-1), (org.elasticsearch.action.ActionRequest) bulkShardRequest31);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult33 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult34 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result14, (org.elasticsearch.action.ActionRequest) bulkShardRequest31, writeResult33);
        boolean boolean35 = updateResult34.failure();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.ToXContent.Params, org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult> paramsTuple36 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.ToXContent.Params, org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult>(params13, updateResult34);
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting37 = org.elasticsearch.cluster.metadata.IndexMetaData.INDEX_NUMBER_OF_SHARDS_SETTING;
        org.elasticsearch.gateway.MetaDataStateFormat<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataMetaDataStateFormat38 = org.elasticsearch.cluster.metadata.IndexMetaData.FORMAT;
        org.elasticsearch.action.update.UpdateHelper.Result result39 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result40 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result41 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest42 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable44 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult45 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult46 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result41, (org.elasticsearch.action.ActionRequest) bulkShardRequest42, false, throwable44, writeResult45);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult47 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult48 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result40, (org.elasticsearch.action.ActionRequest) bulkShardRequest42, writeResult47);
        java.lang.Throwable throwable50 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult51 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult52 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result39, (org.elasticsearch.action.ActionRequest) bulkShardRequest42, true, throwable50, writeResult51);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult53 = updateResult52.writeResult;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.gateway.MetaDataStateFormat<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Object> indexMetaDataMetaDataStateFormatTuple54 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.gateway.MetaDataStateFormat<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Object>(indexMetaDataMetaDataStateFormat38, (java.lang.Object) writeResult53);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.settings.Setting<java.lang.Integer>, org.elasticsearch.gateway.MetaDataStateFormat<org.elasticsearch.cluster.metadata.IndexMetaData>> intSettingTuple55 = org.elasticsearch.common.collect.Tuple.tuple(intSetting37, indexMetaDataMetaDataStateFormat38);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.ToXContent.Params, org.elasticsearch.action.support.ToXContentToBytes> paramsTuple56 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.ToXContent.Params, org.elasticsearch.action.support.ToXContentToBytes>(params13, (org.elasticsearch.action.support.ToXContentToBytes) intSetting37);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder57 = indexMetaData1.toXContent(xContentBuilder12, params13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(indexMetaData1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap3);
        org.junit.Assert.assertNull(discoveryNodeFilters4);
        org.junit.Assert.assertNotNull(indexMetaDataDiff5);
        org.junit.Assert.assertNull(discoveryNodeFilters6);
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertNotNull(settings8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_na_" + "'", str9, "_na_");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(params13);
        org.junit.Assert.assertNotNull(timeValue30);
        org.junit.Assert.assertNotNull(bulkShardRequest31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(intSetting37);
        org.junit.Assert.assertNotNull(indexMetaDataMetaDataStateFormat38);
        org.junit.Assert.assertNull(writeResult53);
        org.junit.Assert.assertNotNull(intSettingTuple55);
    }

    @Test
    public void test4069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4069");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder1.version((long) (short) 100);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder1.removeAlias("");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData6 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData6);
        org.elasticsearch.Version version8 = indexMetaData6.getCreationVersion();
        long long9 = indexMetaData6.getCreationDate();
        int int10 = indexMetaData6.getTotalNumberOfShards();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state11 = indexMetaData6.getState();
        byte byte12 = state11.id();
        byte byte13 = state11.id();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder14 = builder1.state(state11);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData16 = builder14.mapping("index.version.created_string");
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(indexMetaData6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + state11 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state11.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertTrue("'" + byte12 + "' != '" + (byte) 0 + "'", byte12 == (byte) 0);
        org.junit.Assert.assertTrue("'" + byte13 + "' != '" + (byte) 0 + "'", byte13 == (byte) 0);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(mappingMetaData16);
    }

    @Test
    public void test4070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4070");
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.ActionRequest actionRequest6 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest6);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple9 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest7, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest8);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest10 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue12 = bulkShardRequest11.timeout();
        java.lang.String str13 = bulkShardRequest11.index();
        org.elasticsearch.common.unit.TimeValue timeValue14 = bulkShardRequest11.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest15 = bulkShardRequest8.timeout(timeValue14);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest16 = new org.elasticsearch.action.bulk.BulkItemRequest(35, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.action.ActionRequest actionRequest19 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest20 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest19);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest21 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple22 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest20, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest21);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest23 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest21);
        java.lang.String str24 = bulkShardRequest21.index();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple25 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest16, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest21);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult26 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult27 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest21, writeResult26);
        boolean boolean28 = bulkShardRequest21.getShouldPersistResult();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest29 = new org.elasticsearch.action.bulk.BulkItemRequest((-1), (org.elasticsearch.action.ActionRequest) bulkShardRequest21);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest30 = new org.elasticsearch.action.bulk.BulkItemRequest(3, (org.elasticsearch.action.ActionRequest) bulkShardRequest21);
        org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestReplicationRequest31 = null;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple32 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest30, bulkShardRequestReplicationRequest31);
        org.junit.Assert.assertNotNull(timeValue12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(timeValue14);
        org.junit.Assert.assertNotNull(bulkShardRequest15);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test4071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4071");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters5 = indexMetaData0.includeFilters();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.action.update.UpdateHelper.Result result9 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult15 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult16 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result9, (org.elasticsearch.action.ActionRequest) bulkShardRequest11, false, throwable14, writeResult15);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest8, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest11);
        org.elasticsearch.index.VersionType versionType18 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean22 = versionType18.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple23 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest8, versionType18);
        boolean boolean27 = versionType18.isVersionConflictForWrites((long) 0, (long) (short) 0, false);
        boolean boolean28 = indexMetaData0.equals((java.lang.Object) boolean27);
        int int29 = indexMetaData0.getNumberOfReplicas();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state30 = indexMetaData0.getState();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData31 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder33 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder34 = builder33.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder36 = builder34.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder39 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int40 = builder39.numberOfShards();
        java.lang.String[] strArray44 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet45 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet45, strArray44);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder47 = builder39.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet45);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder48 = builder34.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet45);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple49 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData31, (java.lang.Iterable<java.lang.String>) strSet45);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap50 = indexMetaData31.getAliases();
        int int51 = indexMetaData31.getNumberOfShards();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters52 = indexMetaData31.excludeFilters();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap53 = indexMetaData31.getAliases();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff54 = indexMetaData0.diff(indexMetaData31);
        long long55 = indexMetaData31.getVersion();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters56 = indexMetaData31.excludeFilters();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder57 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params58 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder.toXContent(indexMetaData31, xContentBuilder57, params58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNull(discoveryNodeFilters5);
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + state30 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state30.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertNotNull(indexMetaData31);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple49);
        org.junit.Assert.assertNotNull(strImmutableOpenMap50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNull(discoveryNodeFilters52);
        org.junit.Assert.assertNotNull(strImmutableOpenMap53);
        org.junit.Assert.assertNotNull(indexMetaDataDiff54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 1L + "'", long55 == 1L);
        org.junit.Assert.assertNull(discoveryNodeFilters56);
        org.junit.Assert.assertNotNull(params58);
    }

    @Test
    public void test4072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4072");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters5 = indexMetaData0.includeFilters();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.action.update.UpdateHelper.Result result9 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult15 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult16 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result9, (org.elasticsearch.action.ActionRequest) bulkShardRequest11, false, throwable14, writeResult15);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest8, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest11);
        org.elasticsearch.index.VersionType versionType18 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean22 = versionType18.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple23 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest8, versionType18);
        boolean boolean27 = versionType18.isVersionConflictForWrites((long) 0, (long) (short) 0, false);
        boolean boolean28 = indexMetaData0.equals((java.lang.Object) boolean27);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters29 = indexMetaData0.getInitialRecoveryFilters();
        java.lang.String str30 = indexMetaData0.getIndexUUID();
        java.util.Set<java.lang.String> strSet32 = null; // flaky: indexMetaData0.activeAllocationIds((int) (byte) -1);
        int int33 = indexMetaData0.getNumberOfReplicas();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder35 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder36 = builder35.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder38 = builder36.numberOfReplicas((int) '#');
        org.elasticsearch.action.ActionRequest actionRequest41 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest42 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest41);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest43 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple44 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest42, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest43);
        boolean boolean45 = bulkShardRequest43.getShouldPersistResult();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder47 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int48 = builder47.numberOfShards();
        java.lang.String[] strArray52 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet53 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet53, strArray52);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder55 = builder47.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet53);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>> streamableTuple56 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>>((org.elasticsearch.common.io.stream.Streamable) bulkShardRequest43, strSet53);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder57 = builder36.putActiveAllocationIds((int) (short) 10, (java.util.Set<java.lang.String>) strSet53);
        int int58 = builder57.numberOfShards();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder60 = builder57.numberOfShards(0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder62 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder63 = builder62.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder65 = builder63.numberOfReplicas((int) '#');
        int int66 = builder63.numberOfShards();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData67 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder69 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder70 = builder69.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder72 = builder70.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder75 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int76 = builder75.numberOfShards();
        java.lang.String[] strArray80 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet81 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet81, strArray80);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder83 = builder75.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet81);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder84 = builder70.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet81);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple85 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData67, (java.lang.Iterable<java.lang.String>) strSet81);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap86 = indexMetaData67.getAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder87 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData67);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder88 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData67);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder89 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData67);
        org.elasticsearch.common.settings.Settings settings90 = indexMetaData67.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder91 = builder63.settings(settings90);
        boolean boolean92 = org.elasticsearch.cluster.metadata.IndexMetaData.isIndexUsingShadowReplicas(settings90);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder93 = builder57.settings(settings90);
        boolean boolean94 = indexMetaData0.equals((java.lang.Object) builder57);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters95 = indexMetaData0.getInitialRecoveryFilters();
        org.elasticsearch.Version version96 = indexMetaData0.getUpgradedVersion();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNull(discoveryNodeFilters5);
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(discoveryNodeFilters29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "_na_" + "'", str30, "_na_");
        org.junit.Assert.assertNull(strSet32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(indexMetaData67);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple85);
        org.junit.Assert.assertNotNull(strImmutableOpenMap86);
        org.junit.Assert.assertNotNull(settings90);
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(builder93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNull(discoveryNodeFilters95);
        org.junit.Assert.assertNotNull(version96);
    }

    @Test
    public void test4073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4073");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters5 = indexMetaData0.includeFilters();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.action.update.UpdateHelper.Result result9 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult15 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult16 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result9, (org.elasticsearch.action.ActionRequest) bulkShardRequest11, false, throwable14, writeResult15);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest8, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest11);
        org.elasticsearch.index.VersionType versionType18 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean22 = versionType18.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple23 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest8, versionType18);
        boolean boolean27 = versionType18.isVersionConflictForWrites((long) 0, (long) (short) 0, false);
        boolean boolean28 = indexMetaData0.equals((java.lang.Object) boolean27);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters29 = indexMetaData0.getInitialRecoveryFilters();
        java.lang.String str30 = indexMetaData0.getIndexUUID();
        java.util.Set<java.lang.String> strSet32 = null; // flaky: indexMetaData0.activeAllocationIds((int) (byte) -1);
        int int33 = indexMetaData0.getNumberOfReplicas();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder35 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder36 = builder35.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder38 = builder36.numberOfReplicas((int) '#');
        org.elasticsearch.action.ActionRequest actionRequest41 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest42 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest41);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest43 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple44 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest42, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest43);
        boolean boolean45 = bulkShardRequest43.getShouldPersistResult();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder47 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int48 = builder47.numberOfShards();
        java.lang.String[] strArray52 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet53 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet53, strArray52);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder55 = builder47.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet53);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>> streamableTuple56 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>>((org.elasticsearch.common.io.stream.Streamable) bulkShardRequest43, strSet53);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder57 = builder36.putActiveAllocationIds((int) (short) 10, (java.util.Set<java.lang.String>) strSet53);
        int int58 = builder57.numberOfShards();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder60 = builder57.numberOfShards(0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder62 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder63 = builder62.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder65 = builder63.numberOfReplicas((int) '#');
        int int66 = builder63.numberOfShards();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData67 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder69 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder70 = builder69.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder72 = builder70.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder75 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int76 = builder75.numberOfShards();
        java.lang.String[] strArray80 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet81 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet81, strArray80);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder83 = builder75.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet81);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder84 = builder70.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet81);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple85 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData67, (java.lang.Iterable<java.lang.String>) strSet81);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap86 = indexMetaData67.getAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder87 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData67);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder88 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData67);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder89 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData67);
        org.elasticsearch.common.settings.Settings settings90 = indexMetaData67.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder91 = builder63.settings(settings90);
        boolean boolean92 = org.elasticsearch.cluster.metadata.IndexMetaData.isIndexUsingShadowReplicas(settings90);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder93 = builder57.settings(settings90);
        boolean boolean94 = indexMetaData0.equals((java.lang.Object) builder57);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters95 = indexMetaData0.getInitialRecoveryFilters();
        org.elasticsearch.common.io.stream.StreamInput streamInput96 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff97 = indexMetaData0.readDiffFrom(streamInput96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNull(discoveryNodeFilters5);
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(discoveryNodeFilters29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "_na_" + "'", str30, "_na_");
        org.junit.Assert.assertNull(strSet32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(indexMetaData67);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple85);
        org.junit.Assert.assertNotNull(strImmutableOpenMap86);
        org.junit.Assert.assertNotNull(settings90);
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(builder93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNull(discoveryNodeFilters95);
    }

    @Test
    public void test4074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4074");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.Version version2 = indexMetaData0.getCreationVersion();
        long long3 = indexMetaData0.getCreationDate();
        long long4 = indexMetaData0.getCreationDate();
        java.util.Set<java.lang.String> strSet6 = null; // flaky: indexMetaData0.activeAllocationIds((int) (byte) 3);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData7 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData7);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap9 = indexMetaData7.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet10 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData7, indexShardStateSet10);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters12 = indexMetaData7.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff13 = indexMetaData0.diff(indexMetaData7);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData15 = indexMetaData0.mapping("");
        boolean boolean17 = indexMetaData0.isSameUUID("index.creation_date_string");
        org.elasticsearch.Version version18 = indexMetaData0.getCreationVersion();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder19 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result20 = null;
        org.elasticsearch.action.ActionRequest actionRequest21 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting23 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting25 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting27 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting29 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting31 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result33 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest35 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest36 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest35);
        org.elasticsearch.action.update.UpdateHelper.Result result37 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest39 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest40 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest39);
        java.lang.Throwable throwable42 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult43 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult44 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result37, (org.elasticsearch.action.ActionRequest) bulkShardRequest39, false, throwable42, writeResult43);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple45 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest36, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest39);
        org.elasticsearch.tasks.TaskId taskId46 = null;
        bulkShardRequest39.setParentTask(taskId46);
        org.elasticsearch.index.shard.ShardId shardId48 = bulkShardRequest39.shardId();
        bulkShardRequest39.seqNo((long) 0);
        java.lang.Throwable throwable52 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult53 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult54 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result33, (org.elasticsearch.action.ActionRequest) bulkShardRequest39, false, throwable52, writeResult53);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException55 = bulkShardRequest39.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure57 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting31, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException55, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure59 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting29, "update", (java.lang.Throwable) actionRequestValidationException55, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure61 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting27, "_na_", (java.lang.Throwable) actionRequestValidationException55, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure63 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting25, "_na_", (java.lang.Throwable) actionRequestValidationException55, "index.version.upgraded");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure65 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting23, "index.blocks.metadata", (java.lang.Throwable) actionRequestValidationException55, "update");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult66 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult67 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result20, actionRequest21, true, (java.lang.Throwable) actionRequestValidationException55, writeResult66);
        org.elasticsearch.common.xcontent.ToXContent.Params params68 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.common.collect.Tuple<java.lang.Exception, org.elasticsearch.common.xcontent.ToXContent.Params> exceptionTuple69 = new org.elasticsearch.common.collect.Tuple<java.lang.Exception, org.elasticsearch.common.xcontent.ToXContent.Params>((java.lang.Exception) actionRequestValidationException55, params68);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.ToXContent.Params, java.lang.CharSequence> paramsTuple71 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.ToXContent.Params, java.lang.CharSequence>(params68, (java.lang.CharSequence) "primary_terms");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder72 = indexMetaData0.toXContent(xContentBuilder19, params68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(version2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(strSet6);
        org.junit.Assert.assertNotNull(indexMetaData7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap9);
        org.junit.Assert.assertNotNull(indexShardStateSet10);
        org.junit.Assert.assertNull(discoveryNodeFilters12);
        org.junit.Assert.assertNotNull(indexMetaDataDiff13);
        org.junit.Assert.assertNull(mappingMetaData15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(version18);
        org.junit.Assert.assertNull(shardId48);
        org.junit.Assert.assertNotNull(actionRequestValidationException55);
        org.junit.Assert.assertNotNull(params68);
    }

    @Test
    public void test4075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4075");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = builder1.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = builder2.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int8 = builder7.numberOfShards();
        java.lang.String[] strArray12 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder15 = builder7.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder2.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder18 = builder16.creationDate((long) (byte) 10);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder20 = builder18.numberOfReplicas((int) (short) 0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder22 = builder20.removeAlias("index.priority");
        int int23 = builder20.numberOfShards();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder26 = builder20.primaryTerm((int) (short) -1, (long) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: you must set the number of shards before setting/reading primary terms");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
    }

    @Test
    public void test4076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4076");
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        org.elasticsearch.action.update.UpdateHelper.Result result7 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest10 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        java.lang.Throwable throwable12 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult13 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult14 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result7, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, false, throwable12, writeResult13);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple15 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest6, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest9);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest16 = new org.elasticsearch.action.bulk.BulkItemRequest((int) 'a', (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        java.lang.Throwable throwable18 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult19 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult20 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, false, throwable18, writeResult19);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult21 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult22 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, writeResult21);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException23 = bulkShardRequest9.validate();
        bulkShardRequest9.primaryTerm((long) '4');
        bulkShardRequest9.seqNo(98L);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest28 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        org.junit.Assert.assertNotNull(actionRequestValidationException23);
    }

    @Test
    public void test4077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4077");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result4 = null;
        org.elasticsearch.action.ActionRequest actionRequest8 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest8);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest10 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest9, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest10);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest10);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest14 = bulkShardRequest10.setShardId(shardId13);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest16 = bulkShardRequest10.setShardId(shardId15);
        bulkShardRequest16.setParentTask("index.uuid", (long) 97);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest21 = bulkShardRequest16.index("index.number_of_shards");
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 100, (org.elasticsearch.action.ActionRequest) bulkShardRequest21);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult23 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult24 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result4, (org.elasticsearch.action.ActionRequest) bulkShardRequest21, writeResult23);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest26 = bulkShardRequest21.index("current version [97] is different than the one provided [35]");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting28 = null;
        java.lang.Throwable throwable30 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting28, "", throwable30, "");
        org.elasticsearch.action.update.UpdateHelper.Result result33 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest34 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable36 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult37 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult38 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result33, (org.elasticsearch.action.ActionRequest) bulkShardRequest34, false, throwable36, writeResult37);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple39 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure32, (org.elasticsearch.transport.TransportMessage) bulkShardRequest34);
        org.elasticsearch.common.transport.TransportAddress transportAddress40 = bulkShardRequest34.remoteAddress();
        org.elasticsearch.action.support.IndicesOptions indicesOptions41 = bulkShardRequest34.indicesOptions();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException42 = bulkShardRequest34.validate();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult43 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult44 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest21, false, (java.lang.Throwable) actionRequestValidationException42, writeResult43);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting46 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting48 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting50 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting52 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting54 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting56 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result58 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest60 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest61 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest60);
        org.elasticsearch.action.update.UpdateHelper.Result result62 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest64 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest65 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest64);
        java.lang.Throwable throwable67 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult68 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult69 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result62, (org.elasticsearch.action.ActionRequest) bulkShardRequest64, false, throwable67, writeResult68);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple70 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest61, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest64);
        org.elasticsearch.tasks.TaskId taskId71 = null;
        bulkShardRequest64.setParentTask(taskId71);
        org.elasticsearch.index.shard.ShardId shardId73 = bulkShardRequest64.shardId();
        bulkShardRequest64.seqNo((long) 0);
        java.lang.Throwable throwable77 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult78 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult79 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result58, (org.elasticsearch.action.ActionRequest) bulkShardRequest64, false, throwable77, writeResult78);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException80 = bulkShardRequest64.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure82 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting56, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException80, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure84 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting54, "update", (java.lang.Throwable) actionRequestValidationException80, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure86 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting52, "_na_", (java.lang.Throwable) actionRequestValidationException80, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure88 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting50, "primary_terms", (java.lang.Throwable) actionRequestValidationException80, "delete");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure90 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting48, "current version [97] is different than the one provided [35]", (java.lang.Throwable) actionRequestValidationException80, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure92 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting46, "index.", (java.lang.Throwable) actionRequestValidationException80, "_na_");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult93 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult94 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest21, false, (java.lang.Throwable) actionRequestValidationException80, writeResult93);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure96 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete", (java.lang.Throwable) actionRequestValidationException80, "hi!");
        org.junit.Assert.assertNotNull(bulkShardRequest14);
        org.junit.Assert.assertNotNull(bulkShardRequest16);
        org.junit.Assert.assertNotNull(bulkShardRequest21);
        org.junit.Assert.assertNotNull(bulkShardRequest26);
        org.junit.Assert.assertNull(transportAddress40);
        org.junit.Assert.assertNotNull(indicesOptions41);
        org.junit.Assert.assertNotNull(actionRequestValidationException42);
        org.junit.Assert.assertNull(shardId73);
        org.junit.Assert.assertNotNull(actionRequestValidationException80);
    }

    @Test
    public void test4078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4078");
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest3 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest3);
        org.elasticsearch.action.update.UpdateHelper.Result result5 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult11 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult12 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result5, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, false, throwable10, writeResult11);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest7);
        java.lang.Throwable throwable15 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult16 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult17 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, true, throwable15, writeResult16);
        org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestReplicationRequest18 = updateResult17.request();
        bulkShardRequestReplicationRequest18.primaryTerm((long) 3);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest(0, (org.elasticsearch.action.ActionRequest) bulkShardRequestReplicationRequest18);
        org.junit.Assert.assertNotNull(bulkShardRequestReplicationRequest18);
    }

    @Test
    public void test4079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4079");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.ActionRequest actionRequest3 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest3);
        org.elasticsearch.action.ActionRequest actionRequest7 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest7);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple10 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest8, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest9);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest11 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest9);
        org.elasticsearch.action.update.UpdateHelper.Result result13 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result14 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest15 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable17 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult18 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult19 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result14, (org.elasticsearch.action.ActionRequest) bulkShardRequest15, false, throwable17, writeResult18);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult20 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult21 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result13, (org.elasticsearch.action.ActionRequest) bulkShardRequest15, writeResult20);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel22 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest23 = bulkShardRequest15.consistencyLevel(writeConsistencyLevel22);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple24 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest23);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest25 = new org.elasticsearch.action.bulk.BulkItemRequest(0, (org.elasticsearch.action.ActionRequest) bulkShardRequest23);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting28 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting30 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting32 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting34 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting36 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result38 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest40 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest41 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest40);
        org.elasticsearch.action.update.UpdateHelper.Result result42 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest44 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest45 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest44);
        java.lang.Throwable throwable47 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult48 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult49 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result42, (org.elasticsearch.action.ActionRequest) bulkShardRequest44, false, throwable47, writeResult48);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple50 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest41, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest44);
        org.elasticsearch.tasks.TaskId taskId51 = null;
        bulkShardRequest44.setParentTask(taskId51);
        org.elasticsearch.index.shard.ShardId shardId53 = bulkShardRequest44.shardId();
        bulkShardRequest44.seqNo((long) 0);
        java.lang.Throwable throwable57 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult58 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult59 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result38, (org.elasticsearch.action.ActionRequest) bulkShardRequest44, false, throwable57, writeResult58);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException60 = bulkShardRequest44.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure62 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting36, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException60, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure64 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting34, "update", (java.lang.Throwable) actionRequestValidationException60, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure66 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting32, "_na_", (java.lang.Throwable) actionRequestValidationException60, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure68 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting30, "index.blocks.metadata", (java.lang.Throwable) actionRequestValidationException60, "index.priority");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure70 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting28, "index.version.minimum_compatible", (java.lang.Throwable) actionRequestValidationException60, "_na_");
        org.elasticsearch.common.collect.Tuple<java.lang.String, org.elasticsearch.action.ActionRequestValidationException> strTuple71 = new org.elasticsearch.common.collect.Tuple<java.lang.String, org.elasticsearch.action.ActionRequestValidationException>("index.number_of_replicas", actionRequestValidationException60);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult72 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult73 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest23, true, (java.lang.Throwable) actionRequestValidationException60, writeResult72);
        org.junit.Assert.assertNotNull(bulkShardRequest23);
        org.junit.Assert.assertNull(shardId53);
        org.junit.Assert.assertNotNull(actionRequestValidationException60);
    }

    @Test
    public void test4080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4080");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters5 = indexMetaData0.includeFilters();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.action.update.UpdateHelper.Result result9 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult15 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult16 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result9, (org.elasticsearch.action.ActionRequest) bulkShardRequest11, false, throwable14, writeResult15);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest8, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest11);
        org.elasticsearch.index.VersionType versionType18 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean22 = versionType18.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple23 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest8, versionType18);
        boolean boolean27 = versionType18.isVersionConflictForWrites((long) 0, (long) (short) 0, false);
        boolean boolean28 = indexMetaData0.equals((java.lang.Object) boolean27);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters29 = indexMetaData0.getInitialRecoveryFilters();
        boolean boolean31 = indexMetaData0.isSameUUID("_na_");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder32 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.settings.Settings settings33 = indexMetaData0.getSettings();
        org.elasticsearch.common.settings.Settings settings34 = org.elasticsearch.cluster.metadata.IndexMetaData.addHumanReadableSettings(settings33);
        org.elasticsearch.transport.TransportService transportService35 = null;
        org.elasticsearch.cluster.service.ClusterService clusterService36 = null;
        org.elasticsearch.indices.IndicesService indicesService37 = null;
        org.elasticsearch.threadpool.ThreadPool threadPool38 = null;
        org.elasticsearch.cluster.action.shard.ShardStateAction shardStateAction39 = null;
        org.elasticsearch.cluster.action.index.MappingUpdatedAction mappingUpdatedAction40 = null;
        org.elasticsearch.action.update.UpdateHelper updateHelper41 = null;
        org.elasticsearch.action.support.ActionFilters actionFilters42 = null;
        org.elasticsearch.cluster.metadata.IndexNameExpressionResolver indexNameExpressionResolver43 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.bulk.TransportShardBulkAction transportShardBulkAction44 = new org.elasticsearch.action.bulk.TransportShardBulkAction(settings33, transportService35, clusterService36, indicesService37, threadPool38, shardStateAction39, mappingUpdatedAction40, updateHelper41, actionFilters42, indexNameExpressionResolver43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNull(discoveryNodeFilters5);
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(discoveryNodeFilters29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(settings33);
        org.junit.Assert.assertNotNull(settings34);
    }

    @Test
    public void test4081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4081");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting1 = null;
        java.lang.Throwable throwable3 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure5 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting1, "", throwable3, "");
        org.elasticsearch.action.update.UpdateHelper.Result result6 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult10 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult11 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result6, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, false, throwable9, writeResult10);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure5, (org.elasticsearch.transport.TransportMessage) bulkShardRequest7);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest14 = bulkShardRequest7.index("index.version.created");
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = bulkShardRequest7.remoteAddress();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest16 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.action.update.UpdateHelper.Result result17 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest19 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest20 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest19);
        org.elasticsearch.action.update.UpdateHelper.Result result21 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest23 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest24 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest23);
        java.lang.Throwable throwable26 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult27 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult28 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result21, (org.elasticsearch.action.ActionRequest) bulkShardRequest23, false, throwable26, writeResult27);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple29 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest20, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest23);
        org.elasticsearch.tasks.TaskId taskId30 = null;
        bulkShardRequest23.setParentTask(taskId30);
        org.elasticsearch.index.shard.ShardId shardId32 = bulkShardRequest23.shardId();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult33 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult34 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result17, (org.elasticsearch.action.ActionRequest) bulkShardRequest23, writeResult33);
        org.elasticsearch.common.unit.TimeValue timeValue35 = bulkShardRequest23.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest36 = bulkShardRequest7.timeout(timeValue35);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData37 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder38 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData37);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap39 = indexMetaData37.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet40 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple41 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData37, indexShardStateSet40);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters42 = indexMetaData37.includeFilters();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest44 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest45 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest44);
        org.elasticsearch.action.update.UpdateHelper.Result result46 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest48 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest49 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest48);
        java.lang.Throwable throwable51 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult52 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult53 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result46, (org.elasticsearch.action.ActionRequest) bulkShardRequest48, false, throwable51, writeResult52);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple54 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest45, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest48);
        org.elasticsearch.index.VersionType versionType55 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean59 = versionType55.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple60 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest45, versionType55);
        boolean boolean64 = versionType55.isVersionConflictForWrites((long) 0, (long) (short) 0, false);
        boolean boolean65 = indexMetaData37.equals((java.lang.Object) boolean64);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder66 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData37);
        long long67 = indexMetaData37.getCreationDate();
        org.elasticsearch.Version version68 = indexMetaData37.getCreationVersion();
        boolean boolean70 = indexMetaData37.equals((java.lang.Object) "_na_");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder71 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData37);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap72 = indexMetaData37.getActiveAllocationIds();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.unit.TimeValue, org.elasticsearch.common.xcontent.ToXContent> timeValueTuple73 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.unit.TimeValue, org.elasticsearch.common.xcontent.ToXContent>(timeValue35, (org.elasticsearch.common.xcontent.ToXContent) indexMetaData37);
        org.elasticsearch.cluster.metadata.IndexMetaData.State state74 = indexMetaData37.getState();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder75 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData37);
        org.junit.Assert.assertNotNull(bulkShardRequest14);
        org.junit.Assert.assertNull(transportAddress15);
        org.junit.Assert.assertNull(shardId32);
        org.junit.Assert.assertNotNull(timeValue35);
        org.junit.Assert.assertNotNull(bulkShardRequest36);
        org.junit.Assert.assertNotNull(indexMetaData37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap39);
        org.junit.Assert.assertNotNull(indexShardStateSet40);
        org.junit.Assert.assertNull(discoveryNodeFilters42);
        org.junit.Assert.assertNotNull(versionType55);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + (-1L) + "'", long67 == (-1L));
        org.junit.Assert.assertNotNull(version68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap72);
        org.junit.Assert.assertTrue("'" + state74 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state74.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
    }

    @Test
    public void test4082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4082");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.ActionRequest actionRequest3 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest3);
        org.elasticsearch.action.ActionRequest actionRequest7 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest7);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple10 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest8, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest9);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest11 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest9);
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = null;
        bulkShardRequest9.remoteAddress(transportAddress13);
        org.elasticsearch.action.update.UpdateHelper.Result result15 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest16 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue17 = bulkShardRequest16.timeout();
        java.lang.String str18 = bulkShardRequest16.index();
        org.elasticsearch.common.unit.TimeValue timeValue19 = bulkShardRequest16.timeout();
        org.elasticsearch.cluster.routing.ShardRouting shardRouting21 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting23 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result25 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest27 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest28 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest27);
        org.elasticsearch.action.update.UpdateHelper.Result result29 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest31 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest32 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest31);
        java.lang.Throwable throwable34 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult35 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult36 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result29, (org.elasticsearch.action.ActionRequest) bulkShardRequest31, false, throwable34, writeResult35);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple37 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest28, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest31);
        org.elasticsearch.tasks.TaskId taskId38 = null;
        bulkShardRequest31.setParentTask(taskId38);
        org.elasticsearch.index.shard.ShardId shardId40 = bulkShardRequest31.shardId();
        bulkShardRequest31.seqNo((long) 0);
        java.lang.Throwable throwable44 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult45 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult46 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result25, (org.elasticsearch.action.ActionRequest) bulkShardRequest31, false, throwable44, writeResult45);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException47 = bulkShardRequest31.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure49 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting23, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException47, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure51 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting21, "update", (java.lang.Throwable) actionRequestValidationException47, "index.version.created_string");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult52 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult53 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result15, (org.elasticsearch.action.ActionRequest) bulkShardRequest16, false, (java.lang.Throwable) actionRequestValidationException47, writeResult52);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.transport.TransportRequest, java.lang.RuntimeException> transportRequestTuple54 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.transport.TransportRequest, java.lang.RuntimeException>((org.elasticsearch.transport.TransportRequest) bulkShardRequest9, (java.lang.RuntimeException) actionRequestValidationException47);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure56 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "current version [52] is different than the one provided [32]", (java.lang.Throwable) actionRequestValidationException47, "current version [52] is different than the one provided [32]");
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertNull(shardId40);
        org.junit.Assert.assertNotNull(actionRequestValidationException47);
    }

    @Test
    public void test4083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4083");
        org.elasticsearch.action.ActionRequest actionRequest2 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest3 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest2);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple5 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest4);
        boolean boolean6 = bulkShardRequest4.getShouldPersistResult();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = bulkShardRequest4.setShardId(shardId7);
        org.elasticsearch.action.support.IndicesOptions indicesOptions9 = bulkShardRequest4.indicesOptions();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest10 = new org.elasticsearch.action.bulk.BulkItemRequest(0, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest13 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest13);
        org.elasticsearch.action.update.UpdateHelper.Result result15 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest17 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest18 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest17);
        java.lang.Throwable throwable20 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult21 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult22 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result15, (org.elasticsearch.action.ActionRequest) bulkShardRequest17, false, throwable20, writeResult21);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple23 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest14, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest17);
        org.elasticsearch.action.ActionRequest actionRequest25 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest26 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest25);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest27 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple28 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest26, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest27);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple29 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest14, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest27);
        org.elasticsearch.action.update.UpdateHelper.Result result30 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest32 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest33 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest32);
        java.lang.Throwable throwable35 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult36 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult37 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result30, (org.elasticsearch.action.ActionRequest) bulkShardRequest32, false, throwable35, writeResult36);
        org.elasticsearch.action.update.UpdateHelper.Result result38 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest40 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest41 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest40);
        org.elasticsearch.action.update.UpdateHelper.Result result42 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest44 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest45 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest44);
        java.lang.Throwable throwable47 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult48 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult49 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result42, (org.elasticsearch.action.ActionRequest) bulkShardRequest44, false, throwable47, writeResult48);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple50 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest41, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest44);
        java.lang.Throwable throwable52 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult53 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult54 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result38, (org.elasticsearch.action.ActionRequest) bulkShardRequest44, true, throwable52, writeResult53);
        org.elasticsearch.index.shard.ShardId shardId55 = bulkShardRequest44.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue56 = bulkShardRequest44.timeout();
        org.elasticsearch.tasks.TaskId taskId57 = bulkShardRequest44.getParentTask();
        bulkShardRequest32.setParentTask(taskId57);
        bulkShardRequest27.setParentTask(taskId57);
        org.elasticsearch.tasks.TaskId taskId60 = bulkShardRequest27.getParentTask();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel61 = bulkShardRequest27.consistencyLevel();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest62 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 2, (org.elasticsearch.action.ActionRequest) bulkShardRequest27);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple63 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest10, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest27);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest64 = bulkItemRequestTuple63.v1();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(bulkShardRequest8);
        org.junit.Assert.assertNotNull(indicesOptions9);
        org.junit.Assert.assertNull(shardId55);
        org.junit.Assert.assertNotNull(timeValue56);
        org.junit.Assert.assertNotNull(taskId57);
        org.junit.Assert.assertNotNull(taskId60);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel61 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel61.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(bulkItemRequest64);
    }

    @Test
    public void test4084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4084");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters5 = indexMetaData0.includeFilters();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.action.update.UpdateHelper.Result result9 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult15 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult16 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result9, (org.elasticsearch.action.ActionRequest) bulkShardRequest11, false, throwable14, writeResult15);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest8, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest11);
        org.elasticsearch.index.VersionType versionType18 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean22 = versionType18.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple23 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest8, versionType18);
        boolean boolean27 = versionType18.isVersionConflictForWrites((long) 0, (long) (short) 0, false);
        boolean boolean28 = indexMetaData0.equals((java.lang.Object) boolean27);
        int int29 = indexMetaData0.getNumberOfReplicas();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state30 = indexMetaData0.getState();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData31 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder33 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder34 = builder33.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder36 = builder34.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder39 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int40 = builder39.numberOfShards();
        java.lang.String[] strArray44 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet45 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet45, strArray44);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder47 = builder39.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet45);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder48 = builder34.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet45);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple49 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData31, (java.lang.Iterable<java.lang.String>) strSet45);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap50 = indexMetaData31.getAliases();
        int int51 = indexMetaData31.getNumberOfShards();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters52 = indexMetaData31.excludeFilters();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap53 = indexMetaData31.getAliases();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff54 = indexMetaData0.diff(indexMetaData31);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters55 = indexMetaData31.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder56 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData31);
        long long57 = indexMetaData31.getCreationDate();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData59 = indexMetaData31.mappingOrDefault("update");
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNull(discoveryNodeFilters5);
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + state30 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state30.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertNotNull(indexMetaData31);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple49);
        org.junit.Assert.assertNotNull(strImmutableOpenMap50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNull(discoveryNodeFilters52);
        org.junit.Assert.assertNotNull(strImmutableOpenMap53);
        org.junit.Assert.assertNotNull(indexMetaDataDiff54);
        org.junit.Assert.assertNull(discoveryNodeFilters55);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-1L) + "'", long57 == (-1L));
        org.junit.Assert.assertNull(mappingMetaData59);
    }

    @Test
    public void test4085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4085");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters5 = indexMetaData0.includeFilters();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.action.update.UpdateHelper.Result result9 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult15 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult16 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result9, (org.elasticsearch.action.ActionRequest) bulkShardRequest11, false, throwable14, writeResult15);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest8, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest11);
        org.elasticsearch.index.VersionType versionType18 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean22 = versionType18.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple23 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest8, versionType18);
        boolean boolean27 = versionType18.isVersionConflictForWrites((long) 0, (long) (short) 0, false);
        boolean boolean28 = indexMetaData0.equals((java.lang.Object) boolean27);
        org.apache.lucene.util.Version version29 = indexMetaData0.getMinimumCompatibleVersion();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters30 = indexMetaData0.getInitialRecoveryFilters();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters31 = indexMetaData0.includeFilters();
        boolean boolean33 = indexMetaData0.isSameUUID("current version [97] is different than the one provided [97]");
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters34 = indexMetaData0.includeFilters();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNull(discoveryNodeFilters5);
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(version29);
        org.junit.Assert.assertNull(discoveryNodeFilters30);
        org.junit.Assert.assertNull(discoveryNodeFilters31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(discoveryNodeFilters34);
    }

    @Test
    public void test4086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4086");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest3 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest3);
        org.elasticsearch.action.update.UpdateHelper.Result result5 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult11 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult12 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result5, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, false, throwable10, writeResult11);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest7);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = new org.elasticsearch.action.bulk.BulkItemRequest((int) 'a', (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        java.lang.Throwable throwable16 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult17 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult18 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, false, throwable16, writeResult17);
        boolean boolean19 = updateResult18.success();
        boolean boolean20 = updateResult18.success();
        boolean boolean21 = updateResult18.failure();
        boolean boolean22 = updateResult18.success();
        boolean boolean23 = updateResult18.retry;
        java.lang.Throwable throwable24 = updateResult18.error;
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(throwable24);
    }

    @Test
    public void test4087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4087");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters5 = indexMetaData0.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData7 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData7);
        org.elasticsearch.Version version9 = indexMetaData7.getCreationVersion();
        long long10 = indexMetaData7.getCreationDate();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData12 = indexMetaData7.mappingOrDefault("index.");
        long long13 = indexMetaData7.getCreationDate();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff14 = indexMetaData0.diff(indexMetaData7);
        boolean boolean16 = indexMetaData7.isSameUUID("current version [-1] is higher than the one provided [0]");
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNull(discoveryNodeFilters5);
        org.junit.Assert.assertNotNull(indexMetaData7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(version9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNull(mappingMetaData12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(indexMetaDataDiff14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test4088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4088");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        org.elasticsearch.action.update.UpdateHelper.Result result7 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest10 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        java.lang.Throwable throwable12 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult13 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult14 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result7, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, false, throwable12, writeResult13);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple15 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest6, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest9);
        org.elasticsearch.tasks.TaskId taskId16 = null;
        bulkShardRequest9.setParentTask(taskId16);
        org.elasticsearch.index.shard.ShardId shardId18 = bulkShardRequest9.shardId();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult19 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult20 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, writeResult19);
        long long21 = bulkShardRequest9.primaryTerm();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = new org.elasticsearch.action.bulk.BulkItemRequest((int) 'a', (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = bulkShardRequest9.consistencyLevel();
        org.elasticsearch.cluster.routing.ShardRouting shardRouting25 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting27 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result29 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest31 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest32 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest31);
        org.elasticsearch.action.update.UpdateHelper.Result result33 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest35 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest36 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest35);
        java.lang.Throwable throwable38 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult39 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult40 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result33, (org.elasticsearch.action.ActionRequest) bulkShardRequest35, false, throwable38, writeResult39);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple41 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest32, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest35);
        org.elasticsearch.tasks.TaskId taskId42 = null;
        bulkShardRequest35.setParentTask(taskId42);
        org.elasticsearch.index.shard.ShardId shardId44 = bulkShardRequest35.shardId();
        bulkShardRequest35.seqNo((long) 0);
        java.lang.Throwable throwable48 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult49 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult50 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result29, (org.elasticsearch.action.ActionRequest) bulkShardRequest35, false, throwable48, writeResult49);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException51 = bulkShardRequest35.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure53 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting27, "index.number_of_shards", (java.lang.Throwable) actionRequestValidationException51, "update");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure55 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting25, "index.uuid", (java.lang.Throwable) actionRequestValidationException51, "index.blocks.metadata");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult56 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult57 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, false, (java.lang.Throwable) actionRequestValidationException51, writeResult56);
        org.elasticsearch.action.update.UpdateHelper.Result result58 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest60 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest61 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest60);
        org.elasticsearch.action.update.UpdateHelper.Result result62 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest64 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest65 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest64);
        java.lang.Throwable throwable67 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult68 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult69 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result62, (org.elasticsearch.action.ActionRequest) bulkShardRequest64, false, throwable67, writeResult68);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple70 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest61, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest64);
        java.lang.Throwable throwable72 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult73 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult74 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result58, (org.elasticsearch.action.ActionRequest) bulkShardRequest64, true, throwable72, writeResult73);
        org.elasticsearch.index.shard.ShardId shardId75 = bulkShardRequest64.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue76 = bulkShardRequest64.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest77 = bulkShardRequest9.timeout(timeValue76);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult78 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult79 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, writeResult78);
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(shardId44);
        org.junit.Assert.assertNotNull(actionRequestValidationException51);
        org.junit.Assert.assertNull(shardId75);
        org.junit.Assert.assertNotNull(timeValue76);
        org.junit.Assert.assertNotNull(bulkShardRequest77);
    }

    @Test
    public void test4089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4089");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest3 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest3);
        org.elasticsearch.action.update.UpdateHelper.Result result5 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult11 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult12 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result5, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, false, throwable10, writeResult11);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest7);
        org.elasticsearch.tasks.TaskId taskId14 = null;
        bulkShardRequest7.setParentTask(taskId14);
        org.elasticsearch.index.shard.ShardId shardId16 = bulkShardRequest7.shardId();
        bulkShardRequest7.seqNo((long) 0);
        java.lang.Throwable throwable20 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult21 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult22 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, false, throwable20, writeResult21);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException23 = bulkShardRequest7.validate();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult24 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult25 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, writeResult24);
        org.elasticsearch.action.update.UpdateHelper.Result result26 = updateResult25.result;
        boolean boolean27 = updateResult25.success();
        boolean boolean28 = updateResult25.success();
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertNotNull(actionRequestValidationException23);
        org.junit.Assert.assertNull(result26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test4090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4090");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData1 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData1);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap3 = indexMetaData1.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters4 = indexMetaData1.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff5 = indexMetaData0.diff(indexMetaData1);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters6 = indexMetaData1.requireFilters();
        org.elasticsearch.Version version7 = indexMetaData1.getUpgradedVersion();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters8 = indexMetaData1.getInitialRecoveryFilters();
        boolean boolean10 = indexMetaData1.isSameUUID("");
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.IndexMetaData.Custom> strImmutableOpenMap11 = indexMetaData1.getCustoms();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData13 = indexMetaData1.mappingOrDefault("index.blocks.metadata");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder14 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData1);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(indexMetaData1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap3);
        org.junit.Assert.assertNull(discoveryNodeFilters4);
        org.junit.Assert.assertNotNull(indexMetaDataDiff5);
        org.junit.Assert.assertNull(discoveryNodeFilters6);
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertNull(discoveryNodeFilters8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strImmutableOpenMap11);
        org.junit.Assert.assertNull(mappingMetaData13);
        org.junit.Assert.assertNotNull(builder14);
    }

    @Test
    public void test4091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4091");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData1 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData1);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap3 = indexMetaData1.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters4 = indexMetaData1.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff5 = indexMetaData0.diff(indexMetaData1);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters6 = indexMetaData1.requireFilters();
        org.elasticsearch.Version version7 = indexMetaData1.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings8 = indexMetaData1.getSettings();
        java.lang.String str9 = indexMetaData1.getIndexUUID();
        int int10 = indexMetaData1.getTotalNumberOfShards();
        org.elasticsearch.index.Index index11 = indexMetaData1.getMergeSourceIndex();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput12 = null;
        // The following exception was thrown during execution in test generation
        try {
            indexMetaData1.writeTo(streamOutput12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(indexMetaData1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap3);
        org.junit.Assert.assertNull(discoveryNodeFilters4);
        org.junit.Assert.assertNotNull(indexMetaDataDiff5);
        org.junit.Assert.assertNull(discoveryNodeFilters6);
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertNotNull(settings8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_na_" + "'", str9, "_na_");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNull(index11);
    }

    @Test
    public void test4092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4092");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData6 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData6);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap8 = indexMetaData6.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet9 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple10 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData6, indexShardStateSet9);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters11 = indexMetaData6.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder12 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData6);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff13 = indexMetaData0.diff(indexMetaData6);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData14 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder16.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder19 = builder17.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder22 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int23 = builder22.numberOfShards();
        java.lang.String[] strArray27 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet28 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet28, strArray27);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder30 = builder22.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet28);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder31 = builder17.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet28);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple32 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData14, (java.lang.Iterable<java.lang.String>) strSet28);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap33 = indexMetaData14.getAliases();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff34 = indexMetaData0.diff(indexMetaData14);
        org.elasticsearch.cluster.metadata.IndexMetaData.State state35 = indexMetaData14.getState();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder36 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData14);
        org.apache.lucene.util.Version version37 = indexMetaData14.getMinimumCompatibleVersion();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNotNull(indexMetaData6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap8);
        org.junit.Assert.assertNotNull(indexShardStateSet9);
        org.junit.Assert.assertNull(discoveryNodeFilters11);
        org.junit.Assert.assertNotNull(indexMetaDataDiff13);
        org.junit.Assert.assertNotNull(indexMetaData14);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple32);
        org.junit.Assert.assertNotNull(strImmutableOpenMap33);
        org.junit.Assert.assertNotNull(indexMetaDataDiff34);
        org.junit.Assert.assertTrue("'" + state35 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state35.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNull(version37);
    }

    @Test
    public void test4093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4093");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result4 = null;
        org.elasticsearch.action.ActionRequest actionRequest5 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting7 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting9 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting11 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting13 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting15 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result17 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest19 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest20 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest19);
        org.elasticsearch.action.update.UpdateHelper.Result result21 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest23 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest24 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest23);
        java.lang.Throwable throwable26 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult27 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult28 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result21, (org.elasticsearch.action.ActionRequest) bulkShardRequest23, false, throwable26, writeResult27);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple29 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest20, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest23);
        org.elasticsearch.tasks.TaskId taskId30 = null;
        bulkShardRequest23.setParentTask(taskId30);
        org.elasticsearch.index.shard.ShardId shardId32 = bulkShardRequest23.shardId();
        bulkShardRequest23.seqNo((long) 0);
        java.lang.Throwable throwable36 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult37 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult38 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result17, (org.elasticsearch.action.ActionRequest) bulkShardRequest23, false, throwable36, writeResult37);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException39 = bulkShardRequest23.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure41 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting15, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException39, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure43 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting13, "update", (java.lang.Throwable) actionRequestValidationException39, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure45 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting11, "_na_", (java.lang.Throwable) actionRequestValidationException39, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure47 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting9, "_na_", (java.lang.Throwable) actionRequestValidationException39, "index.version.upgraded");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure49 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting7, "index.blocks.metadata", (java.lang.Throwable) actionRequestValidationException39, "update");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult50 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult51 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result4, actionRequest5, true, (java.lang.Throwable) actionRequestValidationException39, writeResult50);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure53 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "index.creation_date", (java.lang.Throwable) actionRequestValidationException39, "index.");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure55 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "index.blocks.read", (java.lang.Throwable) actionRequestValidationException39, "index.priority");
        java.lang.String str56 = shardFailure55.indexUUID;
        org.junit.Assert.assertNull(shardId32);
        org.junit.Assert.assertNotNull(actionRequestValidationException39);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "index.priority" + "'", str56, "index.priority");
    }

    @Test
    public void test4094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4094");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder2.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder3.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int9 = builder8.numberOfShards();
        java.lang.String[] strArray13 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder8.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder3.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple18 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData0, (java.lang.Iterable<java.lang.String>) strSet14);
        long long19 = indexMetaData0.getCreationDate();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder20 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder22 = builder20.removeAlias("index.auto_expand_replicas");
        org.elasticsearch.cluster.metadata.IndexMetaData.Custom custom24 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder25 = builder20.putCustom("index.version.upgraded_string", custom24);
        long long26 = builder20.version();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData28 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder29 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData28);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap30 = indexMetaData28.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters31 = indexMetaData28.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder32 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData28);
        org.apache.lucene.util.Version version33 = indexMetaData28.getMinimumCompatibleVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData34 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder35 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData34);
        org.elasticsearch.Version version36 = indexMetaData34.getCreationVersion();
        long long37 = indexMetaData34.getCreationDate();
        long long38 = indexMetaData34.getCreationDate();
        java.util.Set<java.lang.String> strSet40 = null; // flaky: indexMetaData34.activeAllocationIds((int) (byte) 3);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData42 = indexMetaData34.mapping("hi!");
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff43 = indexMetaData28.diff(indexMetaData34);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder45 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int46 = builder45.numberOfShards();
        java.lang.String[] strArray50 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet51 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet51, strArray50);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder53 = builder45.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet51);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder55 = builder53.numberOfReplicas((int) (byte) -1);
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet57 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.action.ActionRequest actionRequest59 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest60 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest59);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest61 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple62 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest60, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest61);
        boolean boolean63 = bulkShardRequest61.getShouldPersistResult();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder65 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int66 = builder65.numberOfShards();
        java.lang.String[] strArray70 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet71 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet71, strArray70);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder73 = builder65.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet71);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>> streamableTuple74 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>>((org.elasticsearch.common.io.stream.Streamable) bulkShardRequest61, strSet71);
        org.elasticsearch.common.collect.Tuple<java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>, java.lang.Iterable<java.lang.String>> indexShardStateSetTuple75 = new org.elasticsearch.common.collect.Tuple<java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>, java.lang.Iterable<java.lang.String>>(indexShardStateSet57, (java.lang.Iterable<java.lang.String>) strSet71);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder76 = builder53.putActiveAllocationIds((int) (byte) 10, (java.util.Set<java.lang.String>) strSet71);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Cloneable> indexMetaDataDiffTuple77 = org.elasticsearch.common.collect.Tuple.tuple(indexMetaDataDiff43, (java.lang.Cloneable) strSet71);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder78 = builder20.putActiveAllocationIds(0, (java.util.Set<java.lang.String>) strSet71);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder80 = builder20.creationDate((long) (short) 100);
        // The following exception was thrown during execution in test generation
        try {
            long long82 = builder20.primaryTerm((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 97");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1L + "'", long26 == 1L);
        org.junit.Assert.assertNotNull(indexMetaData28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap30);
        org.junit.Assert.assertNull(discoveryNodeFilters31);
        org.junit.Assert.assertNull(version33);
        org.junit.Assert.assertNotNull(indexMetaData34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(version36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNull(strSet40);
        org.junit.Assert.assertNull(mappingMetaData42);
        org.junit.Assert.assertNotNull(indexMetaDataDiff43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(indexShardStateSet57);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(indexMetaDataDiffTuple77);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(builder80);
    }

    @Test
    public void test4095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4095");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        java.lang.String str2 = builder1.index();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int5 = builder4.numberOfShards();
        java.lang.String[] strArray9 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet10 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet10, strArray9);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder12 = builder4.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet10);
        org.elasticsearch.cluster.metadata.IndexMetaData.State state13 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder14 = builder12.state(state13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder12.removeAlias("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData17 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder18 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData17);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap19 = indexMetaData17.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet20 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple21 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData17, indexShardStateSet20);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters22 = indexMetaData17.includeFilters();
        org.elasticsearch.common.settings.Settings settings23 = indexMetaData17.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder24 = builder12.settings(settings23);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder25 = builder1.settings(settings23);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder27 = builder25.numberOfReplicas((int) (byte) 0);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(indexMetaData17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap19);
        org.junit.Assert.assertNotNull(indexShardStateSet20);
        org.junit.Assert.assertNull(discoveryNodeFilters22);
        org.junit.Assert.assertNotNull(settings23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
    }

    @Test
    public void test4096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4096");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder2.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder3.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int9 = builder8.numberOfShards();
        java.lang.String[] strArray13 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder8.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder3.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple18 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData0, (java.lang.Iterable<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap19 = indexMetaData0.getAliases();
        int int20 = indexMetaData0.getNumberOfShards();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.IndexMetaData.Custom> strImmutableOpenMap21 = indexMetaData0.getCustoms();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters22 = indexMetaData0.requireFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state23 = indexMetaData0.getState();
        byte byte24 = state23.id();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple18);
        org.junit.Assert.assertNotNull(strImmutableOpenMap19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(strImmutableOpenMap21);
        org.junit.Assert.assertNull(discoveryNodeFilters22);
        org.junit.Assert.assertTrue("'" + state23 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state23.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertTrue("'" + byte24 + "' != '" + (byte) 0 + "'", byte24 == (byte) 0);
    }

    @Test
    public void test4097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4097");
        org.elasticsearch.action.ActionRequest actionRequest1 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest1);
        org.elasticsearch.action.ActionRequest actionRequest5 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest5);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple8 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest6, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest7);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple10 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest7);
        org.elasticsearch.action.update.UpdateHelper.Result result11 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result12 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest13 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable15 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult16 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult17 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result12, (org.elasticsearch.action.ActionRequest) bulkShardRequest13, false, throwable15, writeResult16);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult18 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult19 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result11, (org.elasticsearch.action.ActionRequest) bulkShardRequest13, writeResult18);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest21 = bulkShardRequest13.consistencyLevel(writeConsistencyLevel20);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple22 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest21);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str23 = bulkItemRequestTuple22.toString();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(bulkShardRequest21);
    }

    @Test
    public void test4098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4098");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.Version version2 = indexMetaData0.getCreationVersion();
        long long3 = indexMetaData0.getCreationDate();
        long long4 = indexMetaData0.getCreationDate();
        java.util.Set<java.lang.String> strSet6 = null; // flaky: indexMetaData0.activeAllocationIds((int) (byte) 3);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData7 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData7);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap9 = indexMetaData7.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet10 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData7, indexShardStateSet10);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters12 = indexMetaData7.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff13 = indexMetaData0.diff(indexMetaData7);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData15 = indexMetaData0.mapping("");
        boolean boolean17 = indexMetaData0.isSameUUID("index.creation_date_string");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder18 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData20 = builder18.mapping("index.blocks.read");
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData21 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder22 = builder18.putMapping(mappingMetaData21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(version2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(strSet6);
        org.junit.Assert.assertNotNull(indexMetaData7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap9);
        org.junit.Assert.assertNotNull(indexShardStateSet10);
        org.junit.Assert.assertNull(discoveryNodeFilters12);
        org.junit.Assert.assertNotNull(indexMetaDataDiff13);
        org.junit.Assert.assertNull(mappingMetaData15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(mappingMetaData20);
    }

    @Test
    public void test4099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4099");
        org.elasticsearch.action.ActionRequest actionRequest2 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest3 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest2);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple5 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest4);
        boolean boolean6 = bulkShardRequest4.getShouldPersistResult();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = bulkShardRequest4.setShardId(shardId7);
        bulkShardRequest8.primaryTerm((long) (byte) 100);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest11 = new org.elasticsearch.action.bulk.BulkItemRequest((int) '4', (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.action.ActionRequest actionRequest15 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest16 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest15);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest17 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple18 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest16, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest17);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest19 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest17);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest21 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest21);
        org.elasticsearch.action.update.UpdateHelper.Result result23 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest25 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest26 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest25);
        java.lang.Throwable throwable28 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult29 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult30 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result23, (org.elasticsearch.action.ActionRequest) bulkShardRequest25, false, throwable28, writeResult29);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple31 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest22, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest25);
        org.elasticsearch.action.ActionRequest actionRequest33 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest34 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest33);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest35 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple36 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest34, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest35);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple37 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest22, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest35);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple38 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest19, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest35);
        bulkShardRequest35.setParentTask("index.version.created", (long) (byte) 1);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest42 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 10, (org.elasticsearch.action.ActionRequest) bulkShardRequest35);
        org.elasticsearch.action.ActionRequest actionRequest43 = bulkItemRequest42.request();
        org.elasticsearch.action.ActionRequest actionRequest46 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest47 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest46);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest48 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple49 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest47, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest48);
        boolean boolean50 = bulkShardRequest48.getShouldPersistResult();
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest52 = bulkShardRequest48.setShardId(shardId51);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest53 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest48);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest55 = bulkShardRequest48.index("index.priority");
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple56 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest42, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest55);
        org.elasticsearch.action.ActionRequest actionRequest60 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest61 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest60);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest62 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple63 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest61, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest62);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest64 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest62);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest65 = new org.elasticsearch.action.bulk.BulkItemRequest((int) '#', (org.elasticsearch.action.ActionRequest) bulkShardRequest62);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple66 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest42, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest62);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple67 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest11, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest62);
        org.elasticsearch.common.io.stream.StreamInput streamInput68 = null;
        // The following exception was thrown during execution in test generation
        try {
            bulkItemRequest11.readFrom(streamInput68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(bulkShardRequest8);
        org.junit.Assert.assertNotNull(actionRequest43);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(bulkShardRequest52);
        org.junit.Assert.assertNotNull(bulkShardRequest55);
    }

    @Test
    public void test4100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4100");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        int int6 = indexMetaData0.getTotalNumberOfShards();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state7 = indexMetaData0.getState();
        byte byte8 = state7.id();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + state7 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state7.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertTrue("'" + byte8 + "' != '" + (byte) 0 + "'", byte8 == (byte) 0);
    }

    @Test
    public void test4101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4101");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.Version version6 = indexMetaData0.getUpgradedVersion();
        org.elasticsearch.common.settings.Settings settings7 = indexMetaData0.getSettings();
        org.apache.lucene.util.Version version8 = indexMetaData0.getMinimumCompatibleVersion();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNotNull(version6);
        org.junit.Assert.assertNotNull(settings7);
        org.junit.Assert.assertNull(version8);
    }

    @Test
    public void test4102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4102");
        org.elasticsearch.action.ActionRequest actionRequest3 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest3);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple6 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest10 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        org.elasticsearch.action.update.UpdateHelper.Result result11 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest13 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest13);
        java.lang.Throwable throwable16 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult17 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult18 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result11, (org.elasticsearch.action.ActionRequest) bulkShardRequest13, false, throwable16, writeResult17);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple19 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest10, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest13);
        org.elasticsearch.action.ActionRequest actionRequest21 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest21);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest23 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple24 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest22, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest23);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple25 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest10, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest23);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple26 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest7, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest23);
        bulkShardRequest23.setParentTask("index.version.created", (long) (byte) 1);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest30 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 10, (org.elasticsearch.action.ActionRequest) bulkShardRequest23);
        org.elasticsearch.action.update.UpdateHelper.Result result32 = null;
        org.elasticsearch.action.ActionRequest actionRequest36 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest37 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest36);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest38 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple39 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest37, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest38);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest40 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest38);
        org.elasticsearch.action.ActionRequest actionRequest42 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest43 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest42);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest44 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple45 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest43, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest44);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple46 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest40, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest44);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest47 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue48 = bulkShardRequest47.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest49 = bulkShardRequest44.timeout(timeValue48);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest50 = new org.elasticsearch.action.bulk.BulkItemRequest((-1), (org.elasticsearch.action.ActionRequest) bulkShardRequest49);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult51 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult52 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result32, (org.elasticsearch.action.ActionRequest) bulkShardRequest49, writeResult51);
        org.elasticsearch.action.update.UpdateHelper.Result result53 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest55 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest56 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest55);
        org.elasticsearch.action.update.UpdateHelper.Result result57 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest59 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest60 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest59);
        java.lang.Throwable throwable62 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult63 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult64 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result57, (org.elasticsearch.action.ActionRequest) bulkShardRequest59, false, throwable62, writeResult63);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple65 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest56, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest59);
        java.lang.Throwable throwable67 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult68 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult69 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result53, (org.elasticsearch.action.ActionRequest) bulkShardRequest59, true, throwable67, writeResult68);
        org.elasticsearch.index.shard.ShardId shardId70 = bulkShardRequest59.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue71 = bulkShardRequest59.timeout();
        org.elasticsearch.tasks.TaskId taskId72 = bulkShardRequest59.getParentTask();
        bulkShardRequest49.setParentTask(taskId72);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest74 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 10, (org.elasticsearch.action.ActionRequest) bulkShardRequest49);
        org.elasticsearch.action.ActionRequest actionRequest76 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest77 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest76);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest78 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple79 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest77, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest78);
        org.elasticsearch.common.transport.TransportAddress transportAddress80 = null;
        bulkShardRequest78.remoteAddress(transportAddress80);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel82 = bulkShardRequest78.consistencyLevel();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest83 = bulkShardRequest49.consistencyLevel(writeConsistencyLevel82);
        org.elasticsearch.tasks.TaskId taskId84 = bulkShardRequest83.getParentTask();
        org.elasticsearch.tasks.TaskId taskId85 = bulkShardRequest83.getParentTask();
        bulkShardRequest23.setParentTask(taskId85);
        org.elasticsearch.index.shard.ShardId shardId87 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest88 = bulkShardRequest23.setShardId(shardId87);
        org.elasticsearch.common.unit.TimeValue timeValue89 = bulkShardRequest88.timeout();
        bulkShardRequest88.primaryTerm((long) (byte) 10);
        org.junit.Assert.assertNotNull(timeValue48);
        org.junit.Assert.assertNotNull(bulkShardRequest49);
        org.junit.Assert.assertNull(shardId70);
        org.junit.Assert.assertNotNull(timeValue71);
        org.junit.Assert.assertNotNull(taskId72);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel82 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel82.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(bulkShardRequest83);
        org.junit.Assert.assertNotNull(taskId84);
        org.junit.Assert.assertNotNull(taskId85);
        org.junit.Assert.assertNotNull(bulkShardRequest88);
        org.junit.Assert.assertNotNull(timeValue89);
    }

    @Test
    public void test4103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4103");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData3 = indexMetaData0.mapping("_na_");
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters4 = indexMetaData0.getInitialRecoveryFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state5 = indexMetaData0.getState();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder7 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result8 = null;
        org.elasticsearch.action.ActionRequest actionRequest9 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting11 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting13 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting15 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting17 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting19 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result21 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest23 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest24 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest23);
        org.elasticsearch.action.update.UpdateHelper.Result result25 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest27 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest28 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest27);
        java.lang.Throwable throwable30 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult31 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult32 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result25, (org.elasticsearch.action.ActionRequest) bulkShardRequest27, false, throwable30, writeResult31);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple33 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest24, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest27);
        org.elasticsearch.tasks.TaskId taskId34 = null;
        bulkShardRequest27.setParentTask(taskId34);
        org.elasticsearch.index.shard.ShardId shardId36 = bulkShardRequest27.shardId();
        bulkShardRequest27.seqNo((long) 0);
        java.lang.Throwable throwable40 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult41 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult42 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result21, (org.elasticsearch.action.ActionRequest) bulkShardRequest27, false, throwable40, writeResult41);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException43 = bulkShardRequest27.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure45 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting19, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException43, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure47 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting17, "update", (java.lang.Throwable) actionRequestValidationException43, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure49 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting15, "_na_", (java.lang.Throwable) actionRequestValidationException43, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure51 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting13, "_na_", (java.lang.Throwable) actionRequestValidationException43, "index.version.upgraded");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure53 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting11, "index.blocks.metadata", (java.lang.Throwable) actionRequestValidationException43, "update");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult54 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult55 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result8, actionRequest9, true, (java.lang.Throwable) actionRequestValidationException43, writeResult54);
        org.elasticsearch.common.xcontent.ToXContent.Params params56 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.common.collect.Tuple<java.lang.Exception, org.elasticsearch.common.xcontent.ToXContent.Params> exceptionTuple57 = new org.elasticsearch.common.collect.Tuple<java.lang.Exception, org.elasticsearch.common.xcontent.ToXContent.Params>((java.lang.Exception) actionRequestValidationException43, params56);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder.toXContent(indexMetaData0, xContentBuilder7, params56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNull(mappingMetaData3);
        org.junit.Assert.assertNull(discoveryNodeFilters4);
        org.junit.Assert.assertTrue("'" + state5 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state5.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertNull(shardId36);
        org.junit.Assert.assertNotNull(actionRequestValidationException43);
        org.junit.Assert.assertNotNull(params56);
    }

    @Test
    public void test4104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4104");
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting3 = null;
        java.lang.Throwable throwable5 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure7 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting3, "", throwable5, "");
        org.elasticsearch.action.update.UpdateHelper.Result result8 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult12 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult13 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result8, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, false, throwable11, writeResult12);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure7, (org.elasticsearch.transport.TransportMessage) bulkShardRequest9);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest16 = bulkShardRequest9.index("index.version.created");
        org.elasticsearch.common.transport.TransportAddress transportAddress17 = bulkShardRequest9.remoteAddress();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest18 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        org.elasticsearch.action.update.UpdateHelper.Result result19 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest21 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest21);
        org.elasticsearch.action.update.UpdateHelper.Result result23 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest25 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest26 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest25);
        java.lang.Throwable throwable28 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult29 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult30 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result23, (org.elasticsearch.action.ActionRequest) bulkShardRequest25, false, throwable28, writeResult29);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple31 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest22, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest25);
        org.elasticsearch.tasks.TaskId taskId32 = null;
        bulkShardRequest25.setParentTask(taskId32);
        org.elasticsearch.index.shard.ShardId shardId34 = bulkShardRequest25.shardId();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult35 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult36 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result19, (org.elasticsearch.action.ActionRequest) bulkShardRequest25, writeResult35);
        org.elasticsearch.common.unit.TimeValue timeValue37 = bulkShardRequest25.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest38 = bulkShardRequest9.timeout(timeValue37);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException39 = bulkShardRequest38.validate();
        org.elasticsearch.action.update.UpdateHelper.Result result42 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest44 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest45 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest44);
        org.elasticsearch.action.update.UpdateHelper.Result result46 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest48 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest49 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest48);
        java.lang.Throwable throwable51 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult52 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult53 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result46, (org.elasticsearch.action.ActionRequest) bulkShardRequest48, false, throwable51, writeResult52);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple54 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest45, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest48);
        org.elasticsearch.tasks.TaskId taskId55 = null;
        bulkShardRequest48.setParentTask(taskId55);
        java.lang.Throwable throwable58 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult59 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult60 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result42, (org.elasticsearch.action.ActionRequest) bulkShardRequest48, true, throwable58, writeResult59);
        org.elasticsearch.action.support.IndicesOptions indicesOptions61 = bulkShardRequest48.indicesOptions();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest62 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest48);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException63 = bulkShardRequest48.validate();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult64 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult65 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest38, true, (java.lang.Throwable) actionRequestValidationException63, writeResult64);
        org.elasticsearch.action.ActionRequest actionRequest66 = updateResult65.actionRequest;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest67 = new org.elasticsearch.action.bulk.BulkItemRequest(1, actionRequest66);
        org.junit.Assert.assertNotNull(bulkShardRequest16);
        org.junit.Assert.assertNull(transportAddress17);
        org.junit.Assert.assertNull(shardId34);
        org.junit.Assert.assertNotNull(timeValue37);
        org.junit.Assert.assertNotNull(bulkShardRequest38);
        org.junit.Assert.assertNull(actionRequestValidationException39);
        org.junit.Assert.assertNotNull(indicesOptions61);
        org.junit.Assert.assertNotNull(actionRequestValidationException63);
        org.junit.Assert.assertNotNull(actionRequest66);
    }

    @Test
    public void test4105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4105");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.Version version2 = indexMetaData0.getCreationVersion();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters3 = indexMetaData0.includeFilters();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters4 = indexMetaData0.includeFilters();
        long long5 = indexMetaData0.getCreationDate();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(version2);
        org.junit.Assert.assertNull(discoveryNodeFilters3);
        org.junit.Assert.assertNull(discoveryNodeFilters4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
    }

    @Test
    public void test4106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4106");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest1 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue2 = bulkShardRequest1.timeout();
        java.lang.String str3 = bulkShardRequest1.index();
        org.elasticsearch.index.shard.ShardId shardId4 = bulkShardRequest1.shardId();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest1);
        org.elasticsearch.action.update.UpdateHelper.Result result6 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.action.update.UpdateHelper.Result result10 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest12 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest13 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest12);
        java.lang.Throwable throwable15 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult16 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult17 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result10, (org.elasticsearch.action.ActionRequest) bulkShardRequest12, false, throwable15, writeResult16);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple18 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest9, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest12);
        org.elasticsearch.tasks.TaskId taskId19 = null;
        bulkShardRequest12.setParentTask(taskId19);
        org.elasticsearch.index.shard.ShardId shardId21 = bulkShardRequest12.shardId();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult22 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult23 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result6, (org.elasticsearch.action.ActionRequest) bulkShardRequest12, writeResult22);
        java.lang.String str24 = bulkShardRequest12.index();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple25 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest12);
        org.elasticsearch.action.update.UpdateHelper.Result result27 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest29 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest30 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest29);
        org.elasticsearch.action.update.UpdateHelper.Result result31 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest33 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest34 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest33);
        java.lang.Throwable throwable36 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult37 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult38 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result31, (org.elasticsearch.action.ActionRequest) bulkShardRequest33, false, throwable36, writeResult37);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple39 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest30, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest33);
        org.elasticsearch.tasks.TaskId taskId40 = null;
        bulkShardRequest33.setParentTask(taskId40);
        org.elasticsearch.index.shard.ShardId shardId42 = bulkShardRequest33.shardId();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult43 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult44 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result27, (org.elasticsearch.action.ActionRequest) bulkShardRequest33, writeResult43);
        long long45 = bulkShardRequest33.primaryTerm();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest47 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest48 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest47);
        org.elasticsearch.action.update.UpdateHelper.Result result49 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest51 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest52 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest51);
        java.lang.Throwable throwable54 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult55 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult56 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result49, (org.elasticsearch.action.ActionRequest) bulkShardRequest51, false, throwable54, writeResult55);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple57 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest48, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest51);
        org.elasticsearch.action.ActionRequest actionRequest59 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest60 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest59);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest61 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple62 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest60, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest61);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple63 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest48, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest61);
        org.elasticsearch.action.update.UpdateHelper.Result result64 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest66 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest67 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest66);
        java.lang.Throwable throwable69 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult70 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult71 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result64, (org.elasticsearch.action.ActionRequest) bulkShardRequest66, false, throwable69, writeResult70);
        org.elasticsearch.action.update.UpdateHelper.Result result72 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest74 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest75 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest74);
        org.elasticsearch.action.update.UpdateHelper.Result result76 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest78 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest79 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest78);
        java.lang.Throwable throwable81 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult82 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult83 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result76, (org.elasticsearch.action.ActionRequest) bulkShardRequest78, false, throwable81, writeResult82);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple84 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest75, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest78);
        java.lang.Throwable throwable86 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult87 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult88 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result72, (org.elasticsearch.action.ActionRequest) bulkShardRequest78, true, throwable86, writeResult87);
        org.elasticsearch.index.shard.ShardId shardId89 = bulkShardRequest78.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue90 = bulkShardRequest78.timeout();
        org.elasticsearch.tasks.TaskId taskId91 = bulkShardRequest78.getParentTask();
        bulkShardRequest66.setParentTask(taskId91);
        bulkShardRequest61.setParentTask(taskId91);
        org.elasticsearch.tasks.TaskId taskId94 = bulkShardRequest61.getParentTask();
        bulkShardRequest33.setParentTask(taskId94);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest96 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest33);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple97 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest33);
        org.junit.Assert.assertNotNull(timeValue2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNull(shardId21);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(shardId42);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 0L + "'", long45 == 0L);
        org.junit.Assert.assertNull(shardId89);
        org.junit.Assert.assertNotNull(timeValue90);
        org.junit.Assert.assertNotNull(taskId91);
        org.junit.Assert.assertNotNull(taskId94);
    }

    @Test
    public void test4107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4107");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.ActionRequest actionRequest4 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest4);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest6 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple7 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest6);
        org.elasticsearch.action.ActionRequest actionRequest10 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest11 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest10);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest12 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest11, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest12);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest12);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple15 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest12);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest16 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 100, (org.elasticsearch.action.ActionRequest) bulkShardRequest12);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting17 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result19 = null;
        org.elasticsearch.action.ActionRequest actionRequest21 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest21);
        org.elasticsearch.action.ActionRequest actionRequest25 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest26 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest25);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest27 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple28 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest26, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest27);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest29 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest27);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple30 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest22, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest27);
        org.elasticsearch.common.transport.TransportAddress transportAddress31 = null;
        bulkShardRequest27.remoteAddress(transportAddress31);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting34 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting36 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting38 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting40 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting42 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result44 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest46 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest47 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest46);
        org.elasticsearch.action.update.UpdateHelper.Result result48 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest50 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest51 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest50);
        java.lang.Throwable throwable53 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult54 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult55 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result48, (org.elasticsearch.action.ActionRequest) bulkShardRequest50, false, throwable53, writeResult54);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple56 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest47, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest50);
        org.elasticsearch.tasks.TaskId taskId57 = null;
        bulkShardRequest50.setParentTask(taskId57);
        org.elasticsearch.index.shard.ShardId shardId59 = bulkShardRequest50.shardId();
        bulkShardRequest50.seqNo((long) 0);
        java.lang.Throwable throwable63 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult64 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult65 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result44, (org.elasticsearch.action.ActionRequest) bulkShardRequest50, false, throwable63, writeResult64);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException66 = bulkShardRequest50.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure68 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting42, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException66, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure70 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting40, "update", (java.lang.Throwable) actionRequestValidationException66, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure72 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting38, "_na_", (java.lang.Throwable) actionRequestValidationException66, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure74 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting36, "_na_", (java.lang.Throwable) actionRequestValidationException66, "index.version.upgraded");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure76 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting34, "index.shadow_replicas", (java.lang.Throwable) actionRequestValidationException66, "");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult77 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult78 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result19, (org.elasticsearch.action.ActionRequest) bulkShardRequest27, false, (java.lang.Throwable) actionRequestValidationException66, writeResult77);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure80 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting17, "index.creation_date", (java.lang.Throwable) actionRequestValidationException66, "hi!");
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkShardRequest, java.lang.RuntimeException> bulkShardRequestTuple81 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkShardRequest, java.lang.RuntimeException>(bulkShardRequest12, (java.lang.RuntimeException) actionRequestValidationException66);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure83 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "current version [10] is higher than the one provided [98]", (java.lang.Throwable) actionRequestValidationException66, "current version [10] is different than the one provided [100]");
        org.junit.Assert.assertNull(shardId59);
        org.junit.Assert.assertNotNull(actionRequestValidationException66);
    }

    @Test
    public void test4108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4108");
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.update.UpdateHelper.Result result6 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult12 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult13 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result6, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable11, writeResult12);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest8);
        java.lang.Throwable throwable16 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult17 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult18 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, true, throwable16, writeResult17);
        org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestReplicationRequest19 = updateResult18.request();
        org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestReplicationRequest20 = updateResult18.request();
        boolean boolean21 = updateResult18.retry;
        org.elasticsearch.action.ActionRequest actionRequest22 = updateResult18.actionRequest;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult23 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult24 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, actionRequest22, writeResult23);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest25 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 1, actionRequest22);
        org.junit.Assert.assertNotNull(bulkShardRequestReplicationRequest19);
        org.junit.Assert.assertNotNull(bulkShardRequestReplicationRequest20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(actionRequest22);
    }

    @Test
    public void test4109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4109");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest((-1), (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest10 = new org.elasticsearch.action.bulk.BulkItemRequest(0, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        boolean boolean11 = bulkShardRequest7.getShouldPersistResult();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 2, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.action.ActionRequest actionRequest16 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest17 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest16);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest18 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple19 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest17, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest18);
        org.elasticsearch.action.ActionRequest actionRequest22 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest23 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest22);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest24 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple25 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest23, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest24);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest26 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest24);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple27 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest17, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest24);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest28 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 100, (org.elasticsearch.action.ActionRequest) bulkShardRequest24);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest29 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest24);
        java.lang.reflect.AnnotatedElement annotatedElement30 = null;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkShardRequest, java.lang.reflect.AnnotatedElement> bulkShardRequestTuple31 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkShardRequest, java.lang.reflect.AnnotatedElement>(bulkShardRequest24, annotatedElement30);
        org.elasticsearch.index.shard.ShardId shardId32 = bulkShardRequest24.shardId();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple33 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest12, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest24);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting35 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting37 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting39 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting41 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result43 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest45 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest46 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest45);
        org.elasticsearch.action.update.UpdateHelper.Result result47 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest49 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest50 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest49);
        java.lang.Throwable throwable52 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult53 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult54 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result47, (org.elasticsearch.action.ActionRequest) bulkShardRequest49, false, throwable52, writeResult53);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple55 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest46, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest49);
        org.elasticsearch.tasks.TaskId taskId56 = null;
        bulkShardRequest49.setParentTask(taskId56);
        org.elasticsearch.index.shard.ShardId shardId58 = bulkShardRequest49.shardId();
        bulkShardRequest49.seqNo((long) 0);
        java.lang.Throwable throwable62 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult63 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult64 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result43, (org.elasticsearch.action.ActionRequest) bulkShardRequest49, false, throwable62, writeResult63);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException65 = bulkShardRequest49.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure67 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting41, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException65, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure69 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting39, "update", (java.lang.Throwable) actionRequestValidationException65, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure71 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting37, "_na_", (java.lang.Throwable) actionRequestValidationException65, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure73 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting35, "primary_terms", (java.lang.Throwable) actionRequestValidationException65, "delete");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult74 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult75 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest24, false, (java.lang.Throwable) actionRequestValidationException65, writeResult74);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure77 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "index.blocks.read", (java.lang.Throwable) actionRequestValidationException65, "current version [-1] is higher than the one provided [52]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(shardId32);
        org.junit.Assert.assertNull(shardId58);
        org.junit.Assert.assertNotNull(actionRequestValidationException65);
    }

    @Test
    public void test4110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4110");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.ActionRequest actionRequest4 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest4);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest6 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple7 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest6);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest6);
        org.elasticsearch.action.ActionRequest actionRequest10 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest11 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest10);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest12 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest11, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest12);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest8, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest12);
        boolean boolean15 = bulkShardRequest12.getShouldPersistResult();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException16 = bulkShardRequest12.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure18 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "index.", (java.lang.Throwable) actionRequestValidationException16, "index.shared_filesystem");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting19 = shardFailure18.routing;
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(actionRequestValidationException16);
        org.junit.Assert.assertNull(shardRouting19);
    }

    @Test
    public void test4111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4111");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int2 = builder1.numberOfShards();
        java.lang.String[] strArray6 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = builder1.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet7);
        org.elasticsearch.cluster.metadata.IndexMetaData.State state10 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = builder9.state(state10);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder13 = builder9.removeAlias("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData14 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder15 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData14);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap16 = indexMetaData14.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet17 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple18 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData14, indexShardStateSet17);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters19 = indexMetaData14.includeFilters();
        org.elasticsearch.common.settings.Settings settings20 = indexMetaData14.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder21 = builder9.settings(settings20);
        int int22 = builder9.numberOfReplicas();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder24 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder26 = builder24.version((long) (short) 100);
        org.elasticsearch.cluster.metadata.IndexMetaData.State state27 = org.elasticsearch.cluster.metadata.IndexMetaData.State.CLOSE;
        byte byte28 = state27.id();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder29 = builder24.state(state27);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder30 = builder9.state(state27);
        org.elasticsearch.cluster.metadata.AliasMetaData aliasMetaData31 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder32 = builder9.putAlias(aliasMetaData31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(indexMetaData14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap16);
        org.junit.Assert.assertNotNull(indexShardStateSet17);
        org.junit.Assert.assertNull(discoveryNodeFilters19);
        org.junit.Assert.assertNotNull(settings20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + state27 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.CLOSE + "'", state27.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.CLOSE));
        org.junit.Assert.assertTrue("'" + byte28 + "' != '" + (byte) 1 + "'", byte28 == (byte) 1);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder30);
    }

    @Test
    public void test4112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4112");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.Version version2 = indexMetaData0.getCreationVersion();
        long long3 = indexMetaData0.getCreationDate();
        int int4 = indexMetaData0.getTotalNumberOfShards();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap5 = indexMetaData0.getAliases();
        java.lang.String str6 = indexMetaData0.getIndexUUID();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        int int8 = indexMetaData0.getNumberOfReplicas();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(version2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(strImmutableOpenMap5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_na_" + "'", str6, "_na_");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test4113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4113");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest1 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest1);
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, false, throwable8, writeResult9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.index.VersionType versionType12 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean16 = versionType12.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest2, versionType12);
        boolean boolean21 = versionType12.isVersionConflictForWrites(10L, (long) (byte) 0, false);
        boolean boolean23 = versionType12.validateVersionForReads((long) (byte) 100);
        long long26 = versionType12.updateVersion((long) (byte) 0, (long) (byte) -1);
        org.elasticsearch.index.VersionType versionType27 = versionType12.versionTypeForReplicationAndRecovery();
        byte byte28 = versionType12.getValue();
        boolean boolean30 = versionType12.validateVersionForWrites((long) (short) 10);
        org.elasticsearch.index.VersionType versionType31 = versionType12.versionTypeForReplicationAndRecovery();
        byte byte32 = versionType31.getValue();
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(versionType27);
        org.junit.Assert.assertTrue("'" + byte28 + "' != '" + (byte) 3 + "'", byte28 == (byte) 3);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(versionType31);
        org.junit.Assert.assertTrue("'" + byte32 + "' != '" + (byte) 3 + "'", byte32 == (byte) 3);
    }

    @Test
    public void test4114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4114");
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.ActionRequest actionRequest4 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest4);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest6 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple7 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest6);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest6);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue10 = bulkShardRequest9.timeout();
        java.lang.String str11 = bulkShardRequest9.index();
        org.elasticsearch.common.unit.TimeValue timeValue12 = bulkShardRequest9.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest13 = bulkShardRequest6.timeout(timeValue12);
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        bulkShardRequest13.remoteAddress(transportAddress14);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult16 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult17 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest13, writeResult16);
        org.elasticsearch.common.unit.TimeValue timeValue18 = bulkShardRequest13.timeout();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest19 = new org.elasticsearch.action.bulk.BulkItemRequest((-1), (org.elasticsearch.action.ActionRequest) bulkShardRequest13);
        boolean boolean20 = bulkShardRequest13.getShouldPersistResult();
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(timeValue12);
        org.junit.Assert.assertNotNull(bulkShardRequest13);
        org.junit.Assert.assertNotNull(timeValue18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test4115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4115");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder2.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder3.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int9 = builder8.numberOfShards();
        java.lang.String[] strArray13 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder8.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder3.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple18 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData0, (java.lang.Iterable<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap19 = indexMetaData0.getAliases();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest21 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest21);
        org.elasticsearch.action.update.UpdateHelper.Result result23 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest25 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest26 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest25);
        java.lang.Throwable throwable28 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult29 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult30 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result23, (org.elasticsearch.action.ActionRequest) bulkShardRequest25, false, throwable28, writeResult29);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple31 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest22, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest25);
        org.elasticsearch.index.VersionType versionType32 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean36 = versionType32.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple37 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest22, versionType32);
        boolean boolean41 = versionType32.isVersionConflictForWrites(10L, (long) (byte) 0, false);
        boolean boolean43 = versionType32.validateVersionForReads(10L);
        boolean boolean46 = versionType32.isVersionConflictForReads(100L, (long) 'a');
        boolean boolean48 = versionType32.validateVersionForWrites((long) 100);
        boolean boolean51 = versionType32.isVersionConflictForReads((long) 'a', (long) (byte) 2);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData>, java.lang.Enum<org.elasticsearch.index.VersionType>> strImmutableOpenMapTuple52 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData>, java.lang.Enum<org.elasticsearch.index.VersionType>>(strImmutableOpenMap19, (java.lang.Enum<org.elasticsearch.index.VersionType>) versionType32);
        boolean boolean56 = versionType32.isVersionConflictForWrites((long) 0, (long) '#', false);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput57 = null;
        // The following exception was thrown during execution in test generation
        try {
            versionType32.writeTo(streamOutput57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple18);
        org.junit.Assert.assertNotNull(strImmutableOpenMap19);
        org.junit.Assert.assertNotNull(versionType32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test4116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4116");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        int int2 = builder1.numberOfReplicas();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder1.removeAllAliases();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData4 = builder1.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: must specify numberOfShards for index [hi!]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(builder3);
    }

    @Test
    public void test4117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4117");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        org.elasticsearch.action.update.UpdateHelper.Result result7 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest10 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        java.lang.Throwable throwable12 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult13 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult14 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result7, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, false, throwable12, writeResult13);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple15 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest6, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest9);
        java.lang.Throwable throwable17 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult18 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult19 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, true, throwable17, writeResult18);
        org.elasticsearch.index.shard.ShardId shardId20 = bulkShardRequest9.shardId();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        org.elasticsearch.common.unit.TimeValue timeValue22 = bulkShardRequest9.timeout();
        bulkShardRequest9.primaryTerm((long) '#');
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest26 = bulkShardRequest9.index("index.version.created");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = bulkShardRequest26.consistencyLevel();
        org.elasticsearch.cluster.routing.ShardRouting shardRouting29 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result31 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result33 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest35 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest36 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest35);
        java.lang.Throwable throwable38 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult39 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult40 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result33, (org.elasticsearch.action.ActionRequest) bulkShardRequest35, false, throwable38, writeResult39);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest41 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest35);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult42 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult43 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result31, (org.elasticsearch.action.ActionRequest) bulkShardRequest35, writeResult42);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest44 = updateResult43.request();
        java.lang.String str45 = bulkShardRequest44.index();
        long long46 = bulkShardRequest44.seqNo();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException47 = bulkShardRequest44.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure49 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting29, "current version [0] is higher than the one provided [98]", (java.lang.Throwable) actionRequestValidationException47, "_na_");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult50 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult51 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest26, true, (java.lang.Throwable) actionRequestValidationException47, writeResult50);
        org.elasticsearch.action.support.IndicesOptions indicesOptions52 = bulkShardRequest26.indicesOptions();
        org.elasticsearch.action.update.UpdateHelper.Result result55 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest57 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest58 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest57);
        org.elasticsearch.action.update.UpdateHelper.Result result59 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest61 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest62 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest61);
        java.lang.Throwable throwable64 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult65 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult66 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result59, (org.elasticsearch.action.ActionRequest) bulkShardRequest61, false, throwable64, writeResult65);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple67 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest58, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest61);
        org.elasticsearch.tasks.TaskId taskId68 = null;
        bulkShardRequest61.setParentTask(taskId68);
        java.lang.Throwable throwable71 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult72 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult73 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result55, (org.elasticsearch.action.ActionRequest) bulkShardRequest61, true, throwable71, writeResult72);
        org.elasticsearch.action.support.IndicesOptions indicesOptions74 = bulkShardRequest61.indicesOptions();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest75 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest61);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException76 = bulkShardRequest61.validate();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult77 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult78 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest26, true, (java.lang.Throwable) actionRequestValidationException76, writeResult77);
        org.junit.Assert.assertNull(shardId20);
        org.junit.Assert.assertNotNull(timeValue22);
        org.junit.Assert.assertNotNull(bulkShardRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(bulkShardRequest44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertNotNull(actionRequestValidationException47);
        org.junit.Assert.assertNotNull(indicesOptions52);
        org.junit.Assert.assertNotNull(indicesOptions74);
        org.junit.Assert.assertNotNull(actionRequestValidationException76);
    }

    @Test
    public void test4118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4118");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result4 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest6 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest6);
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult10 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult11 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result4, (org.elasticsearch.action.ActionRequest) bulkShardRequest6, false, throwable9, writeResult10);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest6);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest13 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest6);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest6);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult15 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult16 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest6, writeResult15);
        org.elasticsearch.action.update.UpdateHelper.Result result17 = updateResult16.result;
        org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestReplicationRequest18 = updateResult16.request();
        org.junit.Assert.assertNull(result17);
        org.junit.Assert.assertNotNull(bulkShardRequestReplicationRequest18);
    }

    @Test
    public void test4119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4119");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters3 = indexMetaData0.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = builder5.creationDate((long) (byte) 0);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData8 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData8);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap10 = indexMetaData8.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet11 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData8, indexShardStateSet11);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder13 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData8);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData15 = indexMetaData8.mapping("index.");
        int int16 = indexMetaData8.getNumberOfShards();
        org.elasticsearch.Version version17 = indexMetaData8.getCreationVersion();
        long long18 = indexMetaData8.getCreationDate();
        org.elasticsearch.common.settings.Settings settings19 = indexMetaData8.getSettings();
        boolean boolean20 = org.elasticsearch.cluster.metadata.IndexMetaData.isIndexUsingShadowReplicas(settings19);
        boolean boolean21 = org.elasticsearch.cluster.metadata.IndexMetaData.isIndexUsingShadowReplicas(settings19);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder22 = builder7.settings(settings19);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder24 = builder7.numberOfReplicas((int) (short) 10);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNull(discoveryNodeFilters3);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(indexMetaData8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap10);
        org.junit.Assert.assertNotNull(indexShardStateSet11);
        org.junit.Assert.assertNull(mappingMetaData15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(version17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertNotNull(settings19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
    }

    @Test
    public void test4120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4120");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest1 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest1);
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, false, throwable8, writeResult9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.index.VersionType versionType12 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean16 = versionType12.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest2, versionType12);
        boolean boolean21 = versionType12.isVersionConflictForWrites(10L, (long) (byte) 0, false);
        boolean boolean23 = versionType12.validateVersionForReads((long) (byte) 100);
        long long26 = versionType12.updateVersion((long) (byte) 10, 10L);
        byte byte27 = versionType12.getValue();
        boolean boolean29 = versionType12.validateVersionForReads((long) (byte) 10);
        org.elasticsearch.index.VersionType versionType30 = versionType12.versionTypeForReplicationAndRecovery();
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 10L + "'", long26 == 10L);
        org.junit.Assert.assertTrue("'" + byte27 + "' != '" + (byte) 3 + "'", byte27 == (byte) 3);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(versionType30);
    }

    @Test
    public void test4121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4121");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest1 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest1);
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, false, throwable8, writeResult9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.index.VersionType versionType12 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean16 = versionType12.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest2, versionType12);
        boolean boolean21 = versionType12.isVersionConflictForWrites(10L, (long) (byte) 0, false);
        long long24 = versionType12.updateVersion((long) 1, (long) (short) 10);
        boolean boolean26 = versionType12.validateVersionForWrites((long) (byte) 10);
        boolean boolean29 = versionType12.isVersionConflictForReads((long) 3, (long) (short) -1);
        org.elasticsearch.index.VersionType versionType30 = versionType12.versionTypeForReplicationAndRecovery();
        org.elasticsearch.index.VersionType versionType31 = versionType30.versionTypeForReplicationAndRecovery();
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 10L + "'", long24 == 10L);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(versionType30);
        org.junit.Assert.assertNotNull(versionType31);
    }

    @Test
    public void test4122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4122");
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.ActionRequest actionRequest6 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest6);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple9 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest7, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest8);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest10 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.action.ActionRequest actionRequest12 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest13 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest12);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest14 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple15 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest13, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple16 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest10, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest14);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest17 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue18 = bulkShardRequest17.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest19 = bulkShardRequest14.timeout(timeValue18);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest20 = new org.elasticsearch.action.bulk.BulkItemRequest((-1), (org.elasticsearch.action.ActionRequest) bulkShardRequest19);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult21 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult22 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest19, writeResult21);
        boolean boolean23 = updateResult22.failure();
        java.lang.Throwable throwable24 = updateResult22.error;
        org.elasticsearch.action.update.UpdateResponse updateResponse25 = updateResult22.noopResult;
        org.elasticsearch.action.update.UpdateHelper.Result result26 = updateResult22.result;
        org.elasticsearch.action.ActionRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestActionRequest27 = updateResult22.request();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest28 = new org.elasticsearch.action.bulk.BulkItemRequest((int) '4', (org.elasticsearch.action.ActionRequest) bulkShardRequestActionRequest27);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest29 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequestActionRequest27);
        org.junit.Assert.assertNotNull(timeValue18);
        org.junit.Assert.assertNotNull(bulkShardRequest19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(throwable24);
        org.junit.Assert.assertNull(updateResponse25);
        org.junit.Assert.assertNull(result26);
        org.junit.Assert.assertNotNull(bulkShardRequestActionRequest27);
    }

    @Test
    public void test4123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4123");
        org.elasticsearch.index.VersionType versionType0 = org.elasticsearch.index.VersionType.INTERNAL;
        byte byte1 = versionType0.getValue();
        java.lang.String str5 = versionType0.explainConflictForWrites((long) 52, (long) ' ', false);
        java.lang.String str8 = versionType0.explainConflictForReads((long) (byte) -1, 52L);
        org.junit.Assert.assertNotNull(versionType0);
        org.junit.Assert.assertTrue("'" + byte1 + "' != '" + (byte) 0 + "'", byte1 == (byte) 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "current version [52] is different than the one provided [32]" + "'", str5, "current version [52] is different than the one provided [32]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "current version [-1] is different than the one provided [52]" + "'", str8, "current version [-1] is different than the one provided [52]");
    }

    @Test
    public void test4124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4124");
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest3 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest3);
        org.elasticsearch.action.update.UpdateHelper.Result result5 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult11 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult12 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result5, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, false, throwable10, writeResult11);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest7);
        org.elasticsearch.tasks.TaskId taskId14 = null;
        bulkShardRequest7.setParentTask(taskId14);
        java.lang.Throwable throwable17 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult18 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult19 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, true, throwable17, writeResult18);
        org.elasticsearch.action.support.IndicesOptions indicesOptions20 = bulkShardRequest7.indicesOptions();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        int int22 = bulkItemRequest21.id();
        org.junit.Assert.assertNotNull(indicesOptions20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
    }

    @Test
    public void test4125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4125");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.update.UpdateHelper.Result result6 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult12 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult13 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result6, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable11, writeResult12);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest8);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest15 = new org.elasticsearch.action.bulk.BulkItemRequest((int) 'a', (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        java.lang.Throwable throwable17 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult18 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult19 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable17, writeResult18);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult20 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult21 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, writeResult20);
        bulkShardRequest8.seqNo((long) 0);
        org.elasticsearch.common.unit.TimeValue timeValue24 = bulkShardRequest8.timeout();
        org.junit.Assert.assertNotNull(timeValue24);
    }

    @Test
    public void test4126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4126");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result12 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest14 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest15 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest14);
        org.elasticsearch.action.update.UpdateHelper.Result result16 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest18 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest19 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest18);
        java.lang.Throwable throwable21 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult22 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult23 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result16, (org.elasticsearch.action.ActionRequest) bulkShardRequest18, false, throwable21, writeResult22);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple24 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest15, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest18);
        org.elasticsearch.tasks.TaskId taskId25 = null;
        bulkShardRequest18.setParentTask(taskId25);
        org.elasticsearch.index.shard.ShardId shardId27 = bulkShardRequest18.shardId();
        bulkShardRequest18.seqNo((long) 0);
        java.lang.Throwable throwable31 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult32 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult33 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result12, (org.elasticsearch.action.ActionRequest) bulkShardRequest18, false, throwable31, writeResult32);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException34 = bulkShardRequest18.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException34, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "update", (java.lang.Throwable) actionRequestValidationException34, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "index.shared_filesystem", (java.lang.Throwable) actionRequestValidationException34, "index.version.minimum_compatible");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "current version [97] is different than the one provided [35]", (java.lang.Throwable) actionRequestValidationException34, "index.");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "index.blocks.read_only", (java.lang.Throwable) actionRequestValidationException34, "current version [97] is different than the one provided [1]");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "index.uuid", (java.lang.Throwable) actionRequestValidationException34, "index.uuid");
        java.lang.String str47 = shardFailure46.reason;
        java.lang.String str48 = shardFailure46.reason;
        org.junit.Assert.assertNull(shardId27);
        org.junit.Assert.assertNotNull(actionRequestValidationException34);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "index.uuid" + "'", str47, "index.uuid");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "index.uuid" + "'", str48, "index.uuid");
    }

    @Test
    public void test4127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4127");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder2.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder3.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int9 = builder8.numberOfShards();
        java.lang.String[] strArray13 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder8.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder3.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple18 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData0, (java.lang.Iterable<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap19 = indexMetaData0.getAliases();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData21 = indexMetaData0.mapping("state-");
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap22 = indexMetaData0.getActiveAllocationIds();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData24 = indexMetaData0.mappingOrDefault("current version [0] is different than the one provided [100]");
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters25 = indexMetaData0.getInitialRecoveryFilters();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder26 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params27 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.action.update.UpdateHelper.Result result28 = null;
        org.elasticsearch.action.ActionRequest actionRequest32 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest33 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest32);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest34 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple35 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest33, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest34);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest36 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest34);
        org.elasticsearch.action.ActionRequest actionRequest38 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest39 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest38);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest40 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple41 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest39, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest40);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple42 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest36, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest40);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest43 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue44 = bulkShardRequest43.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest45 = bulkShardRequest40.timeout(timeValue44);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest46 = new org.elasticsearch.action.bulk.BulkItemRequest((-1), (org.elasticsearch.action.ActionRequest) bulkShardRequest45);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult47 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult48 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result28, (org.elasticsearch.action.ActionRequest) bulkShardRequest45, writeResult47);
        boolean boolean49 = updateResult48.failure();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.ToXContent.Params, org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult> paramsTuple50 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.ToXContent.Params, org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult>(params27, updateResult48);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder51 = indexMetaData0.toXContent(xContentBuilder26, params27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple18);
        org.junit.Assert.assertNotNull(strImmutableOpenMap19);
        org.junit.Assert.assertNull(mappingMetaData21);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap22);
        org.junit.Assert.assertNull(mappingMetaData24);
        org.junit.Assert.assertNull(discoveryNodeFilters25);
        org.junit.Assert.assertNotNull(params27);
        org.junit.Assert.assertNotNull(timeValue44);
        org.junit.Assert.assertNotNull(bulkShardRequest45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test4128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4128");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.Version version2 = indexMetaData0.getCreationVersion();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters3 = indexMetaData0.includeFilters();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters4 = indexMetaData0.includeFilters();
        long long5 = indexMetaData0.getVersion();
        long long6 = indexMetaData0.getCreationDate();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData8 = indexMetaData0.mappingOrDefault("indices:data/write/bulk[s]");
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(version2);
        org.junit.Assert.assertNull(discoveryNodeFilters3);
        org.junit.Assert.assertNull(discoveryNodeFilters4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNull(mappingMetaData8);
    }

    @Test
    public void test4129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4129");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest3 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest3);
        org.elasticsearch.action.update.UpdateHelper.Result result5 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult11 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult12 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result5, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, false, throwable10, writeResult11);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest7);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = new org.elasticsearch.action.bulk.BulkItemRequest((int) 'a', (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest15 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 3, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.action.ActionRequest actionRequest18 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest19 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest18);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest20 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple21 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest19, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest20);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest20);
        org.elasticsearch.action.ActionRequest actionRequest24 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest25 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest24);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest26 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple27 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest25, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest26);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple28 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest22, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest26);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest29 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue30 = bulkShardRequest29.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest31 = bulkShardRequest26.timeout(timeValue30);
        long long32 = bulkShardRequest26.primaryTerm();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple33 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest15, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest26);
        org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestReplicationRequest34 = bulkItemRequestTuple33.v2();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str35 = bulkItemRequestTuple33.toString();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(timeValue30);
        org.junit.Assert.assertNotNull(bulkShardRequest31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertNotNull(bulkShardRequestReplicationRequest34);
    }

    @Test
    public void test4130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4130");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData1 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData1);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap3 = indexMetaData1.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters4 = indexMetaData1.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff5 = indexMetaData0.diff(indexMetaData1);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters6 = indexMetaData1.requireFilters();
        org.elasticsearch.Version version7 = indexMetaData1.getUpgradedVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData8 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData8);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap10 = indexMetaData8.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet11 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData8, indexShardStateSet11);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff13 = indexMetaData1.diff(indexMetaData8);
        org.elasticsearch.common.settings.Settings settings14 = indexMetaData8.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder15 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData8);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData17 = indexMetaData8.mapping("index.blocks.read");
        long long18 = indexMetaData8.getVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder19 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData8);
        org.elasticsearch.cluster.metadata.AliasMetaData.Builder builder20 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder21 = builder19.putAlias(builder20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(indexMetaData1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap3);
        org.junit.Assert.assertNull(discoveryNodeFilters4);
        org.junit.Assert.assertNotNull(indexMetaDataDiff5);
        org.junit.Assert.assertNull(discoveryNodeFilters6);
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertNotNull(indexMetaData8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap10);
        org.junit.Assert.assertNotNull(indexShardStateSet11);
        org.junit.Assert.assertNotNull(indexMetaDataDiff13);
        org.junit.Assert.assertNotNull(settings14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNull(mappingMetaData17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
    }

    @Test
    public void test4131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4131");
        org.elasticsearch.index.VersionType versionType1 = org.elasticsearch.index.VersionType.INTERNAL;
        byte byte2 = versionType1.getValue();
        byte byte3 = versionType1.getValue();
        org.elasticsearch.index.VersionType versionType4 = versionType1.versionTypeForReplicationAndRecovery();
        long long7 = versionType1.updateVersion(3L, (long) 3);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.VersionType versionType8 = org.elasticsearch.index.VersionType.fromString("current version [32] is different than the one provided [32]", versionType1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No version type match [current version [32] is different than the one provided [32]]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(versionType1);
        org.junit.Assert.assertTrue("'" + byte2 + "' != '" + (byte) 0 + "'", byte2 == (byte) 0);
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 0 + "'", byte3 == (byte) 0);
        org.junit.Assert.assertNotNull(versionType4);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 4L + "'", long7 == 4L);
    }

    @Test
    public void test4132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4132");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest1 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue2 = bulkShardRequest1.timeout();
        bulkShardRequest1.seqNo((long) (short) 100);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = new org.elasticsearch.action.bulk.BulkItemRequest((int) '4', (org.elasticsearch.action.ActionRequest) bulkShardRequest1);
        org.junit.Assert.assertNotNull(timeValue2);
    }

    @Test
    public void test4133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4133");
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        org.elasticsearch.action.update.UpdateHelper.Result result7 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest10 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        java.lang.Throwable throwable12 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult13 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult14 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result7, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, false, throwable12, writeResult13);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple15 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest6, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest9);
        org.elasticsearch.tasks.TaskId taskId16 = null;
        bulkShardRequest9.setParentTask(taskId16);
        org.elasticsearch.index.shard.ShardId shardId18 = bulkShardRequest9.shardId();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult19 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult20 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, writeResult19);
        long long21 = bulkShardRequest9.primaryTerm();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = new org.elasticsearch.action.bulk.BulkItemRequest((int) 'a', (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = bulkShardRequest9.consistencyLevel();
        org.elasticsearch.cluster.routing.ShardRouting shardRouting25 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting27 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result29 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest31 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest32 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest31);
        org.elasticsearch.action.update.UpdateHelper.Result result33 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest35 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest36 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest35);
        java.lang.Throwable throwable38 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult39 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult40 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result33, (org.elasticsearch.action.ActionRequest) bulkShardRequest35, false, throwable38, writeResult39);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple41 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest32, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest35);
        org.elasticsearch.tasks.TaskId taskId42 = null;
        bulkShardRequest35.setParentTask(taskId42);
        org.elasticsearch.index.shard.ShardId shardId44 = bulkShardRequest35.shardId();
        bulkShardRequest35.seqNo((long) 0);
        java.lang.Throwable throwable48 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult49 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult50 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result29, (org.elasticsearch.action.ActionRequest) bulkShardRequest35, false, throwable48, writeResult49);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException51 = bulkShardRequest35.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure53 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting27, "index.number_of_shards", (java.lang.Throwable) actionRequestValidationException51, "update");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure55 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting25, "index.uuid", (java.lang.Throwable) actionRequestValidationException51, "index.blocks.metadata");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult56 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult57 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, false, (java.lang.Throwable) actionRequestValidationException51, writeResult56);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest58 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 100, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        java.lang.Class<?> wildcardClass59 = bulkShardRequest9.getClass();
        org.elasticsearch.common.collect.Tuple<java.lang.reflect.GenericDeclaration, java.lang.CharSequence> genericDeclarationTuple61 = new org.elasticsearch.common.collect.Tuple<java.lang.reflect.GenericDeclaration, java.lang.CharSequence>((java.lang.reflect.GenericDeclaration) wildcardClass59, (java.lang.CharSequence) "indices:data/write/bulk[s]");
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(shardId44);
        org.junit.Assert.assertNotNull(actionRequestValidationException51);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test4134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4134");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result4 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result5 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest6 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.String str7 = bulkShardRequest6.index();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult8 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult9 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result5, (org.elasticsearch.action.ActionRequest) bulkShardRequest6, writeResult8);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult10 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult11 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result4, (org.elasticsearch.action.ActionRequest) bulkShardRequest6, writeResult10);
        bulkShardRequest6.setParentTask("indices:data/write/bulk[s]", (long) ' ');
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = null;
        bulkShardRequest6.remoteAddress(transportAddress15);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest17 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 2, (org.elasticsearch.action.ActionRequest) bulkShardRequest6);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult18 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult19 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest6, writeResult18);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException20 = bulkShardRequest6.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure22 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "current version [0] is different than the one provided [97]", (java.lang.Throwable) actionRequestValidationException20, "current version [-1] is different than the one provided [52]");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(actionRequestValidationException20);
    }

    @Test
    public void test4135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4135");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("current version [97] is different than the one provided [97]");
        java.lang.String str2 = builder1.index();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int5 = builder4.numberOfShards();
        java.lang.String[] strArray9 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet10 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet10, strArray9);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder12 = builder4.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet10);
        org.elasticsearch.cluster.metadata.IndexMetaData.State state13 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder14 = builder12.state(state13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder12.removeAlias("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData17 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder18 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData17);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap19 = indexMetaData17.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet20 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple21 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData17, indexShardStateSet20);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters22 = indexMetaData17.includeFilters();
        org.elasticsearch.common.settings.Settings settings23 = indexMetaData17.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder24 = builder12.settings(settings23);
        boolean boolean25 = org.elasticsearch.cluster.metadata.IndexMetaData.isOnSharedFilesystem(settings23);
        org.elasticsearch.common.settings.Settings settings26 = org.elasticsearch.cluster.metadata.IndexMetaData.addHumanReadableSettings(settings23);
        boolean boolean27 = org.elasticsearch.cluster.metadata.IndexMetaData.isIndexUsingShadowReplicas(settings26);
        boolean boolean28 = org.elasticsearch.cluster.metadata.IndexMetaData.isIndexUsingShadowReplicas(settings26);
        org.elasticsearch.common.settings.Settings settings29 = org.elasticsearch.cluster.metadata.IndexMetaData.addHumanReadableSettings(settings26);
        boolean boolean30 = org.elasticsearch.cluster.metadata.IndexMetaData.isIndexUsingShadowReplicas(settings29);
        org.elasticsearch.common.settings.Settings settings31 = org.elasticsearch.cluster.metadata.IndexMetaData.addHumanReadableSettings(settings29);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder32 = builder1.settings(settings29);
        org.elasticsearch.transport.TransportService transportService33 = null;
        org.elasticsearch.cluster.service.ClusterService clusterService34 = null;
        org.elasticsearch.indices.IndicesService indicesService35 = null;
        org.elasticsearch.threadpool.ThreadPool threadPool36 = null;
        org.elasticsearch.cluster.action.shard.ShardStateAction shardStateAction37 = null;
        org.elasticsearch.cluster.action.index.MappingUpdatedAction mappingUpdatedAction38 = null;
        org.elasticsearch.action.update.UpdateHelper updateHelper39 = null;
        org.elasticsearch.action.support.ActionFilters actionFilters40 = null;
        org.elasticsearch.cluster.metadata.IndexNameExpressionResolver indexNameExpressionResolver41 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.bulk.TransportShardBulkAction transportShardBulkAction42 = new org.elasticsearch.action.bulk.TransportShardBulkAction(settings29, transportService33, clusterService34, indicesService35, threadPool36, shardStateAction37, mappingUpdatedAction38, updateHelper39, actionFilters40, indexNameExpressionResolver41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "current version [97] is different than the one provided [97]" + "'", str2, "current version [97] is different than the one provided [97]");
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(indexMetaData17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap19);
        org.junit.Assert.assertNotNull(indexShardStateSet20);
        org.junit.Assert.assertNull(discoveryNodeFilters22);
        org.junit.Assert.assertNotNull(settings23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(settings26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(settings29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(settings31);
        org.junit.Assert.assertNotNull(builder32);
    }

    @Test
    public void test4136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4136");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int2 = builder1.numberOfShards();
        java.lang.String[] strArray6 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = builder1.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet7);
        org.elasticsearch.cluster.metadata.IndexMetaData.State state10 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = builder9.state(state10);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder13 = builder9.removeAlias("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData14 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder15 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData14);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap16 = indexMetaData14.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet17 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple18 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData14, indexShardStateSet17);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters19 = indexMetaData14.includeFilters();
        org.elasticsearch.common.settings.Settings settings20 = indexMetaData14.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder21 = builder9.settings(settings20);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData22 = builder21.build();
        long long23 = indexMetaData22.getVersion();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData25 = indexMetaData22.mappingOrDefault("index.version.upgraded_string");
        int int26 = indexMetaData22.getNumberOfShards();
        java.lang.String str27 = indexMetaData22.getIndexUUID();
        long long28 = indexMetaData22.getVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder29 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData22);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(indexMetaData14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap16);
        org.junit.Assert.assertNotNull(indexShardStateSet17);
        org.junit.Assert.assertNull(discoveryNodeFilters19);
        org.junit.Assert.assertNotNull(settings20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(indexMetaData22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1L + "'", long23 == 1L);
        org.junit.Assert.assertNull(mappingMetaData25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "_na_" + "'", str27, "_na_");
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 1L + "'", long28 == 1L);
    }

    @Test
    public void test4137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4137");
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest3 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest3);
        org.elasticsearch.action.update.UpdateHelper.Result result5 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult11 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult12 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result5, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, false, throwable10, writeResult11);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest7);
        org.elasticsearch.tasks.TaskId taskId14 = null;
        bulkShardRequest7.setParentTask(taskId14);
        org.elasticsearch.index.shard.ShardId shardId16 = bulkShardRequest7.shardId();
        bulkShardRequest7.seqNo((long) 0);
        java.lang.Throwable throwable20 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult21 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult22 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, false, throwable20, writeResult21);
        long long23 = bulkShardRequest7.seqNo();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest24 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 10, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str25 = bulkShardRequest7.getDescription();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
    }

    @Test
    public void test4138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4138");
        java.util.Map<java.lang.String, org.elasticsearch.cluster.metadata.IndexMetaData.Custom> strMap0 = org.elasticsearch.cluster.metadata.IndexMetaData.customPrototypes;
        org.elasticsearch.cluster.metadata.IndexMetaData.customPrototypes = strMap0;
        org.elasticsearch.cluster.metadata.IndexMetaData.customPrototypes = strMap0;
        org.elasticsearch.index.VersionType versionType3 = org.elasticsearch.index.VersionType.INTERNAL;
        boolean boolean5 = versionType3.validateVersionForWrites((long) (byte) 100);
        java.lang.Class<?> wildcardClass6 = versionType3.getClass();
        org.elasticsearch.common.collect.Tuple<java.util.Map<java.lang.String, org.elasticsearch.cluster.metadata.IndexMetaData.Custom>, java.lang.reflect.GenericDeclaration> strMapTuple7 = org.elasticsearch.common.collect.Tuple.tuple(strMap0, (java.lang.reflect.GenericDeclaration) wildcardClass6);
        org.elasticsearch.cluster.metadata.IndexMetaData.customPrototypes = strMap0;
        org.elasticsearch.cluster.metadata.IndexMetaData.customPrototypes = strMap0;
// flaky:         org.junit.Assert.assertNull(strMap0);
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(strMapTuple7);
    }

    @Test
    public void test4139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4139");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = builder1.removeAllAliases();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder2.primaryTerm(1, 10L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: you must set the number of shards before setting/reading primary terms");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder2);
    }

    @Test
    public void test4140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4140");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest3 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest3);
        org.elasticsearch.action.update.UpdateHelper.Result result5 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult11 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult12 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result5, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, false, throwable10, writeResult11);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest7);
        java.lang.Throwable throwable15 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult16 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult17 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, true, throwable15, writeResult16);
        org.elasticsearch.index.shard.ShardId shardId18 = bulkShardRequest7.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue19 = bulkShardRequest7.timeout();
        long long20 = bulkShardRequest7.seqNo();
        java.lang.Throwable throwable22 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult23 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult24 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, true, throwable22, writeResult23);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str25 = bulkShardRequest7.getDescription();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
    }

    @Test
    public void test4141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4141");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.State state7 = org.elasticsearch.cluster.metadata.IndexMetaData.State.fromId((byte) 1);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = builder5.state(state7);
        org.elasticsearch.cluster.metadata.AliasMetaData aliasMetaData9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder10 = builder8.putAlias(aliasMetaData9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertTrue("'" + state7 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.CLOSE + "'", state7.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.CLOSE));
        org.junit.Assert.assertNotNull(builder8);
    }

    @Test
    public void test4142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4142");
        org.elasticsearch.gateway.MetaDataStateFormat<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataMetaDataStateFormat0 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData1 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters2 = indexMetaData1.requireFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData1);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.gateway.MetaDataStateFormat<org.elasticsearch.cluster.metadata.IndexMetaData>, org.elasticsearch.common.xcontent.ToXContent> indexMetaDataMetaDataStateFormatTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.gateway.MetaDataStateFormat<org.elasticsearch.cluster.metadata.IndexMetaData>, org.elasticsearch.common.xcontent.ToXContent>(indexMetaDataMetaDataStateFormat0, (org.elasticsearch.common.xcontent.ToXContent) indexMetaData1);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData1);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData1);
        org.junit.Assert.assertNotNull(indexMetaData1);
        org.junit.Assert.assertNull(discoveryNodeFilters2);
    }

    @Test
    public void test4143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4143");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.VersionType versionType1 = org.elasticsearch.index.VersionType.fromString("current version [32] is different than the one provided [32]");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No version type match [current version [32] is different than the one provided [32]]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test4144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4144");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest3 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable5 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult6 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult7 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest3, false, throwable5, writeResult6);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult8 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult9 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest3, writeResult8);
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult12 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult13 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest3, true, throwable11, writeResult12);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult14 = updateResult13.writeResult;
        java.lang.Throwable throwable15 = updateResult13.error;
        boolean boolean16 = updateResult13.retry;
        org.junit.Assert.assertNull(writeResult14);
        org.junit.Assert.assertNull(throwable15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test4145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4145");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.Version version2 = indexMetaData0.getCreationVersion();
        long long3 = indexMetaData0.getCreationDate();
        int int4 = indexMetaData0.getTotalNumberOfShards();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap5 = indexMetaData0.getAliases();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters6 = indexMetaData0.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData7 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData7);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap9 = indexMetaData7.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet10 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData7, indexShardStateSet10);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters12 = indexMetaData7.includeFilters();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest14 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest15 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest14);
        org.elasticsearch.action.update.UpdateHelper.Result result16 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest18 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest19 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest18);
        java.lang.Throwable throwable21 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult22 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult23 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result16, (org.elasticsearch.action.ActionRequest) bulkShardRequest18, false, throwable21, writeResult22);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple24 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest15, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest18);
        org.elasticsearch.index.VersionType versionType25 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean29 = versionType25.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple30 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest15, versionType25);
        boolean boolean34 = versionType25.isVersionConflictForWrites((long) 0, (long) (short) 0, false);
        boolean boolean35 = indexMetaData7.equals((java.lang.Object) boolean34);
        int int36 = indexMetaData7.getNumberOfReplicas();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state37 = indexMetaData7.getState();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData38 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder40 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder41 = builder40.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder43 = builder41.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder46 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int47 = builder46.numberOfShards();
        java.lang.String[] strArray51 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet52 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet52, strArray51);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder54 = builder46.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet52);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder55 = builder41.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet52);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple56 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData38, (java.lang.Iterable<java.lang.String>) strSet52);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap57 = indexMetaData38.getAliases();
        int int58 = indexMetaData38.getNumberOfShards();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters59 = indexMetaData38.excludeFilters();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap60 = indexMetaData38.getAliases();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff61 = indexMetaData7.diff(indexMetaData38);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff62 = indexMetaData0.diff(indexMetaData7);
        org.elasticsearch.Version version63 = indexMetaData0.getUpgradedVersion();
        long long64 = indexMetaData0.getVersion();
        int int65 = indexMetaData0.getTotalNumberOfShards();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap66 = indexMetaData0.getAliases();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters67 = indexMetaData0.includeFilters();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(version2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(strImmutableOpenMap5);
        org.junit.Assert.assertNull(discoveryNodeFilters6);
        org.junit.Assert.assertNotNull(indexMetaData7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap9);
        org.junit.Assert.assertNotNull(indexShardStateSet10);
        org.junit.Assert.assertNull(discoveryNodeFilters12);
        org.junit.Assert.assertNotNull(versionType25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + state37 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state37.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertNotNull(indexMetaData38);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple56);
        org.junit.Assert.assertNotNull(strImmutableOpenMap57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNull(discoveryNodeFilters59);
        org.junit.Assert.assertNotNull(strImmutableOpenMap60);
        org.junit.Assert.assertNotNull(indexMetaDataDiff61);
        org.junit.Assert.assertNotNull(indexMetaDataDiff62);
        org.junit.Assert.assertNotNull(version63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 1L + "'", long64 == 1L);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertNotNull(strImmutableOpenMap66);
        org.junit.Assert.assertNull(discoveryNodeFilters67);
    }

    @Test
    public void test4146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4146");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting1 = null;
        java.lang.Throwable throwable3 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure5 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting1, "", throwable3, "");
        org.elasticsearch.action.update.UpdateHelper.Result result6 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult10 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult11 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result6, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, false, throwable9, writeResult10);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure5, (org.elasticsearch.transport.TransportMessage) bulkShardRequest7);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest14 = bulkShardRequest7.index("index.version.created");
        long long15 = bulkShardRequest7.seqNo();
        long long16 = bulkShardRequest7.primaryTerm();
        org.elasticsearch.cluster.routing.ShardRouting shardRouting18 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting20 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting22 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting24 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting26 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting28 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting30 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result32 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest34 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest35 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest34);
        org.elasticsearch.action.update.UpdateHelper.Result result36 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest38 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest39 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest38);
        java.lang.Throwable throwable41 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult42 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult43 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result36, (org.elasticsearch.action.ActionRequest) bulkShardRequest38, false, throwable41, writeResult42);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple44 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest35, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest38);
        org.elasticsearch.tasks.TaskId taskId45 = null;
        bulkShardRequest38.setParentTask(taskId45);
        org.elasticsearch.index.shard.ShardId shardId47 = bulkShardRequest38.shardId();
        bulkShardRequest38.seqNo((long) 0);
        java.lang.Throwable throwable51 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult52 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult53 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result32, (org.elasticsearch.action.ActionRequest) bulkShardRequest38, false, throwable51, writeResult52);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException54 = bulkShardRequest38.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure56 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting30, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException54, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure58 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting28, "update", (java.lang.Throwable) actionRequestValidationException54, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure60 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting26, "_na_", (java.lang.Throwable) actionRequestValidationException54, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure62 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting24, "_na_", (java.lang.Throwable) actionRequestValidationException54, "index.version.upgraded");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure64 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting22, "index.shadow_replicas", (java.lang.Throwable) actionRequestValidationException54, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure66 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting20, "index.blocks.write", (java.lang.Throwable) actionRequestValidationException54, "primary_terms");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure68 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting18, "current version [2] is higher than the one provided [-1]", (java.lang.Throwable) actionRequestValidationException54, "");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult69 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult70 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, true, (java.lang.Throwable) actionRequestValidationException54, writeResult69);
        boolean boolean71 = updateResult70.retry;
        org.junit.Assert.assertNotNull(bulkShardRequest14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNull(shardId47);
        org.junit.Assert.assertNotNull(actionRequestValidationException54);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    }

    @Test
    public void test4147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4147");
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.ActionRequest actionRequest6 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest6);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple9 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest7, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest8);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest10 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.action.ActionRequest actionRequest12 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest13 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest12);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest14 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple15 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest13, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple16 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest10, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest14);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest17 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue18 = bulkShardRequest17.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest19 = bulkShardRequest14.timeout(timeValue18);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest20 = new org.elasticsearch.action.bulk.BulkItemRequest((-1), (org.elasticsearch.action.ActionRequest) bulkShardRequest19);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult21 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult22 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest19, writeResult21);
        org.elasticsearch.action.update.UpdateHelper.Result result23 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest25 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest26 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest25);
        org.elasticsearch.action.update.UpdateHelper.Result result27 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest29 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest30 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest29);
        java.lang.Throwable throwable32 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult33 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult34 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result27, (org.elasticsearch.action.ActionRequest) bulkShardRequest29, false, throwable32, writeResult33);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple35 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest26, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest29);
        java.lang.Throwable throwable37 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult38 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult39 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result23, (org.elasticsearch.action.ActionRequest) bulkShardRequest29, true, throwable37, writeResult38);
        org.elasticsearch.index.shard.ShardId shardId40 = bulkShardRequest29.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue41 = bulkShardRequest29.timeout();
        org.elasticsearch.tasks.TaskId taskId42 = bulkShardRequest29.getParentTask();
        bulkShardRequest19.setParentTask(taskId42);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest44 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 10, (org.elasticsearch.action.ActionRequest) bulkShardRequest19);
        org.elasticsearch.action.ActionRequest actionRequest46 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest47 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest46);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest48 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple49 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest47, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest48);
        org.elasticsearch.common.transport.TransportAddress transportAddress50 = null;
        bulkShardRequest48.remoteAddress(transportAddress50);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel52 = bulkShardRequest48.consistencyLevel();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest53 = bulkShardRequest19.consistencyLevel(writeConsistencyLevel52);
        org.elasticsearch.tasks.TaskId taskId54 = bulkShardRequest53.getParentTask();
        org.elasticsearch.tasks.TaskId taskId55 = bulkShardRequest53.getParentTask();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest56 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest53);
        org.elasticsearch.action.update.UpdateHelper.Result result57 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result58 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result59 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest61 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest62 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest61);
        org.elasticsearch.action.update.UpdateHelper.Result result63 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest65 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest66 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest65);
        java.lang.Throwable throwable68 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult69 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult70 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result63, (org.elasticsearch.action.ActionRequest) bulkShardRequest65, false, throwable68, writeResult69);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple71 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest62, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest65);
        java.lang.Throwable throwable73 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult74 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult75 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result59, (org.elasticsearch.action.ActionRequest) bulkShardRequest65, true, throwable73, writeResult74);
        org.elasticsearch.index.shard.ShardId shardId76 = bulkShardRequest65.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue77 = bulkShardRequest65.timeout();
        long long78 = bulkShardRequest65.seqNo();
        java.lang.Throwable throwable80 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult81 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult82 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result58, (org.elasticsearch.action.ActionRequest) bulkShardRequest65, true, throwable80, writeResult81);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult83 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult84 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result57, (org.elasticsearch.action.ActionRequest) bulkShardRequest65, writeResult83);
        long long85 = bulkShardRequest65.primaryTerm();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple86 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest56, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest65);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput87 = null;
        // The following exception was thrown during execution in test generation
        try {
            bulkItemRequest56.writeTo(streamOutput87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(timeValue18);
        org.junit.Assert.assertNotNull(bulkShardRequest19);
        org.junit.Assert.assertNull(shardId40);
        org.junit.Assert.assertNotNull(timeValue41);
        org.junit.Assert.assertNotNull(taskId42);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel52 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel52.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(bulkShardRequest53);
        org.junit.Assert.assertNotNull(taskId54);
        org.junit.Assert.assertNotNull(taskId55);
        org.junit.Assert.assertNull(shardId76);
        org.junit.Assert.assertNotNull(timeValue77);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 0L + "'", long78 == 0L);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 0L + "'", long85 == 0L);
    }

    @Test
    public void test4148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4148");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters1 = indexMetaData0.requireFilters();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData3 = indexMetaData0.mappingOrDefault("index.auto_expand_replicas");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.apache.lucene.util.Version version5 = indexMetaData0.getMinimumCompatibleVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.MappingMetaData> strImmutableOpenMap7 = indexMetaData0.getMappings();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNull(discoveryNodeFilters1);
        org.junit.Assert.assertNull(mappingMetaData3);
        org.junit.Assert.assertNull(version5);
        org.junit.Assert.assertNotNull(strImmutableOpenMap7);
    }

    @Test
    public void test4149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4149");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.update.UpdateHelper.Result result6 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult12 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult13 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result6, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable11, writeResult12);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest8);
        org.elasticsearch.tasks.TaskId taskId15 = null;
        bulkShardRequest8.setParentTask(taskId15);
        org.elasticsearch.index.shard.ShardId shardId17 = bulkShardRequest8.shardId();
        bulkShardRequest8.seqNo((long) 0);
        java.lang.Throwable throwable21 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult22 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult23 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable21, writeResult22);
        long long24 = bulkShardRequest8.seqNo();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult25 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult26 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, writeResult25);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult27 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult28 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, writeResult27);
        boolean boolean29 = updateResult28.failure();
        org.elasticsearch.action.ActionRequest actionRequest30 = updateResult28.actionRequest;
        org.elasticsearch.action.update.UpdateHelper.Result result31 = updateResult28.result;
        org.elasticsearch.action.ActionRequest actionRequest32 = updateResult28.actionRequest;
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(actionRequest30);
        org.junit.Assert.assertNull(result31);
        org.junit.Assert.assertNotNull(actionRequest32);
    }

    @Test
    public void test4150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4150");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData7 = indexMetaData0.mapping("index.");
        int int8 = indexMetaData0.getNumberOfShards();
        org.elasticsearch.Version version9 = indexMetaData0.getCreationVersion();
        long long10 = indexMetaData0.getCreationDate();
        org.elasticsearch.common.settings.Settings settings11 = indexMetaData0.getSettings();
        boolean boolean12 = org.elasticsearch.cluster.metadata.IndexMetaData.isIndexUsingShadowReplicas(settings11);
        boolean boolean13 = org.elasticsearch.cluster.metadata.IndexMetaData.isIndexUsingShadowReplicas(settings11);
        org.elasticsearch.common.settings.Settings settings14 = org.elasticsearch.cluster.metadata.IndexMetaData.addHumanReadableSettings(settings11);
        boolean boolean15 = org.elasticsearch.cluster.metadata.IndexMetaData.isOnSharedFilesystem(settings11);
        boolean boolean16 = org.elasticsearch.cluster.metadata.IndexMetaData.isOnSharedFilesystem(settings11);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNull(mappingMetaData7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(version9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(settings11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(settings14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test4151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4151");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result14 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest16 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest17 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest16);
        org.elasticsearch.action.update.UpdateHelper.Result result18 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest20 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest20);
        java.lang.Throwable throwable23 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult24 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult25 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result18, (org.elasticsearch.action.ActionRequest) bulkShardRequest20, false, throwable23, writeResult24);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple26 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest17, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest20);
        org.elasticsearch.tasks.TaskId taskId27 = null;
        bulkShardRequest20.setParentTask(taskId27);
        org.elasticsearch.index.shard.ShardId shardId29 = bulkShardRequest20.shardId();
        bulkShardRequest20.seqNo((long) 0);
        java.lang.Throwable throwable33 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult34 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult35 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result14, (org.elasticsearch.action.ActionRequest) bulkShardRequest20, false, throwable33, writeResult34);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException36 = bulkShardRequest20.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException36, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "update", (java.lang.Throwable) actionRequestValidationException36, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "_na_", (java.lang.Throwable) actionRequestValidationException36, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "_na_", (java.lang.Throwable) actionRequestValidationException36, "index.version.upgraded");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "index.shadow_replicas", (java.lang.Throwable) actionRequestValidationException36, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "index.blocks.write", (java.lang.Throwable) actionRequestValidationException36, "primary_terms");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "index.version.upgraded_string", (java.lang.Throwable) actionRequestValidationException36, "primary_terms");
        java.lang.String str51 = shardFailure50.indexUUID;
        java.lang.Throwable throwable52 = shardFailure50.cause;
        org.junit.Assert.assertNull(shardId29);
        org.junit.Assert.assertNotNull(actionRequestValidationException36);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "primary_terms" + "'", str51, "primary_terms");
        org.junit.Assert.assertNotNull(throwable52);
        org.junit.Assert.assertEquals(throwable52.getLocalizedMessage(), "Validation Failed: 1: index is missing;");
        org.junit.Assert.assertEquals(throwable52.getMessage(), "Validation Failed: 1: index is missing;");
        org.junit.Assert.assertEquals(throwable52.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;");
    }

    @Test
    public void test4152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4152");
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.update.UpdateHelper.Result result6 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult12 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult13 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result6, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable11, writeResult12);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest8);
        org.elasticsearch.tasks.TaskId taskId15 = null;
        bulkShardRequest8.setParentTask(taskId15);
        java.lang.Throwable throwable18 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult19 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult20 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, true, throwable18, writeResult19);
        org.elasticsearch.action.support.IndicesOptions indicesOptions21 = bulkShardRequest8.indicesOptions();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        bulkShardRequest8.primaryTerm(98L);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest25 = new org.elasticsearch.action.bulk.BulkItemRequest((int) '#', (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.common.transport.TransportAddress transportAddress26 = null;
        bulkShardRequest8.remoteAddress(transportAddress26);
        org.junit.Assert.assertNotNull(indicesOptions21);
    }

    @Test
    public void test4153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4153");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder2.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder3.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int9 = builder8.numberOfShards();
        java.lang.String[] strArray13 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder8.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder3.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple18 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData0, (java.lang.Iterable<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap19 = indexMetaData0.getAliases();
        int int20 = indexMetaData0.getNumberOfShards();
        org.elasticsearch.Version version21 = indexMetaData0.getCreationVersion();
        long long22 = indexMetaData0.getVersion();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData24 = indexMetaData0.mapping("index.auto_expand_replicas");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder25 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple18);
        org.junit.Assert.assertNotNull(strImmutableOpenMap19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(version21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1L + "'", long22 == 1L);
        org.junit.Assert.assertNull(mappingMetaData24);
        org.junit.Assert.assertNotNull(builder25);
    }

    @Test
    public void test4154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4154");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.VersionType versionType1 = org.elasticsearch.index.VersionType.fromString("current version [-1] is higher than the one provided [0]");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No version type match [current version [-1] is higher than the one provided [0]]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test4155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4155");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result18 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest20 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest20);
        org.elasticsearch.action.update.UpdateHelper.Result result22 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest24 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest25 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest24);
        java.lang.Throwable throwable27 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult28 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult29 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result22, (org.elasticsearch.action.ActionRequest) bulkShardRequest24, false, throwable27, writeResult28);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple30 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest21, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest24);
        org.elasticsearch.tasks.TaskId taskId31 = null;
        bulkShardRequest24.setParentTask(taskId31);
        org.elasticsearch.index.shard.ShardId shardId33 = bulkShardRequest24.shardId();
        bulkShardRequest24.seqNo((long) 0);
        java.lang.Throwable throwable37 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult38 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult39 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result18, (org.elasticsearch.action.ActionRequest) bulkShardRequest24, false, throwable37, writeResult38);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException40 = bulkShardRequest24.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting16, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException40, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "update", (java.lang.Throwable) actionRequestValidationException40, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "_na_", (java.lang.Throwable) actionRequestValidationException40, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "primary_terms", (java.lang.Throwable) actionRequestValidationException40, "delete");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "index.blocks.read_only", (java.lang.Throwable) actionRequestValidationException40, "delete");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure52 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "update", (java.lang.Throwable) actionRequestValidationException40, "index.version.minimum_compatible");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure54 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "index.priority", (java.lang.Throwable) actionRequestValidationException40, "current version [10] is different than the one provided [32]");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure56 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "index.version.created", (java.lang.Throwable) actionRequestValidationException40, "index.version.upgraded_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure58 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "index.version.minimum_compatible", (java.lang.Throwable) actionRequestValidationException40, "current version [0] is higher or equal to the one provided [35]");
        org.junit.Assert.assertNull(shardId33);
        org.junit.Assert.assertNotNull(actionRequestValidationException40);
    }

    @Test
    public void test4156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4156");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure6 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", throwable4, "");
        org.elasticsearch.action.update.UpdateHelper.Result result7 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult11 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult12 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result7, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable10, writeResult11);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure6, (org.elasticsearch.transport.TransportMessage) bulkShardRequest8);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest15 = bulkShardRequest8.index("hi!");
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest16 = new org.elasticsearch.action.bulk.BulkItemRequest((int) '#', (org.elasticsearch.action.ActionRequest) bulkShardRequest15);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest17 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.String str18 = bulkShardRequest17.index();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple19 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest16, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest17);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest22 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest23 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest22);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel24 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest25 = bulkShardRequest22.consistencyLevel(writeConsistencyLevel24);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest26 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest25);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple27 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest16, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest25);
        org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestReplicationRequest28 = bulkItemRequestTuple27.v2();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest29 = bulkItemRequestTuple27.v1();
        org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestReplicationRequest30 = bulkItemRequestTuple27.v2();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest31 = new org.elasticsearch.action.bulk.BulkItemRequest((-1), (org.elasticsearch.action.ActionRequest) bulkShardRequestReplicationRequest30);
        org.junit.Assert.assertNotNull(bulkShardRequest15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(bulkShardRequest25);
        org.junit.Assert.assertNotNull(bulkShardRequestReplicationRequest28);
        org.junit.Assert.assertNotNull(bulkItemRequest29);
        org.junit.Assert.assertNotNull(bulkShardRequestReplicationRequest30);
    }

    @Test
    public void test4157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4157");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result4 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest6 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest6);
        org.elasticsearch.action.update.UpdateHelper.Result result8 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest10 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest11 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest10);
        java.lang.Throwable throwable13 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult14 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult15 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result8, (org.elasticsearch.action.ActionRequest) bulkShardRequest10, false, throwable13, writeResult14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple16 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest7, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest10);
        org.elasticsearch.tasks.TaskId taskId17 = null;
        bulkShardRequest10.setParentTask(taskId17);
        org.elasticsearch.index.shard.ShardId shardId19 = bulkShardRequest10.shardId();
        bulkShardRequest10.seqNo((long) 0);
        java.lang.Throwable throwable23 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult24 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult25 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result4, (org.elasticsearch.action.ActionRequest) bulkShardRequest10, false, throwable23, writeResult24);
        long long26 = bulkShardRequest10.seqNo();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult27 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult28 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest10, writeResult27);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult29 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult30 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest10, writeResult29);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest31 = new org.elasticsearch.action.bulk.BulkItemRequest(97, (org.elasticsearch.action.ActionRequest) bulkShardRequest10);
        int int32 = bulkItemRequest31.id();
        org.elasticsearch.action.ActionRequest actionRequest35 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest36 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest35);
        org.elasticsearch.action.ActionRequest actionRequest39 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest40 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest39);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest41 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple42 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest40, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest41);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest43 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest41);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple44 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest36, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest41);
        org.elasticsearch.common.transport.TransportAddress transportAddress45 = null;
        bulkShardRequest41.remoteAddress(transportAddress45);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest47 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest41);
        org.elasticsearch.action.ActionRequest actionRequest49 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest50 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest49);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest51 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple52 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest50, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest51);
        boolean boolean53 = bulkShardRequest51.getShouldPersistResult();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder55 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int56 = builder55.numberOfShards();
        java.lang.String[] strArray60 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet61 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet61, strArray60);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder63 = builder55.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet61);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>> streamableTuple64 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>>((org.elasticsearch.common.io.stream.Streamable) bulkShardRequest51, strSet61);
        org.elasticsearch.index.shard.ShardId shardId65 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest66 = bulkShardRequest51.setShardId(shardId65);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple67 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest47, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest66);
        org.elasticsearch.action.update.UpdateHelper.Result result69 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest71 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest72 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest71);
        org.elasticsearch.action.update.UpdateHelper.Result result73 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest75 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest76 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest75);
        java.lang.Throwable throwable78 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult79 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult80 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result73, (org.elasticsearch.action.ActionRequest) bulkShardRequest75, false, throwable78, writeResult79);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple81 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest72, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest75);
        java.lang.Throwable throwable83 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult84 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult85 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result69, (org.elasticsearch.action.ActionRequest) bulkShardRequest75, true, throwable83, writeResult84);
        org.elasticsearch.index.shard.ShardId shardId86 = bulkShardRequest75.shardId();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest87 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest75);
        long long88 = bulkShardRequest75.seqNo();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple89 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest47, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest75);
        org.elasticsearch.index.shard.ShardId shardId90 = bulkShardRequest75.shardId();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple91 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest31, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest75);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult92 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult93 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest75, writeResult92);
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 97 + "'", int32 == 97);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(bulkShardRequest66);
        org.junit.Assert.assertNull(shardId86);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 0L + "'", long88 == 0L);
        org.junit.Assert.assertNull(shardId90);
    }

    @Test
    public void test4158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4158");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.Version version2 = indexMetaData0.getCreationVersion();
        long long3 = indexMetaData0.getCreationDate();
        long long4 = indexMetaData0.getCreationDate();
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap5 = indexMetaData0.getActiveAllocationIds();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData7 = indexMetaData0.mapping("_na_");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("index.creation_date_string");
        boolean boolean10 = indexMetaData0.equals((java.lang.Object) "index.creation_date_string");
        org.elasticsearch.common.settings.Settings settings11 = indexMetaData0.getSettings();
        boolean boolean12 = org.elasticsearch.cluster.metadata.IndexMetaData.isIndexUsingShadowReplicas(settings11);
        boolean boolean13 = org.elasticsearch.cluster.metadata.IndexMetaData.isIndexUsingShadowReplicas(settings11);
        org.elasticsearch.transport.TransportService transportService14 = null;
        org.elasticsearch.cluster.service.ClusterService clusterService15 = null;
        org.elasticsearch.indices.IndicesService indicesService16 = null;
        org.elasticsearch.threadpool.ThreadPool threadPool17 = null;
        org.elasticsearch.cluster.action.shard.ShardStateAction shardStateAction18 = null;
        org.elasticsearch.cluster.action.index.MappingUpdatedAction mappingUpdatedAction19 = null;
        org.elasticsearch.action.update.UpdateHelper updateHelper20 = null;
        org.elasticsearch.action.support.ActionFilters actionFilters21 = null;
        org.elasticsearch.cluster.metadata.IndexNameExpressionResolver indexNameExpressionResolver22 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.bulk.TransportShardBulkAction transportShardBulkAction23 = new org.elasticsearch.action.bulk.TransportShardBulkAction(settings11, transportService14, clusterService15, indicesService16, threadPool17, shardStateAction18, mappingUpdatedAction19, updateHelper20, actionFilters21, indexNameExpressionResolver22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(version2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap5);
        org.junit.Assert.assertNull(mappingMetaData7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(settings11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test4159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4159");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest2 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue3 = bulkShardRequest2.timeout();
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = bulkShardRequest2.indicesOptions();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = bulkShardRequest2.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure7 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "index.blocks.read_only", (java.lang.Throwable) actionRequestValidationException5, "index.priority");
        org.junit.Assert.assertNotNull(timeValue3);
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
    }

    @Test
    public void test4160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4160");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = builder1.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = builder2.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int8 = builder7.numberOfShards();
        java.lang.String[] strArray12 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder15 = builder7.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder2.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder18 = builder16.creationDate((long) (byte) 10);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder20 = builder18.removeAlias("indices:data/write/bulk[s]");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder23 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int24 = builder23.numberOfShards();
        java.lang.String[] strArray28 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet29 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet29, strArray28);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder31 = builder23.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet29);
        org.elasticsearch.cluster.metadata.IndexMetaData.State state32 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder33 = builder31.state(state32);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder35 = builder31.removeAlias("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder37 = builder31.numberOfReplicas((int) (byte) -1);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder39 = builder37.version((long) (byte) 0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder42 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder43 = builder42.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder45 = builder43.numberOfReplicas((int) '#');
        org.elasticsearch.action.ActionRequest actionRequest48 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest49 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest48);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest50 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple51 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest49, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest50);
        boolean boolean52 = bulkShardRequest50.getShouldPersistResult();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder54 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int55 = builder54.numberOfShards();
        java.lang.String[] strArray59 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet60 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet60, strArray59);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder62 = builder54.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet60);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>> streamableTuple63 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>>((org.elasticsearch.common.io.stream.Streamable) bulkShardRequest50, strSet60);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder64 = builder43.putActiveAllocationIds((int) (short) 10, (java.util.Set<java.lang.String>) strSet60);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder65 = builder39.putActiveAllocationIds((int) (short) 100, (java.util.Set<java.lang.String>) strSet60);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder66 = builder18.putActiveAllocationIds(10, (java.util.Set<java.lang.String>) strSet60);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData67 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder68 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData67);
        org.elasticsearch.Version version69 = indexMetaData67.getCreationVersion();
        long long70 = indexMetaData67.getCreationDate();
        long long71 = indexMetaData67.getCreationDate();
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap72 = indexMetaData67.getActiveAllocationIds();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData74 = indexMetaData67.mapping("_na_");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder76 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("index.creation_date_string");
        boolean boolean77 = indexMetaData67.equals((java.lang.Object) "index.creation_date_string");
        org.elasticsearch.common.settings.Settings settings78 = indexMetaData67.getSettings();
        boolean boolean79 = org.elasticsearch.cluster.metadata.IndexMetaData.isOnSharedFilesystem(settings78);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder80 = builder66.settings(settings78);
        org.elasticsearch.common.settings.Settings settings81 = org.elasticsearch.cluster.metadata.IndexMetaData.addHumanReadableSettings(settings78);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(indexMetaData67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(version69);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + (-1L) + "'", long70 == (-1L));
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + (-1L) + "'", long71 == (-1L));
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap72);
        org.junit.Assert.assertNull(mappingMetaData74);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(settings78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(settings81);
    }

    @Test
    public void test4161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4161");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest3 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest3);
        org.elasticsearch.action.update.UpdateHelper.Result result5 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult11 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult12 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result5, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, false, throwable10, writeResult11);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest7);
        org.elasticsearch.tasks.TaskId taskId14 = null;
        bulkShardRequest7.setParentTask(taskId14);
        org.elasticsearch.index.shard.ShardId shardId16 = bulkShardRequest7.shardId();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult17 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult18 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, writeResult17);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting20 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting22 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result24 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest26 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest27 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest26);
        org.elasticsearch.action.update.UpdateHelper.Result result28 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest30 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest31 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest30);
        java.lang.Throwable throwable33 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult34 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult35 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result28, (org.elasticsearch.action.ActionRequest) bulkShardRequest30, false, throwable33, writeResult34);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple36 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest27, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest30);
        org.elasticsearch.tasks.TaskId taskId37 = null;
        bulkShardRequest30.setParentTask(taskId37);
        org.elasticsearch.index.shard.ShardId shardId39 = bulkShardRequest30.shardId();
        bulkShardRequest30.seqNo((long) 0);
        java.lang.Throwable throwable43 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult44 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult45 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result24, (org.elasticsearch.action.ActionRequest) bulkShardRequest30, false, throwable43, writeResult44);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException46 = bulkShardRequest30.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting22, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException46, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting20, "index.blocks.metadata", (java.lang.Throwable) actionRequestValidationException46, "index.version.upgraded");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult51 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult52 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, true, (java.lang.Throwable) actionRequestValidationException46, writeResult51);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest53 = updateResult52.request();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult54 = updateResult52.writeResult;
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertNull(shardId39);
        org.junit.Assert.assertNotNull(actionRequestValidationException46);
        org.junit.Assert.assertNotNull(bulkShardRequest53);
        org.junit.Assert.assertNull(writeResult54);
    }

    @Test
    public void test4162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4162");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters3 = indexMetaData0.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = builder5.creationDate((long) (byte) 0);
        org.elasticsearch.common.settings.Settings settings8 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = builder5.settings(settings8);
        // The following exception was thrown during execution in test generation
        try {
            int int10 = builder9.numberOfReplicas();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNull(discoveryNodeFilters3);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
    }

    @Test
    public void test4163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4163");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", throwable2, "");
        org.elasticsearch.action.update.UpdateHelper.Result result5 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest6 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result5, (org.elasticsearch.action.ActionRequest) bulkShardRequest6, false, throwable8, writeResult9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure4, (org.elasticsearch.transport.TransportMessage) bulkShardRequest6);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest13 = bulkShardRequest6.index("index.version.created");
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest15 = bulkShardRequest6.setShardId(shardId14);
        org.elasticsearch.action.update.UpdateHelper.Result result17 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result18 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest20 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest20);
        org.elasticsearch.action.update.UpdateHelper.Result result22 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest24 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest25 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest24);
        java.lang.Throwable throwable27 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult28 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult29 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result22, (org.elasticsearch.action.ActionRequest) bulkShardRequest24, false, throwable27, writeResult28);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple30 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest21, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest24);
        java.lang.Throwable throwable32 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult33 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult34 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result18, (org.elasticsearch.action.ActionRequest) bulkShardRequest24, true, throwable32, writeResult33);
        org.elasticsearch.index.shard.ShardId shardId35 = bulkShardRequest24.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue36 = bulkShardRequest24.timeout();
        org.elasticsearch.tasks.TaskId taskId37 = bulkShardRequest24.getParentTask();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult38 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult39 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result17, (org.elasticsearch.action.ActionRequest) bulkShardRequest24, writeResult38);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest40 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 10, (org.elasticsearch.action.ActionRequest) bulkShardRequest24);
        org.elasticsearch.action.update.UpdateHelper.Result result41 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest43 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest44 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest43);
        java.lang.Throwable throwable46 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult47 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult48 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result41, (org.elasticsearch.action.ActionRequest) bulkShardRequest43, false, throwable46, writeResult47);
        org.elasticsearch.action.update.UpdateHelper.Result result49 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest51 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest52 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest51);
        org.elasticsearch.action.update.UpdateHelper.Result result53 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest55 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest56 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest55);
        java.lang.Throwable throwable58 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult59 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult60 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result53, (org.elasticsearch.action.ActionRequest) bulkShardRequest55, false, throwable58, writeResult59);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple61 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest52, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest55);
        java.lang.Throwable throwable63 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult64 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult65 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result49, (org.elasticsearch.action.ActionRequest) bulkShardRequest55, true, throwable63, writeResult64);
        org.elasticsearch.index.shard.ShardId shardId66 = bulkShardRequest55.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue67 = bulkShardRequest55.timeout();
        org.elasticsearch.tasks.TaskId taskId68 = bulkShardRequest55.getParentTask();
        bulkShardRequest43.setParentTask(taskId68);
        bulkShardRequest24.setParentTask(taskId68);
        bulkShardRequest6.setParentTask(taskId68);
        org.elasticsearch.index.shard.ShardId shardId72 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest73 = bulkShardRequest6.setShardId(shardId72);
        bulkShardRequest6.primaryTerm((long) 10);
        long long76 = bulkShardRequest6.primaryTerm();
        org.junit.Assert.assertNotNull(bulkShardRequest13);
        org.junit.Assert.assertNotNull(bulkShardRequest15);
        org.junit.Assert.assertNull(shardId35);
        org.junit.Assert.assertNotNull(timeValue36);
        org.junit.Assert.assertNotNull(taskId37);
        org.junit.Assert.assertNull(shardId66);
        org.junit.Assert.assertNotNull(timeValue67);
        org.junit.Assert.assertNotNull(taskId68);
        org.junit.Assert.assertNotNull(bulkShardRequest73);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 10L + "'", long76 == 10L);
    }

    @Test
    public void test4164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4164");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest1 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest1);
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, false, throwable8, writeResult9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.index.VersionType versionType12 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean16 = versionType12.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest2, versionType12);
        boolean boolean21 = versionType12.isVersionConflictForWrites(10L, (long) (byte) 0, false);
        boolean boolean23 = versionType12.validateVersionForReads(10L);
        boolean boolean26 = versionType12.isVersionConflictForReads(100L, (long) 'a');
        boolean boolean28 = versionType12.validateVersionForWrites((long) (short) 10);
        long long31 = versionType12.updateVersion(1L, (long) '4');
        org.elasticsearch.index.VersionType versionType32 = versionType12.versionTypeForReplicationAndRecovery();
        boolean boolean35 = versionType12.isVersionConflictForReads((long) (byte) 3, (long) (-1));
        byte byte36 = versionType12.getValue();
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 52L + "'", long31 == 52L);
        org.junit.Assert.assertNotNull(versionType32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + byte36 + "' != '" + (byte) 3 + "'", byte36 == (byte) 3);
    }

    @Test
    public void test4165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4165");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result16 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest18 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest19 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest18);
        org.elasticsearch.action.update.UpdateHelper.Result result20 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest22 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest23 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest22);
        java.lang.Throwable throwable25 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult26 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult27 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result20, (org.elasticsearch.action.ActionRequest) bulkShardRequest22, false, throwable25, writeResult26);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple28 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest19, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest22);
        org.elasticsearch.tasks.TaskId taskId29 = null;
        bulkShardRequest22.setParentTask(taskId29);
        org.elasticsearch.index.shard.ShardId shardId31 = bulkShardRequest22.shardId();
        bulkShardRequest22.seqNo((long) 0);
        java.lang.Throwable throwable35 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult36 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult37 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result16, (org.elasticsearch.action.ActionRequest) bulkShardRequest22, false, throwable35, writeResult36);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException38 = bulkShardRequest22.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException38, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "update", (java.lang.Throwable) actionRequestValidationException38, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "_na_", (java.lang.Throwable) actionRequestValidationException38, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "_na_", (java.lang.Throwable) actionRequestValidationException38, "index.version.upgraded");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "index.shadow_replicas", (java.lang.Throwable) actionRequestValidationException38, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "index.blocks.write", (java.lang.Throwable) actionRequestValidationException38, "primary_terms");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure52 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "index.blocks.metadata", (java.lang.Throwable) actionRequestValidationException38, "delete");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure54 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "index.shared_filesystem", (java.lang.Throwable) actionRequestValidationException38, "index.blocks.read_only");
        java.lang.String str55 = shardFailure54.indexUUID;
        java.lang.String str56 = shardFailure54.reason;
        org.junit.Assert.assertNull(shardId31);
        org.junit.Assert.assertNotNull(actionRequestValidationException38);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "index.blocks.read_only" + "'", str55, "index.blocks.read_only");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "index.shared_filesystem" + "'", str56, "index.shared_filesystem");
    }

    @Test
    public void test4166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4166");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        long long2 = builder1.version();
        java.lang.String str3 = builder1.index();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData4 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData4);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap6 = indexMetaData4.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters7 = indexMetaData4.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state8 = indexMetaData4.getState();
        byte byte9 = state8.id();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder10 = builder1.state(state8);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1L + "'", long2 == 1L);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(indexMetaData4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap6);
        org.junit.Assert.assertNull(discoveryNodeFilters7);
        org.junit.Assert.assertTrue("'" + state8 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state8.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertTrue("'" + byte9 + "' != '" + (byte) 0 + "'", byte9 == (byte) 0);
        org.junit.Assert.assertNotNull(builder10);
    }

    @Test
    public void test4167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4167");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder2.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder3.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int9 = builder8.numberOfShards();
        java.lang.String[] strArray13 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder8.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder3.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple18 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData0, (java.lang.Iterable<java.lang.String>) strSet14);
        long long19 = indexMetaData0.getCreationDate();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder20 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder22 = builder20.removeAlias("index.auto_expand_replicas");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder25 = builder20.primaryTerm(100, 4L);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 100");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(builder22);
    }

    @Test
    public void test4168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4168");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("current version [0] is higher or equal to the one provided [35]");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = builder1.primaryTerm(32, (long) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: you must set the number of shards before setting/reading primary terms");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
    }

    @Test
    public void test4169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4169");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest1 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest1);
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, false, throwable8, writeResult9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.index.VersionType versionType12 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean16 = versionType12.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest2, versionType12);
        boolean boolean21 = versionType12.isVersionConflictForWrites(10L, (long) (byte) 0, false);
        long long24 = versionType12.updateVersion((long) 1, (long) (short) 10);
        boolean boolean26 = versionType12.validateVersionForWrites((long) (byte) 10);
        boolean boolean29 = versionType12.isVersionConflictForReads((long) 3, (long) (short) -1);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput30 = null;
        // The following exception was thrown during execution in test generation
        try {
            versionType12.writeTo(streamOutput30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 10L + "'", long24 == 10L);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test4170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4170");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest2 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest3 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest2);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel4 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = bulkShardRequest2.consistencyLevel(writeConsistencyLevel4);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult6 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult7 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest2, writeResult6);
        boolean boolean8 = updateResult7.retry;
        java.lang.Throwable throwable9 = updateResult7.error;
        boolean boolean10 = updateResult7.success();
        org.junit.Assert.assertNotNull(bulkShardRequest5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(throwable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test4171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4171");
        org.elasticsearch.index.VersionType versionType1 = org.elasticsearch.index.VersionType.EXTERNAL_GTE;
        boolean boolean4 = versionType1.isVersionConflictForReads((long) 10, (long) (byte) -1);
        byte byte5 = versionType1.getValue();
        org.elasticsearch.index.VersionType versionType6 = versionType1.versionTypeForReplicationAndRecovery();
        byte byte7 = versionType1.getValue();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int10 = builder9.numberOfShards();
        java.lang.String[] strArray14 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet15 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet15, strArray14);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder9.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet15);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData19 = builder9.mapping("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder22 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder23 = builder22.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder25 = builder23.numberOfReplicas((int) '#');
        org.elasticsearch.action.ActionRequest actionRequest28 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest29 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest28);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest30 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple31 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest29, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest30);
        boolean boolean32 = bulkShardRequest30.getShouldPersistResult();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder34 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int35 = builder34.numberOfShards();
        java.lang.String[] strArray39 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet40 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet40, strArray39);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder42 = builder34.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet40);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>> streamableTuple43 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>>((org.elasticsearch.common.io.stream.Streamable) bulkShardRequest30, strSet40);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder44 = builder23.putActiveAllocationIds((int) (short) 10, (java.util.Set<java.lang.String>) strSet40);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder45 = builder9.putActiveAllocationIds((int) (byte) 0, (java.util.Set<java.lang.String>) strSet40);
        org.elasticsearch.common.collect.Tuple<java.lang.Enum<org.elasticsearch.index.VersionType>, java.util.AbstractCollection<java.lang.String>> versionTypeEnumTuple46 = new org.elasticsearch.common.collect.Tuple<java.lang.Enum<org.elasticsearch.index.VersionType>, java.util.AbstractCollection<java.lang.String>>((java.lang.Enum<org.elasticsearch.index.VersionType>) versionType1, (java.util.AbstractCollection<java.lang.String>) strSet40);
        boolean boolean50 = versionType1.isVersionConflictForWrites((long) (byte) -1, (-1L), false);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.VersionType versionType51 = org.elasticsearch.index.VersionType.fromString("index.version.upgraded_string", versionType1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No version type match [index.version.upgraded_string]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(versionType1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 2 + "'", byte5 == (byte) 2);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 2 + "'", byte7 == (byte) 2);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNull(mappingMetaData19);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test4172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4172");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.update.UpdateHelper.Result result6 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult12 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult13 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result6, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable11, writeResult12);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest8);
        java.lang.Throwable throwable16 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult17 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult18 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, true, throwable16, writeResult17);
        org.elasticsearch.index.shard.ShardId shardId19 = bulkShardRequest8.shardId();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest20 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.common.unit.TimeValue timeValue21 = bulkShardRequest8.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest23 = bulkShardRequest8.index("");
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest25 = bulkShardRequest8.setShardId(shardId24);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult26 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult27 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest25, writeResult26);
        org.elasticsearch.action.update.UpdateResponse updateResponse28 = updateResult27.noopResult;
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertNotNull(timeValue21);
        org.junit.Assert.assertNotNull(bulkShardRequest23);
        org.junit.Assert.assertNotNull(bulkShardRequest25);
        org.junit.Assert.assertNull(updateResponse28);
    }

    @Test
    public void test4173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4173");
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest0 = null;
        org.elasticsearch.action.ActionRequest actionRequest3 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest3);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple6 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest10 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        org.elasticsearch.action.update.UpdateHelper.Result result11 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest13 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest13);
        java.lang.Throwable throwable16 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult17 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult18 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result11, (org.elasticsearch.action.ActionRequest) bulkShardRequest13, false, throwable16, writeResult17);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple19 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest10, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest13);
        org.elasticsearch.action.ActionRequest actionRequest21 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest21);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest23 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple24 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest22, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest23);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple25 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest10, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest23);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple26 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest7, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest23);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting27 = null;
        java.lang.Throwable throwable29 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure31 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting27, "", throwable29, "");
        org.elasticsearch.action.update.UpdateHelper.Result result32 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest33 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable35 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult36 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult37 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result32, (org.elasticsearch.action.ActionRequest) bulkShardRequest33, false, throwable35, writeResult36);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple38 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure31, (org.elasticsearch.transport.TransportMessage) bulkShardRequest33);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest40 = bulkShardRequest33.index("hi!");
        org.elasticsearch.action.support.IndicesOptions indicesOptions41 = bulkShardRequest40.indicesOptions();
        org.elasticsearch.common.transport.TransportAddress transportAddress42 = null;
        bulkShardRequest40.remoteAddress(transportAddress42);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple44 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest7, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest40);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple45 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest0, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest40);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData46 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder47 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData46);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData49 = indexMetaData46.mapping("_na_");
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap50 = indexMetaData46.getAliases();
        int int51 = indexMetaData46.getNumberOfShards();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder52 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData46);
        boolean boolean53 = bulkItemRequestTuple45.equals((java.lang.Object) indexMetaData46);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData55 = indexMetaData46.mappingOrDefault("current version [32] is different than the one provided [2]");
        org.junit.Assert.assertNotNull(bulkShardRequest40);
        org.junit.Assert.assertNotNull(indicesOptions41);
        org.junit.Assert.assertNotNull(indexMetaData46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNull(mappingMetaData49);
        org.junit.Assert.assertNotNull(strImmutableOpenMap50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(mappingMetaData55);
    }

    @Test
    public void test4174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4174");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.Version version2 = indexMetaData0.getCreationVersion();
        long long3 = indexMetaData0.getCreationDate();
        long long4 = indexMetaData0.getCreationDate();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters5 = indexMetaData0.requireFilters();
        org.elasticsearch.index.Index index6 = indexMetaData0.getMergeSourceIndex();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters8 = indexMetaData0.getInitialRecoveryFilters();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters9 = indexMetaData0.requireFilters();
        java.lang.String str10 = indexMetaData0.getIndexUUID();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(version2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(discoveryNodeFilters5);
        org.junit.Assert.assertNull(index6);
        org.junit.Assert.assertNull(discoveryNodeFilters8);
        org.junit.Assert.assertNull(discoveryNodeFilters9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "_na_" + "'", str10, "_na_");
    }

    @Test
    public void test4175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4175");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.State state1 = org.elasticsearch.cluster.metadata.IndexMetaData.State.fromString("current version [0] is higher than the one provided [98]");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No state match for [current version [0] is higher than the one provided [98]]");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
    }

    @Test
    public void test4176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4176");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.Version version2 = indexMetaData0.getCreationVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int5 = builder4.numberOfShards();
        java.lang.String[] strArray9 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet10 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet10, strArray9);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder12 = builder4.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet10);
        org.elasticsearch.cluster.metadata.IndexMetaData.State state13 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder14 = builder12.state(state13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder14.removeAlias("hi!");
        boolean boolean17 = indexMetaData0.equals((java.lang.Object) builder14);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters18 = indexMetaData0.requireFilters();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters19 = indexMetaData0.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData20 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder21 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData20);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap22 = indexMetaData20.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet23 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple24 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData20, indexShardStateSet23);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters25 = indexMetaData20.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder26 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData20);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters27 = indexMetaData20.excludeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder28 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData20);
        org.elasticsearch.index.Index index29 = indexMetaData20.getMergeSourceIndex();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff30 = indexMetaData0.diff(indexMetaData20);
        java.lang.String str31 = indexMetaData0.getIndexUUID();
        org.elasticsearch.index.Index index32 = indexMetaData0.getMergeSourceIndex();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(version2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(discoveryNodeFilters18);
        org.junit.Assert.assertNull(discoveryNodeFilters19);
        org.junit.Assert.assertNotNull(indexMetaData20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap22);
        org.junit.Assert.assertNotNull(indexShardStateSet23);
        org.junit.Assert.assertNull(discoveryNodeFilters25);
        org.junit.Assert.assertNull(discoveryNodeFilters27);
        org.junit.Assert.assertNull(index29);
        org.junit.Assert.assertNotNull(indexMetaDataDiff30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "_na_" + "'", str31, "_na_");
        org.junit.Assert.assertNull(index32);
    }

    @Test
    public void test4177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4177");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest3 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable5 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult6 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult7 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest3, false, throwable5, writeResult6);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult8 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult9 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest3, writeResult8);
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult12 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult13 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest3, true, throwable11, writeResult12);
        org.elasticsearch.index.shard.ShardId shardId14 = bulkShardRequest3.shardId();
        org.junit.Assert.assertNull(shardId14);
    }

    @Test
    public void test4178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4178");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters5 = indexMetaData0.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.index.Index index7 = indexMetaData0.getMergeSourceIndex();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.IndexMetaData.Custom> strImmutableOpenMap8 = indexMetaData0.getCustoms();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder10 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.common.io.stream.StreamInput streamInput11 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff12 = indexMetaData0.readDiffFrom(streamInput11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNull(discoveryNodeFilters5);
        org.junit.Assert.assertNull(index7);
        org.junit.Assert.assertNotNull(strImmutableOpenMap8);
    }

    @Test
    public void test4179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4179");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result5 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.action.update.UpdateHelper.Result result9 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult15 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult16 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result9, (org.elasticsearch.action.ActionRequest) bulkShardRequest11, false, throwable14, writeResult15);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest8, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest11);
        org.elasticsearch.tasks.TaskId taskId18 = null;
        bulkShardRequest11.setParentTask(taskId18);
        java.lang.Throwable throwable21 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult22 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult23 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result5, (org.elasticsearch.action.ActionRequest) bulkShardRequest11, true, throwable21, writeResult22);
        org.elasticsearch.action.support.IndicesOptions indicesOptions24 = bulkShardRequest11.indicesOptions();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest25 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        java.lang.Throwable throwable27 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult28 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult29 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest11, true, throwable27, writeResult28);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest30 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel31 = bulkShardRequest11.consistencyLevel();
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest33 = bulkShardRequest11.setShardId(shardId32);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException34 = bulkShardRequest11.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete", (java.lang.Throwable) actionRequestValidationException34, "delete");
        java.lang.String str37 = shardFailure36.reason;
        org.junit.Assert.assertNotNull(indicesOptions24);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel31 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel31.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(bulkShardRequest33);
        org.junit.Assert.assertNotNull(actionRequestValidationException34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "delete" + "'", str37, "delete");
    }

    @Test
    public void test4180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4180");
        org.elasticsearch.action.ActionRequest actionRequest2 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest3 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest2);
        org.elasticsearch.action.ActionRequest actionRequest6 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest6);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple9 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest7, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest8);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest10 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest8);
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = null;
        bulkShardRequest8.remoteAddress(transportAddress12);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.action.update.UpdateHelper.Result result15 = null;
        org.elasticsearch.action.ActionRequest actionRequest19 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest20 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest19);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest21 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple22 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest20, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest21);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest23 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest21);
        org.elasticsearch.action.ActionRequest actionRequest25 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest26 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest25);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest27 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple28 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest26, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest27);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple29 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest23, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest27);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest30 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue31 = bulkShardRequest30.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest32 = bulkShardRequest27.timeout(timeValue31);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest33 = new org.elasticsearch.action.bulk.BulkItemRequest((-1), (org.elasticsearch.action.ActionRequest) bulkShardRequest32);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult34 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult35 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result15, (org.elasticsearch.action.ActionRequest) bulkShardRequest32, writeResult34);
        org.elasticsearch.action.update.UpdateHelper.Result result36 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest38 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest39 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest38);
        org.elasticsearch.action.update.UpdateHelper.Result result40 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest42 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest43 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest42);
        java.lang.Throwable throwable45 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult46 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult47 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result40, (org.elasticsearch.action.ActionRequest) bulkShardRequest42, false, throwable45, writeResult46);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple48 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest39, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest42);
        java.lang.Throwable throwable50 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult51 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult52 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result36, (org.elasticsearch.action.ActionRequest) bulkShardRequest42, true, throwable50, writeResult51);
        org.elasticsearch.index.shard.ShardId shardId53 = bulkShardRequest42.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue54 = bulkShardRequest42.timeout();
        org.elasticsearch.tasks.TaskId taskId55 = bulkShardRequest42.getParentTask();
        bulkShardRequest32.setParentTask(taskId55);
        bulkShardRequest32.primaryTerm((long) 10);
        java.lang.String str59 = bulkShardRequest32.index();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple60 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest14, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest32);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting63 = null;
        java.lang.Throwable throwable65 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure67 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting63, "", throwable65, "");
        org.elasticsearch.action.update.UpdateHelper.Result result68 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest69 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable71 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult72 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult73 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result68, (org.elasticsearch.action.ActionRequest) bulkShardRequest69, false, throwable71, writeResult72);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple74 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure67, (org.elasticsearch.transport.TransportMessage) bulkShardRequest69);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest76 = bulkShardRequest69.index("index.version.created");
        org.elasticsearch.common.transport.TransportAddress transportAddress77 = bulkShardRequest69.remoteAddress();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest78 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest69);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest79 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest69);
        org.elasticsearch.index.shard.ShardId shardId80 = bulkShardRequest69.shardId();
        org.elasticsearch.tasks.TaskId taskId81 = bulkShardRequest69.getParentTask();
        org.elasticsearch.index.shard.ShardId shardId82 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest83 = bulkShardRequest69.setShardId(shardId82);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple84 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest14, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest83);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput85 = null;
        // The following exception was thrown during execution in test generation
        try {
            bulkItemRequest14.writeTo(streamOutput85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(timeValue31);
        org.junit.Assert.assertNotNull(bulkShardRequest32);
        org.junit.Assert.assertNull(shardId53);
        org.junit.Assert.assertNotNull(timeValue54);
        org.junit.Assert.assertNotNull(taskId55);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(bulkShardRequest76);
        org.junit.Assert.assertNull(transportAddress77);
        org.junit.Assert.assertNull(shardId80);
        org.junit.Assert.assertNotNull(taskId81);
        org.junit.Assert.assertNotNull(bulkShardRequest83);
    }

    @Test
    public void test4181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4181");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure6 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", throwable4, "");
        org.elasticsearch.action.update.UpdateHelper.Result result7 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult11 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult12 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result7, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable10, writeResult11);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure6, (org.elasticsearch.transport.TransportMessage) bulkShardRequest8);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest15 = bulkShardRequest8.index("hi!");
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest16 = new org.elasticsearch.action.bulk.BulkItemRequest((int) '#', (org.elasticsearch.action.ActionRequest) bulkShardRequest15);
        org.elasticsearch.action.ActionRequest actionRequest19 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest20 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest19);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest21 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple22 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest20, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest21);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest23 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest21);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple24 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest16, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest21);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest25 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 10, (org.elasticsearch.action.ActionRequest) bulkShardRequest21);
        org.elasticsearch.action.ActionRequest actionRequest27 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest28 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest27);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest29 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple30 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest28, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest29);
        org.elasticsearch.action.ActionRequest actionRequest33 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest34 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest33);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest35 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple36 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest34, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest35);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest37 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest35);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple38 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest28, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest35);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple39 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest25, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest35);
        org.elasticsearch.common.transport.TransportAddress transportAddress40 = bulkShardRequest35.remoteAddress();
        org.junit.Assert.assertNotNull(bulkShardRequest15);
        org.junit.Assert.assertNull(transportAddress40);
    }

    @Test
    public void test4182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4182");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters5 = indexMetaData0.includeFilters();
        org.elasticsearch.common.settings.Settings settings6 = indexMetaData0.getSettings();
        boolean boolean8 = indexMetaData0.isSameUUID("index.blocks.metadata");
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData10 = indexMetaData0.mappingOrDefault("index.blocks.write");
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNull(discoveryNodeFilters5);
        org.junit.Assert.assertNotNull(settings6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(mappingMetaData10);
    }

    @Test
    public void test4183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4183");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.Version version6 = indexMetaData0.getUpgradedVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.Version version8 = indexMetaData0.getCreationVersion();
        long long9 = indexMetaData0.getVersion();
        long long10 = indexMetaData0.getCreationDate();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap11 = indexMetaData0.getAliases();
        java.lang.Class<?> wildcardClass12 = indexMetaData0.getClass();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNotNull(version6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1L + "'", long9 == 1L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(strImmutableOpenMap11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test4184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4184");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result4 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result5 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest6 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result5, (org.elasticsearch.action.ActionRequest) bulkShardRequest6, false, throwable8, writeResult9);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult11 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult12 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result4, (org.elasticsearch.action.ActionRequest) bulkShardRequest6, writeResult11);
        org.elasticsearch.action.ActionRequest actionRequest13 = updateResult12.actionRequest;
        org.elasticsearch.action.update.UpdateHelper.Result result15 = null;
        org.elasticsearch.action.ActionRequest actionRequest19 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest20 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest19);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest21 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple22 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest20, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest21);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest23 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest21);
        org.elasticsearch.action.ActionRequest actionRequest25 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest26 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest25);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest27 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple28 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest26, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest27);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple29 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest23, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest27);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest30 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue31 = bulkShardRequest30.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest32 = bulkShardRequest27.timeout(timeValue31);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest33 = new org.elasticsearch.action.bulk.BulkItemRequest((-1), (org.elasticsearch.action.ActionRequest) bulkShardRequest32);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult34 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult35 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result15, (org.elasticsearch.action.ActionRequest) bulkShardRequest32, writeResult34);
        org.elasticsearch.action.update.UpdateHelper.Result result36 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest38 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest39 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest38);
        org.elasticsearch.action.update.UpdateHelper.Result result40 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest42 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest43 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest42);
        java.lang.Throwable throwable45 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult46 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult47 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result40, (org.elasticsearch.action.ActionRequest) bulkShardRequest42, false, throwable45, writeResult46);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple48 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest39, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest42);
        java.lang.Throwable throwable50 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult51 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult52 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result36, (org.elasticsearch.action.ActionRequest) bulkShardRequest42, true, throwable50, writeResult51);
        org.elasticsearch.index.shard.ShardId shardId53 = bulkShardRequest42.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue54 = bulkShardRequest42.timeout();
        org.elasticsearch.tasks.TaskId taskId55 = bulkShardRequest42.getParentTask();
        bulkShardRequest32.setParentTask(taskId55);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest57 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 10, (org.elasticsearch.action.ActionRequest) bulkShardRequest32);
        org.elasticsearch.action.ActionRequest actionRequest59 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest60 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest59);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest61 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple62 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest60, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest61);
        org.elasticsearch.common.transport.TransportAddress transportAddress63 = null;
        bulkShardRequest61.remoteAddress(transportAddress63);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel65 = bulkShardRequest61.consistencyLevel();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest66 = bulkShardRequest32.consistencyLevel(writeConsistencyLevel65);
        org.elasticsearch.tasks.TaskId taskId67 = bulkShardRequest66.getParentTask();
        org.elasticsearch.tasks.TaskId taskId68 = bulkShardRequest66.getParentTask();
        actionRequest13.setParentTask(taskId68);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult70 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult71 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, actionRequest13, writeResult70);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest72 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 1, actionRequest13);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult73 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult74 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, actionRequest13, writeResult73);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult75 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult76 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, actionRequest13, writeResult75);
        org.junit.Assert.assertNotNull(actionRequest13);
        org.junit.Assert.assertNotNull(timeValue31);
        org.junit.Assert.assertNotNull(bulkShardRequest32);
        org.junit.Assert.assertNull(shardId53);
        org.junit.Assert.assertNotNull(timeValue54);
        org.junit.Assert.assertNotNull(taskId55);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel65 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel65.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(bulkShardRequest66);
        org.junit.Assert.assertNotNull(taskId67);
        org.junit.Assert.assertNotNull(taskId68);
    }

    @Test
    public void test4185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4185");
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting0 = org.elasticsearch.cluster.metadata.IndexMetaData.INDEX_SHARED_FS_ALLOW_RECOVERY_ON_ANY_NODE_SETTING;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder2.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder3.numberOfReplicas((int) '#');
        int int6 = builder3.numberOfShards();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData7 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder10 = builder9.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder12 = builder10.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder15 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int16 = builder15.numberOfShards();
        java.lang.String[] strArray20 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet21 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet21, strArray20);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder23 = builder15.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet21);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder24 = builder10.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet21);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple25 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData7, (java.lang.Iterable<java.lang.String>) strSet21);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap26 = indexMetaData7.getAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder27 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData7);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder28 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData7);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder29 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData7);
        org.elasticsearch.common.settings.Settings settings30 = indexMetaData7.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder31 = builder3.settings(settings30);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.support.ToXContentToBytes, org.elasticsearch.common.xcontent.ToXContent> toXContentToBytesTuple32 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.support.ToXContentToBytes, org.elasticsearch.common.xcontent.ToXContent>((org.elasticsearch.action.support.ToXContentToBytes) booleanSetting0, (org.elasticsearch.common.xcontent.ToXContent) settings30);
        org.elasticsearch.common.settings.Settings settings33 = org.elasticsearch.cluster.metadata.IndexMetaData.addHumanReadableSettings(settings30);
        boolean boolean34 = org.elasticsearch.cluster.metadata.IndexMetaData.isIndexUsingShadowReplicas(settings33);
        boolean boolean35 = org.elasticsearch.cluster.metadata.IndexMetaData.isIndexUsingShadowReplicas(settings33);
        org.elasticsearch.common.settings.Settings settings36 = org.elasticsearch.cluster.metadata.IndexMetaData.addHumanReadableSettings(settings33);
        org.elasticsearch.transport.TransportService transportService37 = null;
        org.elasticsearch.cluster.service.ClusterService clusterService38 = null;
        org.elasticsearch.indices.IndicesService indicesService39 = null;
        org.elasticsearch.threadpool.ThreadPool threadPool40 = null;
        org.elasticsearch.cluster.action.shard.ShardStateAction shardStateAction41 = null;
        org.elasticsearch.cluster.action.index.MappingUpdatedAction mappingUpdatedAction42 = null;
        org.elasticsearch.action.update.UpdateHelper updateHelper43 = null;
        org.elasticsearch.action.support.ActionFilters actionFilters44 = null;
        org.elasticsearch.cluster.metadata.IndexNameExpressionResolver indexNameExpressionResolver45 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.bulk.TransportShardBulkAction transportShardBulkAction46 = new org.elasticsearch.action.bulk.TransportShardBulkAction(settings33, transportService37, clusterService38, indicesService39, threadPool40, shardStateAction41, mappingUpdatedAction42, updateHelper43, actionFilters44, indexNameExpressionResolver45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanSetting0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(indexMetaData7);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple25);
        org.junit.Assert.assertNotNull(strImmutableOpenMap26);
        org.junit.Assert.assertNotNull(settings30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(settings33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(settings36);
    }

    @Test
    public void test4186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4186");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters1 = indexMetaData0.requireFilters();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData3 = indexMetaData0.mappingOrDefault("index.auto_expand_replicas");
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.IndexMetaData.Custom> strImmutableOpenMap4 = indexMetaData0.getCustoms();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData7 = indexMetaData0.mapping("primary_terms");
        boolean boolean9 = indexMetaData0.isSameUUID("index.number_of_replicas");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData10 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder12 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder13 = builder12.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder15 = builder13.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder18 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int19 = builder18.numberOfShards();
        java.lang.String[] strArray23 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet24 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet24, strArray23);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder26 = builder18.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet24);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder27 = builder13.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet24);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple28 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData10, (java.lang.Iterable<java.lang.String>) strSet24);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap29 = indexMetaData10.getAliases();
        int int30 = indexMetaData10.getNumberOfShards();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters31 = indexMetaData10.excludeFilters();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap32 = indexMetaData10.getAliases();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters33 = indexMetaData10.excludeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder34 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData10);
        org.elasticsearch.common.settings.Settings settings35 = indexMetaData10.getSettings();
        org.elasticsearch.index.Index index36 = indexMetaData10.getMergeSourceIndex();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff37 = indexMetaData0.diff(indexMetaData10);
        org.elasticsearch.common.io.stream.StreamInput streamInput38 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData39 = indexMetaData10.readFrom(streamInput38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNull(discoveryNodeFilters1);
        org.junit.Assert.assertNull(mappingMetaData3);
        org.junit.Assert.assertNotNull(strImmutableOpenMap4);
        org.junit.Assert.assertNull(mappingMetaData7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(indexMetaData10);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple28);
        org.junit.Assert.assertNotNull(strImmutableOpenMap29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNull(discoveryNodeFilters31);
        org.junit.Assert.assertNotNull(strImmutableOpenMap32);
        org.junit.Assert.assertNull(discoveryNodeFilters33);
        org.junit.Assert.assertNotNull(settings35);
        org.junit.Assert.assertNull(index36);
        org.junit.Assert.assertNotNull(indexMetaDataDiff37);
    }

    @Test
    public void test4187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4187");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int2 = builder1.numberOfShards();
        java.lang.String[] strArray6 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = builder1.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet7);
        org.elasticsearch.cluster.metadata.IndexMetaData.State state10 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = builder9.state(state10);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder13 = builder9.removeAlias("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData14 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder15 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData14);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap16 = indexMetaData14.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet17 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple18 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData14, indexShardStateSet17);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters19 = indexMetaData14.includeFilters();
        org.elasticsearch.common.settings.Settings settings20 = indexMetaData14.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder21 = builder9.settings(settings20);
        int int22 = builder9.numberOfReplicas();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder24 = builder9.removeAlias("active_allocations");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder25 = builder9.removeAllAliases();
        java.lang.String str26 = builder9.index();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData27 = builder9.build();
        org.apache.lucene.util.Version version28 = indexMetaData27.getMinimumCompatibleVersion();
        long long30 = indexMetaData27.primaryTerm(0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(indexMetaData14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap16);
        org.junit.Assert.assertNotNull(indexShardStateSet17);
        org.junit.Assert.assertNull(discoveryNodeFilters19);
        org.junit.Assert.assertNotNull(settings20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "index.blocks.write" + "'", str26, "index.blocks.write");
        org.junit.Assert.assertNotNull(indexMetaData27);
        org.junit.Assert.assertNull(version28);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
    }

    @Test
    public void test4188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4188");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result14 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest16 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest17 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest16);
        org.elasticsearch.action.update.UpdateHelper.Result result18 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest20 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest20);
        java.lang.Throwable throwable23 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult24 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult25 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result18, (org.elasticsearch.action.ActionRequest) bulkShardRequest20, false, throwable23, writeResult24);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple26 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest17, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest20);
        org.elasticsearch.tasks.TaskId taskId27 = null;
        bulkShardRequest20.setParentTask(taskId27);
        org.elasticsearch.index.shard.ShardId shardId29 = bulkShardRequest20.shardId();
        bulkShardRequest20.seqNo((long) 0);
        java.lang.Throwable throwable33 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult34 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult35 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result14, (org.elasticsearch.action.ActionRequest) bulkShardRequest20, false, throwable33, writeResult34);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException36 = bulkShardRequest20.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException36, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "update", (java.lang.Throwable) actionRequestValidationException36, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "_na_", (java.lang.Throwable) actionRequestValidationException36, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "primary_terms", (java.lang.Throwable) actionRequestValidationException36, "delete");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "current version [97] is different than the one provided [35]", (java.lang.Throwable) actionRequestValidationException36, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", (java.lang.Throwable) actionRequestValidationException36, "index.blocks.metadata");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "index.creation_date", (java.lang.Throwable) actionRequestValidationException36, "index.version.minimum_compatible");
        java.lang.String str51 = shardFailure50.indexUUID;
        java.lang.Throwable throwable52 = shardFailure50.cause;
        org.junit.Assert.assertNull(shardId29);
        org.junit.Assert.assertNotNull(actionRequestValidationException36);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "index.version.minimum_compatible" + "'", str51, "index.version.minimum_compatible");
        org.junit.Assert.assertNotNull(throwable52);
        org.junit.Assert.assertEquals(throwable52.getLocalizedMessage(), "Validation Failed: 1: index is missing;");
        org.junit.Assert.assertEquals(throwable52.getMessage(), "Validation Failed: 1: index is missing;");
        org.junit.Assert.assertEquals(throwable52.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;");
    }

    @Test
    public void test4189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4189");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters5 = indexMetaData0.includeFilters();
        org.elasticsearch.common.settings.Settings settings6 = indexMetaData0.getSettings();
        boolean boolean8 = indexMetaData0.isSameUUID("index.blocks.metadata");
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData10 = indexMetaData0.mappingOrDefault("index.blocks.metadata");
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters11 = indexMetaData0.excludeFilters();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNull(discoveryNodeFilters5);
        org.junit.Assert.assertNotNull(settings6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(mappingMetaData10);
        org.junit.Assert.assertNull(discoveryNodeFilters11);
    }

    @Test
    public void test4190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4190");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData4 = indexMetaData0.mapping("index.version.created");
        org.elasticsearch.index.Index index5 = indexMetaData0.getMergeSourceIndex();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters6 = indexMetaData0.excludeFilters();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder7 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData8 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder10 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = builder10.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder13 = builder11.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int17 = builder16.numberOfShards();
        java.lang.String[] strArray21 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet22 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet22, strArray21);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder24 = builder16.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet22);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder25 = builder11.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet22);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple26 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData8, (java.lang.Iterable<java.lang.String>) strSet22);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap27 = indexMetaData8.getAliases();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData29 = indexMetaData8.mapping("index.version.created");
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters30 = indexMetaData8.requireFilters();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap31 = indexMetaData8.getAliases();
        org.elasticsearch.action.update.UpdateHelper.Result result32 = null;
        org.elasticsearch.action.ActionRequest actionRequest33 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting35 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting37 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting39 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting41 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting43 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result45 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest47 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest48 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest47);
        org.elasticsearch.action.update.UpdateHelper.Result result49 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest51 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest52 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest51);
        java.lang.Throwable throwable54 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult55 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult56 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result49, (org.elasticsearch.action.ActionRequest) bulkShardRequest51, false, throwable54, writeResult55);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple57 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest48, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest51);
        org.elasticsearch.tasks.TaskId taskId58 = null;
        bulkShardRequest51.setParentTask(taskId58);
        org.elasticsearch.index.shard.ShardId shardId60 = bulkShardRequest51.shardId();
        bulkShardRequest51.seqNo((long) 0);
        java.lang.Throwable throwable64 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult65 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult66 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result45, (org.elasticsearch.action.ActionRequest) bulkShardRequest51, false, throwable64, writeResult65);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException67 = bulkShardRequest51.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure69 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting43, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException67, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure71 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting41, "update", (java.lang.Throwable) actionRequestValidationException67, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure73 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting39, "_na_", (java.lang.Throwable) actionRequestValidationException67, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure75 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting37, "_na_", (java.lang.Throwable) actionRequestValidationException67, "index.version.upgraded");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure77 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting35, "index.blocks.metadata", (java.lang.Throwable) actionRequestValidationException67, "update");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult78 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult79 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result32, actionRequest33, true, (java.lang.Throwable) actionRequestValidationException67, writeResult78);
        org.elasticsearch.common.xcontent.ToXContent.Params params80 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.common.collect.Tuple<java.lang.Exception, org.elasticsearch.common.xcontent.ToXContent.Params> exceptionTuple81 = new org.elasticsearch.common.collect.Tuple<java.lang.Exception, org.elasticsearch.common.xcontent.ToXContent.Params>((java.lang.Exception) actionRequestValidationException67, params80);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData>, org.elasticsearch.common.xcontent.ToXContent.Params> strImmutableOpenMapTuple82 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData>, org.elasticsearch.common.xcontent.ToXContent.Params>(strImmutableOpenMap31, params80);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder.toXContent(indexMetaData0, xContentBuilder7, params80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNull(mappingMetaData4);
        org.junit.Assert.assertNull(index5);
        org.junit.Assert.assertNull(discoveryNodeFilters6);
        org.junit.Assert.assertNotNull(indexMetaData8);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple26);
        org.junit.Assert.assertNotNull(strImmutableOpenMap27);
        org.junit.Assert.assertNull(mappingMetaData29);
        org.junit.Assert.assertNull(discoveryNodeFilters30);
        org.junit.Assert.assertNotNull(strImmutableOpenMap31);
        org.junit.Assert.assertNull(shardId60);
        org.junit.Assert.assertNotNull(actionRequestValidationException67);
        org.junit.Assert.assertNotNull(params80);
    }

    @Test
    public void test4191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4191");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = builder1.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = builder2.numberOfReplicas((int) '#');
        org.elasticsearch.action.ActionRequest actionRequest7 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest7);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple10 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest8, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest9);
        boolean boolean11 = bulkShardRequest9.getShouldPersistResult();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder13 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int14 = builder13.numberOfShards();
        java.lang.String[] strArray18 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder21 = builder13.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet19);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>> streamableTuple22 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>>((org.elasticsearch.common.io.stream.Streamable) bulkShardRequest9, strSet19);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder23 = builder2.putActiveAllocationIds((int) (short) 10, (java.util.Set<java.lang.String>) strSet19);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder25 = builder2.numberOfShards((int) (short) -1);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData26 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData27 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder28 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData27);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap29 = indexMetaData27.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters30 = indexMetaData27.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff31 = indexMetaData26.diff(indexMetaData27);
        org.elasticsearch.common.settings.Settings settings32 = indexMetaData27.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder33 = builder25.settings(settings32);
        org.elasticsearch.cluster.metadata.AliasMetaData.Builder builder34 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder35 = builder25.putAlias(builder34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(indexMetaData26);
        org.junit.Assert.assertNotNull(indexMetaData27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap29);
        org.junit.Assert.assertNull(discoveryNodeFilters30);
        org.junit.Assert.assertNotNull(indexMetaDataDiff31);
        org.junit.Assert.assertNotNull(settings32);
        org.junit.Assert.assertNotNull(builder33);
    }

    @Test
    public void test4192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4192");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "current version [32] is higher or equal to the one provided [1]", throwable2, "current version [10] is different than the one provided [52]");
    }

    @Test
    public void test4193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4193");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("current version [52] is different than the one provided [32]");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = builder1.putMapping("current version [100] is higher than the one provided [-1]", "current version [10] is different than the one provided [32]");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to derive xcontent");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
    }

    @Test
    public void test4194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4194");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.ActionRequest actionRequest1 = null;
        java.lang.Throwable throwable3 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult4 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult5 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, actionRequest1, false, throwable3, writeResult4);
        boolean boolean6 = updateResult5.retry;
        boolean boolean7 = updateResult5.failure();
        boolean boolean8 = updateResult5.success();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test4195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4195");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest2 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue3 = bulkShardRequest2.timeout();
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = bulkShardRequest2.indicesOptions();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 100, (org.elasticsearch.action.ActionRequest) bulkShardRequest2);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting7 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting9 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting11 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting13 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting15 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting17 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result19 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest21 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest21);
        org.elasticsearch.action.update.UpdateHelper.Result result23 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest25 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest26 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest25);
        java.lang.Throwable throwable28 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult29 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult30 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result23, (org.elasticsearch.action.ActionRequest) bulkShardRequest25, false, throwable28, writeResult29);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple31 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest22, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest25);
        org.elasticsearch.tasks.TaskId taskId32 = null;
        bulkShardRequest25.setParentTask(taskId32);
        org.elasticsearch.index.shard.ShardId shardId34 = bulkShardRequest25.shardId();
        bulkShardRequest25.seqNo((long) 0);
        java.lang.Throwable throwable38 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult39 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult40 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result19, (org.elasticsearch.action.ActionRequest) bulkShardRequest25, false, throwable38, writeResult39);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException41 = bulkShardRequest25.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure43 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting17, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException41, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure45 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting15, "update", (java.lang.Throwable) actionRequestValidationException41, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure47 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting13, "_na_", (java.lang.Throwable) actionRequestValidationException41, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure49 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting11, "_na_", (java.lang.Throwable) actionRequestValidationException41, "index.version.upgraded");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure51 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting9, "index.version.minimum_compatible", (java.lang.Throwable) actionRequestValidationException41, "index.uuid");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure53 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting7, "index.shared_filesystem", (java.lang.Throwable) actionRequestValidationException41, "index.shared_filesystem");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult54 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult55 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest2, false, (java.lang.Throwable) actionRequestValidationException41, writeResult54);
        boolean boolean56 = updateResult55.success();
        org.junit.Assert.assertNotNull(timeValue3);
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertNull(shardId34);
        org.junit.Assert.assertNotNull(actionRequestValidationException41);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test4196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4196");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.ActionRequest actionRequest2 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest3 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest2);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple5 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        bulkShardRequest4.remoteAddress(transportAddress6);
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult10 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult11 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest4, false, throwable9, writeResult10);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException12 = bulkShardRequest4.validate();
        org.junit.Assert.assertNotNull(actionRequestValidationException12);
    }

    @Test
    public void test4197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4197");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.version.created_string");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder1.numberOfShards((int) (byte) 1);
        org.elasticsearch.cluster.metadata.AliasMetaData.Builder builder4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder3.putAlias(builder4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(builder3);
    }

    @Test
    public void test4198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4198");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.Version version2 = indexMetaData0.getCreationVersion();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters3 = indexMetaData0.includeFilters();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters4 = indexMetaData0.includeFilters();
        long long5 = indexMetaData0.getVersion();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters6 = indexMetaData0.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.index.Index index8 = indexMetaData0.getMergeSourceIndex();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(version2);
        org.junit.Assert.assertNull(discoveryNodeFilters3);
        org.junit.Assert.assertNull(discoveryNodeFilters4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
        org.junit.Assert.assertNull(discoveryNodeFilters6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNull(index8);
    }

    @Test
    public void test4199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4199");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = builder1.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = builder2.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int8 = builder7.numberOfShards();
        java.lang.String[] strArray12 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder15 = builder7.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder2.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder18 = builder16.creationDate((long) (byte) 10);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder20 = builder18.removeAlias("indices:data/write/bulk[s]");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder23 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int24 = builder23.numberOfShards();
        java.lang.String[] strArray28 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet29 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet29, strArray28);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder31 = builder23.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet29);
        org.elasticsearch.cluster.metadata.IndexMetaData.State state32 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder33 = builder31.state(state32);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder35 = builder31.removeAlias("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder37 = builder31.numberOfReplicas((int) (byte) -1);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder39 = builder37.version((long) (byte) 0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder42 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder43 = builder42.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder45 = builder43.numberOfReplicas((int) '#');
        org.elasticsearch.action.ActionRequest actionRequest48 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest49 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest48);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest50 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple51 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest49, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest50);
        boolean boolean52 = bulkShardRequest50.getShouldPersistResult();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder54 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int55 = builder54.numberOfShards();
        java.lang.String[] strArray59 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet60 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet60, strArray59);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder62 = builder54.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet60);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>> streamableTuple63 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>>((org.elasticsearch.common.io.stream.Streamable) bulkShardRequest50, strSet60);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder64 = builder43.putActiveAllocationIds((int) (short) 10, (java.util.Set<java.lang.String>) strSet60);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder65 = builder39.putActiveAllocationIds((int) (short) 100, (java.util.Set<java.lang.String>) strSet60);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder66 = builder18.putActiveAllocationIds(10, (java.util.Set<java.lang.String>) strSet60);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder68 = builder18.numberOfShards((int) (byte) -1);
        org.elasticsearch.cluster.metadata.AliasMetaData aliasMetaData69 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder70 = builder68.putAlias(aliasMetaData69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder68);
    }

    @Test
    public void test4200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4200");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters2 = indexMetaData0.requireFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData3);
        org.elasticsearch.Version version5 = indexMetaData3.getCreationVersion();
        long long6 = indexMetaData3.getCreationDate();
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap8 = indexMetaData3.getActiveAllocationIds();
        boolean boolean9 = indexMetaData0.equals((java.lang.Object) indexMetaData3);
        org.apache.lucene.util.Version version10 = indexMetaData3.getMinimumCompatibleVersion();
        org.apache.lucene.util.Version version11 = indexMetaData3.getMinimumCompatibleVersion();
        org.elasticsearch.common.settings.Settings settings12 = indexMetaData3.getSettings();
        org.elasticsearch.common.settings.Settings settings13 = org.elasticsearch.cluster.metadata.IndexMetaData.addHumanReadableSettings(settings12);
        org.elasticsearch.transport.TransportService transportService14 = null;
        org.elasticsearch.cluster.service.ClusterService clusterService15 = null;
        org.elasticsearch.indices.IndicesService indicesService16 = null;
        org.elasticsearch.threadpool.ThreadPool threadPool17 = null;
        org.elasticsearch.cluster.action.shard.ShardStateAction shardStateAction18 = null;
        org.elasticsearch.cluster.action.index.MappingUpdatedAction mappingUpdatedAction19 = null;
        org.elasticsearch.action.update.UpdateHelper updateHelper20 = null;
        org.elasticsearch.action.support.ActionFilters actionFilters21 = null;
        org.elasticsearch.cluster.metadata.IndexNameExpressionResolver indexNameExpressionResolver22 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.bulk.TransportShardBulkAction transportShardBulkAction23 = new org.elasticsearch.action.bulk.TransportShardBulkAction(settings13, transportService14, clusterService15, indicesService16, threadPool17, shardStateAction18, mappingUpdatedAction19, updateHelper20, actionFilters21, indexNameExpressionResolver22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNull(discoveryNodeFilters2);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(version5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(version10);
        org.junit.Assert.assertNull(version11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(settings13);
    }

    @Test
    public void test4201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4201");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting1 = null;
        java.lang.Throwable throwable3 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure5 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting1, "", throwable3, "");
        org.elasticsearch.action.update.UpdateHelper.Result result6 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult10 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult11 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result6, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, false, throwable9, writeResult10);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure5, (org.elasticsearch.transport.TransportMessage) bulkShardRequest7);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest14 = bulkShardRequest7.index("hi!");
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest15 = new org.elasticsearch.action.bulk.BulkItemRequest((int) '#', (org.elasticsearch.action.ActionRequest) bulkShardRequest14);
        org.elasticsearch.action.ActionRequest actionRequest18 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest19 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest18);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest20 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple21 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest19, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest20);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest20);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple23 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest15, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest20);
        org.elasticsearch.action.update.UpdateHelper.Result result24 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest27 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest28 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest27);
        org.elasticsearch.action.update.UpdateHelper.Result result29 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest31 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest32 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest31);
        java.lang.Throwable throwable34 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult35 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult36 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result29, (org.elasticsearch.action.ActionRequest) bulkShardRequest31, false, throwable34, writeResult35);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple37 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest28, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest31);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest38 = new org.elasticsearch.action.bulk.BulkItemRequest((int) 'a', (org.elasticsearch.action.ActionRequest) bulkShardRequest31);
        org.elasticsearch.common.transport.TransportAddress transportAddress39 = bulkShardRequest31.remoteAddress();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult40 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult41 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result24, (org.elasticsearch.action.ActionRequest) bulkShardRequest31, writeResult40);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple42 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest15, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest31);
        org.elasticsearch.action.update.UpdateHelper.Result result47 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest49 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest50 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest49);
        org.elasticsearch.action.update.UpdateHelper.Result result51 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest53 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest54 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest53);
        java.lang.Throwable throwable56 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult57 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult58 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result51, (org.elasticsearch.action.ActionRequest) bulkShardRequest53, false, throwable56, writeResult57);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple59 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest50, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest53);
        java.lang.Throwable throwable61 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult62 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult63 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result47, (org.elasticsearch.action.ActionRequest) bulkShardRequest53, true, throwable61, writeResult62);
        org.elasticsearch.index.shard.ShardId shardId64 = bulkShardRequest53.shardId();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest65 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest53);
        org.elasticsearch.common.unit.TimeValue timeValue66 = bulkShardRequest53.timeout();
        org.elasticsearch.action.ActionRequest actionRequest70 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest71 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest70);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest72 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple73 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest71, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest72);
        boolean boolean74 = bulkShardRequest72.getShouldPersistResult();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest75 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest72);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest76 = new org.elasticsearch.action.bulk.BulkItemRequest(3, (org.elasticsearch.action.ActionRequest) bulkShardRequest72);
        boolean boolean77 = bulkShardRequest72.getShouldPersistResult();
        org.elasticsearch.tasks.TaskId taskId78 = bulkShardRequest72.getParentTask();
        bulkShardRequest53.setParentTask(taskId78);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.tasks.Task task80 = bulkShardRequest31.createTask(1L, "current version [1] is different than the one provided [0]", "current version [-1] is different than the one provided [52]", taskId78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(bulkShardRequest14);
        org.junit.Assert.assertNull(transportAddress39);
        org.junit.Assert.assertNull(shardId64);
        org.junit.Assert.assertNotNull(timeValue66);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(taskId78);
    }

    @Test
    public void test4202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4202");
        org.elasticsearch.action.ActionRequest actionRequest3 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest3);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple6 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue9 = bulkShardRequest8.timeout();
        java.lang.String str10 = bulkShardRequest8.index();
        org.elasticsearch.common.unit.TimeValue timeValue11 = bulkShardRequest8.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest12 = bulkShardRequest5.timeout(timeValue11);
        org.elasticsearch.action.support.IndicesOptions indicesOptions13 = bulkShardRequest12.indicesOptions();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 10, (org.elasticsearch.action.ActionRequest) bulkShardRequest12);
        org.junit.Assert.assertNotNull(timeValue9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(timeValue11);
        org.junit.Assert.assertNotNull(bulkShardRequest12);
        org.junit.Assert.assertNotNull(indicesOptions13);
    }

    @Test
    public void test4203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4203");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder2.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder3.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int9 = builder8.numberOfShards();
        java.lang.String[] strArray13 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder8.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder3.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple18 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData0, (java.lang.Iterable<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap19 = indexMetaData0.getAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder20 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        long long21 = indexMetaData0.getVersion();
        long long22 = indexMetaData0.getVersion();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters23 = indexMetaData0.excludeFilters();
        org.elasticsearch.common.settings.Settings settings24 = indexMetaData0.getSettings();
        org.elasticsearch.transport.TransportService transportService25 = null;
        org.elasticsearch.cluster.service.ClusterService clusterService26 = null;
        org.elasticsearch.indices.IndicesService indicesService27 = null;
        org.elasticsearch.threadpool.ThreadPool threadPool28 = null;
        org.elasticsearch.cluster.action.shard.ShardStateAction shardStateAction29 = null;
        org.elasticsearch.cluster.action.index.MappingUpdatedAction mappingUpdatedAction30 = null;
        org.elasticsearch.action.update.UpdateHelper updateHelper31 = null;
        org.elasticsearch.action.support.ActionFilters actionFilters32 = null;
        org.elasticsearch.cluster.metadata.IndexNameExpressionResolver indexNameExpressionResolver33 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.bulk.TransportShardBulkAction transportShardBulkAction34 = new org.elasticsearch.action.bulk.TransportShardBulkAction(settings24, transportService25, clusterService26, indicesService27, threadPool28, shardStateAction29, mappingUpdatedAction30, updateHelper31, actionFilters32, indexNameExpressionResolver33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple18);
        org.junit.Assert.assertNotNull(strImmutableOpenMap19);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1L + "'", long22 == 1L);
        org.junit.Assert.assertNull(discoveryNodeFilters23);
        org.junit.Assert.assertNotNull(settings24);
    }

    @Test
    public void test4204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4204");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest2 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest3 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest2);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel4 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = bulkShardRequest2.consistencyLevel(writeConsistencyLevel4);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest2);
        int int7 = bulkItemRequest6.id();
        org.elasticsearch.action.ActionRequest actionRequest11 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest11);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest13 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest12, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest13);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest15 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest13);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest16 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue17 = bulkShardRequest16.timeout();
        java.lang.String str18 = bulkShardRequest16.index();
        org.elasticsearch.common.unit.TimeValue timeValue19 = bulkShardRequest16.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest20 = bulkShardRequest13.timeout(timeValue19);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest((-1), (org.elasticsearch.action.ActionRequest) bulkShardRequest20);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData22 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder23 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData22);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap24 = indexMetaData22.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet25 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple26 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData22, indexShardStateSet25);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder27 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData22);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData28 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder29 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData28);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap30 = indexMetaData28.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet31 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple32 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData28, indexShardStateSet31);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters33 = indexMetaData28.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder34 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData28);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff35 = indexMetaData22.diff(indexMetaData28);
        int int36 = indexMetaData22.getNumberOfReplicas();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.IndexMetaData.Custom> strImmutableOpenMap37 = indexMetaData22.getCustoms();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.common.xcontent.ToXContent> streamableTuple38 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.common.xcontent.ToXContent>((org.elasticsearch.common.io.stream.Streamable) bulkShardRequest20, (org.elasticsearch.common.xcontent.ToXContent) indexMetaData22);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple39 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest6, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest20);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest43 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest44 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest43);
        org.elasticsearch.action.update.UpdateHelper.Result result45 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest47 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest48 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest47);
        java.lang.Throwable throwable50 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult51 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult52 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result45, (org.elasticsearch.action.ActionRequest) bulkShardRequest47, false, throwable50, writeResult51);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple53 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest44, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest47);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest54 = new org.elasticsearch.action.bulk.BulkItemRequest((int) 'a', (org.elasticsearch.action.ActionRequest) bulkShardRequest47);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest55 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 3, (org.elasticsearch.action.ActionRequest) bulkShardRequest47);
        org.elasticsearch.index.shard.ShardId shardId56 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest57 = bulkShardRequest47.setShardId(shardId56);
        bulkShardRequest47.setParentTask("index.blocks.write", (long) (short) 1);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple61 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest6, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest47);
        org.elasticsearch.action.update.UpdateHelper.Result result62 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result63 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result64 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest67 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest68 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest67);
        org.elasticsearch.action.update.UpdateHelper.Result result69 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest71 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest72 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest71);
        java.lang.Throwable throwable74 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult75 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult76 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result69, (org.elasticsearch.action.ActionRequest) bulkShardRequest71, false, throwable74, writeResult75);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple77 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest68, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest71);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest78 = new org.elasticsearch.action.bulk.BulkItemRequest((int) 'a', (org.elasticsearch.action.ActionRequest) bulkShardRequest71);
        java.lang.Throwable throwable80 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult81 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult82 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result64, (org.elasticsearch.action.ActionRequest) bulkShardRequest71, false, throwable80, writeResult81);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult83 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult84 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result63, (org.elasticsearch.action.ActionRequest) bulkShardRequest71, writeResult83);
        bulkShardRequest71.seqNo((long) 0);
        bulkShardRequest71.seqNo((long) 'a');
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult89 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult90 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result62, (org.elasticsearch.action.ActionRequest) bulkShardRequest71, writeResult89);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple91 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest6, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest71);
        org.junit.Assert.assertNotNull(bulkShardRequest5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertNotNull(bulkShardRequest20);
        org.junit.Assert.assertNotNull(indexMetaData22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap24);
        org.junit.Assert.assertNotNull(indexShardStateSet25);
        org.junit.Assert.assertNotNull(indexMetaData28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap30);
        org.junit.Assert.assertNotNull(indexShardStateSet31);
        org.junit.Assert.assertNull(discoveryNodeFilters33);
        org.junit.Assert.assertNotNull(indexMetaDataDiff35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap37);
        org.junit.Assert.assertNotNull(bulkShardRequest57);
    }

    @Test
    public void test4205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4205");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result16 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest18 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest19 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest18);
        org.elasticsearch.action.update.UpdateHelper.Result result20 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest22 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest23 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest22);
        java.lang.Throwable throwable25 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult26 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult27 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result20, (org.elasticsearch.action.ActionRequest) bulkShardRequest22, false, throwable25, writeResult26);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple28 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest19, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest22);
        org.elasticsearch.tasks.TaskId taskId29 = null;
        bulkShardRequest22.setParentTask(taskId29);
        org.elasticsearch.index.shard.ShardId shardId31 = bulkShardRequest22.shardId();
        bulkShardRequest22.seqNo((long) 0);
        java.lang.Throwable throwable35 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult36 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult37 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result16, (org.elasticsearch.action.ActionRequest) bulkShardRequest22, false, throwable35, writeResult36);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException38 = bulkShardRequest22.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException38, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "update", (java.lang.Throwable) actionRequestValidationException38, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "_na_", (java.lang.Throwable) actionRequestValidationException38, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "primary_terms", (java.lang.Throwable) actionRequestValidationException38, "delete");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "current version [97] is different than the one provided [35]", (java.lang.Throwable) actionRequestValidationException38, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "", (java.lang.Throwable) actionRequestValidationException38, "index.blocks.metadata");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure52 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "index.creation_date", (java.lang.Throwable) actionRequestValidationException38, "index.version.minimum_compatible");
        java.lang.Throwable throwable53 = shardFailure52.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure55 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete", throwable53, "current version [97] is different than the one provided [97]");
        org.junit.Assert.assertNull(shardId31);
        org.junit.Assert.assertNotNull(actionRequestValidationException38);
        org.junit.Assert.assertNotNull(throwable53);
        org.junit.Assert.assertEquals(throwable53.getLocalizedMessage(), "Validation Failed: 1: index is missing;");
        org.junit.Assert.assertEquals(throwable53.getMessage(), "Validation Failed: 1: index is missing;");
        org.junit.Assert.assertEquals(throwable53.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;");
    }

    @Test
    public void test4206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4206");
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.ActionRequest actionRequest4 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest4);
        org.elasticsearch.action.ActionRequest actionRequest8 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest8);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest10 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest9, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest10);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest10);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest10);
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        bulkShardRequest10.remoteAddress(transportAddress14);
        org.elasticsearch.action.update.UpdateHelper.Result result16 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest17 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue18 = bulkShardRequest17.timeout();
        java.lang.String str19 = bulkShardRequest17.index();
        org.elasticsearch.common.unit.TimeValue timeValue20 = bulkShardRequest17.timeout();
        org.elasticsearch.cluster.routing.ShardRouting shardRouting22 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting24 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result26 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest28 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest29 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest28);
        org.elasticsearch.action.update.UpdateHelper.Result result30 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest32 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest33 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest32);
        java.lang.Throwable throwable35 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult36 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult37 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result30, (org.elasticsearch.action.ActionRequest) bulkShardRequest32, false, throwable35, writeResult36);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple38 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest29, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest32);
        org.elasticsearch.tasks.TaskId taskId39 = null;
        bulkShardRequest32.setParentTask(taskId39);
        org.elasticsearch.index.shard.ShardId shardId41 = bulkShardRequest32.shardId();
        bulkShardRequest32.seqNo((long) 0);
        java.lang.Throwable throwable45 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult46 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult47 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result26, (org.elasticsearch.action.ActionRequest) bulkShardRequest32, false, throwable45, writeResult46);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException48 = bulkShardRequest32.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting24, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException48, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure52 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting22, "update", (java.lang.Throwable) actionRequestValidationException48, "index.version.created_string");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult53 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult54 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result16, (org.elasticsearch.action.ActionRequest) bulkShardRequest17, false, (java.lang.Throwable) actionRequestValidationException48, writeResult53);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.transport.TransportRequest, java.lang.RuntimeException> transportRequestTuple55 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.transport.TransportRequest, java.lang.RuntimeException>((org.elasticsearch.transport.TransportRequest) bulkShardRequest10, (java.lang.RuntimeException) actionRequestValidationException48);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult56 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult57 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest10, writeResult56);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest58 = new org.elasticsearch.action.bulk.BulkItemRequest(97, (org.elasticsearch.action.ActionRequest) bulkShardRequest10);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest59 = new org.elasticsearch.action.bulk.BulkItemRequest(32, (org.elasticsearch.action.ActionRequest) bulkShardRequest10);
        org.junit.Assert.assertNotNull(timeValue18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNull(shardId41);
        org.junit.Assert.assertNotNull(actionRequestValidationException48);
    }

    @Test
    public void test4207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4207");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.support.IndicesOptions indicesOptions6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting7 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting9 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting11 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting13 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting15 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting17 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result19 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest21 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest21);
        org.elasticsearch.action.update.UpdateHelper.Result result23 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest25 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest26 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest25);
        java.lang.Throwable throwable28 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult29 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult30 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result23, (org.elasticsearch.action.ActionRequest) bulkShardRequest25, false, throwable28, writeResult29);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple31 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest22, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest25);
        org.elasticsearch.tasks.TaskId taskId32 = null;
        bulkShardRequest25.setParentTask(taskId32);
        org.elasticsearch.index.shard.ShardId shardId34 = bulkShardRequest25.shardId();
        bulkShardRequest25.seqNo((long) 0);
        java.lang.Throwable throwable38 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult39 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult40 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result19, (org.elasticsearch.action.ActionRequest) bulkShardRequest25, false, throwable38, writeResult39);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException41 = bulkShardRequest25.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure43 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting17, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException41, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure45 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting15, "update", (java.lang.Throwable) actionRequestValidationException41, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure47 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting13, "_na_", (java.lang.Throwable) actionRequestValidationException41, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure49 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting11, "primary_terms", (java.lang.Throwable) actionRequestValidationException41, "delete");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure51 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting9, "current version [97] is different than the one provided [35]", (java.lang.Throwable) actionRequestValidationException41, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure53 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting7, "", (java.lang.Throwable) actionRequestValidationException41, "index.blocks.metadata");
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.support.IndicesOptions, java.lang.Throwable> indicesOptionsTuple54 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.support.IndicesOptions, java.lang.Throwable>(indicesOptions6, (java.lang.Throwable) actionRequestValidationException41);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure56 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "index.shared_filesystem.recover_on_any_node", (java.lang.Throwable) actionRequestValidationException41, "update");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure58 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "index.version.created", (java.lang.Throwable) actionRequestValidationException41, "indices:data/write/bulk[s]");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure60 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "index.blocks.metadata", (java.lang.Throwable) actionRequestValidationException41, "");
        org.junit.Assert.assertNull(shardId34);
        org.junit.Assert.assertNotNull(actionRequestValidationException41);
    }

    @Test
    public void test4208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4208");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData1 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData1);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap3 = indexMetaData1.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters4 = indexMetaData1.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff5 = indexMetaData0.diff(indexMetaData1);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters6 = indexMetaData1.requireFilters();
        org.elasticsearch.Version version7 = indexMetaData1.getUpgradedVersion();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters8 = indexMetaData1.getInitialRecoveryFilters();
        boolean boolean10 = indexMetaData1.isSameUUID("");
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.IndexMetaData.Custom> strImmutableOpenMap11 = indexMetaData1.getCustoms();
        org.apache.lucene.util.Version version12 = indexMetaData1.getMinimumCompatibleVersion();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(indexMetaData1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap3);
        org.junit.Assert.assertNull(discoveryNodeFilters4);
        org.junit.Assert.assertNotNull(indexMetaDataDiff5);
        org.junit.Assert.assertNull(discoveryNodeFilters6);
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertNull(discoveryNodeFilters8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strImmutableOpenMap11);
        org.junit.Assert.assertNull(version12);
    }

    @Test
    public void test4209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4209");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest3 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest3);
        org.elasticsearch.action.update.UpdateHelper.Result result5 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult11 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult12 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result5, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, false, throwable10, writeResult11);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest7);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = new org.elasticsearch.action.bulk.BulkItemRequest((int) 'a', (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        java.lang.Throwable throwable16 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult17 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult18 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, false, throwable16, writeResult17);
        boolean boolean19 = updateResult18.success();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest20 = updateResult18.request();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput21 = null;
        // The following exception was thrown during execution in test generation
        try {
            bulkShardRequest20.writeTo(streamOutput21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bulkShardRequest20);
    }

    @Test
    public void test4210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4210");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters5 = indexMetaData0.includeFilters();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.action.update.UpdateHelper.Result result9 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult15 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult16 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result9, (org.elasticsearch.action.ActionRequest) bulkShardRequest11, false, throwable14, writeResult15);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest8, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest11);
        org.elasticsearch.index.VersionType versionType18 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean22 = versionType18.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple23 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest8, versionType18);
        boolean boolean27 = versionType18.isVersionConflictForWrites((long) 0, (long) (short) 0, false);
        boolean boolean28 = indexMetaData0.equals((java.lang.Object) boolean27);
        int int29 = indexMetaData0.getNumberOfReplicas();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state30 = indexMetaData0.getState();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData32 = indexMetaData0.mappingOrDefault("index.data_path");
        org.elasticsearch.Version version33 = indexMetaData0.getUpgradedVersion();
        long long34 = indexMetaData0.getCreationDate();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNull(discoveryNodeFilters5);
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + state30 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state30.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertNull(mappingMetaData32);
        org.junit.Assert.assertNotNull(version33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
    }

    @Test
    public void test4211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4211");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.update.UpdateHelper.Result result6 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult12 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult13 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result6, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable11, writeResult12);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest8);
        org.elasticsearch.tasks.TaskId taskId15 = null;
        bulkShardRequest8.setParentTask(taskId15);
        org.elasticsearch.index.shard.ShardId shardId17 = bulkShardRequest8.shardId();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult18 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult19 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, writeResult18);
        long long20 = bulkShardRequest8.primaryTerm();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest((int) 'a', (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel22 = bulkShardRequest8.consistencyLevel();
        org.elasticsearch.cluster.routing.ShardRouting shardRouting24 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting26 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result28 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest30 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest31 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest30);
        org.elasticsearch.action.update.UpdateHelper.Result result32 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest34 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest35 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest34);
        java.lang.Throwable throwable37 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult38 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult39 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result32, (org.elasticsearch.action.ActionRequest) bulkShardRequest34, false, throwable37, writeResult38);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple40 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest31, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest34);
        org.elasticsearch.tasks.TaskId taskId41 = null;
        bulkShardRequest34.setParentTask(taskId41);
        org.elasticsearch.index.shard.ShardId shardId43 = bulkShardRequest34.shardId();
        bulkShardRequest34.seqNo((long) 0);
        java.lang.Throwable throwable47 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult48 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult49 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result28, (org.elasticsearch.action.ActionRequest) bulkShardRequest34, false, throwable47, writeResult48);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException50 = bulkShardRequest34.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure52 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting26, "index.number_of_shards", (java.lang.Throwable) actionRequestValidationException50, "update");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure54 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting24, "index.uuid", (java.lang.Throwable) actionRequestValidationException50, "index.blocks.metadata");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult55 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult56 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, (java.lang.Throwable) actionRequestValidationException50, writeResult55);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String[] strArray57 = bulkShardRequest8.indices();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel22 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel22.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(shardId43);
        org.junit.Assert.assertNotNull(actionRequestValidationException50);
    }

    @Test
    public void test4212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4212");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest2 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult5 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult6 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest2, false, throwable4, writeResult5);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult7 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult8 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest2, writeResult7);
        org.elasticsearch.action.ActionRequest actionRequest9 = updateResult8.actionRequest;
        boolean boolean10 = updateResult8.failure();
        org.elasticsearch.action.ActionRequest actionRequest11 = updateResult8.actionRequest;
        org.elasticsearch.action.update.UpdateHelper.Result result12 = updateResult8.result;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult13 = updateResult8.writeResult;
        org.junit.Assert.assertNotNull(actionRequest9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(actionRequest11);
        org.junit.Assert.assertNull(result12);
        org.junit.Assert.assertNull(writeResult13);
    }

    @Test
    public void test4213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4213");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.ActionRequest actionRequest2 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest3 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest2);
        org.elasticsearch.action.ActionRequest actionRequest6 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest6);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple9 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest7, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest8);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest10 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest8);
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = null;
        bulkShardRequest8.remoteAddress(transportAddress12);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting15 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting17 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting19 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting21 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting23 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result25 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest27 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest28 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest27);
        org.elasticsearch.action.update.UpdateHelper.Result result29 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest31 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest32 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest31);
        java.lang.Throwable throwable34 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult35 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult36 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result29, (org.elasticsearch.action.ActionRequest) bulkShardRequest31, false, throwable34, writeResult35);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple37 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest28, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest31);
        org.elasticsearch.tasks.TaskId taskId38 = null;
        bulkShardRequest31.setParentTask(taskId38);
        org.elasticsearch.index.shard.ShardId shardId40 = bulkShardRequest31.shardId();
        bulkShardRequest31.seqNo((long) 0);
        java.lang.Throwable throwable44 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult45 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult46 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result25, (org.elasticsearch.action.ActionRequest) bulkShardRequest31, false, throwable44, writeResult45);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException47 = bulkShardRequest31.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure49 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting23, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException47, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure51 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting21, "update", (java.lang.Throwable) actionRequestValidationException47, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure53 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting19, "_na_", (java.lang.Throwable) actionRequestValidationException47, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure55 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting17, "_na_", (java.lang.Throwable) actionRequestValidationException47, "index.version.upgraded");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure57 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting15, "index.shadow_replicas", (java.lang.Throwable) actionRequestValidationException47, "");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult58 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult59 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, (java.lang.Throwable) actionRequestValidationException47, writeResult58);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel60 = bulkShardRequest8.consistencyLevel();
        long long61 = bulkShardRequest8.seqNo();
        org.elasticsearch.action.support.IndicesOptions indicesOptions62 = bulkShardRequest8.indicesOptions();
        org.junit.Assert.assertNull(shardId40);
        org.junit.Assert.assertNotNull(actionRequestValidationException47);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel60 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel60.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 0L + "'", long61 == 0L);
        org.junit.Assert.assertNotNull(indicesOptions62);
    }

    @Test
    public void test4214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4214");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData4 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData5 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData5);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap7 = indexMetaData5.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters8 = indexMetaData5.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff9 = indexMetaData4.diff(indexMetaData5);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters10 = indexMetaData5.requireFilters();
        org.elasticsearch.Version version11 = indexMetaData5.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings12 = indexMetaData5.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder13 = builder3.settings(settings12);
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting14 = org.elasticsearch.cluster.metadata.IndexMetaData.INDEX_SHARED_FS_ALLOW_RECOVERY_ON_ANY_NODE_SETTING;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder16.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder19 = builder17.numberOfReplicas((int) '#');
        int int20 = builder17.numberOfShards();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData21 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder23 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder24 = builder23.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder26 = builder24.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder29 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int30 = builder29.numberOfShards();
        java.lang.String[] strArray34 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet35 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet35, strArray34);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder37 = builder29.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet35);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder38 = builder24.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet35);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple39 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData21, (java.lang.Iterable<java.lang.String>) strSet35);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap40 = indexMetaData21.getAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder41 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData21);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder42 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData21);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder43 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData21);
        org.elasticsearch.common.settings.Settings settings44 = indexMetaData21.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder45 = builder17.settings(settings44);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.support.ToXContentToBytes, org.elasticsearch.common.xcontent.ToXContent> toXContentToBytesTuple46 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.support.ToXContentToBytes, org.elasticsearch.common.xcontent.ToXContent>((org.elasticsearch.action.support.ToXContentToBytes) booleanSetting14, (org.elasticsearch.common.xcontent.ToXContent) settings44);
        org.elasticsearch.common.settings.Settings settings47 = org.elasticsearch.cluster.metadata.IndexMetaData.addHumanReadableSettings(settings44);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder48 = builder3.settings(settings44);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData49 = builder48.build();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder51 = builder48.version((long) (short) 100);
        long long53 = builder48.primaryTerm((int) (short) 0);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(indexMetaData4);
        org.junit.Assert.assertNotNull(indexMetaData5);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap7);
        org.junit.Assert.assertNull(discoveryNodeFilters8);
        org.junit.Assert.assertNotNull(indexMetaDataDiff9);
        org.junit.Assert.assertNull(discoveryNodeFilters10);
        org.junit.Assert.assertNotNull(version11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(booleanSetting14);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(indexMetaData21);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple39);
        org.junit.Assert.assertNotNull(strImmutableOpenMap40);
        org.junit.Assert.assertNotNull(settings44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(settings47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(indexMetaData49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 0L + "'", long53 == 0L);
    }

    @Test
    public void test4215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4215");
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.update.UpdateHelper.Result result6 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult12 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult13 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result6, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable11, writeResult12);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest8);
        java.lang.Throwable throwable16 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult17 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult18 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, true, throwable16, writeResult17);
        org.elasticsearch.index.shard.ShardId shardId19 = bulkShardRequest8.shardId();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest20 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.common.unit.TimeValue timeValue21 = bulkShardRequest8.timeout();
        bulkShardRequest8.primaryTerm((long) '#');
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest24 = new org.elasticsearch.action.bulk.BulkItemRequest((int) '4', (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        long long25 = bulkShardRequest8.seqNo();
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertNotNull(timeValue21);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
    }

    @Test
    public void test4216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4216");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData6 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData6);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap8 = indexMetaData6.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet9 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple10 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData6, indexShardStateSet9);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters11 = indexMetaData6.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder12 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData6);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff13 = indexMetaData0.diff(indexMetaData6);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData14 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder16.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder19 = builder17.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder22 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int23 = builder22.numberOfShards();
        java.lang.String[] strArray27 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet28 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet28, strArray27);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder30 = builder22.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet28);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder31 = builder17.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet28);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple32 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData14, (java.lang.Iterable<java.lang.String>) strSet28);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap33 = indexMetaData14.getAliases();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff34 = indexMetaData0.diff(indexMetaData14);
        java.util.Set<java.lang.String> strSet36 = indexMetaData14.activeAllocationIds((int) (byte) 0);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNotNull(indexMetaData6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap8);
        org.junit.Assert.assertNotNull(indexShardStateSet9);
        org.junit.Assert.assertNull(discoveryNodeFilters11);
        org.junit.Assert.assertNotNull(indexMetaDataDiff13);
        org.junit.Assert.assertNotNull(indexMetaData14);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple32);
        org.junit.Assert.assertNotNull(strImmutableOpenMap33);
        org.junit.Assert.assertNotNull(indexMetaDataDiff34);
        org.junit.Assert.assertNotNull(strSet36);
    }

    @Test
    public void test4217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4217");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder2.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder3.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int9 = builder8.numberOfShards();
        java.lang.String[] strArray13 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder8.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder3.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple18 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData0, (java.lang.Iterable<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap19 = indexMetaData0.getAliases();
        int int20 = indexMetaData0.getNumberOfShards();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters21 = indexMetaData0.excludeFilters();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap22 = indexMetaData0.getAliases();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters23 = indexMetaData0.excludeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder24 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.common.settings.Settings settings25 = indexMetaData0.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder26 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        int int27 = builder26.numberOfShards();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData28 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData29 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder30 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData29);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap31 = indexMetaData29.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters32 = indexMetaData29.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff33 = indexMetaData28.diff(indexMetaData29);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters34 = indexMetaData29.requireFilters();
        org.elasticsearch.Version version35 = indexMetaData29.getUpgradedVersion();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters36 = indexMetaData29.getInitialRecoveryFilters();
        boolean boolean38 = indexMetaData29.isSameUUID("");
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters39 = indexMetaData29.getInitialRecoveryFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder40 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData29);
        org.elasticsearch.Version version41 = indexMetaData29.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings42 = indexMetaData29.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder43 = builder26.settings(settings42);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple18);
        org.junit.Assert.assertNotNull(strImmutableOpenMap19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNull(discoveryNodeFilters21);
        org.junit.Assert.assertNotNull(strImmutableOpenMap22);
        org.junit.Assert.assertNull(discoveryNodeFilters23);
        org.junit.Assert.assertNotNull(settings25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(indexMetaData28);
        org.junit.Assert.assertNotNull(indexMetaData29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap31);
        org.junit.Assert.assertNull(discoveryNodeFilters32);
        org.junit.Assert.assertNotNull(indexMetaDataDiff33);
        org.junit.Assert.assertNull(discoveryNodeFilters34);
        org.junit.Assert.assertNotNull(version35);
        org.junit.Assert.assertNull(discoveryNodeFilters36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(discoveryNodeFilters39);
        org.junit.Assert.assertNotNull(version41);
        org.junit.Assert.assertNotNull(settings42);
        org.junit.Assert.assertNotNull(builder43);
    }

    @Test
    public void test4218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4218");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("_na_");
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.action.ActionRequest actionRequest5 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest5);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple8 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest6, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest7);
        boolean boolean9 = bulkShardRequest7.getShouldPersistResult();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int12 = builder11.numberOfShards();
        java.lang.String[] strArray16 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder19 = builder11.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet17);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>> streamableTuple20 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>>((org.elasticsearch.common.io.stream.Streamable) bulkShardRequest7, strSet17);
        org.elasticsearch.common.collect.Tuple<java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>, java.lang.Iterable<java.lang.String>> indexShardStateSetTuple21 = new org.elasticsearch.common.collect.Tuple<java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>, java.lang.Iterable<java.lang.String>>(indexShardStateSet3, (java.lang.Iterable<java.lang.String>) strSet17);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder22 = builder1.putActiveAllocationIds((int) '#', (java.util.Set<java.lang.String>) strSet17);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData23 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters24 = indexMetaData23.requireFilters();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData26 = indexMetaData23.mappingOrDefault("index.auto_expand_replicas");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder27 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData23);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder29 = builder27.creationDate((long) (byte) 0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder31 = builder27.creationDate((long) (short) 1);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData32 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder33 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData32);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap34 = indexMetaData32.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet35 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple36 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData32, indexShardStateSet35);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters37 = indexMetaData32.includeFilters();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest39 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest40 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest39);
        org.elasticsearch.action.update.UpdateHelper.Result result41 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest43 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest44 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest43);
        java.lang.Throwable throwable46 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult47 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult48 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result41, (org.elasticsearch.action.ActionRequest) bulkShardRequest43, false, throwable46, writeResult47);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple49 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest40, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest43);
        org.elasticsearch.index.VersionType versionType50 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean54 = versionType50.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple55 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest40, versionType50);
        boolean boolean59 = versionType50.isVersionConflictForWrites((long) 0, (long) (short) 0, false);
        boolean boolean60 = indexMetaData32.equals((java.lang.Object) boolean59);
        int int61 = indexMetaData32.getNumberOfReplicas();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state62 = indexMetaData32.getState();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder63 = builder31.state(state62);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder64 = builder1.state(state62);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData65 = builder1.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: must specify numberOfShards for index [_na_]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(indexMetaData23);
        org.junit.Assert.assertNull(discoveryNodeFilters24);
        org.junit.Assert.assertNull(mappingMetaData26);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(indexMetaData32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap34);
        org.junit.Assert.assertNotNull(indexShardStateSet35);
        org.junit.Assert.assertNull(discoveryNodeFilters37);
        org.junit.Assert.assertNotNull(versionType50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + state62 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state62.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder64);
    }

    @Test
    public void test4219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4219");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest1 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest1);
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, false, throwable8, writeResult9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.index.VersionType versionType12 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean16 = versionType12.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest2, versionType12);
        boolean boolean21 = versionType12.isVersionConflictForWrites(10L, (long) (byte) 0, false);
        boolean boolean23 = versionType12.validateVersionForReads(10L);
        boolean boolean26 = versionType12.isVersionConflictForReads(100L, (long) 'a');
        boolean boolean28 = versionType12.validateVersionForWrites((long) (short) 10);
        long long31 = versionType12.updateVersion(1L, (long) '4');
        org.elasticsearch.index.VersionType versionType32 = versionType12.versionTypeForReplicationAndRecovery();
        long long35 = versionType32.updateVersion((long) (byte) 3, (long) 97);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput36 = null;
        // The following exception was thrown during execution in test generation
        try {
            versionType32.writeTo(streamOutput36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 52L + "'", long31 == 52L);
        org.junit.Assert.assertNotNull(versionType32);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 97L + "'", long35 == 97L);
    }

    @Test
    public void test4220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4220");
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.ActionRequest actionRequest4 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest4);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest6 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple7 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest6);
        boolean boolean8 = bulkShardRequest6.getShouldPersistResult();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest10 = bulkShardRequest6.setShardId(shardId9);
        org.elasticsearch.action.ActionRequest actionRequest13 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest13);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest15 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple16 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest14, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest15);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest17 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest15);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest18 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue19 = bulkShardRequest18.timeout();
        java.lang.String str20 = bulkShardRequest18.index();
        org.elasticsearch.common.unit.TimeValue timeValue21 = bulkShardRequest18.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest22 = bulkShardRequest15.timeout(timeValue21);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest23 = bulkShardRequest6.timeout(timeValue21);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult24 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult25 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest23, writeResult24);
        java.lang.String str26 = bulkShardRequest23.index();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult27 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult28 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest23, writeResult27);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest29 = new org.elasticsearch.action.bulk.BulkItemRequest(0, (org.elasticsearch.action.ActionRequest) bulkShardRequest23);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(bulkShardRequest10);
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(timeValue21);
        org.junit.Assert.assertNotNull(bulkShardRequest22);
        org.junit.Assert.assertNotNull(bulkShardRequest23);
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test4221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4221");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters2 = indexMetaData0.requireFilters();
        boolean boolean4 = indexMetaData0.isSameUUID("current version [0] is different than the one provided [100]");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNull(discoveryNodeFilters2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test4222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4222");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue5 = bulkShardRequest4.timeout();
        org.elasticsearch.action.support.IndicesOptions indicesOptions6 = bulkShardRequest4.indicesOptions();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = bulkShardRequest4.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure9 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "current version [97] is different than the one provided [1]", (java.lang.Throwable) actionRequestValidationException7, "primary_terms");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure11 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", (java.lang.Throwable) actionRequestValidationException7, "index.creation_date_string");
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertNotNull(indicesOptions6);
        org.junit.Assert.assertNotNull(actionRequestValidationException7);
    }

    @Test
    public void test4223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4223");
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.ActionRequest actionRequest3 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest3);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple6 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        boolean boolean7 = bulkShardRequest5.getShouldPersistResult();
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = bulkShardRequest5.setShardId(shardId8);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult10 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult11 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, writeResult10);
        org.elasticsearch.action.ActionRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestActionRequest12 = updateResult11.request();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest13 = new org.elasticsearch.action.bulk.BulkItemRequest((int) '4', (org.elasticsearch.action.ActionRequest) bulkShardRequestActionRequest12);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(bulkShardRequest9);
        org.junit.Assert.assertNotNull(bulkShardRequestActionRequest12);
    }

    @Test
    public void test4224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4224");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result4 = null;
        org.elasticsearch.action.ActionRequest actionRequest6 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest6);
        org.elasticsearch.action.ActionRequest actionRequest10 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest11 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest10);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest12 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest11, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest12);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest12);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple15 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest7, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest12);
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = null;
        bulkShardRequest12.remoteAddress(transportAddress16);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting19 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting21 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting23 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting25 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting27 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result29 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest31 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest32 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest31);
        org.elasticsearch.action.update.UpdateHelper.Result result33 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest35 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest36 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest35);
        java.lang.Throwable throwable38 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult39 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult40 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result33, (org.elasticsearch.action.ActionRequest) bulkShardRequest35, false, throwable38, writeResult39);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple41 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest32, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest35);
        org.elasticsearch.tasks.TaskId taskId42 = null;
        bulkShardRequest35.setParentTask(taskId42);
        org.elasticsearch.index.shard.ShardId shardId44 = bulkShardRequest35.shardId();
        bulkShardRequest35.seqNo((long) 0);
        java.lang.Throwable throwable48 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult49 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult50 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result29, (org.elasticsearch.action.ActionRequest) bulkShardRequest35, false, throwable48, writeResult49);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException51 = bulkShardRequest35.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure53 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting27, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException51, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure55 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting25, "update", (java.lang.Throwable) actionRequestValidationException51, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure57 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting23, "_na_", (java.lang.Throwable) actionRequestValidationException51, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure59 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting21, "_na_", (java.lang.Throwable) actionRequestValidationException51, "index.version.upgraded");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure61 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting19, "index.shadow_replicas", (java.lang.Throwable) actionRequestValidationException51, "");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult62 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult63 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result4, (org.elasticsearch.action.ActionRequest) bulkShardRequest12, false, (java.lang.Throwable) actionRequestValidationException51, writeResult62);
        java.lang.Throwable throwable64 = updateResult63.error;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure66 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "index.blocks.read", throwable64, "index.creation_date_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure68 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "current version [32] is higher or equal to the one provided [1]", throwable64, "active_allocations");
        org.junit.Assert.assertNull(shardId44);
        org.junit.Assert.assertNotNull(actionRequestValidationException51);
        org.junit.Assert.assertNotNull(throwable64);
        org.junit.Assert.assertEquals(throwable64.getLocalizedMessage(), "Validation Failed: 1: index is missing;");
        org.junit.Assert.assertEquals(throwable64.getMessage(), "Validation Failed: 1: index is missing;");
        org.junit.Assert.assertEquals(throwable64.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;");
    }

    @Test
    public void test4225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4225");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest1 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest1);
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, false, throwable8, writeResult9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.index.VersionType versionType12 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean16 = versionType12.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest2, versionType12);
        boolean boolean21 = versionType12.isVersionConflictForWrites(10L, (long) (byte) 0, false);
        boolean boolean23 = versionType12.validateVersionForReads(10L);
        boolean boolean26 = versionType12.isVersionConflictForReads(100L, (long) 'a');
        long long29 = versionType12.updateVersion((long) 3, 0L);
        boolean boolean32 = versionType12.isVersionConflictForReads((long) 100, 98L);
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test4226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4226");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest2 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest3 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest2);
        org.elasticsearch.action.update.UpdateHelper.Result result4 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest6 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest6);
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult10 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult11 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result4, (org.elasticsearch.action.ActionRequest) bulkShardRequest6, false, throwable9, writeResult10);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest6);
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult15 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult16 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest6, true, throwable14, writeResult15);
        org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestReplicationRequest17 = updateResult16.request();
        org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestReplicationRequest18 = updateResult16.request();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult19 = updateResult16.writeResult;
        java.lang.Throwable throwable20 = updateResult16.error;
        boolean boolean21 = updateResult16.retry;
        org.junit.Assert.assertNotNull(bulkShardRequestReplicationRequest17);
        org.junit.Assert.assertNotNull(bulkShardRequestReplicationRequest18);
        org.junit.Assert.assertNull(writeResult19);
        org.junit.Assert.assertNull(throwable20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test4227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4227");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters3 = indexMetaData0.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.apache.lucene.util.Version version5 = indexMetaData0.getMinimumCompatibleVersion();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters6 = indexMetaData0.requireFilters();
        java.util.Set<java.lang.String> strSet8 = null; // flaky: indexMetaData0.activeAllocationIds((int) (short) 10);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.IndexMetaData.Custom> strImmutableOpenMap10 = indexMetaData0.getCustoms();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder12 = builder11.removeAllAliases();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNull(discoveryNodeFilters3);
        org.junit.Assert.assertNull(version5);
        org.junit.Assert.assertNull(discoveryNodeFilters6);
        org.junit.Assert.assertNull(strSet8);
        org.junit.Assert.assertNotNull(strImmutableOpenMap10);
        org.junit.Assert.assertNotNull(builder12);
    }

    @Test
    public void test4228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4228");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.Version version2 = indexMetaData0.getCreationVersion();
        long long3 = indexMetaData0.getCreationDate();
        int int4 = indexMetaData0.getTotalNumberOfShards();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap5 = indexMetaData0.getAliases();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters6 = indexMetaData0.includeFilters();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters7 = indexMetaData0.includeFilters();
        org.apache.lucene.util.Version version8 = indexMetaData0.getMinimumCompatibleVersion();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters9 = indexMetaData0.includeFilters();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(version2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(strImmutableOpenMap5);
        org.junit.Assert.assertNull(discoveryNodeFilters6);
        org.junit.Assert.assertNull(discoveryNodeFilters7);
        org.junit.Assert.assertNull(version8);
        org.junit.Assert.assertNull(discoveryNodeFilters9);
    }

    @Test
    public void test4229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4229");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("state-");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int4 = builder3.numberOfShards();
        java.lang.String[] strArray8 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet9 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet9, strArray8);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = builder3.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet9);
        org.elasticsearch.cluster.metadata.IndexMetaData.State state12 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder13 = builder11.state(state12);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder15 = builder11.removeAlias("hi!");
        long long16 = builder11.version();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state17 = org.elasticsearch.cluster.metadata.IndexMetaData.State.CLOSE;
        byte byte18 = state17.id();
        byte byte19 = state17.id();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder20 = builder11.state(state17);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData21 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder22 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData21);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap23 = indexMetaData21.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet24 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple25 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData21, indexShardStateSet24);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters26 = indexMetaData21.includeFilters();
        org.elasticsearch.common.settings.Settings settings27 = indexMetaData21.getSettings();
        org.elasticsearch.common.settings.Settings settings28 = org.elasticsearch.cluster.metadata.IndexMetaData.addHumanReadableSettings(settings27);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder29 = builder11.settings(settings28);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder30 = builder1.settings(settings28);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder32 = builder1.creationDate(1L);
        java.lang.String str33 = builder32.index();
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertTrue("'" + state17 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.CLOSE + "'", state17.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.CLOSE));
        org.junit.Assert.assertTrue("'" + byte18 + "' != '" + (byte) 1 + "'", byte18 == (byte) 1);
        org.junit.Assert.assertTrue("'" + byte19 + "' != '" + (byte) 1 + "'", byte19 == (byte) 1);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(indexMetaData21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap23);
        org.junit.Assert.assertNotNull(indexShardStateSet24);
        org.junit.Assert.assertNull(discoveryNodeFilters26);
        org.junit.Assert.assertNotNull(settings27);
        org.junit.Assert.assertNotNull(settings28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "state-" + "'", str33, "state-");
    }

    @Test
    public void test4230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4230");
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.update.UpdateHelper.Result result6 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult12 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult13 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result6, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable11, writeResult12);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest8);
        org.elasticsearch.tasks.TaskId taskId15 = null;
        bulkShardRequest8.setParentTask(taskId15);
        org.elasticsearch.index.shard.ShardId shardId17 = bulkShardRequest8.shardId();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult18 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult19 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, writeResult18);
        org.elasticsearch.common.unit.TimeValue timeValue20 = bulkShardRequest8.timeout();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 10, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = new org.elasticsearch.action.bulk.BulkItemRequest((int) '4', (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        bulkShardRequest8.primaryTerm((long) 32);
        org.elasticsearch.action.update.UpdateHelper.Result result26 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest28 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest29 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest28);
        org.elasticsearch.action.update.UpdateHelper.Result result30 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest32 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest33 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest32);
        java.lang.Throwable throwable35 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult36 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult37 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result30, (org.elasticsearch.action.ActionRequest) bulkShardRequest32, false, throwable35, writeResult36);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple38 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest29, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest32);
        java.lang.Throwable throwable40 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult41 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult42 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result26, (org.elasticsearch.action.ActionRequest) bulkShardRequest32, true, throwable40, writeResult41);
        org.elasticsearch.index.shard.ShardId shardId43 = bulkShardRequest32.shardId();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest44 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest32);
        org.elasticsearch.common.unit.TimeValue timeValue45 = bulkShardRequest32.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest46 = bulkShardRequest8.timeout(timeValue45);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest48 = bulkShardRequest8.index("current version [0] is different than the one provided [97]");
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNull(shardId43);
        org.junit.Assert.assertNotNull(timeValue45);
        org.junit.Assert.assertNotNull(bulkShardRequest46);
        org.junit.Assert.assertNotNull(bulkShardRequest48);
    }

    @Test
    public void test4231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4231");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder2.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder3.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int9 = builder8.numberOfShards();
        java.lang.String[] strArray13 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder8.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder3.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple18 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData0, (java.lang.Iterable<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap19 = indexMetaData0.getAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder20 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        java.util.Set<java.lang.String> strSet22 = null; // flaky: indexMetaData0.activeAllocationIds((int) (short) 1);
        int int23 = indexMetaData0.getTotalNumberOfShards();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state24 = indexMetaData0.getState();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData26 = indexMetaData0.mappingOrDefault("index.");
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple18);
        org.junit.Assert.assertNotNull(strImmutableOpenMap19);
        org.junit.Assert.assertNull(strSet22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + state24 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state24.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertNull(mappingMetaData26);
    }

    @Test
    public void test4232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4232");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData1 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData1);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap3 = indexMetaData1.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters4 = indexMetaData1.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff5 = indexMetaData0.diff(indexMetaData1);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters6 = indexMetaData1.requireFilters();
        org.elasticsearch.Version version7 = indexMetaData1.getUpgradedVersion();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters8 = indexMetaData1.getInitialRecoveryFilters();
        boolean boolean10 = indexMetaData1.isSameUUID("");
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters11 = indexMetaData1.getInitialRecoveryFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder12 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData1);
        org.elasticsearch.Version version13 = indexMetaData1.getCreationVersion();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.IndexMetaData.Custom> strImmutableOpenMap14 = indexMetaData1.getCustoms();
        long long15 = indexMetaData1.getCreationDate();
        boolean boolean17 = indexMetaData1.isSameUUID("current version [-1] is higher than the one provided [0]");
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData19 = indexMetaData1.mapping("current version [0] is higher or equal to the one provided [35]");
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(indexMetaData1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap3);
        org.junit.Assert.assertNull(discoveryNodeFilters4);
        org.junit.Assert.assertNotNull(indexMetaDataDiff5);
        org.junit.Assert.assertNull(discoveryNodeFilters6);
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertNull(discoveryNodeFilters8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(discoveryNodeFilters11);
        org.junit.Assert.assertNotNull(version13);
        org.junit.Assert.assertNotNull(strImmutableOpenMap14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(mappingMetaData19);
    }

    @Test
    public void test4233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4233");
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.ActionRequest actionRequest6 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest6);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple9 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest7, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest8);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest10 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue12 = bulkShardRequest11.timeout();
        java.lang.String str13 = bulkShardRequest11.index();
        org.elasticsearch.common.unit.TimeValue timeValue14 = bulkShardRequest11.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest15 = bulkShardRequest8.timeout(timeValue14);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest16 = new org.elasticsearch.action.bulk.BulkItemRequest(35, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.action.ActionRequest actionRequest19 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest20 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest19);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest21 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple22 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest20, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest21);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest23 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest21);
        java.lang.String str24 = bulkShardRequest21.index();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple25 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest16, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest21);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult26 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult27 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest21, writeResult26);
        boolean boolean28 = bulkShardRequest21.getShouldPersistResult();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult29 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult30 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest21, writeResult29);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest31 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest21);
        org.elasticsearch.action.ActionRequest actionRequest32 = bulkItemRequest31.request();
        org.junit.Assert.assertNotNull(timeValue12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(timeValue14);
        org.junit.Assert.assertNotNull(bulkShardRequest15);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(actionRequest32);
    }

    @Test
    public void test4234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4234");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.ActionRequest actionRequest2 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest3 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest2);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple5 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest4);
        boolean boolean6 = bulkShardRequest4.getShouldPersistResult();
        bulkShardRequest4.primaryTerm(100L);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest4, writeResult9);
        boolean boolean11 = updateResult10.failure();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test4235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4235");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.update.UpdateHelper.Result result6 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult12 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult13 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result6, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable11, writeResult12);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest8);
        org.elasticsearch.tasks.TaskId taskId15 = null;
        bulkShardRequest8.setParentTask(taskId15);
        org.elasticsearch.index.shard.ShardId shardId17 = bulkShardRequest8.shardId();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult18 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult19 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, writeResult18);
        long long20 = bulkShardRequest8.primaryTerm();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest((int) 'a', (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel22 = bulkShardRequest8.consistencyLevel();
        org.elasticsearch.cluster.routing.ShardRouting shardRouting24 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting26 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result28 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest30 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest31 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest30);
        org.elasticsearch.action.update.UpdateHelper.Result result32 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest34 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest35 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest34);
        java.lang.Throwable throwable37 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult38 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult39 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result32, (org.elasticsearch.action.ActionRequest) bulkShardRequest34, false, throwable37, writeResult38);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple40 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest31, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest34);
        org.elasticsearch.tasks.TaskId taskId41 = null;
        bulkShardRequest34.setParentTask(taskId41);
        org.elasticsearch.index.shard.ShardId shardId43 = bulkShardRequest34.shardId();
        bulkShardRequest34.seqNo((long) 0);
        java.lang.Throwable throwable47 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult48 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult49 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result28, (org.elasticsearch.action.ActionRequest) bulkShardRequest34, false, throwable47, writeResult48);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException50 = bulkShardRequest34.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure52 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting26, "index.number_of_shards", (java.lang.Throwable) actionRequestValidationException50, "update");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure54 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting24, "index.uuid", (java.lang.Throwable) actionRequestValidationException50, "index.blocks.metadata");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult55 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult56 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, (java.lang.Throwable) actionRequestValidationException50, writeResult55);
        boolean boolean57 = bulkShardRequest8.getShouldPersistResult();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest59 = bulkShardRequest8.index("state-");
        org.elasticsearch.common.io.stream.StreamInput streamInput60 = null;
        // The following exception was thrown during execution in test generation
        try {
            bulkShardRequest59.readFrom(streamInput60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel22 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel22.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(shardId43);
        org.junit.Assert.assertNotNull(actionRequestValidationException50);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(bulkShardRequest59);
    }

    @Test
    public void test4236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4236");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result12 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest14 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest15 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest14);
        org.elasticsearch.action.update.UpdateHelper.Result result16 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest18 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest19 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest18);
        java.lang.Throwable throwable21 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult22 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult23 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result16, (org.elasticsearch.action.ActionRequest) bulkShardRequest18, false, throwable21, writeResult22);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple24 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest15, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest18);
        org.elasticsearch.tasks.TaskId taskId25 = null;
        bulkShardRequest18.setParentTask(taskId25);
        org.elasticsearch.index.shard.ShardId shardId27 = bulkShardRequest18.shardId();
        bulkShardRequest18.seqNo((long) 0);
        java.lang.Throwable throwable31 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult32 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult33 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result12, (org.elasticsearch.action.ActionRequest) bulkShardRequest18, false, throwable31, writeResult32);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException34 = bulkShardRequest18.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException34, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "update", (java.lang.Throwable) actionRequestValidationException34, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "_na_", (java.lang.Throwable) actionRequestValidationException34, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "_na_", (java.lang.Throwable) actionRequestValidationException34, "index.version.upgraded");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "index.shadow_replicas", (java.lang.Throwable) actionRequestValidationException34, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "index.blocks.write", (java.lang.Throwable) actionRequestValidationException34, "primary_terms");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting47 = shardFailure46.routing;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting48 = shardFailure46.routing;
        org.junit.Assert.assertNull(shardId27);
        org.junit.Assert.assertNotNull(actionRequestValidationException34);
        org.junit.Assert.assertNull(shardRouting47);
        org.junit.Assert.assertNull(shardRouting48);
    }

    @Test
    public void test4237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4237");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue5 = bulkShardRequest4.timeout();
        java.lang.String str6 = bulkShardRequest4.index();
        org.elasticsearch.index.shard.ShardId shardId7 = bulkShardRequest4.shardId();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 10, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest10 = new org.elasticsearch.action.bulk.BulkItemRequest((int) '#', (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        bulkShardRequest4.seqNo((long) 32);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest13 = new org.elasticsearch.action.bulk.BulkItemRequest((int) '4', (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput14 = null;
        // The following exception was thrown during execution in test generation
        try {
            bulkItemRequest13.writeTo(streamOutput14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(shardId7);
    }

    @Test
    public void test4238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4238");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.ActionRequest actionRequest3 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest3);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple6 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest10 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        org.elasticsearch.action.update.UpdateHelper.Result result11 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest13 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest13);
        java.lang.Throwable throwable16 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult17 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult18 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result11, (org.elasticsearch.action.ActionRequest) bulkShardRequest13, false, throwable16, writeResult17);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple19 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest10, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest13);
        org.elasticsearch.action.ActionRequest actionRequest21 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest21);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest23 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple24 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest22, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest23);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple25 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest10, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest23);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple26 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest7, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest23);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting27 = null;
        java.lang.Throwable throwable29 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure31 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting27, "", throwable29, "");
        org.elasticsearch.action.update.UpdateHelper.Result result32 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest33 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable35 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult36 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult37 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result32, (org.elasticsearch.action.ActionRequest) bulkShardRequest33, false, throwable35, writeResult36);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple38 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure31, (org.elasticsearch.transport.TransportMessage) bulkShardRequest33);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest40 = bulkShardRequest33.index("index.version.created");
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple41 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest7, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest40);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult42 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult43 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest40, writeResult42);
        org.elasticsearch.action.update.UpdateResponse updateResponse44 = updateResult43.noopResult;
        boolean boolean45 = updateResult43.failure();
        org.junit.Assert.assertNotNull(bulkShardRequest40);
        org.junit.Assert.assertNull(updateResponse44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test4239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4239");
        org.elasticsearch.action.ActionRequest actionRequest4 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest4);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest6 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple7 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest6);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest6);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest10 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest11 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest10);
        org.elasticsearch.action.update.UpdateHelper.Result result12 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest14 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest15 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest14);
        java.lang.Throwable throwable17 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult18 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult19 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result12, (org.elasticsearch.action.ActionRequest) bulkShardRequest14, false, throwable17, writeResult18);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple20 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest11, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest14);
        org.elasticsearch.action.ActionRequest actionRequest22 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest23 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest22);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest24 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple25 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest23, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest24);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple26 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest11, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest24);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple27 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest8, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest24);
        bulkShardRequest24.setParentTask("index.version.created", (long) (byte) 1);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest31 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 10, (org.elasticsearch.action.ActionRequest) bulkShardRequest24);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting34 = null;
        java.lang.Throwable throwable36 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting34, "", throwable36, "");
        org.elasticsearch.action.update.UpdateHelper.Result result39 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest40 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable42 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult43 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult44 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result39, (org.elasticsearch.action.ActionRequest) bulkShardRequest40, false, throwable42, writeResult43);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple45 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure38, (org.elasticsearch.transport.TransportMessage) bulkShardRequest40);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest47 = bulkShardRequest40.index("hi!");
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest48 = new org.elasticsearch.action.bulk.BulkItemRequest((int) '#', (org.elasticsearch.action.ActionRequest) bulkShardRequest47);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest49 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.String str50 = bulkShardRequest49.index();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple51 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest48, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest49);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest54 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest55 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest54);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel56 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest57 = bulkShardRequest54.consistencyLevel(writeConsistencyLevel56);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest58 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest57);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple59 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest48, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest57);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest60 = new org.elasticsearch.action.bulk.BulkItemRequest((int) ' ', (org.elasticsearch.action.ActionRequest) bulkShardRequest57);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple61 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest31, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest57);
        org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestReplicationRequest62 = bulkItemRequestTuple61.v2();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest63 = new org.elasticsearch.action.bulk.BulkItemRequest(0, (org.elasticsearch.action.ActionRequest) bulkShardRequestReplicationRequest62);
        org.junit.Assert.assertNotNull(bulkShardRequest47);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(bulkShardRequest57);
        org.junit.Assert.assertNotNull(bulkShardRequestReplicationRequest62);
    }

    @Test
    public void test4240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4240");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters5 = indexMetaData0.includeFilters();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.action.update.UpdateHelper.Result result9 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult15 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult16 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result9, (org.elasticsearch.action.ActionRequest) bulkShardRequest11, false, throwable14, writeResult15);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest8, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest11);
        org.elasticsearch.index.VersionType versionType18 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean22 = versionType18.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple23 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest8, versionType18);
        boolean boolean27 = versionType18.isVersionConflictForWrites((long) 0, (long) (short) 0, false);
        boolean boolean28 = indexMetaData0.equals((java.lang.Object) boolean27);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters29 = indexMetaData0.getInitialRecoveryFilters();
        boolean boolean31 = indexMetaData0.isSameUUID("_na_");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder32 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.settings.Settings settings33 = indexMetaData0.getSettings();
        long long34 = indexMetaData0.getCreationDate();
        org.elasticsearch.common.io.stream.StreamInput streamInput35 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff36 = indexMetaData0.readDiffFrom(streamInput35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNull(discoveryNodeFilters5);
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(discoveryNodeFilters29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(settings33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
    }

    @Test
    public void test4241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4241");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest1 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest1);
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, false, throwable8, writeResult9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.index.VersionType versionType12 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean16 = versionType12.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest2, versionType12);
        boolean boolean21 = versionType12.isVersionConflictForWrites(10L, (long) (byte) 0, false);
        boolean boolean23 = versionType12.validateVersionForReads(10L);
        boolean boolean27 = versionType12.isVersionConflictForWrites((long) 100, (long) (-1), false);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput28 = null;
        // The following exception was thrown during execution in test generation
        try {
            versionType12.writeTo(streamOutput28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test4242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4242");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest1 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest1);
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, false, throwable8, writeResult9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.action.update.UpdateHelper.Result result14 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest16 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest17 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest16);
        java.lang.Throwable throwable19 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult20 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult21 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result14, (org.elasticsearch.action.ActionRequest) bulkShardRequest16, false, throwable19, writeResult20);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest16);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest23 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest16);
        org.elasticsearch.action.ActionRequest actionRequest26 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest27 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest26);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest28 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple29 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest27, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest28);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest30 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest28);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest32 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest33 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest32);
        org.elasticsearch.action.update.UpdateHelper.Result result34 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest36 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest37 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest36);
        java.lang.Throwable throwable39 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult40 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult41 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result34, (org.elasticsearch.action.ActionRequest) bulkShardRequest36, false, throwable39, writeResult40);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple42 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest33, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest36);
        org.elasticsearch.action.ActionRequest actionRequest44 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest45 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest44);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest46 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple47 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest45, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest46);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple48 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest33, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest46);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple49 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest30, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest46);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting50 = null;
        java.lang.Throwable throwable52 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure54 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting50, "", throwable52, "");
        org.elasticsearch.action.update.UpdateHelper.Result result55 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest56 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable58 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult59 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult60 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result55, (org.elasticsearch.action.ActionRequest) bulkShardRequest56, false, throwable58, writeResult59);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple61 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure54, (org.elasticsearch.transport.TransportMessage) bulkShardRequest56);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest63 = bulkShardRequest56.index("index.version.created");
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple64 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest30, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest63);
        org.elasticsearch.common.collect.Tuple<java.lang.Object, org.elasticsearch.action.ActionRequest<org.elasticsearch.action.bulk.BulkShardRequest>> objTuple65 = org.elasticsearch.common.collect.Tuple.tuple((java.lang.Object) bulkItemRequest23, (org.elasticsearch.action.ActionRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest63);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple66 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest63);
        org.elasticsearch.action.update.UpdateHelper.Result result68 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest70 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest71 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest70);
        org.elasticsearch.action.update.UpdateHelper.Result result72 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest74 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest75 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest74);
        java.lang.Throwable throwable77 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult78 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult79 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result72, (org.elasticsearch.action.ActionRequest) bulkShardRequest74, false, throwable77, writeResult78);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple80 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest71, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest74);
        java.lang.Throwable throwable82 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult83 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult84 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result68, (org.elasticsearch.action.ActionRequest) bulkShardRequest74, true, throwable82, writeResult83);
        org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestReplicationRequest85 = updateResult84.request();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest86 = new org.elasticsearch.action.bulk.BulkItemRequest((-1), (org.elasticsearch.action.ActionRequest) bulkShardRequestReplicationRequest85);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple87 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, bulkShardRequestReplicationRequest85);
        java.lang.String str88 = bulkShardRequestReplicationRequest85.index();
        org.junit.Assert.assertNotNull(bulkShardRequest63);
        org.junit.Assert.assertNotNull(objTuple65);
        org.junit.Assert.assertNotNull(bulkShardRequestReplicationRequest85);
        org.junit.Assert.assertNull(str88);
    }

    @Test
    public void test4243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4243");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result5 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.action.update.UpdateHelper.Result result9 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult15 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult16 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result9, (org.elasticsearch.action.ActionRequest) bulkShardRequest11, false, throwable14, writeResult15);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest8, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest11);
        org.elasticsearch.tasks.TaskId taskId18 = null;
        bulkShardRequest11.setParentTask(taskId18);
        java.lang.Throwable throwable21 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult22 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult23 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result5, (org.elasticsearch.action.ActionRequest) bulkShardRequest11, true, throwable21, writeResult22);
        org.elasticsearch.action.support.IndicesOptions indicesOptions24 = bulkShardRequest11.indicesOptions();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest25 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        java.lang.Throwable throwable27 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult28 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult29 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest11, true, throwable27, writeResult28);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest30 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        org.elasticsearch.action.update.UpdateHelper.Result result31 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest33 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest34 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest33);
        org.elasticsearch.action.update.UpdateHelper.Result result35 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest37 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest38 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest37);
        java.lang.Throwable throwable40 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult41 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult42 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result35, (org.elasticsearch.action.ActionRequest) bulkShardRequest37, false, throwable40, writeResult41);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple43 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest34, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest37);
        org.elasticsearch.tasks.TaskId taskId44 = null;
        bulkShardRequest37.setParentTask(taskId44);
        java.lang.Throwable throwable47 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult48 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult49 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result31, (org.elasticsearch.action.ActionRequest) bulkShardRequest37, true, throwable47, writeResult48);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple50 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest30, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest37);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult51 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult52 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest37, writeResult51);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult53 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult54 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest37, writeResult53);
        boolean boolean55 = updateResult54.retry;
        org.junit.Assert.assertNotNull(indicesOptions24);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test4244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4244");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder2.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder3.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int9 = builder8.numberOfShards();
        java.lang.String[] strArray13 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder8.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder3.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple18 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData0, (java.lang.Iterable<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap19 = indexMetaData0.getAliases();
        int int20 = indexMetaData0.getNumberOfShards();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters21 = indexMetaData0.excludeFilters();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap22 = indexMetaData0.getAliases();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters23 = indexMetaData0.excludeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder24 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.common.settings.Settings settings25 = indexMetaData0.getSettings();
        org.elasticsearch.index.Index index26 = indexMetaData0.getMergeSourceIndex();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters27 = indexMetaData0.getInitialRecoveryFilters();
        org.elasticsearch.Version version28 = indexMetaData0.getCreationVersion();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple18);
        org.junit.Assert.assertNotNull(strImmutableOpenMap19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNull(discoveryNodeFilters21);
        org.junit.Assert.assertNotNull(strImmutableOpenMap22);
        org.junit.Assert.assertNull(discoveryNodeFilters23);
        org.junit.Assert.assertNotNull(settings25);
        org.junit.Assert.assertNull(index26);
        org.junit.Assert.assertNull(discoveryNodeFilters27);
        org.junit.Assert.assertNotNull(version28);
    }

    @Test
    public void test4245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4245");
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest3 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.String str4 = bulkShardRequest3.index();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult5 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult6 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest3, writeResult5);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult7 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult8 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest3, writeResult7);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest(0, (org.elasticsearch.action.ActionRequest) bulkShardRequest3);
        org.elasticsearch.common.io.stream.StreamInput streamInput10 = null;
        // The following exception was thrown during execution in test generation
        try {
            bulkItemRequest9.readFrom(streamInput10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test4246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4246");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting1 = null;
        java.lang.Throwable throwable3 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure5 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting1, "", throwable3, "");
        org.elasticsearch.action.update.UpdateHelper.Result result6 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult10 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult11 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result6, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, false, throwable9, writeResult10);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure5, (org.elasticsearch.transport.TransportMessage) bulkShardRequest7);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest14 = bulkShardRequest7.index("hi!");
        org.elasticsearch.action.support.IndicesOptions indicesOptions15 = bulkShardRequest14.indicesOptions();
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = null;
        bulkShardRequest14.remoteAddress(transportAddress16);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest19 = bulkShardRequest14.index("current version [2] is higher than the one provided [-1]");
        java.lang.String str20 = bulkShardRequest14.index();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 100, (org.elasticsearch.action.ActionRequest) bulkShardRequest14);
        org.junit.Assert.assertNotNull(bulkShardRequest14);
        org.junit.Assert.assertNotNull(indicesOptions15);
        org.junit.Assert.assertNotNull(bulkShardRequest19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "current version [2] is higher than the one provided [-1]" + "'", str20, "current version [2] is higher than the one provided [-1]");
    }

    @Test
    public void test4247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4247");
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest3 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest3);
        org.elasticsearch.action.update.UpdateHelper.Result result5 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult11 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult12 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result5, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, false, throwable10, writeResult11);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest7);
        java.lang.Throwable throwable15 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult16 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult17 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, true, throwable15, writeResult16);
        org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestReplicationRequest18 = updateResult17.request();
        org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestReplicationRequest19 = updateResult17.request();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest20 = new org.elasticsearch.action.bulk.BulkItemRequest(0, (org.elasticsearch.action.ActionRequest) bulkShardRequestReplicationRequest19);
        org.elasticsearch.action.ActionRequest actionRequest21 = bulkItemRequest20.request();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest24 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest25 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest24);
        org.elasticsearch.action.update.UpdateHelper.Result result26 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest28 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest29 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest28);
        java.lang.Throwable throwable31 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult32 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult33 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result26, (org.elasticsearch.action.ActionRequest) bulkShardRequest28, false, throwable31, writeResult32);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple34 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest25, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest28);
        org.elasticsearch.action.ActionRequest actionRequest36 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest37 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest36);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest38 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple39 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest37, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest38);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple40 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest25, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest38);
        org.elasticsearch.action.update.UpdateHelper.Result result41 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest43 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest44 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest43);
        java.lang.Throwable throwable46 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult47 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult48 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result41, (org.elasticsearch.action.ActionRequest) bulkShardRequest43, false, throwable46, writeResult47);
        org.elasticsearch.action.update.UpdateHelper.Result result49 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest51 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest52 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest51);
        org.elasticsearch.action.update.UpdateHelper.Result result53 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest55 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest56 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest55);
        java.lang.Throwable throwable58 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult59 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult60 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result53, (org.elasticsearch.action.ActionRequest) bulkShardRequest55, false, throwable58, writeResult59);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple61 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest52, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest55);
        java.lang.Throwable throwable63 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult64 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult65 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result49, (org.elasticsearch.action.ActionRequest) bulkShardRequest55, true, throwable63, writeResult64);
        org.elasticsearch.index.shard.ShardId shardId66 = bulkShardRequest55.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue67 = bulkShardRequest55.timeout();
        org.elasticsearch.tasks.TaskId taskId68 = bulkShardRequest55.getParentTask();
        bulkShardRequest43.setParentTask(taskId68);
        bulkShardRequest38.setParentTask(taskId68);
        org.elasticsearch.tasks.TaskId taskId71 = bulkShardRequest38.getParentTask();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest72 = new org.elasticsearch.action.bulk.BulkItemRequest((-1), (org.elasticsearch.action.ActionRequest) bulkShardRequest38);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple73 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest20, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest38);
        org.junit.Assert.assertNotNull(bulkShardRequestReplicationRequest18);
        org.junit.Assert.assertNotNull(bulkShardRequestReplicationRequest19);
        org.junit.Assert.assertNotNull(actionRequest21);
        org.junit.Assert.assertNull(shardId66);
        org.junit.Assert.assertNotNull(timeValue67);
        org.junit.Assert.assertNotNull(taskId68);
        org.junit.Assert.assertNotNull(taskId71);
    }

    @Test
    public void test4248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4248");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result10 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result11 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest13 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest13);
        java.lang.Throwable throwable16 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult17 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult18 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result11, (org.elasticsearch.action.ActionRequest) bulkShardRequest13, false, throwable16, writeResult17);
        org.elasticsearch.action.update.UpdateHelper.Result result19 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest21 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest21);
        org.elasticsearch.action.update.UpdateHelper.Result result23 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest25 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest26 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest25);
        java.lang.Throwable throwable28 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult29 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult30 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result23, (org.elasticsearch.action.ActionRequest) bulkShardRequest25, false, throwable28, writeResult29);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple31 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest22, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest25);
        java.lang.Throwable throwable33 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult34 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult35 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result19, (org.elasticsearch.action.ActionRequest) bulkShardRequest25, true, throwable33, writeResult34);
        org.elasticsearch.index.shard.ShardId shardId36 = bulkShardRequest25.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue37 = bulkShardRequest25.timeout();
        org.elasticsearch.tasks.TaskId taskId38 = bulkShardRequest25.getParentTask();
        bulkShardRequest13.setParentTask(taskId38);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting41 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result43 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest45 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest46 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest45);
        org.elasticsearch.action.update.UpdateHelper.Result result47 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest49 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest50 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest49);
        java.lang.Throwable throwable52 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult53 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult54 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result47, (org.elasticsearch.action.ActionRequest) bulkShardRequest49, false, throwable52, writeResult53);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple55 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest46, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest49);
        org.elasticsearch.tasks.TaskId taskId56 = null;
        bulkShardRequest49.setParentTask(taskId56);
        org.elasticsearch.index.shard.ShardId shardId58 = bulkShardRequest49.shardId();
        bulkShardRequest49.seqNo((long) 0);
        java.lang.Throwable throwable62 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult63 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult64 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result43, (org.elasticsearch.action.ActionRequest) bulkShardRequest49, false, throwable62, writeResult63);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException65 = bulkShardRequest49.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure67 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting41, "index.version.upgraded", (java.lang.Throwable) actionRequestValidationException65, "index.blocks.write");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult68 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult69 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result10, (org.elasticsearch.action.ActionRequest) bulkShardRequest13, false, (java.lang.Throwable) actionRequestValidationException65, writeResult68);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure71 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "hi!", (java.lang.Throwable) actionRequestValidationException65, "index.version.upgraded");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure73 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "index.version.created", (java.lang.Throwable) actionRequestValidationException65, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure75 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "current version [97] is different than the one provided [35]", (java.lang.Throwable) actionRequestValidationException65, "index.blocks.write");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting76 = shardFailure75.routing;
        java.lang.Throwable throwable77 = shardFailure75.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure79 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", throwable77, "current version [32] is different than the one provided [2]");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure81 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "current version [97] is different than the one provided [32]", throwable77, "current version [10] is different than the one provided [32]");
        org.junit.Assert.assertNull(shardId36);
        org.junit.Assert.assertNotNull(timeValue37);
        org.junit.Assert.assertNotNull(taskId38);
        org.junit.Assert.assertNull(shardId58);
        org.junit.Assert.assertNotNull(actionRequestValidationException65);
        org.junit.Assert.assertNull(shardRouting76);
        org.junit.Assert.assertNotNull(throwable77);
        org.junit.Assert.assertEquals(throwable77.getLocalizedMessage(), "Validation Failed: 1: index is missing;");
        org.junit.Assert.assertEquals(throwable77.getMessage(), "Validation Failed: 1: index is missing;");
        org.junit.Assert.assertEquals(throwable77.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;");
    }

    @Test
    public void test4249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4249");
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        org.elasticsearch.action.update.UpdateHelper.Result result7 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest10 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        java.lang.Throwable throwable12 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult13 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult14 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result7, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, false, throwable12, writeResult13);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple15 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest6, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest9);
        org.elasticsearch.tasks.TaskId taskId16 = null;
        bulkShardRequest9.setParentTask(taskId16);
        org.elasticsearch.index.shard.ShardId shardId18 = bulkShardRequest9.shardId();
        bulkShardRequest9.seqNo((long) 0);
        java.lang.Throwable throwable22 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult23 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult24 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, false, throwable22, writeResult23);
        long long25 = bulkShardRequest9.seqNo();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult26 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult27 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, writeResult26);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult28 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult29 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, writeResult28);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest30 = new org.elasticsearch.action.bulk.BulkItemRequest(97, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        int int31 = bulkItemRequest30.id();
        org.elasticsearch.action.update.UpdateHelper.Result result32 = null;
        org.elasticsearch.action.ActionRequest actionRequest36 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest37 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest36);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest38 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple39 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest37, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest38);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest40 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest38);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest42 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest43 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest42);
        org.elasticsearch.action.update.UpdateHelper.Result result44 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest46 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest47 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest46);
        java.lang.Throwable throwable49 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult50 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult51 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result44, (org.elasticsearch.action.ActionRequest) bulkShardRequest46, false, throwable49, writeResult50);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple52 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest43, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest46);
        org.elasticsearch.action.ActionRequest actionRequest54 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest55 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest54);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest56 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple57 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest55, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest56);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple58 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest43, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest56);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple59 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest40, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest56);
        bulkShardRequest56.setParentTask("index.version.created", (long) (byte) 1);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest63 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 100, (org.elasticsearch.action.ActionRequest) bulkShardRequest56);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult64 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult65 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result32, (org.elasticsearch.action.ActionRequest) bulkShardRequest56, writeResult64);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple66 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest30, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest56);
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 97 + "'", int31 == 97);
    }

    @Test
    public void test4250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4250");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData1 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData1);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap3 = indexMetaData1.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters4 = indexMetaData1.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff5 = indexMetaData0.diff(indexMetaData1);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters6 = indexMetaData1.requireFilters();
        org.elasticsearch.Version version7 = indexMetaData1.getUpgradedVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData8 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData8);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap10 = indexMetaData8.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet11 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData8, indexShardStateSet11);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff13 = indexMetaData1.diff(indexMetaData8);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap14 = indexMetaData1.getAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData15 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData15);
        org.elasticsearch.Version version17 = indexMetaData15.getCreationVersion();
        long long18 = indexMetaData15.getCreationDate();
        long long19 = indexMetaData15.getCreationDate();
        java.util.Set<java.lang.String> strSet21 = null; // flaky: indexMetaData15.activeAllocationIds((int) (short) 10);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff22 = indexMetaData1.diff(indexMetaData15);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters23 = indexMetaData15.excludeFilters();
        int int24 = indexMetaData15.getNumberOfShards();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(indexMetaData1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap3);
        org.junit.Assert.assertNull(discoveryNodeFilters4);
        org.junit.Assert.assertNotNull(indexMetaDataDiff5);
        org.junit.Assert.assertNull(discoveryNodeFilters6);
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertNotNull(indexMetaData8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap10);
        org.junit.Assert.assertNotNull(indexShardStateSet11);
        org.junit.Assert.assertNotNull(indexMetaDataDiff13);
        org.junit.Assert.assertNotNull(strImmutableOpenMap14);
        org.junit.Assert.assertNotNull(indexMetaData15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(version17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNull(strSet21);
        org.junit.Assert.assertNotNull(indexMetaDataDiff22);
        org.junit.Assert.assertNull(discoveryNodeFilters23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
    }

    @Test
    public void test4251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4251");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        int int6 = indexMetaData0.getTotalNumberOfShards();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder7 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params8 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting9 = org.elasticsearch.cluster.metadata.IndexMetaData.INDEX_PRIORITY_SETTING;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting11 = null;
        java.lang.Throwable throwable13 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure15 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting11, "", throwable13, "");
        org.elasticsearch.action.update.UpdateHelper.Result result16 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest17 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable19 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult20 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult21 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result16, (org.elasticsearch.action.ActionRequest) bulkShardRequest17, false, throwable19, writeResult20);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple22 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure15, (org.elasticsearch.transport.TransportMessage) bulkShardRequest17);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest24 = bulkShardRequest17.index("hi!");
        org.elasticsearch.action.support.IndicesOptions indicesOptions25 = bulkShardRequest24.indicesOptions();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest26 = new org.elasticsearch.action.bulk.BulkItemRequest((int) 'a', (org.elasticsearch.action.ActionRequest) bulkShardRequest24);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest28 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest29 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest28);
        org.elasticsearch.action.update.UpdateHelper.Result result30 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest32 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest33 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest32);
        java.lang.Throwable throwable35 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult36 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult37 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result30, (org.elasticsearch.action.ActionRequest) bulkShardRequest32, false, throwable35, writeResult36);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple38 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest29, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest32);
        org.elasticsearch.action.ActionRequest actionRequest40 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest41 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest40);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest42 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple43 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest41, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest42);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple44 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest29, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest42);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest45 = bulkItemRequestTuple44.v1();
        org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestReplicationRequest46 = bulkItemRequestTuple44.v2();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel47 = bulkShardRequestReplicationRequest46.consistencyLevel();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest48 = bulkShardRequest24.consistencyLevel(writeConsistencyLevel47);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.support.ToXContentToBytes, org.elasticsearch.action.WriteConsistencyLevel> toXContentToBytesTuple49 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.action.support.ToXContentToBytes) intSetting9, writeConsistencyLevel47);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.ToXContent.Params, org.elasticsearch.common.settings.Setting<java.lang.Integer>> paramsTuple50 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.ToXContent.Params, org.elasticsearch.common.settings.Setting<java.lang.Integer>>(params8, intSetting9);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder.toXContent(indexMetaData0, xContentBuilder7, params8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(params8);
        org.junit.Assert.assertNotNull(intSetting9);
        org.junit.Assert.assertNotNull(bulkShardRequest24);
        org.junit.Assert.assertNotNull(indicesOptions25);
        org.junit.Assert.assertNotNull(bulkItemRequest45);
        org.junit.Assert.assertNotNull(bulkShardRequestReplicationRequest46);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel47 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel47.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(bulkShardRequest48);
        org.junit.Assert.assertNotNull(toXContentToBytesTuple49);
    }

    @Test
    public void test4252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4252");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result12 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest14 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest15 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest14);
        org.elasticsearch.action.update.UpdateHelper.Result result16 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest18 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest19 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest18);
        java.lang.Throwable throwable21 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult22 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult23 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result16, (org.elasticsearch.action.ActionRequest) bulkShardRequest18, false, throwable21, writeResult22);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple24 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest15, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest18);
        org.elasticsearch.tasks.TaskId taskId25 = null;
        bulkShardRequest18.setParentTask(taskId25);
        org.elasticsearch.index.shard.ShardId shardId27 = bulkShardRequest18.shardId();
        bulkShardRequest18.seqNo((long) 0);
        java.lang.Throwable throwable31 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult32 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult33 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result12, (org.elasticsearch.action.ActionRequest) bulkShardRequest18, false, throwable31, writeResult32);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException34 = bulkShardRequest18.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException34, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "update", (java.lang.Throwable) actionRequestValidationException34, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "index.shared_filesystem", (java.lang.Throwable) actionRequestValidationException34, "index.version.minimum_compatible");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "current version [97] is different than the one provided [35]", (java.lang.Throwable) actionRequestValidationException34, "index.");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "index.blocks.read_only", (java.lang.Throwable) actionRequestValidationException34, "current version [97] is different than the one provided [1]");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "index.uuid", (java.lang.Throwable) actionRequestValidationException34, "index.uuid");
        java.lang.Throwable throwable47 = shardFailure46.cause;
        org.junit.Assert.assertNull(shardId27);
        org.junit.Assert.assertNotNull(actionRequestValidationException34);
        org.junit.Assert.assertNotNull(throwable47);
        org.junit.Assert.assertEquals(throwable47.getLocalizedMessage(), "Validation Failed: 1: index is missing;");
        org.junit.Assert.assertEquals(throwable47.getMessage(), "Validation Failed: 1: index is missing;");
        org.junit.Assert.assertEquals(throwable47.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;");
    }

    @Test
    public void test4253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4253");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("current version [100] is different than the one provided [1]");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder1.numberOfReplicas((int) '4');
        org.junit.Assert.assertNotNull(builder3);
    }

    @Test
    public void test4254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4254");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder1.index("active_allocations");
        java.lang.String str4 = builder3.index();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData5 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData5);
        org.elasticsearch.Version version7 = indexMetaData5.getCreationVersion();
        long long8 = indexMetaData5.getCreationDate();
        int int9 = indexMetaData5.getTotalNumberOfShards();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state10 = indexMetaData5.getState();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = builder3.state(state10);
        java.lang.String str12 = builder3.index();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder15 = builder3.putMapping("current version [-1] is higher than the one provided [0]", "index.blocks.metadata");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to derive xcontent");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "active_allocations" + "'", str4, "active_allocations");
        org.junit.Assert.assertNotNull(indexMetaData5);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + state10 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state10.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "active_allocations" + "'", str12, "active_allocations");
    }

    @Test
    public void test4255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4255");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting3 = null;
        java.lang.Throwable throwable5 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure7 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting3, "", throwable5, "");
        org.elasticsearch.action.update.UpdateHelper.Result result8 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult12 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult13 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result8, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, false, throwable11, writeResult12);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure7, (org.elasticsearch.transport.TransportMessage) bulkShardRequest9);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest16 = bulkShardRequest9.index("index.version.created");
        org.elasticsearch.common.transport.TransportAddress transportAddress17 = bulkShardRequest9.remoteAddress();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest18 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest19 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        org.elasticsearch.tasks.TaskId taskId20 = bulkShardRequest9.getParentTask();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest((int) 'a', (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        org.elasticsearch.common.io.stream.StreamInput streamInput22 = null;
        // The following exception was thrown during execution in test generation
        try {
            bulkItemRequest21.readFrom(streamInput22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(bulkShardRequest16);
        org.junit.Assert.assertNull(transportAddress17);
        org.junit.Assert.assertNotNull(taskId20);
    }

    @Test
    public void test4256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4256");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.Version version2 = indexMetaData0.getCreationVersion();
        long long3 = indexMetaData0.getCreationDate();
        int int4 = indexMetaData0.getTotalNumberOfShards();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput6 = null;
        // The following exception was thrown during execution in test generation
        try {
            indexMetaData0.writeTo(streamOutput6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(version2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(builder5);
    }

    @Test
    public void test4257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4257");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.update.UpdateHelper.Result result6 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult12 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult13 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result6, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable11, writeResult12);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest8);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest15 = new org.elasticsearch.action.bulk.BulkItemRequest((int) 'a', (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        java.lang.Throwable throwable17 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult18 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult19 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable17, writeResult18);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult20 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult21 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, writeResult20);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException22 = bulkShardRequest8.validate();
        bulkShardRequest8.primaryTerm((long) '4');
        org.elasticsearch.common.io.stream.StreamInput streamInput25 = null;
        // The following exception was thrown during execution in test generation
        try {
            bulkShardRequest8.readFrom(streamInput25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(actionRequestValidationException22);
    }

    @Test
    public void test4258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4258");
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.ActionRequest actionRequest3 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest3);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple6 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.common.transport.TransportAddress transportAddress7 = null;
        bulkShardRequest5.remoteAddress(transportAddress7);
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult11 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult12 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, false, throwable10, writeResult11);
        org.elasticsearch.action.ActionRequest actionRequest15 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest16 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest15);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest17 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple18 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest16, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest17);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest19 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest17);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest21 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest21);
        org.elasticsearch.action.update.UpdateHelper.Result result23 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest25 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest26 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest25);
        java.lang.Throwable throwable28 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult29 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult30 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result23, (org.elasticsearch.action.ActionRequest) bulkShardRequest25, false, throwable28, writeResult29);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple31 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest22, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest25);
        org.elasticsearch.action.ActionRequest actionRequest33 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest34 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest33);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest35 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple36 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest34, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest35);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple37 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest22, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest35);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple38 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest19, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest35);
        org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestReplicationRequest39 = bulkItemRequestTuple38.v2();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel40 = bulkShardRequestReplicationRequest39.consistencyLevel();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest41 = bulkShardRequest5.consistencyLevel(writeConsistencyLevel40);
        bulkShardRequest41.primaryTerm((long) (short) -1);
        org.elasticsearch.common.unit.TimeValue timeValue44 = bulkShardRequest41.timeout();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest45 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 100, (org.elasticsearch.action.ActionRequest) bulkShardRequest41);
        boolean boolean46 = bulkShardRequest41.getShouldPersistResult();
        org.elasticsearch.action.update.UpdateHelper.Result result48 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest50 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest51 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest50);
        org.elasticsearch.action.update.UpdateHelper.Result result52 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest54 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest55 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest54);
        java.lang.Throwable throwable57 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult58 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult59 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result52, (org.elasticsearch.action.ActionRequest) bulkShardRequest54, false, throwable57, writeResult58);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple60 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest51, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest54);
        java.lang.Throwable throwable62 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult63 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult64 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result48, (org.elasticsearch.action.ActionRequest) bulkShardRequest54, true, throwable62, writeResult63);
        org.elasticsearch.index.shard.ShardId shardId65 = bulkShardRequest54.shardId();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest66 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest54);
        org.elasticsearch.common.unit.TimeValue timeValue67 = bulkShardRequest54.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest69 = bulkShardRequest54.index("");
        bulkShardRequest69.seqNo(100L);
        org.elasticsearch.common.unit.TimeValue timeValue72 = bulkShardRequest69.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest73 = bulkShardRequest41.timeout(timeValue72);
        org.junit.Assert.assertNotNull(bulkShardRequestReplicationRequest39);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel40 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel40.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(bulkShardRequest41);
        org.junit.Assert.assertNotNull(timeValue44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(shardId65);
        org.junit.Assert.assertNotNull(timeValue67);
        org.junit.Assert.assertNotNull(bulkShardRequest69);
        org.junit.Assert.assertNotNull(timeValue72);
        org.junit.Assert.assertNotNull(bulkShardRequest73);
    }

    @Test
    public void test4259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4259");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder2.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder3.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int9 = builder8.numberOfShards();
        java.lang.String[] strArray13 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder8.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder3.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple18 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData0, (java.lang.Iterable<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap19 = indexMetaData0.getAliases();
        int int20 = indexMetaData0.getNumberOfShards();
        org.elasticsearch.Version version21 = indexMetaData0.getCreationVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData22 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData23 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder24 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData23);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap25 = indexMetaData23.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters26 = indexMetaData23.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff27 = indexMetaData22.diff(indexMetaData23);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters28 = indexMetaData23.requireFilters();
        org.elasticsearch.Version version29 = indexMetaData23.getUpgradedVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData30 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder31 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData30);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap32 = indexMetaData30.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet33 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple34 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData30, indexShardStateSet33);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff35 = indexMetaData23.diff(indexMetaData30);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff36 = indexMetaData0.diff(indexMetaData23);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap37 = indexMetaData23.getActiveAllocationIds();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder38 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData23);
        int int39 = indexMetaData23.getNumberOfShards();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData41 = indexMetaData23.mapping("current version [10] is different than the one provided [32]");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder42 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData23);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder43 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData23);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder44 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result45 = null;
        org.elasticsearch.action.ActionRequest actionRequest46 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting48 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting50 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting52 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting54 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting56 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result58 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest60 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest61 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest60);
        org.elasticsearch.action.update.UpdateHelper.Result result62 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest64 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest65 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest64);
        java.lang.Throwable throwable67 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult68 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult69 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result62, (org.elasticsearch.action.ActionRequest) bulkShardRequest64, false, throwable67, writeResult68);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple70 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest61, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest64);
        org.elasticsearch.tasks.TaskId taskId71 = null;
        bulkShardRequest64.setParentTask(taskId71);
        org.elasticsearch.index.shard.ShardId shardId73 = bulkShardRequest64.shardId();
        bulkShardRequest64.seqNo((long) 0);
        java.lang.Throwable throwable77 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult78 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult79 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result58, (org.elasticsearch.action.ActionRequest) bulkShardRequest64, false, throwable77, writeResult78);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException80 = bulkShardRequest64.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure82 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting56, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException80, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure84 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting54, "update", (java.lang.Throwable) actionRequestValidationException80, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure86 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting52, "_na_", (java.lang.Throwable) actionRequestValidationException80, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure88 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting50, "_na_", (java.lang.Throwable) actionRequestValidationException80, "index.version.upgraded");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure90 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting48, "index.blocks.metadata", (java.lang.Throwable) actionRequestValidationException80, "update");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult91 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult92 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result45, actionRequest46, true, (java.lang.Throwable) actionRequestValidationException80, writeResult91);
        org.elasticsearch.common.xcontent.ToXContent.Params params93 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.common.collect.Tuple<java.lang.Exception, org.elasticsearch.common.xcontent.ToXContent.Params> exceptionTuple94 = new org.elasticsearch.common.collect.Tuple<java.lang.Exception, org.elasticsearch.common.xcontent.ToXContent.Params>((java.lang.Exception) actionRequestValidationException80, params93);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder.toXContent(indexMetaData23, xContentBuilder44, params93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple18);
        org.junit.Assert.assertNotNull(strImmutableOpenMap19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(version21);
        org.junit.Assert.assertNotNull(indexMetaData22);
        org.junit.Assert.assertNotNull(indexMetaData23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap25);
        org.junit.Assert.assertNull(discoveryNodeFilters26);
        org.junit.Assert.assertNotNull(indexMetaDataDiff27);
        org.junit.Assert.assertNull(discoveryNodeFilters28);
        org.junit.Assert.assertNotNull(version29);
        org.junit.Assert.assertNotNull(indexMetaData30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap32);
        org.junit.Assert.assertNotNull(indexShardStateSet33);
        org.junit.Assert.assertNotNull(indexMetaDataDiff35);
        org.junit.Assert.assertNotNull(indexMetaDataDiff36);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNull(mappingMetaData41);
        org.junit.Assert.assertNull(shardId73);
        org.junit.Assert.assertNotNull(actionRequestValidationException80);
        org.junit.Assert.assertNotNull(params93);
    }

    @Test
    public void test4260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4260");
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.ActionRequest actionRequest5 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest5);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple8 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest6, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest7);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.action.ActionRequest actionRequest11 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest11);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest13 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest12, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest13);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple15 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest9, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest13);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest16 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest13);
        java.lang.String str17 = bulkShardRequest13.index();
        org.elasticsearch.cluster.routing.ShardRouting shardRouting19 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result21 = null;
        org.elasticsearch.action.ActionRequest actionRequest23 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest24 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest23);
        org.elasticsearch.action.ActionRequest actionRequest27 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest28 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest27);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest29 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple30 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest28, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest29);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest31 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest29);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple32 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest24, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest29);
        org.elasticsearch.common.transport.TransportAddress transportAddress33 = null;
        bulkShardRequest29.remoteAddress(transportAddress33);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting36 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting38 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting40 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting42 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting44 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result46 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest48 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest49 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest48);
        org.elasticsearch.action.update.UpdateHelper.Result result50 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest52 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest53 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest52);
        java.lang.Throwable throwable55 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult56 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult57 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result50, (org.elasticsearch.action.ActionRequest) bulkShardRequest52, false, throwable55, writeResult56);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple58 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest49, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest52);
        org.elasticsearch.tasks.TaskId taskId59 = null;
        bulkShardRequest52.setParentTask(taskId59);
        org.elasticsearch.index.shard.ShardId shardId61 = bulkShardRequest52.shardId();
        bulkShardRequest52.seqNo((long) 0);
        java.lang.Throwable throwable65 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult66 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult67 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result46, (org.elasticsearch.action.ActionRequest) bulkShardRequest52, false, throwable65, writeResult66);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException68 = bulkShardRequest52.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure70 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting44, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException68, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure72 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting42, "update", (java.lang.Throwable) actionRequestValidationException68, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure74 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting40, "_na_", (java.lang.Throwable) actionRequestValidationException68, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure76 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting38, "_na_", (java.lang.Throwable) actionRequestValidationException68, "index.version.upgraded");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure78 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting36, "index.shadow_replicas", (java.lang.Throwable) actionRequestValidationException68, "");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult79 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult80 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result21, (org.elasticsearch.action.ActionRequest) bulkShardRequest29, false, (java.lang.Throwable) actionRequestValidationException68, writeResult79);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure82 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting19, "index.creation_date", (java.lang.Throwable) actionRequestValidationException68, "hi!");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult83 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult84 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest13, false, (java.lang.Throwable) actionRequestValidationException68, writeResult83);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest85 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest13);
        int int86 = bulkItemRequest85.id();
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(shardId61);
        org.junit.Assert.assertNotNull(actionRequestValidationException68);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 1 + "'", int86 == 1);
    }

    @Test
    public void test4261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4261");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = builder1.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = builder2.numberOfReplicas((int) '#');
        org.elasticsearch.action.ActionRequest actionRequest7 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest7);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple10 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest8, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest9);
        boolean boolean11 = bulkShardRequest9.getShouldPersistResult();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder13 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int14 = builder13.numberOfShards();
        java.lang.String[] strArray18 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder21 = builder13.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet19);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>> streamableTuple22 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>>((org.elasticsearch.common.io.stream.Streamable) bulkShardRequest9, strSet19);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder23 = builder2.putActiveAllocationIds((int) (short) 10, (java.util.Set<java.lang.String>) strSet19);
        int int24 = builder23.numberOfShards();
        java.lang.String str25 = builder23.index();
        org.elasticsearch.action.ActionRequest actionRequest28 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest29 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest28);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest30 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple31 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest29, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest30);
        boolean boolean32 = bulkShardRequest30.getShouldPersistResult();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder34 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int35 = builder34.numberOfShards();
        java.lang.String[] strArray39 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet40 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet40, strArray39);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder42 = builder34.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet40);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>> streamableTuple43 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>>((org.elasticsearch.common.io.stream.Streamable) bulkShardRequest30, strSet40);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder44 = builder23.putActiveAllocationIds((int) (short) 10, (java.util.Set<java.lang.String>) strSet40);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder46 = builder23.removeAlias("current version [0] is different than the one provided [100]");
        int int47 = builder23.numberOfReplicas();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 35 + "'", int47 == 35);
    }

    @Test
    public void test4262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4262");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest3 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest3);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = new org.elasticsearch.action.bulk.BulkItemRequest((-1), (org.elasticsearch.action.ActionRequest) bulkShardRequest3);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(0, (org.elasticsearch.action.ActionRequest) bulkShardRequest3);
        org.elasticsearch.index.shard.ShardId shardId7 = bulkShardRequest3.shardId();
        long long8 = bulkShardRequest3.primaryTerm();
        org.elasticsearch.common.io.stream.StreamInput streamInput9 = null;
        // The following exception was thrown during execution in test generation
        try {
            bulkShardRequest3.readFrom(streamInput9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
    }

    @Test
    public void test4263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4263");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure6 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", throwable4, "");
        org.elasticsearch.action.update.UpdateHelper.Result result7 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult11 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult12 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result7, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable10, writeResult11);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure6, (org.elasticsearch.transport.TransportMessage) bulkShardRequest8);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest15 = bulkShardRequest8.index("hi!");
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest16 = new org.elasticsearch.action.bulk.BulkItemRequest((int) '#', (org.elasticsearch.action.ActionRequest) bulkShardRequest15);
        org.elasticsearch.action.ActionRequest actionRequest19 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest20 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest19);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest21 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple22 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest20, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest21);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest23 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest21);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple24 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest16, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest21);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest25 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 10, (org.elasticsearch.action.ActionRequest) bulkShardRequest21);
        org.elasticsearch.action.ActionRequest actionRequest27 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest28 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest27);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest29 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple30 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest28, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest29);
        org.elasticsearch.action.ActionRequest actionRequest33 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest34 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest33);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest35 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple36 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest34, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest35);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest37 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest35);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple38 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest28, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest35);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple39 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest25, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest35);
        org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestReplicationRequest40 = bulkItemRequestTuple39.v2();
        org.junit.Assert.assertNotNull(bulkShardRequest15);
        org.junit.Assert.assertNotNull(bulkShardRequestReplicationRequest40);
    }

    @Test
    public void test4264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4264");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting3 = null;
        java.lang.Throwable throwable5 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure7 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting3, "", throwable5, "");
        org.elasticsearch.action.update.UpdateHelper.Result result8 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult12 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult13 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result8, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, false, throwable11, writeResult12);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure7, (org.elasticsearch.transport.TransportMessage) bulkShardRequest9);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest16 = bulkShardRequest9.index("hi!");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult17 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult18 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, writeResult17);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest19 = new org.elasticsearch.action.bulk.BulkItemRequest((int) 'a', (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting21 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting23 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting25 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting27 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting29 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting31 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting33 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting35 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result37 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest39 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest40 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest39);
        org.elasticsearch.action.update.UpdateHelper.Result result41 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest43 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest44 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest43);
        java.lang.Throwable throwable46 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult47 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult48 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result41, (org.elasticsearch.action.ActionRequest) bulkShardRequest43, false, throwable46, writeResult47);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple49 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest40, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest43);
        org.elasticsearch.tasks.TaskId taskId50 = null;
        bulkShardRequest43.setParentTask(taskId50);
        org.elasticsearch.index.shard.ShardId shardId52 = bulkShardRequest43.shardId();
        bulkShardRequest43.seqNo((long) 0);
        java.lang.Throwable throwable56 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult57 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult58 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result37, (org.elasticsearch.action.ActionRequest) bulkShardRequest43, false, throwable56, writeResult57);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException59 = bulkShardRequest43.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure61 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting35, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException59, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure63 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting33, "update", (java.lang.Throwable) actionRequestValidationException59, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure65 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting31, "_na_", (java.lang.Throwable) actionRequestValidationException59, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure67 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting29, "primary_terms", (java.lang.Throwable) actionRequestValidationException59, "delete");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure69 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting27, "current version [97] is different than the one provided [35]", (java.lang.Throwable) actionRequestValidationException59, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure71 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting25, "", (java.lang.Throwable) actionRequestValidationException59, "index.blocks.metadata");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure73 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting23, "index.shadow_replicas", (java.lang.Throwable) actionRequestValidationException59, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure75 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting21, "current version [32] is different than the one provided [2]", (java.lang.Throwable) actionRequestValidationException59, "current version [1] is different than the one provided [0]");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult76 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult77 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, true, (java.lang.Throwable) actionRequestValidationException59, writeResult76);
        org.elasticsearch.index.shard.ShardId shardId78 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest79 = bulkShardRequest9.setShardId(shardId78);
        org.junit.Assert.assertNotNull(bulkShardRequest16);
        org.junit.Assert.assertNull(shardId52);
        org.junit.Assert.assertNotNull(actionRequestValidationException59);
        org.junit.Assert.assertNotNull(bulkShardRequest79);
    }

    @Test
    public void test4265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4265");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest3 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue4 = bulkShardRequest3.timeout();
        java.lang.String str5 = bulkShardRequest3.index();
        org.elasticsearch.index.shard.ShardId shardId6 = bulkShardRequest3.shardId();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest3);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 10, (org.elasticsearch.action.ActionRequest) bulkShardRequest3);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest3, writeResult9);
        org.elasticsearch.action.update.UpdateHelper.Result result11 = updateResult10.result;
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(shardId6);
        org.junit.Assert.assertNull(result11);
    }

    @Test
    public void test4266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4266");
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult7 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult8 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest4, false, throwable6, writeResult7);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest4, writeResult9);
        org.elasticsearch.action.ActionRequest actionRequest11 = updateResult10.actionRequest;
        org.elasticsearch.action.update.UpdateHelper.Result result13 = null;
        org.elasticsearch.action.ActionRequest actionRequest17 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest18 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest17);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest19 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple20 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest18, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest19);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest19);
        org.elasticsearch.action.ActionRequest actionRequest23 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest24 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest23);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest25 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple26 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest24, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest25);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple27 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest21, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest25);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest28 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue29 = bulkShardRequest28.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest30 = bulkShardRequest25.timeout(timeValue29);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest31 = new org.elasticsearch.action.bulk.BulkItemRequest((-1), (org.elasticsearch.action.ActionRequest) bulkShardRequest30);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult32 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult33 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result13, (org.elasticsearch.action.ActionRequest) bulkShardRequest30, writeResult32);
        org.elasticsearch.action.update.UpdateHelper.Result result34 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest36 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest37 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest36);
        org.elasticsearch.action.update.UpdateHelper.Result result38 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest40 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest41 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest40);
        java.lang.Throwable throwable43 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult44 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult45 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result38, (org.elasticsearch.action.ActionRequest) bulkShardRequest40, false, throwable43, writeResult44);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple46 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest37, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest40);
        java.lang.Throwable throwable48 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult49 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult50 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result34, (org.elasticsearch.action.ActionRequest) bulkShardRequest40, true, throwable48, writeResult49);
        org.elasticsearch.index.shard.ShardId shardId51 = bulkShardRequest40.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue52 = bulkShardRequest40.timeout();
        org.elasticsearch.tasks.TaskId taskId53 = bulkShardRequest40.getParentTask();
        bulkShardRequest30.setParentTask(taskId53);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest55 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 10, (org.elasticsearch.action.ActionRequest) bulkShardRequest30);
        org.elasticsearch.action.ActionRequest actionRequest57 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest58 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest57);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest59 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple60 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest58, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest59);
        org.elasticsearch.common.transport.TransportAddress transportAddress61 = null;
        bulkShardRequest59.remoteAddress(transportAddress61);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel63 = bulkShardRequest59.consistencyLevel();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest64 = bulkShardRequest30.consistencyLevel(writeConsistencyLevel63);
        org.elasticsearch.tasks.TaskId taskId65 = bulkShardRequest64.getParentTask();
        org.elasticsearch.tasks.TaskId taskId66 = bulkShardRequest64.getParentTask();
        actionRequest11.setParentTask(taskId66);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult68 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult69 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, actionRequest11, writeResult68);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest70 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 100, actionRequest11);
        org.elasticsearch.action.update.UpdateHelper.Result result71 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest74 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest75 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest74);
        org.elasticsearch.action.update.UpdateHelper.Result result76 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest78 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest79 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest78);
        java.lang.Throwable throwable81 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult82 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult83 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result76, (org.elasticsearch.action.ActionRequest) bulkShardRequest78, false, throwable81, writeResult82);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple84 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest75, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest78);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest85 = new org.elasticsearch.action.bulk.BulkItemRequest((int) 'a', (org.elasticsearch.action.ActionRequest) bulkShardRequest78);
        java.lang.Throwable throwable87 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult88 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult89 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result71, (org.elasticsearch.action.ActionRequest) bulkShardRequest78, false, throwable87, writeResult88);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple90 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest70, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest78);
        bulkShardRequest78.setParentTask("current version [10] is different than the one provided [32]", (long) 3);
        boolean boolean94 = bulkShardRequest78.getShouldPersistResult();
        org.junit.Assert.assertNotNull(actionRequest11);
        org.junit.Assert.assertNotNull(timeValue29);
        org.junit.Assert.assertNotNull(bulkShardRequest30);
        org.junit.Assert.assertNull(shardId51);
        org.junit.Assert.assertNotNull(timeValue52);
        org.junit.Assert.assertNotNull(taskId53);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel63 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel63.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(bulkShardRequest64);
        org.junit.Assert.assertNotNull(taskId65);
        org.junit.Assert.assertNotNull(taskId66);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test4267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4267");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.ActionRequest actionRequest3 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest3);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple6 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        long long8 = bulkShardRequest5.primaryTerm();
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting18 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting20 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting22 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result24 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest26 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest27 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest26);
        org.elasticsearch.action.update.UpdateHelper.Result result28 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest30 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest31 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest30);
        java.lang.Throwable throwable33 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult34 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult35 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result28, (org.elasticsearch.action.ActionRequest) bulkShardRequest30, false, throwable33, writeResult34);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple36 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest27, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest30);
        org.elasticsearch.tasks.TaskId taskId37 = null;
        bulkShardRequest30.setParentTask(taskId37);
        org.elasticsearch.index.shard.ShardId shardId39 = bulkShardRequest30.shardId();
        bulkShardRequest30.seqNo((long) 0);
        java.lang.Throwable throwable43 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult44 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult45 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result24, (org.elasticsearch.action.ActionRequest) bulkShardRequest30, false, throwable43, writeResult44);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException46 = bulkShardRequest30.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting22, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException46, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting20, "update", (java.lang.Throwable) actionRequestValidationException46, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure52 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting18, "_na_", (java.lang.Throwable) actionRequestValidationException46, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure54 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting16, "_na_", (java.lang.Throwable) actionRequestValidationException46, "index.version.upgraded");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure56 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "index.shadow_replicas", (java.lang.Throwable) actionRequestValidationException46, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure58 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "index.blocks.write", (java.lang.Throwable) actionRequestValidationException46, "primary_terms");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure60 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "index.blocks.metadata", (java.lang.Throwable) actionRequestValidationException46, "delete");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult61 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult62 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, true, (java.lang.Throwable) actionRequestValidationException46, writeResult61);
        boolean boolean63 = updateResult62.retry;
        org.elasticsearch.action.update.UpdateResponse updateResponse64 = updateResult62.noopResult;
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNull(shardId39);
        org.junit.Assert.assertNotNull(actionRequestValidationException46);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(updateResponse64);
    }

    @Test
    public void test4268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4268");
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result4 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest6 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest6);
        org.elasticsearch.action.update.UpdateHelper.Result result8 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest10 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest11 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest10);
        java.lang.Throwable throwable13 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult14 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult15 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result8, (org.elasticsearch.action.ActionRequest) bulkShardRequest10, false, throwable13, writeResult14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple16 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest7, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest10);
        org.elasticsearch.tasks.TaskId taskId17 = null;
        bulkShardRequest10.setParentTask(taskId17);
        java.lang.Throwable throwable20 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult21 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult22 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result4, (org.elasticsearch.action.ActionRequest) bulkShardRequest10, true, throwable20, writeResult21);
        org.elasticsearch.action.support.IndicesOptions indicesOptions23 = bulkShardRequest10.indicesOptions();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest24 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest10);
        java.lang.Throwable throwable26 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult27 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult28 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest10, true, throwable26, writeResult27);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest29 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest10);
        org.elasticsearch.action.update.UpdateHelper.Result result30 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest32 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest33 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest32);
        org.elasticsearch.action.update.UpdateHelper.Result result34 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest36 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest37 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest36);
        java.lang.Throwable throwable39 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult40 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult41 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result34, (org.elasticsearch.action.ActionRequest) bulkShardRequest36, false, throwable39, writeResult40);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple42 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest33, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest36);
        org.elasticsearch.tasks.TaskId taskId43 = null;
        bulkShardRequest36.setParentTask(taskId43);
        java.lang.Throwable throwable46 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult47 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult48 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result30, (org.elasticsearch.action.ActionRequest) bulkShardRequest36, true, throwable46, writeResult47);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple49 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest29, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest36);
        org.elasticsearch.cluster.block.ClusterBlock clusterBlock50 = org.elasticsearch.cluster.metadata.IndexMetaData.INDEX_WRITE_BLOCK;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.ActionRequest<org.elasticsearch.action.bulk.BulkShardRequest>, org.elasticsearch.cluster.block.ClusterBlock> bulkShardRequestActionRequestTuple51 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.action.ActionRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest36, clusterBlock50);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest52 = new org.elasticsearch.action.bulk.BulkItemRequest((int) '4', (org.elasticsearch.action.ActionRequest) bulkShardRequest36);
        org.junit.Assert.assertNotNull(indicesOptions23);
        org.junit.Assert.assertNotNull(clusterBlock50);
        org.junit.Assert.assertNotNull(bulkShardRequestActionRequestTuple51);
    }

    @Test
    public void test4269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4269");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData7 = indexMetaData0.mapping("index.");
        int int8 = indexMetaData0.getNumberOfShards();
        org.elasticsearch.Version version9 = indexMetaData0.getCreationVersion();
        long long10 = indexMetaData0.getCreationDate();
        org.elasticsearch.common.settings.Settings settings11 = indexMetaData0.getSettings();
        boolean boolean12 = org.elasticsearch.cluster.metadata.IndexMetaData.isOnSharedFilesystem(settings11);
        boolean boolean13 = org.elasticsearch.cluster.metadata.IndexMetaData.isOnSharedFilesystem(settings11);
        boolean boolean14 = org.elasticsearch.cluster.metadata.IndexMetaData.isIndexUsingShadowReplicas(settings11);
        org.elasticsearch.transport.TransportService transportService15 = null;
        org.elasticsearch.cluster.service.ClusterService clusterService16 = null;
        org.elasticsearch.indices.IndicesService indicesService17 = null;
        org.elasticsearch.threadpool.ThreadPool threadPool18 = null;
        org.elasticsearch.cluster.action.shard.ShardStateAction shardStateAction19 = null;
        org.elasticsearch.cluster.action.index.MappingUpdatedAction mappingUpdatedAction20 = null;
        org.elasticsearch.action.update.UpdateHelper updateHelper21 = null;
        org.elasticsearch.action.support.ActionFilters actionFilters22 = null;
        org.elasticsearch.cluster.metadata.IndexNameExpressionResolver indexNameExpressionResolver23 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.bulk.TransportShardBulkAction transportShardBulkAction24 = new org.elasticsearch.action.bulk.TransportShardBulkAction(settings11, transportService15, clusterService16, indicesService17, threadPool18, shardStateAction19, mappingUpdatedAction20, updateHelper21, actionFilters22, indexNameExpressionResolver23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNull(mappingMetaData7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(version9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(settings11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test4270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4270");
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.ActionRequest actionRequest5 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest5);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple8 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest6, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest7);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.action.ActionRequest actionRequest11 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest11);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest13 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest12, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest13);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple15 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest9, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest13);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest16 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue17 = bulkShardRequest16.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest18 = bulkShardRequest13.timeout(timeValue17);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest19 = new org.elasticsearch.action.bulk.BulkItemRequest((-1), (org.elasticsearch.action.ActionRequest) bulkShardRequest18);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult20 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult21 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest18, writeResult20);
        org.elasticsearch.action.update.UpdateHelper.Result result22 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest24 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest25 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest24);
        org.elasticsearch.action.update.UpdateHelper.Result result26 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest28 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest29 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest28);
        java.lang.Throwable throwable31 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult32 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult33 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result26, (org.elasticsearch.action.ActionRequest) bulkShardRequest28, false, throwable31, writeResult32);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple34 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest25, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest28);
        java.lang.Throwable throwable36 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult37 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult38 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result22, (org.elasticsearch.action.ActionRequest) bulkShardRequest28, true, throwable36, writeResult37);
        org.elasticsearch.index.shard.ShardId shardId39 = bulkShardRequest28.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue40 = bulkShardRequest28.timeout();
        org.elasticsearch.tasks.TaskId taskId41 = bulkShardRequest28.getParentTask();
        bulkShardRequest18.setParentTask(taskId41);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest43 = new org.elasticsearch.action.bulk.BulkItemRequest(0, (org.elasticsearch.action.ActionRequest) bulkShardRequest18);
        org.elasticsearch.action.ActionRequest actionRequest47 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest48 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest47);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest49 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple50 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest48, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest49);
        org.elasticsearch.action.ActionRequest actionRequest53 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest54 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest53);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest55 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple56 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest54, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest55);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest57 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest55);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple58 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest48, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest55);
        org.elasticsearch.action.ActionRequest actionRequest59 = null; // flaky: bulkItemRequest48.request();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest61 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest62 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest61);
        org.elasticsearch.action.update.UpdateHelper.Result result63 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest65 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest66 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest65);
        java.lang.Throwable throwable68 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult69 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult70 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result63, (org.elasticsearch.action.ActionRequest) bulkShardRequest65, false, throwable68, writeResult69);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple71 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest62, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest65);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple72 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest48, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest65);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest73 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest65);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest74 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest65);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple75 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest43, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest65);
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(bulkShardRequest18);
        org.junit.Assert.assertNull(shardId39);
        org.junit.Assert.assertNotNull(timeValue40);
        org.junit.Assert.assertNotNull(taskId41);
        org.junit.Assert.assertNull(actionRequest59);
    }

    @Test
    public void test4271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4271");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result4 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue6 = bulkShardRequest5.timeout();
        java.lang.String str7 = bulkShardRequest5.index();
        org.elasticsearch.common.unit.TimeValue timeValue8 = bulkShardRequest5.timeout();
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result14 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest16 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest17 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest16);
        org.elasticsearch.action.update.UpdateHelper.Result result18 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest20 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest20);
        java.lang.Throwable throwable23 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult24 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult25 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result18, (org.elasticsearch.action.ActionRequest) bulkShardRequest20, false, throwable23, writeResult24);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple26 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest17, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest20);
        org.elasticsearch.tasks.TaskId taskId27 = null;
        bulkShardRequest20.setParentTask(taskId27);
        org.elasticsearch.index.shard.ShardId shardId29 = bulkShardRequest20.shardId();
        bulkShardRequest20.seqNo((long) 0);
        java.lang.Throwable throwable33 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult34 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult35 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result14, (org.elasticsearch.action.ActionRequest) bulkShardRequest20, false, throwable33, writeResult34);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException36 = bulkShardRequest20.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException36, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "update", (java.lang.Throwable) actionRequestValidationException36, "index.version.created_string");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult41 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult42 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result4, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, false, (java.lang.Throwable) actionRequestValidationException36, writeResult41);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "current version [97] is different than the one provided [35]", (java.lang.Throwable) actionRequestValidationException36, "index.blocks.write");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "current version [97] is different than the one provided [35]", (java.lang.Throwable) actionRequestValidationException36, "current version [0] is different than the one provided [97]");
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNull(shardId29);
        org.junit.Assert.assertNotNull(actionRequestValidationException36);
    }

    @Test
    public void test4272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4272");
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.update.UpdateHelper.Result result6 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult12 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult13 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result6, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable11, writeResult12);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest8);
        java.lang.Throwable throwable16 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult17 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult18 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, true, throwable16, writeResult17);
        org.elasticsearch.index.shard.ShardId shardId19 = bulkShardRequest8.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue20 = bulkShardRequest8.timeout();
        org.elasticsearch.tasks.TaskId taskId21 = bulkShardRequest8.getParentTask();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult22 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult23 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, writeResult22);
        boolean boolean24 = bulkShardRequest8.getShouldPersistResult();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest25 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test4273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4273");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = builder1.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = builder2.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int8 = builder7.numberOfShards();
        java.lang.String[] strArray12 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder15 = builder7.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder2.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder18 = builder16.creationDate((long) (byte) 10);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder20 = builder18.numberOfReplicas((int) (short) 0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder22 = builder20.removeAlias("index.priority");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData24 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder26 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder27 = builder26.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder29 = builder27.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder32 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int33 = builder32.numberOfShards();
        java.lang.String[] strArray37 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet38 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet38, strArray37);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder40 = builder32.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet38);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder41 = builder27.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet38);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple42 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData24, (java.lang.Iterable<java.lang.String>) strSet38);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder43 = builder20.putActiveAllocationIds((-1), (java.util.Set<java.lang.String>) strSet38);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder45 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder46 = builder45.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder48 = builder46.numberOfReplicas((int) '#');
        int int49 = builder46.numberOfShards();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData50 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder52 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder53 = builder52.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder55 = builder53.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder58 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int59 = builder58.numberOfShards();
        java.lang.String[] strArray63 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet64 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet64, strArray63);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder66 = builder58.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet64);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder67 = builder53.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet64);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple68 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData50, (java.lang.Iterable<java.lang.String>) strSet64);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap69 = indexMetaData50.getAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder70 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData50);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder71 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData50);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder72 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData50);
        org.elasticsearch.common.settings.Settings settings73 = indexMetaData50.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder74 = builder46.settings(settings73);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder75 = builder20.settings(settings73);
        org.elasticsearch.common.settings.Settings settings76 = org.elasticsearch.cluster.metadata.IndexMetaData.addHumanReadableSettings(settings73);
        org.elasticsearch.transport.TransportService transportService77 = null;
        org.elasticsearch.cluster.service.ClusterService clusterService78 = null;
        org.elasticsearch.indices.IndicesService indicesService79 = null;
        org.elasticsearch.threadpool.ThreadPool threadPool80 = null;
        org.elasticsearch.cluster.action.shard.ShardStateAction shardStateAction81 = null;
        org.elasticsearch.cluster.action.index.MappingUpdatedAction mappingUpdatedAction82 = null;
        org.elasticsearch.action.update.UpdateHelper updateHelper83 = null;
        org.elasticsearch.action.support.ActionFilters actionFilters84 = null;
        org.elasticsearch.cluster.metadata.IndexNameExpressionResolver indexNameExpressionResolver85 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.bulk.TransportShardBulkAction transportShardBulkAction86 = new org.elasticsearch.action.bulk.TransportShardBulkAction(settings76, transportService77, clusterService78, indicesService79, threadPool80, shardStateAction81, mappingUpdatedAction82, updateHelper83, actionFilters84, indexNameExpressionResolver85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(indexMetaData24);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(indexMetaData50);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple68);
        org.junit.Assert.assertNotNull(strImmutableOpenMap69);
        org.junit.Assert.assertNotNull(settings73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(settings76);
    }

    @Test
    public void test4274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4274");
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap0 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest2 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest3 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest2);
        org.elasticsearch.action.update.UpdateHelper.Result result4 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest6 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest6);
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult10 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult11 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result4, (org.elasticsearch.action.ActionRequest) bulkShardRequest6, false, throwable9, writeResult10);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest6);
        org.elasticsearch.index.VersionType versionType13 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean17 = versionType13.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple18 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest3, versionType13);
        boolean boolean22 = versionType13.isVersionConflictForWrites(10L, (long) (byte) 0, false);
        boolean boolean24 = versionType13.validateVersionForReads(10L);
        boolean boolean26 = versionType13.validateVersionForWrites((long) 1);
        boolean boolean30 = versionType13.isVersionConflictForWrites(100L, (long) (short) 0, true);
        boolean boolean32 = versionType13.validateVersionForReads(52L);
        org.elasticsearch.index.VersionType versionType33 = versionType13.versionTypeForReplicationAndRecovery();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData>, java.io.Serializable> strImmutableOpenMapTuple34 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData>, java.io.Serializable>(strImmutableOpenMap0, (java.io.Serializable) versionType13);
        org.junit.Assert.assertNotNull(versionType13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(versionType33);
    }

    @Test
    public void test4275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4275");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result18 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest20 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest20);
        org.elasticsearch.action.update.UpdateHelper.Result result22 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest24 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest25 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest24);
        java.lang.Throwable throwable27 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult28 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult29 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result22, (org.elasticsearch.action.ActionRequest) bulkShardRequest24, false, throwable27, writeResult28);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple30 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest21, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest24);
        org.elasticsearch.tasks.TaskId taskId31 = null;
        bulkShardRequest24.setParentTask(taskId31);
        org.elasticsearch.index.shard.ShardId shardId33 = bulkShardRequest24.shardId();
        bulkShardRequest24.seqNo((long) 0);
        java.lang.Throwable throwable37 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult38 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult39 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result18, (org.elasticsearch.action.ActionRequest) bulkShardRequest24, false, throwable37, writeResult38);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException40 = bulkShardRequest24.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting16, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException40, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "update", (java.lang.Throwable) actionRequestValidationException40, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "_na_", (java.lang.Throwable) actionRequestValidationException40, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "primary_terms", (java.lang.Throwable) actionRequestValidationException40, "delete");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "index.blocks.read_only", (java.lang.Throwable) actionRequestValidationException40, "delete");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure52 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "index.blocks.read", (java.lang.Throwable) actionRequestValidationException40, "index.auto_expand_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure54 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "index.blocks.metadata", (java.lang.Throwable) actionRequestValidationException40, "index.version.upgraded");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure56 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "primary_terms", (java.lang.Throwable) actionRequestValidationException40, "current version [2] is higher than the one provided [-1]");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure58 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "index.version.created_string", (java.lang.Throwable) actionRequestValidationException40, "current version [2] is higher than the one provided [-1]");
        org.junit.Assert.assertNull(shardId33);
        org.junit.Assert.assertNotNull(actionRequestValidationException40);
    }

    @Test
    public void test4276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4276");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.ActionRequest actionRequest4 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest4);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest6 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple7 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest6);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest6);
        org.elasticsearch.action.ActionRequest actionRequest10 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest11 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest10);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest12 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest11, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest12);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest8, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest12);
        boolean boolean15 = bulkShardRequest12.getShouldPersistResult();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException16 = bulkShardRequest12.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure18 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "index.", (java.lang.Throwable) actionRequestValidationException16, "index.shared_filesystem");
        java.lang.String str19 = shardFailure18.reason;
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(actionRequestValidationException16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "index." + "'", str19, "index.");
    }

    @Test
    public void test4277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4277");
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest3 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.String str4 = bulkShardRequest3.index();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult5 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult6 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest3, writeResult5);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult7 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult8 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest3, writeResult7);
        bulkShardRequest3.setParentTask("indices:data/write/bulk[s]", (long) ' ');
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = null;
        bulkShardRequest3.remoteAddress(transportAddress12);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = new org.elasticsearch.action.bulk.BulkItemRequest(52, (org.elasticsearch.action.ActionRequest) bulkShardRequest3);
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = bulkShardRequest3.remoteAddress();
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(transportAddress15);
    }

    @Test
    public void test4278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4278");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters3 = indexMetaData0.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.apache.lucene.util.Version version5 = indexMetaData0.getMinimumCompatibleVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData6 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData6);
        org.elasticsearch.Version version8 = indexMetaData6.getCreationVersion();
        long long9 = indexMetaData6.getCreationDate();
        long long10 = indexMetaData6.getCreationDate();
        java.util.Set<java.lang.String> strSet12 = null; // flaky: indexMetaData6.activeAllocationIds((int) (byte) 3);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData14 = indexMetaData6.mapping("hi!");
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff15 = indexMetaData0.diff(indexMetaData6);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData16 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData16);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap18 = indexMetaData16.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet19 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple20 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData16, indexShardStateSet19);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder21 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData16);
        org.elasticsearch.Version version22 = indexMetaData16.getUpgradedVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder23 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData16);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters24 = indexMetaData16.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder25 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData16);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff26 = indexMetaData6.diff(indexMetaData16);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder27 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData6);
        int int28 = indexMetaData6.getNumberOfShards();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.IndexMetaData.Custom> strImmutableOpenMap29 = indexMetaData6.getCustoms();
        long long30 = indexMetaData6.getCreationDate();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder31 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData6);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.MappingMetaData> strImmutableOpenMap32 = indexMetaData6.getMappings();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder33 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params34 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting35 = org.elasticsearch.cluster.metadata.IndexMetaData.INDEX_PRIORITY_SETTING;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting37 = null;
        java.lang.Throwable throwable39 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure41 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting37, "", throwable39, "");
        org.elasticsearch.action.update.UpdateHelper.Result result42 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest43 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable45 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult46 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult47 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result42, (org.elasticsearch.action.ActionRequest) bulkShardRequest43, false, throwable45, writeResult46);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple48 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure41, (org.elasticsearch.transport.TransportMessage) bulkShardRequest43);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest50 = bulkShardRequest43.index("hi!");
        org.elasticsearch.action.support.IndicesOptions indicesOptions51 = bulkShardRequest50.indicesOptions();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest52 = new org.elasticsearch.action.bulk.BulkItemRequest((int) 'a', (org.elasticsearch.action.ActionRequest) bulkShardRequest50);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest54 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest55 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest54);
        org.elasticsearch.action.update.UpdateHelper.Result result56 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest58 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest59 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest58);
        java.lang.Throwable throwable61 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult62 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult63 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result56, (org.elasticsearch.action.ActionRequest) bulkShardRequest58, false, throwable61, writeResult62);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple64 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest55, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest58);
        org.elasticsearch.action.ActionRequest actionRequest66 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest67 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest66);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest68 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple69 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest67, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest68);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple70 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest55, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest68);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest71 = bulkItemRequestTuple70.v1();
        org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestReplicationRequest72 = bulkItemRequestTuple70.v2();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel73 = bulkShardRequestReplicationRequest72.consistencyLevel();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest74 = bulkShardRequest50.consistencyLevel(writeConsistencyLevel73);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.support.ToXContentToBytes, org.elasticsearch.action.WriteConsistencyLevel> toXContentToBytesTuple75 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.action.support.ToXContentToBytes) intSetting35, writeConsistencyLevel73);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.ToXContent.Params, org.elasticsearch.common.settings.Setting<java.lang.Integer>> paramsTuple76 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.ToXContent.Params, org.elasticsearch.common.settings.Setting<java.lang.Integer>>(params34, intSetting35);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder77 = indexMetaData6.toXContent(xContentBuilder33, params34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNull(discoveryNodeFilters3);
        org.junit.Assert.assertNull(version5);
        org.junit.Assert.assertNotNull(indexMetaData6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNull(strSet12);
        org.junit.Assert.assertNull(mappingMetaData14);
        org.junit.Assert.assertNotNull(indexMetaDataDiff15);
        org.junit.Assert.assertNotNull(indexMetaData16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap18);
        org.junit.Assert.assertNotNull(indexShardStateSet19);
        org.junit.Assert.assertNotNull(version22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNull(discoveryNodeFilters24);
        org.junit.Assert.assertNotNull(indexMetaDataDiff26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(strImmutableOpenMap29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(strImmutableOpenMap32);
        org.junit.Assert.assertNotNull(params34);
        org.junit.Assert.assertNotNull(intSetting35);
        org.junit.Assert.assertNotNull(bulkShardRequest50);
        org.junit.Assert.assertNotNull(indicesOptions51);
        org.junit.Assert.assertNotNull(bulkItemRequest71);
        org.junit.Assert.assertNotNull(bulkShardRequestReplicationRequest72);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel73 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel73.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(bulkShardRequest74);
        org.junit.Assert.assertNotNull(toXContentToBytesTuple75);
    }

    @Test
    public void test4279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4279");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting3 = null;
        java.lang.Throwable throwable5 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure7 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting3, "", throwable5, "");
        org.elasticsearch.action.update.UpdateHelper.Result result8 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult12 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult13 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result8, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, false, throwable11, writeResult12);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure7, (org.elasticsearch.transport.TransportMessage) bulkShardRequest9);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest16 = bulkShardRequest9.index("index.version.created");
        long long17 = bulkShardRequest9.seqNo();
        long long18 = bulkShardRequest9.primaryTerm();
        long long19 = bulkShardRequest9.primaryTerm();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest22 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest23 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest22);
        org.elasticsearch.action.update.UpdateHelper.Result result24 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest26 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest27 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest26);
        java.lang.Throwable throwable29 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult30 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult31 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result24, (org.elasticsearch.action.ActionRequest) bulkShardRequest26, false, throwable29, writeResult30);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple32 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest23, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest26);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest33 = new org.elasticsearch.action.bulk.BulkItemRequest((int) 'a', (org.elasticsearch.action.ActionRequest) bulkShardRequest26);
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting34 = org.elasticsearch.cluster.metadata.IndexMetaData.INDEX_NUMBER_OF_REPLICAS_SETTING;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.common.xcontent.ToXContent> streamableTuple35 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.common.xcontent.ToXContent>((org.elasticsearch.common.io.stream.Streamable) bulkShardRequest26, (org.elasticsearch.common.xcontent.ToXContent) intSetting34);
        org.elasticsearch.common.unit.TimeValue timeValue36 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest37 = bulkShardRequest26.timeout(timeValue36);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest38 = bulkShardRequest9.timeout(timeValue36);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest39 = new org.elasticsearch.action.bulk.BulkItemRequest((int) '#', (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest40 = new org.elasticsearch.action.bulk.BulkItemRequest(35, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult41 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult42 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, writeResult41);
        org.junit.Assert.assertNotNull(bulkShardRequest16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(intSetting34);
        org.junit.Assert.assertNotNull(timeValue36);
        org.junit.Assert.assertNotNull(bulkShardRequest37);
        org.junit.Assert.assertNotNull(bulkShardRequest38);
    }

    @Test
    public void test4280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4280");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters5 = indexMetaData0.includeFilters();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.action.update.UpdateHelper.Result result9 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult15 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult16 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result9, (org.elasticsearch.action.ActionRequest) bulkShardRequest11, false, throwable14, writeResult15);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest8, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest11);
        org.elasticsearch.index.VersionType versionType18 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean22 = versionType18.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple23 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest8, versionType18);
        boolean boolean27 = versionType18.isVersionConflictForWrites((long) 0, (long) (short) 0, false);
        boolean boolean28 = indexMetaData0.equals((java.lang.Object) boolean27);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder29 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        long long30 = indexMetaData0.getCreationDate();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap31 = indexMetaData0.getAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state32 = indexMetaData0.getState();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder33 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.Version version34 = indexMetaData0.getCreationVersion();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNull(discoveryNodeFilters5);
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(strImmutableOpenMap31);
        org.junit.Assert.assertTrue("'" + state32 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state32.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertNotNull(version34);
    }

    @Test
    public void test4281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4281");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        int int3 = indexMetaData0.getTotalNumberOfShards();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = builder4.numberOfShards((int) (byte) 3);
        int int7 = builder6.numberOfShards();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 3 + "'", int7 == 3);
    }

    @Test
    public void test4282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4282");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = builder1.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = builder2.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int8 = builder7.numberOfShards();
        java.lang.String[] strArray12 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder15 = builder7.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder2.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder18 = builder16.creationDate((long) (byte) 10);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder20 = builder18.numberOfReplicas((int) (short) 0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder22 = builder20.removeAlias("index.priority");
        long long23 = builder20.version();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1L + "'", long23 == 1L);
    }

    @Test
    public void test4283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4283");
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.update.UpdateHelper.Result result6 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult12 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult13 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result6, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable11, writeResult12);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest8);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest15 = new org.elasticsearch.action.bulk.BulkItemRequest((int) 'a', (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        java.lang.Throwable throwable17 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult18 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult19 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable17, writeResult18);
        org.elasticsearch.common.transport.TransportAddress transportAddress20 = bulkShardRequest8.remoteAddress();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest(35, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.action.ActionRequest actionRequest22 = bulkItemRequest21.request();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput23 = null;
        // The following exception was thrown during execution in test generation
        try {
            bulkItemRequest21.writeTo(streamOutput23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(transportAddress20);
        org.junit.Assert.assertNotNull(actionRequest22);
    }

    @Test
    public void test4284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4284");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure6 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", throwable4, "");
        org.elasticsearch.action.update.UpdateHelper.Result result7 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult11 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult12 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result7, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable10, writeResult11);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure6, (org.elasticsearch.transport.TransportMessage) bulkShardRequest8);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest15 = bulkShardRequest8.index("index.version.created");
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = bulkShardRequest8.remoteAddress();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest17 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.action.update.UpdateHelper.Result result18 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest20 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest20);
        org.elasticsearch.action.update.UpdateHelper.Result result22 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest24 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest25 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest24);
        java.lang.Throwable throwable27 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult28 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult29 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result22, (org.elasticsearch.action.ActionRequest) bulkShardRequest24, false, throwable27, writeResult28);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple30 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest21, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest24);
        org.elasticsearch.tasks.TaskId taskId31 = null;
        bulkShardRequest24.setParentTask(taskId31);
        org.elasticsearch.index.shard.ShardId shardId33 = bulkShardRequest24.shardId();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult34 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult35 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result18, (org.elasticsearch.action.ActionRequest) bulkShardRequest24, writeResult34);
        org.elasticsearch.common.unit.TimeValue timeValue36 = bulkShardRequest24.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest37 = bulkShardRequest8.timeout(timeValue36);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException38 = bulkShardRequest37.validate();
        org.elasticsearch.action.update.UpdateHelper.Result result41 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest43 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest44 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest43);
        org.elasticsearch.action.update.UpdateHelper.Result result45 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest47 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest48 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest47);
        java.lang.Throwable throwable50 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult51 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult52 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result45, (org.elasticsearch.action.ActionRequest) bulkShardRequest47, false, throwable50, writeResult51);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple53 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest44, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest47);
        org.elasticsearch.tasks.TaskId taskId54 = null;
        bulkShardRequest47.setParentTask(taskId54);
        java.lang.Throwable throwable57 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult58 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult59 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result41, (org.elasticsearch.action.ActionRequest) bulkShardRequest47, true, throwable57, writeResult58);
        org.elasticsearch.action.support.IndicesOptions indicesOptions60 = bulkShardRequest47.indicesOptions();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest61 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest47);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException62 = bulkShardRequest47.validate();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult63 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult64 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest37, true, (java.lang.Throwable) actionRequestValidationException62, writeResult63);
        org.elasticsearch.action.ActionRequest actionRequest65 = updateResult64.actionRequest;
        org.elasticsearch.action.update.UpdateResponse updateResponse66 = updateResult64.noopResult;
        org.elasticsearch.action.update.UpdateHelper.Result result67 = updateResult64.result;
        boolean boolean68 = updateResult64.success();
        boolean boolean69 = updateResult64.success();
        org.junit.Assert.assertNotNull(bulkShardRequest15);
        org.junit.Assert.assertNull(transportAddress16);
        org.junit.Assert.assertNull(shardId33);
        org.junit.Assert.assertNotNull(timeValue36);
        org.junit.Assert.assertNotNull(bulkShardRequest37);
        org.junit.Assert.assertNull(actionRequestValidationException38);
        org.junit.Assert.assertNotNull(indicesOptions60);
        org.junit.Assert.assertNotNull(actionRequestValidationException62);
        org.junit.Assert.assertNotNull(actionRequest65);
        org.junit.Assert.assertNull(updateResponse66);
        org.junit.Assert.assertNull(result67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test4285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4285");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("state-");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int4 = builder3.numberOfShards();
        java.lang.String[] strArray8 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet9 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet9, strArray8);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = builder3.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet9);
        org.elasticsearch.cluster.metadata.IndexMetaData.State state12 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder13 = builder11.state(state12);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder15 = builder11.removeAlias("hi!");
        long long16 = builder11.version();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state17 = org.elasticsearch.cluster.metadata.IndexMetaData.State.CLOSE;
        byte byte18 = state17.id();
        byte byte19 = state17.id();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder20 = builder11.state(state17);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData21 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder22 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData21);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap23 = indexMetaData21.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet24 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple25 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData21, indexShardStateSet24);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters26 = indexMetaData21.includeFilters();
        org.elasticsearch.common.settings.Settings settings27 = indexMetaData21.getSettings();
        org.elasticsearch.common.settings.Settings settings28 = org.elasticsearch.cluster.metadata.IndexMetaData.addHumanReadableSettings(settings27);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder29 = builder11.settings(settings28);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder30 = builder1.settings(settings28);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder32 = builder30.removeAlias("index.blocks.metadata");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder34 = builder32.creationDate((long) 97);
        long long35 = builder32.version();
        java.lang.String str36 = builder32.index();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder38 = builder32.numberOfShards((int) (byte) 100);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertTrue("'" + state17 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.CLOSE + "'", state17.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.CLOSE));
        org.junit.Assert.assertTrue("'" + byte18 + "' != '" + (byte) 1 + "'", byte18 == (byte) 1);
        org.junit.Assert.assertTrue("'" + byte19 + "' != '" + (byte) 1 + "'", byte19 == (byte) 1);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(indexMetaData21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap23);
        org.junit.Assert.assertNotNull(indexShardStateSet24);
        org.junit.Assert.assertNull(discoveryNodeFilters26);
        org.junit.Assert.assertNotNull(settings27);
        org.junit.Assert.assertNotNull(settings28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1L + "'", long35 == 1L);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "state-" + "'", str36, "state-");
        org.junit.Assert.assertNotNull(builder38);
    }

    @Test
    public void test4286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4286");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters3 = indexMetaData0.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        long long5 = builder4.version();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = builder4.creationDate((long) (byte) 1);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData9 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData10 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData10);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap12 = indexMetaData10.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters13 = indexMetaData10.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff14 = indexMetaData9.diff(indexMetaData10);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters15 = indexMetaData10.requireFilters();
        org.elasticsearch.Version version16 = indexMetaData10.getUpgradedVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData17 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder18 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData17);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap19 = indexMetaData17.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet20 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple21 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData17, indexShardStateSet20);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff22 = indexMetaData10.diff(indexMetaData17);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap23 = indexMetaData17.getActiveAllocationIds();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder25 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder26 = builder25.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder28 = builder26.numberOfReplicas((int) '#');
        org.elasticsearch.action.ActionRequest actionRequest31 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest32 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest31);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest33 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple34 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest32, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest33);
        boolean boolean35 = bulkShardRequest33.getShouldPersistResult();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder37 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int38 = builder37.numberOfShards();
        java.lang.String[] strArray42 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet43 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet43, strArray42);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder45 = builder37.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet43);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>> streamableTuple46 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>>((org.elasticsearch.common.io.stream.Streamable) bulkShardRequest33, strSet43);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder47 = builder26.putActiveAllocationIds((int) (short) 10, (java.util.Set<java.lang.String>) strSet43);
        int int48 = builder47.numberOfShards();
        java.lang.String str49 = builder47.index();
        org.elasticsearch.action.ActionRequest actionRequest52 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest53 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest52);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest54 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple55 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest53, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest54);
        boolean boolean56 = bulkShardRequest54.getShouldPersistResult();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder58 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int59 = builder58.numberOfShards();
        java.lang.String[] strArray63 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet64 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet64, strArray63);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder66 = builder58.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet64);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>> streamableTuple67 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>>((org.elasticsearch.common.io.stream.Streamable) bulkShardRequest54, strSet64);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder68 = builder47.putActiveAllocationIds((int) (short) 10, (java.util.Set<java.lang.String>) strSet64);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>>, java.lang.Iterable<java.lang.String>> strSetImmutableOpenIntMapTuple69 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>>, java.lang.Iterable<java.lang.String>>(strSetImmutableOpenIntMap23, (java.lang.Iterable<java.lang.String>) strSet64);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder70 = builder7.putActiveAllocationIds(35, (java.util.Set<java.lang.String>) strSet64);
        int int71 = builder7.numberOfShards();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNull(discoveryNodeFilters3);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(indexMetaData9);
        org.junit.Assert.assertNotNull(indexMetaData10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap12);
        org.junit.Assert.assertNull(discoveryNodeFilters13);
        org.junit.Assert.assertNotNull(indexMetaDataDiff14);
        org.junit.Assert.assertNull(discoveryNodeFilters15);
        org.junit.Assert.assertNotNull(version16);
        org.junit.Assert.assertNotNull(indexMetaData17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap19);
        org.junit.Assert.assertNotNull(indexShardStateSet20);
        org.junit.Assert.assertNotNull(indexMetaDataDiff22);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap23);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
    }

    @Test
    public void test4287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4287");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters5 = indexMetaData0.includeFilters();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.action.update.UpdateHelper.Result result9 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult15 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult16 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result9, (org.elasticsearch.action.ActionRequest) bulkShardRequest11, false, throwable14, writeResult15);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest8, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest11);
        org.elasticsearch.index.VersionType versionType18 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean22 = versionType18.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple23 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest8, versionType18);
        boolean boolean27 = versionType18.isVersionConflictForWrites((long) 0, (long) (short) 0, false);
        boolean boolean28 = indexMetaData0.equals((java.lang.Object) boolean27);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder29 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        long long30 = indexMetaData0.getCreationDate();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder31 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap32 = indexMetaData0.getAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData33 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData34 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder35 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData34);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap36 = indexMetaData34.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters37 = indexMetaData34.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff38 = indexMetaData33.diff(indexMetaData34);
        org.elasticsearch.common.settings.Settings settings39 = indexMetaData34.getSettings();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters40 = indexMetaData34.getInitialRecoveryFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData41 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder42 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData41);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData44 = indexMetaData41.mapping("_na_");
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters45 = indexMetaData41.getInitialRecoveryFilters();
        java.lang.String str46 = indexMetaData41.getIndexUUID();
        java.lang.Class<?> wildcardClass47 = indexMetaData41.getClass();
        boolean boolean48 = indexMetaData34.equals((java.lang.Object) indexMetaData41);
        boolean boolean49 = indexMetaData0.equals((java.lang.Object) indexMetaData34);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters50 = indexMetaData34.requireFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder51 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData34);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput52 = null;
        // The following exception was thrown during execution in test generation
        try {
            indexMetaData34.writeTo(streamOutput52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNull(discoveryNodeFilters5);
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(strImmutableOpenMap32);
        org.junit.Assert.assertNotNull(indexMetaData33);
        org.junit.Assert.assertNotNull(indexMetaData34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap36);
        org.junit.Assert.assertNull(discoveryNodeFilters37);
        org.junit.Assert.assertNotNull(indexMetaDataDiff38);
        org.junit.Assert.assertNotNull(settings39);
        org.junit.Assert.assertNull(discoveryNodeFilters40);
        org.junit.Assert.assertNotNull(indexMetaData41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNull(mappingMetaData44);
        org.junit.Assert.assertNull(discoveryNodeFilters45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "_na_" + "'", str46, "_na_");
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(discoveryNodeFilters50);
    }

    @Test
    public void test4288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4288");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest2 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue3 = bulkShardRequest2.timeout();
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = bulkShardRequest2.indicesOptions();
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result16 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest18 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest19 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest18);
        org.elasticsearch.action.update.UpdateHelper.Result result20 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest22 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest23 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest22);
        java.lang.Throwable throwable25 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult26 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult27 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result20, (org.elasticsearch.action.ActionRequest) bulkShardRequest22, false, throwable25, writeResult26);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple28 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest19, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest22);
        org.elasticsearch.tasks.TaskId taskId29 = null;
        bulkShardRequest22.setParentTask(taskId29);
        org.elasticsearch.index.shard.ShardId shardId31 = bulkShardRequest22.shardId();
        bulkShardRequest22.seqNo((long) 0);
        java.lang.Throwable throwable35 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult36 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult37 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result16, (org.elasticsearch.action.ActionRequest) bulkShardRequest22, false, throwable35, writeResult36);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException38 = bulkShardRequest22.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException38, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "update", (java.lang.Throwable) actionRequestValidationException38, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "_na_", (java.lang.Throwable) actionRequestValidationException38, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "primary_terms", (java.lang.Throwable) actionRequestValidationException38, "delete");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "index.blocks.read_only", (java.lang.Throwable) actionRequestValidationException38, "delete");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult49 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult50 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest2, true, (java.lang.Throwable) actionRequestValidationException38, writeResult49);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult51 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult52 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest2, writeResult51);
        org.elasticsearch.common.io.stream.StreamInput streamInput53 = null;
        // The following exception was thrown during execution in test generation
        try {
            bulkShardRequest2.readFrom(streamInput53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(timeValue3);
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertNull(shardId31);
        org.junit.Assert.assertNotNull(actionRequestValidationException38);
    }

    @Test
    public void test4289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4289");
        org.elasticsearch.index.VersionType versionType2 = org.elasticsearch.index.VersionType.fromValue((byte) 2);
        boolean boolean4 = versionType2.validateVersionForReads((long) 'a');
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.VersionType versionType5 = org.elasticsearch.index.VersionType.fromString("index.version.upgraded", versionType2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No version type match [index.version.upgraded]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(versionType2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test4290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4290");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest3 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest3);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = new org.elasticsearch.action.bulk.BulkItemRequest((-1), (org.elasticsearch.action.ActionRequest) bulkShardRequest3);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(0, (org.elasticsearch.action.ActionRequest) bulkShardRequest3);
        boolean boolean7 = bulkShardRequest3.getShouldPersistResult();
        org.elasticsearch.action.ActionRequest actionRequest11 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest11);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest13 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest12, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest13);
        boolean boolean15 = bulkShardRequest13.getShouldPersistResult();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest16 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest13);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest17 = new org.elasticsearch.action.bulk.BulkItemRequest(3, (org.elasticsearch.action.ActionRequest) bulkShardRequest13);
        boolean boolean18 = bulkShardRequest13.getShouldPersistResult();
        org.elasticsearch.tasks.TaskId taskId19 = bulkShardRequest13.getParentTask();
        bulkShardRequest3.setParentTask(taskId19);
        bulkShardRequest3.seqNo((long) (byte) 10);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(taskId19);
    }

    @Test
    public void test4291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4291");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.priority");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = builder5.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = builder6.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int12 = builder11.numberOfShards();
        java.lang.String[] strArray16 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder19 = builder11.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet17);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder20 = builder6.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet17);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple21 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData3, (java.lang.Iterable<java.lang.String>) strSet17);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder22 = builder1.putActiveAllocationIds((int) (byte) 2, (java.util.Set<java.lang.String>) strSet17);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder24 = builder1.numberOfReplicas((int) '4');
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData25 = builder24.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: must specify numberOfShards for index [index.priority]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
    }

    @Test
    public void test4292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4292");
        org.elasticsearch.action.ActionRequest actionRequest1 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest1);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest3 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest3);
        org.elasticsearch.action.ActionRequest actionRequest7 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest7);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple10 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest8, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest9);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest11 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest9);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest13 = bulkItemRequestTuple12.v1();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = bulkItemRequestTuple12.v1();
// flaky:         org.junit.Assert.assertNotNull(bulkItemRequest13);
// flaky:         org.junit.Assert.assertNotNull(bulkItemRequest14);
    }

    @Test
    public void test4293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4293");
        org.elasticsearch.action.ActionRequest actionRequest4 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest4);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest6 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple7 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest6);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest6);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest10 = bulkShardRequest6.setShardId(shardId9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest12 = bulkShardRequest6.setShardId(shardId11);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest13 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 100, (org.elasticsearch.action.ActionRequest) bulkShardRequest12);
        java.lang.String str14 = bulkShardRequest12.index();
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest16 = bulkShardRequest12.setShardId(shardId15);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest17 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest12);
        org.elasticsearch.common.io.stream.StreamInput streamInput18 = null;
        // The following exception was thrown during execution in test generation
        try {
            bulkShardRequest12.readFrom(streamInput18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(bulkShardRequest10);
        org.junit.Assert.assertNotNull(bulkShardRequest12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(bulkShardRequest16);
    }

    @Test
    public void test4294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4294");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest6 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest6);
        org.elasticsearch.action.update.UpdateHelper.Result result8 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest10 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest11 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest10);
        java.lang.Throwable throwable13 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult14 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult15 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result8, (org.elasticsearch.action.ActionRequest) bulkShardRequest10, false, throwable13, writeResult14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple16 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest7, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest10);
        org.elasticsearch.tasks.TaskId taskId17 = null;
        bulkShardRequest10.setParentTask(taskId17);
        org.elasticsearch.index.shard.ShardId shardId19 = bulkShardRequest10.shardId();
        bulkShardRequest10.seqNo((long) 0);
        org.elasticsearch.action.support.IndicesOptions indicesOptions22 = bulkShardRequest10.indicesOptions();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest23 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest10);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest25 = bulkShardRequest10.setShardId(shardId24);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest26 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest25);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting28 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting30 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting32 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result34 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest36 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest37 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest36);
        org.elasticsearch.action.update.UpdateHelper.Result result38 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest40 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest41 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest40);
        java.lang.Throwable throwable43 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult44 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult45 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result38, (org.elasticsearch.action.ActionRequest) bulkShardRequest40, false, throwable43, writeResult44);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple46 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest37, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest40);
        org.elasticsearch.tasks.TaskId taskId47 = null;
        bulkShardRequest40.setParentTask(taskId47);
        org.elasticsearch.index.shard.ShardId shardId49 = bulkShardRequest40.shardId();
        bulkShardRequest40.seqNo((long) 0);
        java.lang.Throwable throwable53 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult54 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult55 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result34, (org.elasticsearch.action.ActionRequest) bulkShardRequest40, false, throwable53, writeResult54);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException56 = bulkShardRequest40.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure58 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting32, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException56, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure60 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting30, "update", (java.lang.Throwable) actionRequestValidationException56, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure62 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting28, "index.shared_filesystem", (java.lang.Throwable) actionRequestValidationException56, "index.version.minimum_compatible");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult63 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult64 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest25, false, (java.lang.Throwable) actionRequestValidationException56, writeResult63);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure66 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "index.blocks.read", (java.lang.Throwable) actionRequestValidationException56, "current version [-1] is higher than the one provided [0]");
        java.lang.String str67 = shardFailure66.reason;
        java.lang.String str68 = shardFailure66.reason;
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertNotNull(indicesOptions22);
        org.junit.Assert.assertNotNull(bulkShardRequest25);
        org.junit.Assert.assertNull(shardId49);
        org.junit.Assert.assertNotNull(actionRequestValidationException56);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "index.blocks.read" + "'", str67, "index.blocks.read");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "index.blocks.read" + "'", str68, "index.blocks.read");
    }

    @Test
    public void test4295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4295");
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.update.UpdateHelper.Result result6 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult12 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult13 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result6, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable11, writeResult12);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest8);
        org.elasticsearch.tasks.TaskId taskId15 = null;
        bulkShardRequest8.setParentTask(taskId15);
        org.elasticsearch.index.shard.ShardId shardId17 = bulkShardRequest8.shardId();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult18 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult19 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, writeResult18);
        long long20 = bulkShardRequest8.primaryTerm();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest((int) 'a', (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 3, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.action.ActionRequest actionRequest23 = bulkItemRequest22.request();
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertNotNull(actionRequest23);
    }

    @Test
    public void test4296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4296");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest1 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest1);
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, false, throwable8, writeResult9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.tasks.TaskId taskId12 = null;
        bulkShardRequest5.setParentTask(taskId12);
        org.elasticsearch.index.shard.ShardId shardId14 = bulkShardRequest5.shardId();
        bulkShardRequest5.seqNo((long) 0);
        org.elasticsearch.action.support.IndicesOptions indicesOptions17 = bulkShardRequest5.indicesOptions();
        bulkShardRequest5.primaryTerm(0L);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest21 = bulkShardRequest5.index("current version [35] is different than the one provided [35]");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = bulkShardRequest21.toString();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId14);
        org.junit.Assert.assertNotNull(indicesOptions17);
        org.junit.Assert.assertNotNull(bulkShardRequest21);
    }

    @Test
    public void test4297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4297");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters3 = indexMetaData0.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = builder5.creationDate((long) (byte) 0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder10 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int11 = builder10.numberOfShards();
        java.lang.String[] strArray15 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet16 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet16, strArray15);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder18 = builder10.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet16);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData20 = builder10.mapping("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder23 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder24 = builder23.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder26 = builder24.numberOfReplicas((int) '#');
        org.elasticsearch.action.ActionRequest actionRequest29 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest30 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest29);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest31 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple32 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest30, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest31);
        boolean boolean33 = bulkShardRequest31.getShouldPersistResult();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder35 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int36 = builder35.numberOfShards();
        java.lang.String[] strArray40 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet41 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet41, strArray40);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder43 = builder35.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet41);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>> streamableTuple44 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>>((org.elasticsearch.common.io.stream.Streamable) bulkShardRequest31, strSet41);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder45 = builder24.putActiveAllocationIds((int) (short) 10, (java.util.Set<java.lang.String>) strSet41);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder46 = builder10.putActiveAllocationIds((int) (byte) 0, (java.util.Set<java.lang.String>) strSet41);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder47 = builder7.putActiveAllocationIds((int) '4', (java.util.Set<java.lang.String>) strSet41);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder49 = builder47.removeAlias("current version [97] is higher than the one provided [100]");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder51 = builder49.version((long) (byte) 10);
        long long52 = builder49.version();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder54 = builder49.creationDate((long) 32);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNull(discoveryNodeFilters3);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNull(mappingMetaData20);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 10L + "'", long52 == 10L);
        org.junit.Assert.assertNotNull(builder54);
    }

    @Test
    public void test4298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4298");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData1 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData1);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap3 = indexMetaData1.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters4 = indexMetaData1.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff5 = indexMetaData0.diff(indexMetaData1);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters6 = indexMetaData1.requireFilters();
        org.elasticsearch.Version version7 = indexMetaData1.getUpgradedVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData8 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData8);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap10 = indexMetaData8.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet11 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData8, indexShardStateSet11);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff13 = indexMetaData1.diff(indexMetaData8);
        boolean boolean15 = indexMetaData1.isSameUUID("index.uuid");
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.MappingMetaData> strImmutableOpenMap16 = indexMetaData1.getMappings();
        org.elasticsearch.action.ActionRequest actionRequest18 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest19 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest18);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest20 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple21 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest19, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest20);
        boolean boolean22 = bulkShardRequest20.getShouldPersistResult();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder24 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int25 = builder24.numberOfShards();
        java.lang.String[] strArray29 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder32 = builder24.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet30);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>> streamableTuple33 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>>((org.elasticsearch.common.io.stream.Streamable) bulkShardRequest20, strSet30);
        org.elasticsearch.cluster.block.ClusterBlock clusterBlock34 = org.elasticsearch.cluster.metadata.IndexMetaData.INDEX_WRITE_BLOCK;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting35 = null;
        java.lang.Throwable throwable37 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure39 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting35, "index.shared_filesystem", throwable37, "index.shared_filesystem");
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.block.ClusterBlock, org.elasticsearch.index.shard.IndexShard.ShardFailure> clusterBlockTuple40 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.block.ClusterBlock, org.elasticsearch.index.shard.IndexShard.ShardFailure>(clusterBlock34, shardFailure39);
        org.elasticsearch.common.collect.Tuple<java.util.LinkedHashSet<java.lang.String>, org.elasticsearch.cluster.block.ClusterBlock> strSetTuple41 = new org.elasticsearch.common.collect.Tuple<java.util.LinkedHashSet<java.lang.String>, org.elasticsearch.cluster.block.ClusterBlock>(strSet30, clusterBlock34);
        java.lang.String[] strArray54 = new java.lang.String[] { "index.blocks.write", "index.creation_date_string", "current version [10] is higher than the one provided [98]", "current version [97] is different than the one provided [1]", "index.version.upgraded", "index.creation_date_string", "index.version.minimum_compatible", "", "delete", "index.shadow_replicas", "index.shadow_replicas", "index.version.minimum_compatible" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData57 = null;
        org.elasticsearch.common.collect.Tuple<java.util.AbstractCollection<java.lang.String>, org.elasticsearch.cluster.metadata.IndexMetaData> strCollectionTuple58 = new org.elasticsearch.common.collect.Tuple<java.util.AbstractCollection<java.lang.String>, org.elasticsearch.cluster.metadata.IndexMetaData>((java.util.AbstractCollection<java.lang.String>) strList55, indexMetaData57);
        org.elasticsearch.common.collect.Tuple<java.util.LinkedHashSet<java.lang.String>, java.util.ArrayList<java.lang.String>> strSetTuple59 = new org.elasticsearch.common.collect.Tuple<java.util.LinkedHashSet<java.lang.String>, java.util.ArrayList<java.lang.String>>(strSet30, strList55);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.ToXContent, java.util.AbstractList<java.lang.String>> toXContentTuple60 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.ToXContent, java.util.AbstractList<java.lang.String>>((org.elasticsearch.common.xcontent.ToXContent) indexMetaData1, (java.util.AbstractList<java.lang.String>) strList55);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder61 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData1);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters62 = indexMetaData1.getInitialRecoveryFilters();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters63 = indexMetaData1.includeFilters();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(indexMetaData1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap3);
        org.junit.Assert.assertNull(discoveryNodeFilters4);
        org.junit.Assert.assertNotNull(indexMetaDataDiff5);
        org.junit.Assert.assertNull(discoveryNodeFilters6);
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertNotNull(indexMetaData8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap10);
        org.junit.Assert.assertNotNull(indexShardStateSet11);
        org.junit.Assert.assertNotNull(indexMetaDataDiff13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strImmutableOpenMap16);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(clusterBlock34);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNull(discoveryNodeFilters62);
        org.junit.Assert.assertNull(discoveryNodeFilters63);
    }

    @Test
    public void test4299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4299");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters5 = indexMetaData0.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData7 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData7);
        org.elasticsearch.Version version9 = indexMetaData7.getCreationVersion();
        long long10 = indexMetaData7.getCreationDate();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData12 = indexMetaData7.mappingOrDefault("index.");
        long long13 = indexMetaData7.getCreationDate();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff14 = indexMetaData0.diff(indexMetaData7);
        org.elasticsearch.common.settings.Settings settings15 = indexMetaData0.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData16 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData16);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap18 = indexMetaData16.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet19 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple20 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData16, indexShardStateSet19);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple21 = org.elasticsearch.common.collect.Tuple.tuple(indexMetaData0, indexShardStateSet19);
        boolean boolean23 = indexMetaData0.isSameUUID("index.version.minimum_compatible");
        org.elasticsearch.Version version24 = indexMetaData0.getUpgradedVersion();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNull(discoveryNodeFilters5);
        org.junit.Assert.assertNotNull(indexMetaData7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(version9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNull(mappingMetaData12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(indexMetaDataDiff14);
        org.junit.Assert.assertNotNull(settings15);
        org.junit.Assert.assertNotNull(indexMetaData16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap18);
        org.junit.Assert.assertNotNull(indexShardStateSet19);
        org.junit.Assert.assertNotNull(indexMetaDataTuple21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(version24);
    }

    @Test
    public void test4300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4300");
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.update.UpdateHelper.Result result6 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult12 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult13 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result6, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable11, writeResult12);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest8);
        java.lang.Throwable throwable16 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult17 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult18 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, true, throwable16, writeResult17);
        org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestReplicationRequest19 = updateResult18.request();
        org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestReplicationRequest20 = updateResult18.request();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest(0, (org.elasticsearch.action.ActionRequest) bulkShardRequestReplicationRequest20);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = new org.elasticsearch.action.bulk.BulkItemRequest(35, (org.elasticsearch.action.ActionRequest) bulkShardRequestReplicationRequest20);
        org.junit.Assert.assertNotNull(bulkShardRequestReplicationRequest19);
        org.junit.Assert.assertNotNull(bulkShardRequestReplicationRequest20);
    }

    @Test
    public void test4301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4301");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.ActionRequest actionRequest3 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest3);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple6 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        org.elasticsearch.action.ActionRequest actionRequest9 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest10 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest9);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest10, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest11);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest7, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest11);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest14 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue15 = bulkShardRequest14.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest16 = bulkShardRequest11.timeout(timeValue15);
        long long17 = bulkShardRequest11.primaryTerm();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException18 = bulkShardRequest11.validate();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult19 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult20 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest11, writeResult19);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(bulkShardRequest16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertNotNull(actionRequestValidationException18);
    }

    @Test
    public void test4302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4302");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest2 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest3 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest2);
        org.elasticsearch.action.update.UpdateHelper.Result result4 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest6 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest6);
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult10 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult11 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result4, (org.elasticsearch.action.ActionRequest) bulkShardRequest6, false, throwable9, writeResult10);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest6);
        org.elasticsearch.action.ActionRequest actionRequest14 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest15 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest14);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest16 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest15, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest16);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple18 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest16);
        int int19 = bulkItemRequest3.id();
        org.elasticsearch.action.update.UpdateHelper.Result result20 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest22 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest23 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest22);
        org.elasticsearch.action.update.UpdateHelper.Result result24 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest26 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest27 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest26);
        java.lang.Throwable throwable29 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult30 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult31 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result24, (org.elasticsearch.action.ActionRequest) bulkShardRequest26, false, throwable29, writeResult30);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple32 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest23, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest26);
        java.lang.Throwable throwable34 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult35 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult36 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result20, (org.elasticsearch.action.ActionRequest) bulkShardRequest26, true, throwable34, writeResult35);
        org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestReplicationRequest37 = updateResult36.request();
        org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestReplicationRequest38 = updateResult36.request();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple39 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, bulkShardRequestReplicationRequest38);
        org.elasticsearch.action.update.UpdateHelper.Result result40 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest42 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest43 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest42);
        org.elasticsearch.action.update.UpdateHelper.Result result44 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest46 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest47 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest46);
        java.lang.Throwable throwable49 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult50 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult51 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result44, (org.elasticsearch.action.ActionRequest) bulkShardRequest46, false, throwable49, writeResult50);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple52 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest43, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest46);
        org.elasticsearch.action.ActionRequest actionRequest54 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest55 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest54);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest56 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple57 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest55, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest56);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple58 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest43, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest56);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest59 = bulkItemRequestTuple58.v1();
        org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestReplicationRequest60 = bulkItemRequestTuple58.v2();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult61 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult62 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result40, (org.elasticsearch.action.ActionRequest) bulkShardRequestReplicationRequest60, writeResult61);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple63 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, bulkShardRequestReplicationRequest60);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest64 = new org.elasticsearch.action.bulk.BulkItemRequest(0, (org.elasticsearch.action.ActionRequest) bulkShardRequestReplicationRequest60);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(bulkShardRequestReplicationRequest37);
        org.junit.Assert.assertNotNull(bulkShardRequestReplicationRequest38);
        org.junit.Assert.assertNotNull(bulkItemRequest59);
        org.junit.Assert.assertNotNull(bulkShardRequestReplicationRequest60);
    }

    @Test
    public void test4303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4303");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.ActionRequest actionRequest4 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest4);
        org.elasticsearch.action.ActionRequest actionRequest8 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest8);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest10 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest9, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest10);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest10);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest10);
        org.elasticsearch.action.update.UpdateHelper.Result result14 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result15 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest16 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable18 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult19 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult20 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result15, (org.elasticsearch.action.ActionRequest) bulkShardRequest16, false, throwable18, writeResult19);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult21 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult22 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result14, (org.elasticsearch.action.ActionRequest) bulkShardRequest16, writeResult21);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest24 = bulkShardRequest16.consistencyLevel(writeConsistencyLevel23);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple25 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest24);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest26 = new org.elasticsearch.action.bulk.BulkItemRequest(0, (org.elasticsearch.action.ActionRequest) bulkShardRequest24);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest27 = new org.elasticsearch.action.bulk.BulkItemRequest(35, (org.elasticsearch.action.ActionRequest) bulkShardRequest24);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult28 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult29 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest24, writeResult28);
        org.junit.Assert.assertNotNull(bulkShardRequest24);
    }

    @Test
    public void test4304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4304");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int2 = builder1.numberOfShards();
        java.lang.String[] strArray6 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = builder1.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet7);
        org.elasticsearch.cluster.metadata.IndexMetaData.State state10 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = builder9.state(state10);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder13 = builder9.removeAlias("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData14 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder15 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData14);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap16 = indexMetaData14.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet17 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple18 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData14, indexShardStateSet17);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters19 = indexMetaData14.includeFilters();
        org.elasticsearch.common.settings.Settings settings20 = indexMetaData14.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder21 = builder9.settings(settings20);
        boolean boolean22 = org.elasticsearch.cluster.metadata.IndexMetaData.isOnSharedFilesystem(settings20);
        org.elasticsearch.common.settings.Settings settings23 = org.elasticsearch.cluster.metadata.IndexMetaData.addHumanReadableSettings(settings20);
        boolean boolean24 = org.elasticsearch.cluster.metadata.IndexMetaData.isIndexUsingShadowReplicas(settings23);
        boolean boolean25 = org.elasticsearch.cluster.metadata.IndexMetaData.isIndexUsingShadowReplicas(settings23);
        org.elasticsearch.common.settings.Settings settings26 = org.elasticsearch.cluster.metadata.IndexMetaData.addHumanReadableSettings(settings23);
        org.elasticsearch.transport.TransportService transportService27 = null;
        org.elasticsearch.cluster.service.ClusterService clusterService28 = null;
        org.elasticsearch.indices.IndicesService indicesService29 = null;
        org.elasticsearch.threadpool.ThreadPool threadPool30 = null;
        org.elasticsearch.cluster.action.shard.ShardStateAction shardStateAction31 = null;
        org.elasticsearch.cluster.action.index.MappingUpdatedAction mappingUpdatedAction32 = null;
        org.elasticsearch.action.update.UpdateHelper updateHelper33 = null;
        org.elasticsearch.action.support.ActionFilters actionFilters34 = null;
        org.elasticsearch.cluster.metadata.IndexNameExpressionResolver indexNameExpressionResolver35 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.bulk.TransportShardBulkAction transportShardBulkAction36 = new org.elasticsearch.action.bulk.TransportShardBulkAction(settings26, transportService27, clusterService28, indicesService29, threadPool30, shardStateAction31, mappingUpdatedAction32, updateHelper33, actionFilters34, indexNameExpressionResolver35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(indexMetaData14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap16);
        org.junit.Assert.assertNotNull(indexShardStateSet17);
        org.junit.Assert.assertNull(discoveryNodeFilters19);
        org.junit.Assert.assertNotNull(settings20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(settings23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(settings26);
    }

    @Test
    public void test4305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4305");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest3 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest3);
        org.elasticsearch.action.update.UpdateHelper.Result result5 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult11 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult12 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result5, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, false, throwable10, writeResult11);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest7);
        org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestReplicationRequest14 = bulkItemRequestTuple13.v2();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest15 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 10, (org.elasticsearch.action.ActionRequest) bulkShardRequestReplicationRequest14);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest16 = new org.elasticsearch.action.bulk.BulkItemRequest((-1), (org.elasticsearch.action.ActionRequest) bulkShardRequestReplicationRequest14);
        org.elasticsearch.action.update.UpdateHelper.Result result18 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest20 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest20);
        org.elasticsearch.action.update.UpdateHelper.Result result22 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest24 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest25 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest24);
        java.lang.Throwable throwable27 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult28 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult29 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result22, (org.elasticsearch.action.ActionRequest) bulkShardRequest24, false, throwable27, writeResult28);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple30 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest21, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest24);
        java.lang.Throwable throwable32 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult33 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult34 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result18, (org.elasticsearch.action.ActionRequest) bulkShardRequest24, true, throwable32, writeResult33);
        org.elasticsearch.index.shard.ShardId shardId35 = bulkShardRequest24.shardId();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest36 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest24);
        org.elasticsearch.common.unit.TimeValue timeValue37 = bulkShardRequest24.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest39 = bulkShardRequest24.index("");
        bulkShardRequest39.setParentTask("index.version.created", 100L);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple43 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest16, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest39);
        org.junit.Assert.assertNotNull(bulkShardRequestReplicationRequest14);
        org.junit.Assert.assertNull(shardId35);
        org.junit.Assert.assertNotNull(timeValue37);
        org.junit.Assert.assertNotNull(bulkShardRequest39);
    }

    @Test
    public void test4306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4306");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result8 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest10 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest11 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest10);
        org.elasticsearch.action.update.UpdateHelper.Result result12 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest14 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest15 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest14);
        java.lang.Throwable throwable17 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult18 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult19 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result12, (org.elasticsearch.action.ActionRequest) bulkShardRequest14, false, throwable17, writeResult18);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple20 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest11, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest14);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest22 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest23 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest22);
        org.elasticsearch.action.update.UpdateHelper.Result result24 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest26 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest27 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest26);
        java.lang.Throwable throwable29 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult30 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult31 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result24, (org.elasticsearch.action.ActionRequest) bulkShardRequest26, false, throwable29, writeResult30);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple32 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest23, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest26);
        org.elasticsearch.tasks.TaskId taskId33 = null;
        bulkShardRequest26.setParentTask(taskId33);
        boolean boolean35 = bulkItemRequestTuple20.equals((java.lang.Object) taskId33);
        org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestReplicationRequest36 = bulkItemRequestTuple20.v2();
        org.elasticsearch.cluster.routing.ShardRouting shardRouting38 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting40 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting42 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting44 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result46 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest48 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest49 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest48);
        org.elasticsearch.action.update.UpdateHelper.Result result50 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest52 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest53 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest52);
        java.lang.Throwable throwable55 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult56 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult57 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result50, (org.elasticsearch.action.ActionRequest) bulkShardRequest52, false, throwable55, writeResult56);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple58 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest49, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest52);
        org.elasticsearch.tasks.TaskId taskId59 = null;
        bulkShardRequest52.setParentTask(taskId59);
        org.elasticsearch.index.shard.ShardId shardId61 = bulkShardRequest52.shardId();
        bulkShardRequest52.seqNo((long) 0);
        java.lang.Throwable throwable65 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult66 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult67 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result46, (org.elasticsearch.action.ActionRequest) bulkShardRequest52, false, throwable65, writeResult66);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException68 = bulkShardRequest52.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure70 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting44, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException68, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure72 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting42, "update", (java.lang.Throwable) actionRequestValidationException68, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure74 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting40, "_na_", (java.lang.Throwable) actionRequestValidationException68, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure76 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting38, "index.blocks.metadata", (java.lang.Throwable) actionRequestValidationException68, "index.priority");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult77 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult78 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result8, (org.elasticsearch.action.ActionRequest) bulkShardRequestReplicationRequest36, true, (java.lang.Throwable) actionRequestValidationException68, writeResult77);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure80 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "hi!", (java.lang.Throwable) actionRequestValidationException68, "index.shared_filesystem");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure82 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "index.version.created", (java.lang.Throwable) actionRequestValidationException68, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure84 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "current version [97] is different than the one provided [35]", (java.lang.Throwable) actionRequestValidationException68, "_na_");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure86 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "current version [32] is different than the one provided [2]", (java.lang.Throwable) actionRequestValidationException68, "current version [1] is higher than the one provided [2]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(bulkShardRequestReplicationRequest36);
        org.junit.Assert.assertNull(shardId61);
        org.junit.Assert.assertNotNull(actionRequestValidationException68);
    }

    @Test
    public void test4307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4307");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result6 = null;
        org.elasticsearch.action.ActionRequest actionRequest8 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest8);
        org.elasticsearch.action.ActionRequest actionRequest12 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest13 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest12);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest14 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple15 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest13, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest14);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest16 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest9, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest14);
        org.elasticsearch.common.transport.TransportAddress transportAddress18 = null;
        bulkShardRequest14.remoteAddress(transportAddress18);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting21 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting23 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting25 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting27 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting29 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result31 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest33 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest34 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest33);
        org.elasticsearch.action.update.UpdateHelper.Result result35 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest37 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest38 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest37);
        java.lang.Throwable throwable40 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult41 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult42 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result35, (org.elasticsearch.action.ActionRequest) bulkShardRequest37, false, throwable40, writeResult41);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple43 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest34, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest37);
        org.elasticsearch.tasks.TaskId taskId44 = null;
        bulkShardRequest37.setParentTask(taskId44);
        org.elasticsearch.index.shard.ShardId shardId46 = bulkShardRequest37.shardId();
        bulkShardRequest37.seqNo((long) 0);
        java.lang.Throwable throwable50 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult51 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult52 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result31, (org.elasticsearch.action.ActionRequest) bulkShardRequest37, false, throwable50, writeResult51);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException53 = bulkShardRequest37.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure55 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting29, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException53, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure57 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting27, "update", (java.lang.Throwable) actionRequestValidationException53, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure59 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting25, "_na_", (java.lang.Throwable) actionRequestValidationException53, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure61 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting23, "_na_", (java.lang.Throwable) actionRequestValidationException53, "index.version.upgraded");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure63 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting21, "index.shadow_replicas", (java.lang.Throwable) actionRequestValidationException53, "");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult64 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult65 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result6, (org.elasticsearch.action.ActionRequest) bulkShardRequest14, false, (java.lang.Throwable) actionRequestValidationException53, writeResult64);
        java.lang.Throwable throwable66 = updateResult65.error;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure68 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete", throwable66, "index.number_of_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure70 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "index.version.created", throwable66, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure72 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "current version [2] is higher than the one provided [-1]", throwable66, "current version [35] is different than the one provided [35]");
        org.junit.Assert.assertNull(shardId46);
        org.junit.Assert.assertNotNull(actionRequestValidationException53);
        org.junit.Assert.assertNotNull(throwable66);
        org.junit.Assert.assertEquals(throwable66.getLocalizedMessage(), "Validation Failed: 1: index is missing;");
        org.junit.Assert.assertEquals(throwable66.getMessage(), "Validation Failed: 1: index is missing;");
        org.junit.Assert.assertEquals(throwable66.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;");
    }

    @Test
    public void test4308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4308");
        org.elasticsearch.action.ActionRequest actionRequest2 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest3 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest2);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple5 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest4);
        boolean boolean6 = bulkShardRequest4.getShouldPersistResult();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int9 = builder8.numberOfShards();
        java.lang.String[] strArray13 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder8.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>> streamableTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>>((org.elasticsearch.common.io.stream.Streamable) bulkShardRequest4, strSet14);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest18 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        boolean boolean19 = bulkShardRequest4.getShouldPersistResult();
        org.elasticsearch.tasks.TaskId taskId20 = bulkShardRequest4.getParentTask();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(taskId20);
    }

    @Test
    public void test4309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4309");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest3 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest3);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest6 = bulkShardRequest3.consistencyLevel(writeConsistencyLevel5);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest6);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest6);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = bulkItemRequest8.index();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(bulkShardRequest6);
    }

    @Test
    public void test4310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4310");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.Version version2 = indexMetaData0.getCreationVersion();
        long long3 = indexMetaData0.getCreationDate();
        long long4 = indexMetaData0.getCreationDate();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters5 = indexMetaData0.requireFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.IndexMetaData.Custom> strImmutableOpenMap7 = indexMetaData0.getCustoms();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.MappingMetaData> strImmutableOpenMap8 = indexMetaData0.getMappings();
        org.elasticsearch.common.xcontent.XContentParser xContentParser9 = null;
        org.elasticsearch.common.ParseFieldMatcher parseFieldMatcher10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData11 = indexMetaData0.fromXContent(xContentParser9, parseFieldMatcher10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(version2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(discoveryNodeFilters5);
        org.junit.Assert.assertNotNull(strImmutableOpenMap7);
        org.junit.Assert.assertNotNull(strImmutableOpenMap8);
    }

    @Test
    public void test4311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4311");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest1 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest1);
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, false, throwable8, writeResult9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.index.VersionType versionType12 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean16 = versionType12.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest2, versionType12);
        boolean boolean21 = versionType12.isVersionConflictForWrites(10L, (long) (byte) 0, false);
        boolean boolean23 = versionType12.validateVersionForReads((long) (byte) 0);
        boolean boolean25 = versionType12.validateVersionForReads((-1L));
        boolean boolean28 = versionType12.isVersionConflictForReads((long) (-1), (long) '4');
        boolean boolean32 = versionType12.isVersionConflictForWrites((long) (byte) 2, 35L, true);
        boolean boolean36 = versionType12.isVersionConflictForWrites((long) 3, 3L, false);
        boolean boolean39 = versionType12.isVersionConflictForReads(0L, (long) (short) 100);
        boolean boolean43 = versionType12.isVersionConflictForWrites(97L, 35L, false);
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test4312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4312");
        org.elasticsearch.action.ActionRequest actionRequest2 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest3 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest2);
        org.elasticsearch.action.ActionRequest actionRequest6 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest6);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple9 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest7, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest8);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest10 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest8);
        org.elasticsearch.action.update.UpdateHelper.Result result12 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result13 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest14 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable16 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult17 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult18 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result13, (org.elasticsearch.action.ActionRequest) bulkShardRequest14, false, throwable16, writeResult17);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult19 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult20 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result12, (org.elasticsearch.action.ActionRequest) bulkShardRequest14, writeResult19);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel21 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest22 = bulkShardRequest14.consistencyLevel(writeConsistencyLevel21);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple23 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest22);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest24 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest22);
        bulkShardRequest22.primaryTerm((long) (byte) 10);
        org.junit.Assert.assertNotNull(bulkShardRequest22);
    }

    @Test
    public void test4313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4313");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest2 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest3 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest2);
        org.elasticsearch.action.update.UpdateHelper.Result result4 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest6 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest6);
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult10 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult11 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result4, (org.elasticsearch.action.ActionRequest) bulkShardRequest6, false, throwable9, writeResult10);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest6);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest13 = new org.elasticsearch.action.bulk.BulkItemRequest((int) 'a', (org.elasticsearch.action.ActionRequest) bulkShardRequest6);
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting14 = org.elasticsearch.cluster.metadata.IndexMetaData.INDEX_NUMBER_OF_REPLICAS_SETTING;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.common.xcontent.ToXContent> streamableTuple15 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.common.xcontent.ToXContent>((org.elasticsearch.common.io.stream.Streamable) bulkShardRequest6, (org.elasticsearch.common.xcontent.ToXContent) intSetting14);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest17 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest18 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest17);
        org.elasticsearch.action.update.UpdateHelper.Result result19 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest21 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest21);
        java.lang.Throwable throwable24 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult25 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult26 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result19, (org.elasticsearch.action.ActionRequest) bulkShardRequest21, false, throwable24, writeResult25);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple27 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest18, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest21);
        org.elasticsearch.index.VersionType versionType28 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean32 = versionType28.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple33 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest18, versionType28);
        boolean boolean37 = versionType28.isVersionConflictForWrites(10L, (long) (byte) 0, false);
        boolean boolean39 = versionType28.validateVersionForWrites(0L);
        org.elasticsearch.index.VersionType versionType40 = versionType28.versionTypeForReplicationAndRecovery();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.settings.Setting<java.lang.Integer>, java.lang.Enum<org.elasticsearch.index.VersionType>> intSettingTuple41 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.settings.Setting<java.lang.Integer>, java.lang.Enum<org.elasticsearch.index.VersionType>>(intSetting14, (java.lang.Enum<org.elasticsearch.index.VersionType>) versionType40);
        boolean boolean45 = versionType40.isVersionConflictForWrites((long) 32, 10L, true);
        long long48 = versionType40.updateVersion((long) (byte) 2, (long) 1);
        org.junit.Assert.assertNotNull(intSetting14);
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(versionType40);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 1L + "'", long48 == 1L);
    }

    @Test
    public void test4314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4314");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest1 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest1);
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, false, throwable8, writeResult9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.index.VersionType versionType12 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean16 = versionType12.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest2, versionType12);
        boolean boolean21 = versionType12.isVersionConflictForWrites(10L, (long) (byte) 0, false);
        boolean boolean23 = versionType12.validateVersionForReads((long) (byte) 100);
        long long26 = versionType12.updateVersion((long) (byte) 10, 10L);
        boolean boolean29 = versionType12.isVersionConflictForReads((long) (byte) -1, (long) (short) 0);
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 10L + "'", long26 == 10L);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test4315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4315");
        org.elasticsearch.action.ActionRequest actionRequest3 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest3);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple6 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = bulkShardRequest5.setShardId(shardId8);
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = bulkShardRequest5.setShardId(shardId10);
        org.elasticsearch.index.shard.ShardId shardId12 = bulkShardRequest5.shardId();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest13 = new org.elasticsearch.action.bulk.BulkItemRequest(0, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        org.junit.Assert.assertNotNull(bulkShardRequest9);
        org.junit.Assert.assertNotNull(bulkShardRequest11);
        org.junit.Assert.assertNull(shardId12);
    }

    @Test
    public void test4316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4316");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest1 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = new org.elasticsearch.action.bulk.BulkItemRequest(97, (org.elasticsearch.action.ActionRequest) bulkShardRequest1);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting5 = null;
        java.lang.Throwable throwable7 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure9 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting5, "", throwable7, "");
        org.elasticsearch.action.update.UpdateHelper.Result result10 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable13 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult14 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult15 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result10, (org.elasticsearch.action.ActionRequest) bulkShardRequest11, false, throwable13, writeResult14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple16 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure9, (org.elasticsearch.transport.TransportMessage) bulkShardRequest11);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest18 = bulkShardRequest11.index("index.version.created");
        org.elasticsearch.common.transport.TransportAddress transportAddress19 = bulkShardRequest11.remoteAddress();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest20 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        bulkShardRequest11.primaryTerm((long) (byte) 2);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple24 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest11);
        org.elasticsearch.action.ActionRequest actionRequest25 = bulkItemRequest2.request();
        org.junit.Assert.assertNotNull(bulkShardRequest18);
        org.junit.Assert.assertNull(transportAddress19);
        org.junit.Assert.assertNotNull(actionRequest25);
    }

    @Test
    public void test4317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4317");
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        org.elasticsearch.action.update.UpdateHelper.Result result7 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest10 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        java.lang.Throwable throwable12 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult13 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult14 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result7, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, false, throwable12, writeResult13);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple15 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest6, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest9);
        java.lang.Throwable throwable17 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult18 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult19 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, true, throwable17, writeResult18);
        org.elasticsearch.index.shard.ShardId shardId20 = bulkShardRequest9.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue21 = bulkShardRequest9.timeout();
        long long22 = bulkShardRequest9.seqNo();
        java.lang.Throwable throwable24 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult25 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult26 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, true, throwable24, writeResult25);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult27 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult28 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, writeResult27);
        long long29 = bulkShardRequest9.primaryTerm();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest30 = new org.elasticsearch.action.bulk.BulkItemRequest(35, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        org.elasticsearch.action.support.IndicesOptions indicesOptions31 = bulkShardRequest9.indicesOptions();
        org.junit.Assert.assertNull(shardId20);
        org.junit.Assert.assertNotNull(timeValue21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertNotNull(indicesOptions31);
    }

    @Test
    public void test4318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4318");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting7 = null;
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure11 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting7, "", throwable9, "");
        org.elasticsearch.action.update.UpdateHelper.Result result12 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest13 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable15 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult16 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult17 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result12, (org.elasticsearch.action.ActionRequest) bulkShardRequest13, false, throwable15, writeResult16);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple18 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure11, (org.elasticsearch.transport.TransportMessage) bulkShardRequest13);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest20 = bulkShardRequest13.index("hi!");
        bulkShardRequest13.primaryTerm(100L);
        org.elasticsearch.index.shard.ShardId shardId23 = bulkShardRequest13.shardId();
        boolean boolean24 = bulkShardRequest13.getShouldPersistResult();
        org.elasticsearch.cluster.routing.ShardRouting shardRouting26 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting28 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting30 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result32 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest34 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest35 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest34);
        org.elasticsearch.action.update.UpdateHelper.Result result36 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest38 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest39 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest38);
        java.lang.Throwable throwable41 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult42 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult43 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result36, (org.elasticsearch.action.ActionRequest) bulkShardRequest38, false, throwable41, writeResult42);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple44 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest35, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest38);
        org.elasticsearch.tasks.TaskId taskId45 = null;
        bulkShardRequest38.setParentTask(taskId45);
        org.elasticsearch.index.shard.ShardId shardId47 = bulkShardRequest38.shardId();
        bulkShardRequest38.seqNo((long) 0);
        java.lang.Throwable throwable51 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult52 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult53 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result32, (org.elasticsearch.action.ActionRequest) bulkShardRequest38, false, throwable51, writeResult52);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException54 = bulkShardRequest38.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure56 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting30, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException54, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure58 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting28, "update", (java.lang.Throwable) actionRequestValidationException54, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure60 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting26, "index.shared_filesystem", (java.lang.Throwable) actionRequestValidationException54, "index.version.minimum_compatible");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult61 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult62 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result6, (org.elasticsearch.action.ActionRequest) bulkShardRequest13, false, (java.lang.Throwable) actionRequestValidationException54, writeResult61);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure64 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "", (java.lang.Throwable) actionRequestValidationException54, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure66 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "index.version.upgraded", (java.lang.Throwable) actionRequestValidationException54, "index.number_of_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure68 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "index.uuid", (java.lang.Throwable) actionRequestValidationException54, "index.blocks.read");
        org.junit.Assert.assertNotNull(bulkShardRequest20);
        org.junit.Assert.assertNull(shardId23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(shardId47);
        org.junit.Assert.assertNotNull(actionRequestValidationException54);
    }

    @Test
    public void test4319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4319");
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.ActionRequest actionRequest7 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest7);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple10 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest8, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest9);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest11 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        org.elasticsearch.action.ActionRequest actionRequest13 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest13);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest15 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple16 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest14, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest15);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest11, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest15);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest18 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue19 = bulkShardRequest18.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest20 = bulkShardRequest15.timeout(timeValue19);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest((-1), (org.elasticsearch.action.ActionRequest) bulkShardRequest20);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult22 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult23 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest20, writeResult22);
        org.elasticsearch.action.update.UpdateHelper.Result result24 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest26 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest27 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest26);
        org.elasticsearch.action.update.UpdateHelper.Result result28 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest30 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest31 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest30);
        java.lang.Throwable throwable33 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult34 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult35 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result28, (org.elasticsearch.action.ActionRequest) bulkShardRequest30, false, throwable33, writeResult34);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple36 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest27, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest30);
        java.lang.Throwable throwable38 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult39 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult40 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result24, (org.elasticsearch.action.ActionRequest) bulkShardRequest30, true, throwable38, writeResult39);
        org.elasticsearch.index.shard.ShardId shardId41 = bulkShardRequest30.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue42 = bulkShardRequest30.timeout();
        org.elasticsearch.tasks.TaskId taskId43 = bulkShardRequest30.getParentTask();
        bulkShardRequest20.setParentTask(taskId43);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest45 = new org.elasticsearch.action.bulk.BulkItemRequest(0, (org.elasticsearch.action.ActionRequest) bulkShardRequest20);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult46 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult47 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest20, writeResult46);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest48 = new org.elasticsearch.action.bulk.BulkItemRequest(3, (org.elasticsearch.action.ActionRequest) bulkShardRequest20);
        org.elasticsearch.action.update.UpdateHelper.Result result50 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest53 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest54 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest53);
        org.elasticsearch.action.update.UpdateHelper.Result result55 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest57 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest58 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest57);
        java.lang.Throwable throwable60 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult61 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult62 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result55, (org.elasticsearch.action.ActionRequest) bulkShardRequest57, false, throwable60, writeResult61);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple63 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest54, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest57);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest64 = new org.elasticsearch.action.bulk.BulkItemRequest((int) 'a', (org.elasticsearch.action.ActionRequest) bulkShardRequest57);
        java.lang.Throwable throwable66 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult67 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult68 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result50, (org.elasticsearch.action.ActionRequest) bulkShardRequest57, false, throwable66, writeResult67);
        org.elasticsearch.common.transport.TransportAddress transportAddress69 = bulkShardRequest57.remoteAddress();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest70 = new org.elasticsearch.action.bulk.BulkItemRequest(35, (org.elasticsearch.action.ActionRequest) bulkShardRequest57);
        org.elasticsearch.index.VersionType versionType72 = org.elasticsearch.index.VersionType.fromValue((byte) 3);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, java.lang.Enum<org.elasticsearch.index.VersionType>> bulkItemRequestTuple73 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, java.lang.Enum<org.elasticsearch.index.VersionType>>(bulkItemRequest70, (java.lang.Enum<org.elasticsearch.index.VersionType>) versionType72);
        org.elasticsearch.index.VersionType versionType74 = versionType72.versionTypeForReplicationAndRecovery();
        boolean boolean76 = versionType72.validateVersionForWrites(1L);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, java.io.Serializable> bulkItemRequestTuple77 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, java.io.Serializable>(bulkItemRequest48, (java.io.Serializable) versionType72);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput78 = null;
        // The following exception was thrown during execution in test generation
        try {
            versionType72.writeTo(streamOutput78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertNotNull(bulkShardRequest20);
        org.junit.Assert.assertNull(shardId41);
        org.junit.Assert.assertNotNull(timeValue42);
        org.junit.Assert.assertNotNull(taskId43);
        org.junit.Assert.assertNull(transportAddress69);
        org.junit.Assert.assertNotNull(versionType72);
        org.junit.Assert.assertNotNull(versionType74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
    }

    @Test
    public void test4320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4320");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.ActionRequest actionRequest4 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest4);
        org.elasticsearch.action.ActionRequest actionRequest8 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest8);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest10 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest9, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest10);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest10);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest10);
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        bulkShardRequest10.remoteAddress(transportAddress14);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest16 = new org.elasticsearch.action.bulk.BulkItemRequest((int) ' ', (org.elasticsearch.action.ActionRequest) bulkShardRequest10);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult17 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult18 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest10, writeResult17);
        org.elasticsearch.action.update.UpdateHelper.Result result20 = null;
        org.elasticsearch.action.ActionRequest actionRequest21 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting23 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting25 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting27 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result29 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest31 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest32 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest31);
        org.elasticsearch.action.update.UpdateHelper.Result result33 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest35 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest36 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest35);
        java.lang.Throwable throwable38 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult39 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult40 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result33, (org.elasticsearch.action.ActionRequest) bulkShardRequest35, false, throwable38, writeResult39);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple41 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest32, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest35);
        org.elasticsearch.tasks.TaskId taskId42 = null;
        bulkShardRequest35.setParentTask(taskId42);
        org.elasticsearch.index.shard.ShardId shardId44 = bulkShardRequest35.shardId();
        bulkShardRequest35.seqNo((long) 0);
        java.lang.Throwable throwable48 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult49 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult50 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result29, (org.elasticsearch.action.ActionRequest) bulkShardRequest35, false, throwable48, writeResult49);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException51 = bulkShardRequest35.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure53 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting27, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException51, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure55 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting25, "update", (java.lang.Throwable) actionRequestValidationException51, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure57 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting23, "index.priority", (java.lang.Throwable) actionRequestValidationException51, "index.uuid");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult58 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult59 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result20, actionRequest21, false, (java.lang.Throwable) actionRequestValidationException51, writeResult58);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult60 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult61 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest10, true, (java.lang.Throwable) actionRequestValidationException51, writeResult60);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest62 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue63 = bulkShardRequest62.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest64 = bulkShardRequest10.timeout(timeValue63);
        long long65 = bulkShardRequest64.seqNo();
        org.junit.Assert.assertNull(shardId44);
        org.junit.Assert.assertNotNull(actionRequestValidationException51);
        org.junit.Assert.assertNotNull(timeValue63);
        org.junit.Assert.assertNotNull(bulkShardRequest64);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 0L + "'", long65 == 0L);
    }

    @Test
    public void test4321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4321");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData1 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData1);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap3 = indexMetaData1.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters4 = indexMetaData1.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff5 = indexMetaData0.diff(indexMetaData1);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters6 = indexMetaData1.requireFilters();
        org.elasticsearch.Version version7 = indexMetaData1.getUpgradedVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData1);
        java.util.Set<java.lang.String> strSet10 = null; // flaky: indexMetaData1.activeAllocationIds((int) (short) 1);
        java.lang.String str11 = indexMetaData1.getIndexUUID();
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap12 = indexMetaData1.getActiveAllocationIds();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(indexMetaData1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap3);
        org.junit.Assert.assertNull(discoveryNodeFilters4);
        org.junit.Assert.assertNotNull(indexMetaDataDiff5);
        org.junit.Assert.assertNull(discoveryNodeFilters6);
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertNull(strSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_na_" + "'", str11, "_na_");
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap12);
    }

    @Test
    public void test4322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4322");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.Version version6 = indexMetaData0.getUpgradedVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap8 = indexMetaData0.getAliases();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData10 = indexMetaData0.mappingOrDefault("index.number_of_replicas");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        // The following exception was thrown during execution in test generation
        try {
            long long13 = indexMetaData0.primaryTerm((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNotNull(version6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(strImmutableOpenMap8);
        org.junit.Assert.assertNull(mappingMetaData10);
        org.junit.Assert.assertNotNull(builder11);
    }

    @Test
    public void test4323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4323");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData7 = indexMetaData0.mapping("index.");
        int int8 = indexMetaData0.getNumberOfShards();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters9 = indexMetaData0.includeFilters();
        int int10 = indexMetaData0.getNumberOfReplicas();
        long long11 = indexMetaData0.getVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData12 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData13 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder14 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData13);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap15 = indexMetaData13.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters16 = indexMetaData13.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff17 = indexMetaData12.diff(indexMetaData13);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters18 = indexMetaData13.requireFilters();
        org.elasticsearch.Version version19 = indexMetaData13.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings20 = indexMetaData13.getSettings();
        org.elasticsearch.index.Index index21 = indexMetaData13.getMergeSourceIndex();
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap22 = indexMetaData13.getActiveAllocationIds();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff23 = indexMetaData0.diff(indexMetaData13);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap24 = indexMetaData0.getAliases();
        int int25 = indexMetaData0.getTotalNumberOfShards();
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap26 = indexMetaData0.getActiveAllocationIds();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNull(mappingMetaData7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNull(discoveryNodeFilters9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertNotNull(indexMetaData12);
        org.junit.Assert.assertNotNull(indexMetaData13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap15);
        org.junit.Assert.assertNull(discoveryNodeFilters16);
        org.junit.Assert.assertNotNull(indexMetaDataDiff17);
        org.junit.Assert.assertNull(discoveryNodeFilters18);
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(settings20);
        org.junit.Assert.assertNull(index21);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap22);
        org.junit.Assert.assertNotNull(indexMetaDataDiff23);
        org.junit.Assert.assertNotNull(strImmutableOpenMap24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap26);
    }

    @Test
    public void test4324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4324");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int2 = builder1.numberOfShards();
        java.lang.String[] strArray6 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = builder1.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet7);
        org.elasticsearch.cluster.metadata.IndexMetaData.State state10 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = builder9.state(state10);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder13 = builder11.removeAlias("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder14 = builder13.removeAllAliases();
        int int15 = builder13.numberOfReplicas();
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    }

    @Test
    public void test4325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4325");
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest3 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable5 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult6 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult7 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest3, false, throwable5, writeResult6);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult8 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult9 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest3, writeResult8);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = bulkShardRequest3.consistencyLevel(writeConsistencyLevel10);
        long long12 = bulkShardRequest3.seqNo();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest13 = new org.elasticsearch.action.bulk.BulkItemRequest((int) 'a', (org.elasticsearch.action.ActionRequest) bulkShardRequest3);
        org.elasticsearch.action.ActionRequest actionRequest17 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest18 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest17);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest19 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple20 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest18, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest19);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest19);
        org.elasticsearch.action.ActionRequest actionRequest23 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest24 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest23);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest25 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple26 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest24, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest25);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple27 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest21, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest25);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest28 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest25);
        java.lang.String str29 = bulkShardRequest25.index();
        bulkShardRequest25.setParentTask("index.auto_expand_replicas", 0L);
        long long33 = bulkShardRequest25.primaryTerm();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple34 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest13, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest25);
        org.elasticsearch.action.update.UpdateHelper.Result result35 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest37 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest38 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest37);
        java.lang.Throwable throwable40 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult41 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult42 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result35, (org.elasticsearch.action.ActionRequest) bulkShardRequest37, false, throwable40, writeResult41);
        org.elasticsearch.action.update.UpdateHelper.Result result43 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest45 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest46 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest45);
        org.elasticsearch.action.update.UpdateHelper.Result result47 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest49 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest50 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest49);
        java.lang.Throwable throwable52 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult53 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult54 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result47, (org.elasticsearch.action.ActionRequest) bulkShardRequest49, false, throwable52, writeResult53);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple55 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest46, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest49);
        java.lang.Throwable throwable57 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult58 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult59 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result43, (org.elasticsearch.action.ActionRequest) bulkShardRequest49, true, throwable57, writeResult58);
        org.elasticsearch.index.shard.ShardId shardId60 = bulkShardRequest49.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue61 = bulkShardRequest49.timeout();
        org.elasticsearch.tasks.TaskId taskId62 = bulkShardRequest49.getParentTask();
        bulkShardRequest37.setParentTask(taskId62);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple64 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest13, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest37);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting66 = null;
        java.lang.Throwable throwable68 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure70 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting66, "", throwable68, "");
        org.elasticsearch.action.update.UpdateHelper.Result result71 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest72 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable74 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult75 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult76 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result71, (org.elasticsearch.action.ActionRequest) bulkShardRequest72, false, throwable74, writeResult75);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple77 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure70, (org.elasticsearch.transport.TransportMessage) bulkShardRequest72);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest79 = bulkShardRequest72.index("index.version.created");
        org.elasticsearch.common.transport.TransportAddress transportAddress80 = bulkShardRequest72.remoteAddress();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest81 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest72);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting82 = null;
        java.lang.Throwable throwable84 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure86 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting82, "", throwable84, "");
        org.elasticsearch.action.update.UpdateHelper.Result result87 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest88 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable90 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult91 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult92 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result87, (org.elasticsearch.action.ActionRequest) bulkShardRequest88, false, throwable90, writeResult91);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple93 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure86, (org.elasticsearch.transport.TransportMessage) bulkShardRequest88);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple94 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest81, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest88);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple95 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest13, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest88);
        org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestReplicationRequest96 = bulkItemRequestTuple95.v2();
        org.junit.Assert.assertNotNull(bulkShardRequest11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertNull(shardId60);
        org.junit.Assert.assertNotNull(timeValue61);
        org.junit.Assert.assertNotNull(taskId62);
        org.junit.Assert.assertNotNull(bulkShardRequest79);
        org.junit.Assert.assertNull(transportAddress80);
        org.junit.Assert.assertNotNull(bulkShardRequestReplicationRequest96);
    }

    @Test
    public void test4326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4326");
        org.elasticsearch.index.VersionType versionType0 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean3 = versionType0.isVersionConflictForReads((long) (short) 1, (-1L));
        boolean boolean5 = versionType0.validateVersionForReads(52L);
        org.junit.Assert.assertNotNull(versionType0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test4327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4327");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure6 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", throwable4, "");
        org.elasticsearch.action.update.UpdateHelper.Result result7 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult11 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult12 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result7, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable10, writeResult11);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure6, (org.elasticsearch.transport.TransportMessage) bulkShardRequest8);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest15 = bulkShardRequest8.index("hi!");
        bulkShardRequest8.primaryTerm(100L);
        org.elasticsearch.index.shard.ShardId shardId18 = bulkShardRequest8.shardId();
        long long19 = bulkShardRequest8.primaryTerm();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest20 = new org.elasticsearch.action.bulk.BulkItemRequest(97, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest(97, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.junit.Assert.assertNotNull(bulkShardRequest15);
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 100L + "'", long19 == 100L);
    }

    @Test
    public void test4328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4328");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result12 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest14 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest15 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest14);
        org.elasticsearch.action.update.UpdateHelper.Result result16 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest18 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest19 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest18);
        java.lang.Throwable throwable21 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult22 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult23 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result16, (org.elasticsearch.action.ActionRequest) bulkShardRequest18, false, throwable21, writeResult22);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple24 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest15, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest18);
        org.elasticsearch.tasks.TaskId taskId25 = null;
        bulkShardRequest18.setParentTask(taskId25);
        org.elasticsearch.index.shard.ShardId shardId27 = bulkShardRequest18.shardId();
        bulkShardRequest18.seqNo((long) 0);
        java.lang.Throwable throwable31 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult32 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult33 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result12, (org.elasticsearch.action.ActionRequest) bulkShardRequest18, false, throwable31, writeResult32);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException34 = bulkShardRequest18.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException34, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "update", (java.lang.Throwable) actionRequestValidationException34, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "_na_", (java.lang.Throwable) actionRequestValidationException34, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "primary_terms", (java.lang.Throwable) actionRequestValidationException34, "delete");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", (java.lang.Throwable) actionRequestValidationException34, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "index.data_path", (java.lang.Throwable) actionRequestValidationException34, "current version [10] is different than the one provided [32]");
        org.junit.Assert.assertNull(shardId27);
        org.junit.Assert.assertNotNull(actionRequestValidationException34);
    }

    @Test
    public void test4329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4329");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure6 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", throwable4, "");
        org.elasticsearch.action.update.UpdateHelper.Result result7 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult11 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult12 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result7, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable10, writeResult11);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure6, (org.elasticsearch.transport.TransportMessage) bulkShardRequest8);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest15 = bulkShardRequest8.index("index.version.created");
        long long16 = bulkShardRequest8.seqNo();
        long long17 = bulkShardRequest8.primaryTerm();
        long long18 = bulkShardRequest8.primaryTerm();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest21 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest21);
        org.elasticsearch.action.update.UpdateHelper.Result result23 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest25 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest26 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest25);
        java.lang.Throwable throwable28 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult29 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult30 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result23, (org.elasticsearch.action.ActionRequest) bulkShardRequest25, false, throwable28, writeResult29);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple31 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest22, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest25);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest32 = new org.elasticsearch.action.bulk.BulkItemRequest((int) 'a', (org.elasticsearch.action.ActionRequest) bulkShardRequest25);
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting33 = org.elasticsearch.cluster.metadata.IndexMetaData.INDEX_NUMBER_OF_REPLICAS_SETTING;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.common.xcontent.ToXContent> streamableTuple34 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.common.xcontent.ToXContent>((org.elasticsearch.common.io.stream.Streamable) bulkShardRequest25, (org.elasticsearch.common.xcontent.ToXContent) intSetting33);
        org.elasticsearch.common.unit.TimeValue timeValue35 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest36 = bulkShardRequest25.timeout(timeValue35);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest37 = bulkShardRequest8.timeout(timeValue35);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest38 = new org.elasticsearch.action.bulk.BulkItemRequest((int) '#', (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest39 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 10, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.junit.Assert.assertNotNull(bulkShardRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(intSetting33);
        org.junit.Assert.assertNotNull(timeValue35);
        org.junit.Assert.assertNotNull(bulkShardRequest36);
        org.junit.Assert.assertNotNull(bulkShardRequest37);
    }

    @Test
    public void test4330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4330");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure6 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", throwable4, "");
        org.elasticsearch.action.update.UpdateHelper.Result result7 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult11 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult12 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result7, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable10, writeResult11);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure6, (org.elasticsearch.transport.TransportMessage) bulkShardRequest8);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest15 = bulkShardRequest8.index("index.version.created");
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = bulkShardRequest8.remoteAddress();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest17 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting18 = null;
        java.lang.Throwable throwable20 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure22 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting18, "", throwable20, "");
        org.elasticsearch.action.update.UpdateHelper.Result result23 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest24 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable26 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult27 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult28 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result23, (org.elasticsearch.action.ActionRequest) bulkShardRequest24, false, throwable26, writeResult27);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple29 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure22, (org.elasticsearch.transport.TransportMessage) bulkShardRequest24);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple30 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest17, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest24);
        org.elasticsearch.action.update.UpdateHelper.Result result31 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest33 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest34 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest33);
        org.elasticsearch.action.update.UpdateHelper.Result result35 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest37 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest38 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest37);
        java.lang.Throwable throwable40 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult41 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult42 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result35, (org.elasticsearch.action.ActionRequest) bulkShardRequest37, false, throwable40, writeResult41);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple43 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest34, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest37);
        org.elasticsearch.tasks.TaskId taskId44 = null;
        bulkShardRequest37.setParentTask(taskId44);
        org.elasticsearch.index.shard.ShardId shardId46 = bulkShardRequest37.shardId();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult47 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult48 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result31, (org.elasticsearch.action.ActionRequest) bulkShardRequest37, writeResult47);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple49 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest17, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest37);
        bulkShardRequest37.setParentTask("index.auto_expand_replicas", 0L);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult53 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult54 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest37, writeResult53);
        org.junit.Assert.assertNotNull(bulkShardRequest15);
        org.junit.Assert.assertNull(transportAddress16);
        org.junit.Assert.assertNull(shardId46);
    }

    @Test
    public void test4331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4331");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int2 = builder1.numberOfShards();
        java.lang.String[] strArray6 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = builder1.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet7);
        org.elasticsearch.cluster.metadata.IndexMetaData.State state10 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = builder9.state(state10);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder13 = builder9.removeAlias("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData14 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder15 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData14);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap16 = indexMetaData14.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet17 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple18 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData14, indexShardStateSet17);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters19 = indexMetaData14.includeFilters();
        org.elasticsearch.common.settings.Settings settings20 = indexMetaData14.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder21 = builder9.settings(settings20);
        boolean boolean22 = org.elasticsearch.cluster.metadata.IndexMetaData.isOnSharedFilesystem(settings20);
        org.elasticsearch.common.settings.Settings settings23 = org.elasticsearch.cluster.metadata.IndexMetaData.addHumanReadableSettings(settings20);
        boolean boolean24 = org.elasticsearch.cluster.metadata.IndexMetaData.isOnSharedFilesystem(settings20);
        org.elasticsearch.transport.TransportService transportService25 = null;
        org.elasticsearch.cluster.service.ClusterService clusterService26 = null;
        org.elasticsearch.indices.IndicesService indicesService27 = null;
        org.elasticsearch.threadpool.ThreadPool threadPool28 = null;
        org.elasticsearch.cluster.action.shard.ShardStateAction shardStateAction29 = null;
        org.elasticsearch.cluster.action.index.MappingUpdatedAction mappingUpdatedAction30 = null;
        org.elasticsearch.action.update.UpdateHelper updateHelper31 = null;
        org.elasticsearch.action.support.ActionFilters actionFilters32 = null;
        org.elasticsearch.cluster.metadata.IndexNameExpressionResolver indexNameExpressionResolver33 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.bulk.TransportShardBulkAction transportShardBulkAction34 = new org.elasticsearch.action.bulk.TransportShardBulkAction(settings20, transportService25, clusterService26, indicesService27, threadPool28, shardStateAction29, mappingUpdatedAction30, updateHelper31, actionFilters32, indexNameExpressionResolver33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(indexMetaData14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap16);
        org.junit.Assert.assertNotNull(indexShardStateSet17);
        org.junit.Assert.assertNull(discoveryNodeFilters19);
        org.junit.Assert.assertNotNull(settings20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(settings23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test4332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4332");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result5 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult11 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult12 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result5, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, false, throwable10, writeResult11);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest13 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        bulkShardRequest7.setParentTask("index.version.upgraded", (long) ' ');
        org.elasticsearch.tasks.TaskId taskId18 = bulkShardRequest7.getParentTask();
        org.elasticsearch.cluster.routing.ShardRouting shardRouting20 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result22 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest24 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest25 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest24);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel26 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest27 = bulkShardRequest24.consistencyLevel(writeConsistencyLevel26);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting29 = null;
        org.elasticsearch.action.ActionRequest actionRequest32 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest33 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest32);
        org.elasticsearch.action.ActionRequest actionRequest36 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest37 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest36);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest38 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple39 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest37, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest38);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest40 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest38);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple41 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest33, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest38);
        org.elasticsearch.common.transport.TransportAddress transportAddress42 = null;
        bulkShardRequest38.remoteAddress(transportAddress42);
        org.elasticsearch.action.update.UpdateHelper.Result result44 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest45 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue46 = bulkShardRequest45.timeout();
        java.lang.String str47 = bulkShardRequest45.index();
        org.elasticsearch.common.unit.TimeValue timeValue48 = bulkShardRequest45.timeout();
        org.elasticsearch.cluster.routing.ShardRouting shardRouting50 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting52 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result54 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest56 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest57 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest56);
        org.elasticsearch.action.update.UpdateHelper.Result result58 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest60 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest61 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest60);
        java.lang.Throwable throwable63 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult64 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult65 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result58, (org.elasticsearch.action.ActionRequest) bulkShardRequest60, false, throwable63, writeResult64);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple66 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest57, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest60);
        org.elasticsearch.tasks.TaskId taskId67 = null;
        bulkShardRequest60.setParentTask(taskId67);
        org.elasticsearch.index.shard.ShardId shardId69 = bulkShardRequest60.shardId();
        bulkShardRequest60.seqNo((long) 0);
        java.lang.Throwable throwable73 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult74 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult75 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result54, (org.elasticsearch.action.ActionRequest) bulkShardRequest60, false, throwable73, writeResult74);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException76 = bulkShardRequest60.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure78 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting52, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException76, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure80 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting50, "update", (java.lang.Throwable) actionRequestValidationException76, "index.version.created_string");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult81 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult82 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result44, (org.elasticsearch.action.ActionRequest) bulkShardRequest45, false, (java.lang.Throwable) actionRequestValidationException76, writeResult81);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.transport.TransportRequest, java.lang.RuntimeException> transportRequestTuple83 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.transport.TransportRequest, java.lang.RuntimeException>((org.elasticsearch.transport.TransportRequest) bulkShardRequest38, (java.lang.RuntimeException) actionRequestValidationException76);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure85 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting29, "", (java.lang.Throwable) actionRequestValidationException76, "index.shadow_replicas");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult86 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult87 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result22, (org.elasticsearch.action.ActionRequest) bulkShardRequest24, false, (java.lang.Throwable) actionRequestValidationException76, writeResult86);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure89 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting20, "index.number_of_shards", (java.lang.Throwable) actionRequestValidationException76, "active_allocations");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult90 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult91 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, false, (java.lang.Throwable) actionRequestValidationException76, writeResult90);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure93 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "active_allocations", (java.lang.Throwable) actionRequestValidationException76, "current version [32] is different than the one provided [32]");
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertNotNull(bulkShardRequest27);
        org.junit.Assert.assertNotNull(timeValue46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(timeValue48);
        org.junit.Assert.assertNull(shardId69);
        org.junit.Assert.assertNotNull(actionRequestValidationException76);
    }

    @Test
    public void test4333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4333");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder2.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder3.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int9 = builder8.numberOfShards();
        java.lang.String[] strArray13 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder8.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder3.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple18 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData0, (java.lang.Iterable<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap19 = indexMetaData0.getAliases();
        int int20 = indexMetaData0.getNumberOfShards();
        org.elasticsearch.Version version21 = indexMetaData0.getCreationVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData22 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData23 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder24 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData23);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap25 = indexMetaData23.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters26 = indexMetaData23.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff27 = indexMetaData22.diff(indexMetaData23);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters28 = indexMetaData23.requireFilters();
        org.elasticsearch.Version version29 = indexMetaData23.getUpgradedVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData30 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder31 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData30);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap32 = indexMetaData30.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet33 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple34 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData30, indexShardStateSet33);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff35 = indexMetaData23.diff(indexMetaData30);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff36 = indexMetaData0.diff(indexMetaData23);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData38 = indexMetaData23.mapping("index.blocks.read_only");
        boolean boolean40 = indexMetaData23.isSameUUID("index.auto_expand_replicas");
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.IndexMetaData.Custom> strImmutableOpenMap41 = indexMetaData23.getCustoms();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder42 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData23);
        long long43 = indexMetaData23.getVersion();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple18);
        org.junit.Assert.assertNotNull(strImmutableOpenMap19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(version21);
        org.junit.Assert.assertNotNull(indexMetaData22);
        org.junit.Assert.assertNotNull(indexMetaData23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap25);
        org.junit.Assert.assertNull(discoveryNodeFilters26);
        org.junit.Assert.assertNotNull(indexMetaDataDiff27);
        org.junit.Assert.assertNull(discoveryNodeFilters28);
        org.junit.Assert.assertNotNull(version29);
        org.junit.Assert.assertNotNull(indexMetaData30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap32);
        org.junit.Assert.assertNotNull(indexShardStateSet33);
        org.junit.Assert.assertNotNull(indexMetaDataDiff35);
        org.junit.Assert.assertNotNull(indexMetaDataDiff36);
        org.junit.Assert.assertNull(mappingMetaData38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strImmutableOpenMap41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 1L + "'", long43 == 1L);
    }

    @Test
    public void test4334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4334");
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        org.elasticsearch.action.update.UpdateHelper.Result result7 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest10 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        java.lang.Throwable throwable12 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult13 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult14 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result7, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, false, throwable12, writeResult13);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple15 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest6, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest9);
        org.elasticsearch.tasks.TaskId taskId16 = null;
        bulkShardRequest9.setParentTask(taskId16);
        java.lang.Throwable throwable19 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult20 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult21 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, true, throwable19, writeResult20);
        org.elasticsearch.action.support.IndicesOptions indicesOptions22 = bulkShardRequest9.indicesOptions();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest23 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        java.lang.Throwable throwable25 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult26 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult27 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, true, throwable25, writeResult26);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest28 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        org.elasticsearch.action.update.UpdateHelper.Result result29 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest31 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest32 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest31);
        org.elasticsearch.action.update.UpdateHelper.Result result33 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest35 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest36 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest35);
        java.lang.Throwable throwable38 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult39 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult40 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result33, (org.elasticsearch.action.ActionRequest) bulkShardRequest35, false, throwable38, writeResult39);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple41 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest32, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest35);
        org.elasticsearch.tasks.TaskId taskId42 = null;
        bulkShardRequest35.setParentTask(taskId42);
        java.lang.Throwable throwable45 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult46 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult47 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result29, (org.elasticsearch.action.ActionRequest) bulkShardRequest35, true, throwable45, writeResult46);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple48 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest28, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest35);
        org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestReplicationRequest49 = bulkItemRequestTuple48.v2();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest50 = bulkItemRequestTuple48.v1();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest51 = bulkItemRequestTuple48.v1();
        org.junit.Assert.assertNotNull(indicesOptions22);
        org.junit.Assert.assertNotNull(bulkShardRequestReplicationRequest49);
        org.junit.Assert.assertNotNull(bulkItemRequest50);
        org.junit.Assert.assertNotNull(bulkItemRequest51);
    }

    @Test
    public void test4335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4335");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters5 = indexMetaData0.includeFilters();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.action.update.UpdateHelper.Result result9 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult15 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult16 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result9, (org.elasticsearch.action.ActionRequest) bulkShardRequest11, false, throwable14, writeResult15);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest8, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest11);
        org.elasticsearch.index.VersionType versionType18 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean22 = versionType18.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple23 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest8, versionType18);
        boolean boolean27 = versionType18.isVersionConflictForWrites((long) 0, (long) (short) 0, false);
        boolean boolean28 = indexMetaData0.equals((java.lang.Object) boolean27);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder29 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        long long30 = indexMetaData0.getCreationDate();
        org.elasticsearch.Version version31 = indexMetaData0.getCreationVersion();
        org.elasticsearch.action.ActionRequest actionRequest34 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest35 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest34);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest36 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple37 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest35, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest36);
        boolean boolean38 = bulkShardRequest36.getShouldPersistResult();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder40 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int41 = builder40.numberOfShards();
        java.lang.String[] strArray45 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet46 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet46, strArray45);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder48 = builder40.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet46);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>> streamableTuple49 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>>((org.elasticsearch.common.io.stream.Streamable) bulkShardRequest36, strSet46);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest50 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest36);
        boolean boolean51 = indexMetaData0.equals((java.lang.Object) (short) 0);
        org.elasticsearch.index.Index index52 = indexMetaData0.getMergeSourceIndex();
        boolean boolean54 = indexMetaData0.isSameUUID("delete");
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNull(discoveryNodeFilters5);
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(version31);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(index52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    }

    @Test
    public void test4336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4336");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest3 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest3);
        org.elasticsearch.action.update.UpdateHelper.Result result5 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult11 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult12 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result5, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, false, throwable10, writeResult11);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest7);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = new org.elasticsearch.action.bulk.BulkItemRequest((int) 'a', (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        java.lang.Throwable throwable16 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult17 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult18 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, false, throwable16, writeResult17);
        org.elasticsearch.common.transport.TransportAddress transportAddress19 = bulkShardRequest7.remoteAddress();
        org.elasticsearch.action.ActionRequest actionRequest22 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest23 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest22);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest24 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple25 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest23, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest24);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest26 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest24);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest28 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest29 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest28);
        org.elasticsearch.action.update.UpdateHelper.Result result30 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest32 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest33 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest32);
        java.lang.Throwable throwable35 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult36 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult37 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result30, (org.elasticsearch.action.ActionRequest) bulkShardRequest32, false, throwable35, writeResult36);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple38 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest29, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest32);
        org.elasticsearch.action.ActionRequest actionRequest40 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest41 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest40);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest42 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple43 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest41, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest42);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple44 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest29, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest42);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple45 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest26, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest42);
        org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestReplicationRequest46 = bulkItemRequestTuple45.v2();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel47 = bulkShardRequestReplicationRequest46.consistencyLevel();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest48 = null;
        org.elasticsearch.action.ActionRequest actionRequest51 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest52 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest51);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest53 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple54 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest52, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest53);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest55 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest53);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest57 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest58 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest57);
        org.elasticsearch.action.update.UpdateHelper.Result result59 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest61 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest62 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest61);
        java.lang.Throwable throwable64 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult65 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult66 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result59, (org.elasticsearch.action.ActionRequest) bulkShardRequest61, false, throwable64, writeResult65);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple67 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest58, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest61);
        org.elasticsearch.action.ActionRequest actionRequest69 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest70 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest69);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest71 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple72 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest70, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest71);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple73 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest58, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest71);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple74 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest55, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest71);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting75 = null;
        java.lang.Throwable throwable77 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure79 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting75, "", throwable77, "");
        org.elasticsearch.action.update.UpdateHelper.Result result80 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest81 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable83 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult84 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult85 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result80, (org.elasticsearch.action.ActionRequest) bulkShardRequest81, false, throwable83, writeResult84);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple86 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure79, (org.elasticsearch.transport.TransportMessage) bulkShardRequest81);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest88 = bulkShardRequest81.index("hi!");
        org.elasticsearch.action.support.IndicesOptions indicesOptions89 = bulkShardRequest88.indicesOptions();
        org.elasticsearch.common.transport.TransportAddress transportAddress90 = null;
        bulkShardRequest88.remoteAddress(transportAddress90);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple92 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest55, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest88);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple93 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest48, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest88);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.WriteConsistencyLevel, org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>> writeConsistencyLevelTuple94 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.WriteConsistencyLevel, org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>>(writeConsistencyLevel47, bulkItemRequestTuple93);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest95 = bulkShardRequest7.consistencyLevel(writeConsistencyLevel47);
        org.junit.Assert.assertNull(transportAddress19);
        org.junit.Assert.assertNotNull(bulkShardRequestReplicationRequest46);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel47 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel47.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(bulkShardRequest88);
        org.junit.Assert.assertNotNull(indicesOptions89);
        org.junit.Assert.assertNotNull(bulkShardRequest95);
    }

    @Test
    public void test4337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4337");
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest3 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest3);
        org.elasticsearch.action.update.UpdateHelper.Result result5 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult11 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult12 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result5, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, false, throwable10, writeResult11);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest7);
        org.elasticsearch.tasks.TaskId taskId14 = null;
        bulkShardRequest7.setParentTask(taskId14);
        org.elasticsearch.index.shard.ShardId shardId16 = bulkShardRequest7.shardId();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult17 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult18 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, writeResult17);
        org.elasticsearch.common.unit.TimeValue timeValue19 = bulkShardRequest7.timeout();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest20 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 10, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        int int21 = bulkItemRequest20.id();
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10 + "'", int21 == 10);
    }

    @Test
    public void test4338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4338");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters1 = indexMetaData0.requireFilters();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData3 = indexMetaData0.mappingOrDefault("index.auto_expand_replicas");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        int int5 = indexMetaData0.getTotalNumberOfShards();
        org.elasticsearch.Version version6 = indexMetaData0.getCreationVersion();
        int int7 = indexMetaData0.getNumberOfReplicas();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state8 = indexMetaData0.getState();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNull(discoveryNodeFilters1);
        org.junit.Assert.assertNull(mappingMetaData3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(version6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + state8 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state8.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
    }

    @Test
    public void test4339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4339");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder2.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder3.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int9 = builder8.numberOfShards();
        java.lang.String[] strArray13 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder8.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder3.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple18 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData0, (java.lang.Iterable<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap19 = indexMetaData0.getAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder20 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData22 = indexMetaData0.mappingOrDefault("current version [100] is different than the one provided [1]");
        int int23 = indexMetaData0.getTotalNumberOfShards();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple18);
        org.junit.Assert.assertNotNull(strImmutableOpenMap19);
        org.junit.Assert.assertNull(mappingMetaData22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
    }

    @Test
    public void test4340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4340");
        org.elasticsearch.action.ActionRequest actionRequest4 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest4);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest6 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple7 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest6);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest6);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue10 = bulkShardRequest9.timeout();
        java.lang.String str11 = bulkShardRequest9.index();
        org.elasticsearch.common.unit.TimeValue timeValue12 = bulkShardRequest9.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest13 = bulkShardRequest6.timeout(timeValue12);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest13);
        org.elasticsearch.action.ActionRequest actionRequest18 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest19 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest18);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest20 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple21 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest19, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest20);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest20);
        org.elasticsearch.action.ActionRequest actionRequest24 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest25 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest24);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest26 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple27 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest25, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest26);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple28 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest22, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest26);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest29 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest26);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest31 = bulkShardRequest26.setShardId(shardId30);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple32 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest14, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest26);
        org.elasticsearch.action.ActionRequest actionRequest37 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest38 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest37);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest39 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple40 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest38, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest39);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest41 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest39);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest42 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue43 = bulkShardRequest42.timeout();
        java.lang.String str44 = bulkShardRequest42.index();
        org.elasticsearch.common.unit.TimeValue timeValue45 = bulkShardRequest42.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest46 = bulkShardRequest39.timeout(timeValue45);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest47 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest46);
        org.elasticsearch.action.ActionRequest actionRequest51 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest52 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest51);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest53 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple54 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest52, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest53);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest55 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest53);
        org.elasticsearch.action.ActionRequest actionRequest57 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest58 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest57);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest59 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple60 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest58, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest59);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple61 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest55, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest59);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest62 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest59);
        org.elasticsearch.index.shard.ShardId shardId63 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest64 = bulkShardRequest59.setShardId(shardId63);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple65 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest47, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest59);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest66 = new org.elasticsearch.action.bulk.BulkItemRequest((int) '4', (org.elasticsearch.action.ActionRequest) bulkShardRequest59);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple67 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest14, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest59);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest68 = bulkItemRequestTuple67.v1();
        org.elasticsearch.action.ActionRequest actionRequest69 = bulkItemRequest68.request();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest70 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 2, actionRequest69);
        org.elasticsearch.action.ActionRequest actionRequest71 = bulkItemRequest70.request();
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(timeValue12);
        org.junit.Assert.assertNotNull(bulkShardRequest13);
        org.junit.Assert.assertNotNull(bulkShardRequest31);
        org.junit.Assert.assertNotNull(timeValue43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(timeValue45);
        org.junit.Assert.assertNotNull(bulkShardRequest46);
        org.junit.Assert.assertNotNull(bulkShardRequest64);
        org.junit.Assert.assertNotNull(bulkItemRequest68);
        org.junit.Assert.assertNotNull(actionRequest69);
        org.junit.Assert.assertNotNull(actionRequest71);
    }

    @Test
    public void test4341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4341");
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest3 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest3);
        org.elasticsearch.action.update.UpdateHelper.Result result5 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult11 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult12 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result5, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, false, throwable10, writeResult11);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest7);
        org.elasticsearch.tasks.TaskId taskId14 = null;
        bulkShardRequest7.setParentTask(taskId14);
        org.elasticsearch.index.shard.ShardId shardId16 = bulkShardRequest7.shardId();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult17 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult18 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, writeResult17);
        long long19 = bulkShardRequest7.primaryTerm();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest20 = new org.elasticsearch.action.bulk.BulkItemRequest((int) 'a', (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.tasks.TaskId taskId21 = bulkShardRequest7.getParentTask();
        org.elasticsearch.index.shard.ShardId shardId22 = bulkShardRequest7.shardId();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput23 = null;
        // The following exception was thrown during execution in test generation
        try {
            bulkShardRequest7.writeTo(streamOutput23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNull(taskId21);
        org.junit.Assert.assertNull(shardId22);
    }

    @Test
    public void test4342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4342");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest3 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue4 = bulkShardRequest3.timeout();
        org.elasticsearch.action.support.IndicesOptions indicesOptions5 = bulkShardRequest3.indicesOptions();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult6 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult7 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest3, writeResult6);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting9 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting11 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result13 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest15 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest16 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest15);
        org.elasticsearch.action.update.UpdateHelper.Result result17 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest19 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest20 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest19);
        java.lang.Throwable throwable22 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult23 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult24 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result17, (org.elasticsearch.action.ActionRequest) bulkShardRequest19, false, throwable22, writeResult23);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple25 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest16, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest19);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest27 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest28 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest27);
        org.elasticsearch.action.update.UpdateHelper.Result result29 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest31 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest32 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest31);
        java.lang.Throwable throwable34 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult35 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult36 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result29, (org.elasticsearch.action.ActionRequest) bulkShardRequest31, false, throwable34, writeResult35);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple37 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest28, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest31);
        org.elasticsearch.tasks.TaskId taskId38 = null;
        bulkShardRequest31.setParentTask(taskId38);
        boolean boolean40 = bulkItemRequestTuple25.equals((java.lang.Object) taskId38);
        org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestReplicationRequest41 = bulkItemRequestTuple25.v2();
        org.elasticsearch.cluster.routing.ShardRouting shardRouting43 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting45 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting47 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting49 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result51 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest53 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest54 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest53);
        org.elasticsearch.action.update.UpdateHelper.Result result55 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest57 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest58 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest57);
        java.lang.Throwable throwable60 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult61 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult62 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result55, (org.elasticsearch.action.ActionRequest) bulkShardRequest57, false, throwable60, writeResult61);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple63 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest54, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest57);
        org.elasticsearch.tasks.TaskId taskId64 = null;
        bulkShardRequest57.setParentTask(taskId64);
        org.elasticsearch.index.shard.ShardId shardId66 = bulkShardRequest57.shardId();
        bulkShardRequest57.seqNo((long) 0);
        java.lang.Throwable throwable70 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult71 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult72 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result51, (org.elasticsearch.action.ActionRequest) bulkShardRequest57, false, throwable70, writeResult71);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException73 = bulkShardRequest57.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure75 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting49, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException73, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure77 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting47, "update", (java.lang.Throwable) actionRequestValidationException73, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure79 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting45, "_na_", (java.lang.Throwable) actionRequestValidationException73, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure81 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting43, "index.blocks.metadata", (java.lang.Throwable) actionRequestValidationException73, "index.priority");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult82 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult83 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result13, (org.elasticsearch.action.ActionRequest) bulkShardRequestReplicationRequest41, true, (java.lang.Throwable) actionRequestValidationException73, writeResult82);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure85 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting11, "hi!", (java.lang.Throwable) actionRequestValidationException73, "index.shared_filesystem");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure87 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting9, "index.version.created", (java.lang.Throwable) actionRequestValidationException73, "hi!");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult88 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult89 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest3, true, (java.lang.Throwable) actionRequestValidationException73, writeResult88);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult90 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult91 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest3, writeResult90);
        org.elasticsearch.tasks.TaskId taskId92 = bulkShardRequest3.getParentTask();
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(indicesOptions5);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(bulkShardRequestReplicationRequest41);
        org.junit.Assert.assertNull(shardId66);
        org.junit.Assert.assertNotNull(actionRequestValidationException73);
        org.junit.Assert.assertNotNull(taskId92);
    }

    @Test
    public void test4343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4343");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters5 = indexMetaData0.includeFilters();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.action.update.UpdateHelper.Result result9 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult15 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult16 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result9, (org.elasticsearch.action.ActionRequest) bulkShardRequest11, false, throwable14, writeResult15);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest8, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest11);
        org.elasticsearch.index.VersionType versionType18 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean22 = versionType18.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple23 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest8, versionType18);
        boolean boolean27 = versionType18.isVersionConflictForWrites((long) 0, (long) (short) 0, false);
        boolean boolean28 = indexMetaData0.equals((java.lang.Object) boolean27);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters29 = indexMetaData0.getInitialRecoveryFilters();
        boolean boolean31 = indexMetaData0.isSameUUID("_na_");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder32 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.settings.Settings settings33 = indexMetaData0.getSettings();
        long long34 = indexMetaData0.getCreationDate();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder35 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params36 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder37 = indexMetaData0.toXContent(xContentBuilder35, params36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNull(discoveryNodeFilters5);
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(discoveryNodeFilters29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(settings33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertNotNull(params36);
    }

    @Test
    public void test4344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4344");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder2.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder3.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int9 = builder8.numberOfShards();
        java.lang.String[] strArray13 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder8.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder3.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple18 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData0, (java.lang.Iterable<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap19 = indexMetaData0.getAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder20 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        java.util.Set<java.lang.String> strSet22 = null; // flaky: indexMetaData0.activeAllocationIds((int) (short) 1);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.MappingMetaData> strImmutableOpenMap23 = indexMetaData0.getMappings();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple18);
        org.junit.Assert.assertNotNull(strImmutableOpenMap19);
        org.junit.Assert.assertNull(strSet22);
        org.junit.Assert.assertNotNull(strImmutableOpenMap23);
    }

    @Test
    public void test4345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4345");
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest3 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest3);
        org.elasticsearch.action.update.UpdateHelper.Result result5 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult11 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult12 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result5, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, false, throwable10, writeResult11);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest7);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest15 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest16 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest15);
        org.elasticsearch.action.update.UpdateHelper.Result result17 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest19 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest20 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest19);
        java.lang.Throwable throwable22 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult23 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult24 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result17, (org.elasticsearch.action.ActionRequest) bulkShardRequest19, false, throwable22, writeResult23);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple25 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest16, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest19);
        org.elasticsearch.tasks.TaskId taskId26 = null;
        bulkShardRequest19.setParentTask(taskId26);
        boolean boolean28 = bulkItemRequestTuple13.equals((java.lang.Object) taskId26);
        org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestReplicationRequest29 = bulkItemRequestTuple13.v2();
        org.elasticsearch.cluster.routing.ShardRouting shardRouting31 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting33 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting35 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting37 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result39 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest41 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest42 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest41);
        org.elasticsearch.action.update.UpdateHelper.Result result43 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest45 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest46 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest45);
        java.lang.Throwable throwable48 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult49 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult50 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result43, (org.elasticsearch.action.ActionRequest) bulkShardRequest45, false, throwable48, writeResult49);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple51 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest42, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest45);
        org.elasticsearch.tasks.TaskId taskId52 = null;
        bulkShardRequest45.setParentTask(taskId52);
        org.elasticsearch.index.shard.ShardId shardId54 = bulkShardRequest45.shardId();
        bulkShardRequest45.seqNo((long) 0);
        java.lang.Throwable throwable58 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult59 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult60 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result39, (org.elasticsearch.action.ActionRequest) bulkShardRequest45, false, throwable58, writeResult59);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException61 = bulkShardRequest45.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure63 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting37, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException61, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure65 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting35, "update", (java.lang.Throwable) actionRequestValidationException61, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure67 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting33, "_na_", (java.lang.Throwable) actionRequestValidationException61, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure69 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting31, "index.blocks.metadata", (java.lang.Throwable) actionRequestValidationException61, "index.priority");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult70 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult71 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequestReplicationRequest29, true, (java.lang.Throwable) actionRequestValidationException61, writeResult70);
        org.elasticsearch.tasks.TaskId taskId72 = bulkShardRequestReplicationRequest29.getParentTask();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest73 = new org.elasticsearch.action.bulk.BulkItemRequest(32, (org.elasticsearch.action.ActionRequest) bulkShardRequestReplicationRequest29);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str74 = bulkShardRequestReplicationRequest29.getDescription();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(bulkShardRequestReplicationRequest29);
        org.junit.Assert.assertNull(shardId54);
        org.junit.Assert.assertNotNull(actionRequestValidationException61);
        org.junit.Assert.assertNotNull(taskId72);
    }

    @Test
    public void test4346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4346");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure6 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", throwable4, "");
        org.elasticsearch.action.update.UpdateHelper.Result result7 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult11 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult12 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result7, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable10, writeResult11);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure6, (org.elasticsearch.transport.TransportMessage) bulkShardRequest8);
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = bulkShardRequest8.remoteAddress();
        org.elasticsearch.action.support.IndicesOptions indicesOptions15 = bulkShardRequest8.indicesOptions();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException16 = bulkShardRequest8.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure18 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "current version [97] is different than the one provided [1]", (java.lang.Throwable) actionRequestValidationException16, "current version [1] is different than the one provided [0]");
        java.lang.String str19 = shardFailure18.reason;
        org.junit.Assert.assertNull(transportAddress14);
        org.junit.Assert.assertNotNull(indicesOptions15);
        org.junit.Assert.assertNotNull(actionRequestValidationException16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "current version [97] is different than the one provided [1]" + "'", str19, "current version [97] is different than the one provided [1]");
    }

    @Test
    public void test4347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4347");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("current version [52] is different than the one provided [32]");
        java.lang.String str2 = builder1.index();
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "current version [52] is different than the one provided [32]" + "'", str2, "current version [52] is different than the one provided [32]");
    }

    @Test
    public void test4348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4348");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest1 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest1);
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, false, throwable8, writeResult9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.index.VersionType versionType12 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean16 = versionType12.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest2, versionType12);
        boolean boolean21 = versionType12.isVersionConflictForWrites(10L, (long) (byte) 0, false);
        boolean boolean23 = versionType12.validateVersionForReads(10L);
        boolean boolean26 = versionType12.isVersionConflictForReads(100L, (long) 'a');
        long long29 = versionType12.updateVersion((long) (byte) 1, (long) (byte) 10);
        org.elasticsearch.index.VersionType versionType30 = versionType12.versionTypeForReplicationAndRecovery();
        boolean boolean32 = versionType30.validateVersionForReads((long) 32);
        org.elasticsearch.index.VersionType versionType33 = versionType30.versionTypeForReplicationAndRecovery();
        long long36 = versionType33.updateVersion(0L, 35L);
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 10L + "'", long29 == 10L);
        org.junit.Assert.assertNotNull(versionType30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(versionType33);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 35L + "'", long36 == 35L);
    }

    @Test
    public void test4349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4349");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.action.update.UpdateHelper.Result result5 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.action.update.UpdateHelper.Result result9 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult15 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult16 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result9, (org.elasticsearch.action.ActionRequest) bulkShardRequest11, false, throwable14, writeResult15);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest8, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest11);
        java.lang.Throwable throwable19 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult20 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult21 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result5, (org.elasticsearch.action.ActionRequest) bulkShardRequest11, true, throwable19, writeResult20);
        org.elasticsearch.index.shard.ShardId shardId22 = bulkShardRequest11.shardId();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest23 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        org.elasticsearch.common.unit.TimeValue timeValue24 = bulkShardRequest11.timeout();
        bulkShardRequest11.primaryTerm((long) '#');
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest28 = bulkShardRequest11.index("index.version.created");
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, org.elasticsearch.transport.TransportRequest> indexMetaDataFromXContentBuilderTuple29 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, org.elasticsearch.transport.TransportRequest>((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData0, (org.elasticsearch.transport.TransportRequest) bulkShardRequest11);
        boolean boolean30 = bulkShardRequest11.getShouldPersistResult();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(shardId22);
        org.junit.Assert.assertNotNull(timeValue24);
        org.junit.Assert.assertNotNull(bulkShardRequest28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test4350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4350");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters1 = indexMetaData0.requireFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = builder5.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = builder6.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int12 = builder11.numberOfShards();
        java.lang.String[] strArray16 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder19 = builder11.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet17);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder20 = builder6.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet17);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple21 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData3, (java.lang.Iterable<java.lang.String>) strSet17);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap22 = indexMetaData3.getAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder23 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData3);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap24 = indexMetaData3.getAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state25 = indexMetaData3.getState();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder26 = builder2.state(state25);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNull(discoveryNodeFilters1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple21);
        org.junit.Assert.assertNotNull(strImmutableOpenMap22);
        org.junit.Assert.assertNotNull(strImmutableOpenMap24);
        org.junit.Assert.assertTrue("'" + state25 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state25.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertNotNull(builder26);
    }

    @Test
    public void test4351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4351");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder2.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder3.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int9 = builder8.numberOfShards();
        java.lang.String[] strArray13 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder8.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder3.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple18 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData0, (java.lang.Iterable<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap19 = indexMetaData0.getAliases();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData21 = indexMetaData0.mapping("index.version.created");
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters22 = indexMetaData0.requireFilters();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap23 = indexMetaData0.getAliases();
        org.elasticsearch.action.update.UpdateHelper.Result result24 = null;
        org.elasticsearch.action.ActionRequest actionRequest25 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting27 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting29 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting31 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting33 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting35 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result37 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest39 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest40 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest39);
        org.elasticsearch.action.update.UpdateHelper.Result result41 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest43 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest44 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest43);
        java.lang.Throwable throwable46 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult47 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult48 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result41, (org.elasticsearch.action.ActionRequest) bulkShardRequest43, false, throwable46, writeResult47);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple49 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest40, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest43);
        org.elasticsearch.tasks.TaskId taskId50 = null;
        bulkShardRequest43.setParentTask(taskId50);
        org.elasticsearch.index.shard.ShardId shardId52 = bulkShardRequest43.shardId();
        bulkShardRequest43.seqNo((long) 0);
        java.lang.Throwable throwable56 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult57 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult58 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result37, (org.elasticsearch.action.ActionRequest) bulkShardRequest43, false, throwable56, writeResult57);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException59 = bulkShardRequest43.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure61 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting35, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException59, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure63 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting33, "update", (java.lang.Throwable) actionRequestValidationException59, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure65 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting31, "_na_", (java.lang.Throwable) actionRequestValidationException59, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure67 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting29, "_na_", (java.lang.Throwable) actionRequestValidationException59, "index.version.upgraded");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure69 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting27, "index.blocks.metadata", (java.lang.Throwable) actionRequestValidationException59, "update");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult70 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult71 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result24, actionRequest25, true, (java.lang.Throwable) actionRequestValidationException59, writeResult70);
        org.elasticsearch.common.xcontent.ToXContent.Params params72 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.common.collect.Tuple<java.lang.Exception, org.elasticsearch.common.xcontent.ToXContent.Params> exceptionTuple73 = new org.elasticsearch.common.collect.Tuple<java.lang.Exception, org.elasticsearch.common.xcontent.ToXContent.Params>((java.lang.Exception) actionRequestValidationException59, params72);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData>, org.elasticsearch.common.xcontent.ToXContent.Params> strImmutableOpenMapTuple74 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData>, org.elasticsearch.common.xcontent.ToXContent.Params>(strImmutableOpenMap23, params72);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData75 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder76 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData75);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData77 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder78 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData77);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap79 = indexMetaData77.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters80 = indexMetaData77.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder81 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData77);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff82 = indexMetaData75.diff(indexMetaData77);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData>, org.elasticsearch.common.xcontent.ToXContent> strImmutableOpenMapTuple83 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData>, org.elasticsearch.common.xcontent.ToXContent>(strImmutableOpenMap23, (org.elasticsearch.common.xcontent.ToXContent) indexMetaData77);
        int int84 = indexMetaData77.getNumberOfReplicas();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder85 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData77);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder87 = builder85.version((long) 3);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple18);
        org.junit.Assert.assertNotNull(strImmutableOpenMap19);
        org.junit.Assert.assertNull(mappingMetaData21);
        org.junit.Assert.assertNull(discoveryNodeFilters22);
        org.junit.Assert.assertNotNull(strImmutableOpenMap23);
        org.junit.Assert.assertNull(shardId52);
        org.junit.Assert.assertNotNull(actionRequestValidationException59);
        org.junit.Assert.assertNotNull(params72);
        org.junit.Assert.assertNotNull(indexMetaData75);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(indexMetaData77);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap79);
        org.junit.Assert.assertNull(discoveryNodeFilters80);
        org.junit.Assert.assertNotNull(indexMetaDataDiff82);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertNotNull(builder87);
    }

    @Test
    public void test4352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4352");
        org.elasticsearch.index.VersionType versionType0 = org.elasticsearch.index.VersionType.EXTERNAL_GTE;
        boolean boolean3 = versionType0.isVersionConflictForReads((long) 10, (long) (byte) -1);
        byte byte4 = versionType0.getValue();
        org.elasticsearch.index.VersionType versionType5 = versionType0.versionTypeForReplicationAndRecovery();
        byte byte6 = versionType0.getValue();
        long long9 = versionType0.updateVersion((long) 0, (long) (-1));
        org.junit.Assert.assertNotNull(versionType0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + byte4 + "' != '" + (byte) 2 + "'", byte4 == (byte) 2);
        org.junit.Assert.assertNotNull(versionType5);
        org.junit.Assert.assertTrue("'" + byte6 + "' != '" + (byte) 2 + "'", byte6 == (byte) 2);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
    }

    @Test
    public void test4353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4353");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters3 = indexMetaData0.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = builder5.creationDate((long) (byte) 0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = builder5.version((long) 1);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData10 = builder9.build();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData12 = indexMetaData10.mapping("index.shadow_replicas");
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.MappingMetaData> strImmutableOpenMap13 = indexMetaData10.getMappings();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNull(discoveryNodeFilters3);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(indexMetaData10);
        org.junit.Assert.assertNull(mappingMetaData12);
        org.junit.Assert.assertNotNull(strImmutableOpenMap13);
    }

    @Test
    public void test4354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4354");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters3 = indexMetaData0.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = builder5.creationDate((long) (byte) 0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder10 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int11 = builder10.numberOfShards();
        java.lang.String[] strArray15 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet16 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet16, strArray15);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder18 = builder10.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet16);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData20 = builder10.mapping("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder23 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder24 = builder23.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder26 = builder24.numberOfReplicas((int) '#');
        org.elasticsearch.action.ActionRequest actionRequest29 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest30 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest29);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest31 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple32 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest30, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest31);
        boolean boolean33 = bulkShardRequest31.getShouldPersistResult();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder35 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int36 = builder35.numberOfShards();
        java.lang.String[] strArray40 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet41 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet41, strArray40);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder43 = builder35.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet41);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>> streamableTuple44 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>>((org.elasticsearch.common.io.stream.Streamable) bulkShardRequest31, strSet41);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder45 = builder24.putActiveAllocationIds((int) (short) 10, (java.util.Set<java.lang.String>) strSet41);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder46 = builder10.putActiveAllocationIds((int) (byte) 0, (java.util.Set<java.lang.String>) strSet41);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder47 = builder7.putActiveAllocationIds((int) '4', (java.util.Set<java.lang.String>) strSet41);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder49 = builder47.removeAlias("current version [97] is higher than the one provided [100]");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder51 = builder49.version((long) (byte) 10);
        long long52 = builder49.version();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder54 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder55 = builder54.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder57 = builder55.version((long) 1);
        org.elasticsearch.cluster.metadata.IndexMetaData.Custom custom59 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder60 = builder57.putCustom("current version [2] is higher than the one provided [-1]", custom59);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder62 = builder60.numberOfReplicas(52);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData63 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder64 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData63);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap65 = indexMetaData63.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet66 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple67 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData63, indexShardStateSet66);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters68 = indexMetaData63.requireFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state69 = indexMetaData63.getState();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder70 = builder60.state(state69);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder71 = builder49.state(state69);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNull(discoveryNodeFilters3);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNull(mappingMetaData20);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 10L + "'", long52 == 10L);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(indexMetaData63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap65);
        org.junit.Assert.assertNotNull(indexShardStateSet66);
        org.junit.Assert.assertNull(discoveryNodeFilters68);
        org.junit.Assert.assertTrue("'" + state69 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state69.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder71);
    }

    @Test
    public void test4355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4355");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "index.uuid", throwable2, "hi!");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting5 = shardFailure4.routing;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = shardFailure4.routing;
        org.junit.Assert.assertNull(shardRouting5);
        org.junit.Assert.assertNull(shardRouting6);
    }

    @Test
    public void test4356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4356");
        org.elasticsearch.action.ActionRequest actionRequest4 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest4);
        org.elasticsearch.action.ActionRequest actionRequest8 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest8);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest10 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest9, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest10);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest10);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest10);
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        bulkShardRequest10.remoteAddress(transportAddress14);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest16 = new org.elasticsearch.action.bulk.BulkItemRequest((int) ' ', (org.elasticsearch.action.ActionRequest) bulkShardRequest10);
        org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestReplicationRequest17 = null;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple18 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest16, bulkShardRequestReplicationRequest17);
        org.elasticsearch.action.update.UpdateHelper.Result result20 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result22 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest24 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest25 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest24);
        org.elasticsearch.action.update.UpdateHelper.Result result26 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest28 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest29 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest28);
        java.lang.Throwable throwable31 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult32 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult33 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result26, (org.elasticsearch.action.ActionRequest) bulkShardRequest28, false, throwable31, writeResult32);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple34 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest25, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest28);
        org.elasticsearch.tasks.TaskId taskId35 = null;
        bulkShardRequest28.setParentTask(taskId35);
        java.lang.Throwable throwable38 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult39 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult40 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result22, (org.elasticsearch.action.ActionRequest) bulkShardRequest28, true, throwable38, writeResult39);
        org.elasticsearch.action.support.IndicesOptions indicesOptions41 = bulkShardRequest28.indicesOptions();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest42 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest28);
        java.lang.Throwable throwable44 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult45 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult46 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result20, (org.elasticsearch.action.ActionRequest) bulkShardRequest28, true, throwable44, writeResult45);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest47 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest28);
        org.elasticsearch.action.update.UpdateHelper.Result result48 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest50 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest51 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest50);
        org.elasticsearch.action.update.UpdateHelper.Result result52 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest54 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest55 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest54);
        java.lang.Throwable throwable57 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult58 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult59 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result52, (org.elasticsearch.action.ActionRequest) bulkShardRequest54, false, throwable57, writeResult58);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple60 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest51, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest54);
        org.elasticsearch.tasks.TaskId taskId61 = null;
        bulkShardRequest54.setParentTask(taskId61);
        java.lang.Throwable throwable64 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult65 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult66 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result48, (org.elasticsearch.action.ActionRequest) bulkShardRequest54, true, throwable64, writeResult65);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple67 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest47, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest54);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple68 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest16, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest54);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest69 = new org.elasticsearch.action.bulk.BulkItemRequest(0, (org.elasticsearch.action.ActionRequest) bulkShardRequest54);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest70 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest54);
        long long71 = bulkShardRequest54.seqNo();
        org.elasticsearch.common.unit.TimeValue timeValue72 = bulkShardRequest54.timeout();
        org.junit.Assert.assertNotNull(indicesOptions41);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 0L + "'", long71 == 0L);
        org.junit.Assert.assertNotNull(timeValue72);
    }

    @Test
    public void test4357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4357");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.Version version6 = indexMetaData0.getUpgradedVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters8 = indexMetaData0.excludeFilters();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNotNull(version6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNull(discoveryNodeFilters8);
    }

    @Test
    public void test4358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4358");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters3 = indexMetaData0.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.apache.lucene.util.Version version5 = indexMetaData0.getMinimumCompatibleVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData6 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData6);
        org.elasticsearch.Version version8 = indexMetaData6.getCreationVersion();
        long long9 = indexMetaData6.getCreationDate();
        long long10 = indexMetaData6.getCreationDate();
        java.util.Set<java.lang.String> strSet12 = null; // flaky: indexMetaData6.activeAllocationIds((int) (byte) 3);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData14 = indexMetaData6.mapping("hi!");
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff15 = indexMetaData0.diff(indexMetaData6);
        int int16 = indexMetaData0.getNumberOfReplicas();
        org.elasticsearch.index.Index index17 = indexMetaData0.getMergeSourceIndex();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder18 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder20 = builder18.creationDate(98L);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder22 = builder18.numberOfShards((int) (byte) 10);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNull(discoveryNodeFilters3);
        org.junit.Assert.assertNull(version5);
        org.junit.Assert.assertNotNull(indexMetaData6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNull(strSet12);
        org.junit.Assert.assertNull(mappingMetaData14);
        org.junit.Assert.assertNotNull(indexMetaDataDiff15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNull(index17);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
    }

    @Test
    public void test4359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4359");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData7 = indexMetaData0.mapping("index.");
        int int8 = indexMetaData0.getNumberOfShards();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters9 = indexMetaData0.includeFilters();
        int int10 = indexMetaData0.getNumberOfReplicas();
        long long11 = indexMetaData0.getVersion();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.IndexMetaData.Custom> strImmutableOpenMap12 = indexMetaData0.getCustoms();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData14 = indexMetaData0.mappingOrDefault("update");
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters15 = indexMetaData0.includeFilters();
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap16 = indexMetaData0.getActiveAllocationIds();
        org.apache.lucene.util.Version version17 = indexMetaData0.getMinimumCompatibleVersion();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNull(mappingMetaData7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNull(discoveryNodeFilters9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertNotNull(strImmutableOpenMap12);
        org.junit.Assert.assertNull(mappingMetaData14);
        org.junit.Assert.assertNull(discoveryNodeFilters15);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap16);
        org.junit.Assert.assertNull(version17);
    }

    @Test
    public void test4360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4360");
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result4 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest6 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest6);
        org.elasticsearch.action.update.UpdateHelper.Result result8 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest10 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest11 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest10);
        java.lang.Throwable throwable13 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult14 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult15 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result8, (org.elasticsearch.action.ActionRequest) bulkShardRequest10, false, throwable13, writeResult14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple16 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest7, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest10);
        org.elasticsearch.tasks.TaskId taskId17 = null;
        bulkShardRequest10.setParentTask(taskId17);
        java.lang.Throwable throwable20 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult21 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult22 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result4, (org.elasticsearch.action.ActionRequest) bulkShardRequest10, true, throwable20, writeResult21);
        org.elasticsearch.action.support.IndicesOptions indicesOptions23 = bulkShardRequest10.indicesOptions();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest24 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest10);
        java.lang.Throwable throwable26 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult27 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult28 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest10, true, throwable26, writeResult27);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest29 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest10);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel30 = bulkShardRequest10.consistencyLevel();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest32 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest33 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest32);
        org.elasticsearch.action.update.UpdateHelper.Result result34 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest36 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest37 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest36);
        java.lang.Throwable throwable39 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult40 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult41 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result34, (org.elasticsearch.action.ActionRequest) bulkShardRequest36, false, throwable39, writeResult40);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple42 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest33, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest36);
        org.elasticsearch.action.ActionRequest actionRequest44 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest45 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest44);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest46 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple47 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest45, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest46);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple48 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest33, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest46);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest49 = bulkItemRequestTuple48.v1();
        org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestReplicationRequest50 = bulkItemRequestTuple48.v2();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel51 = bulkShardRequestReplicationRequest50.consistencyLevel();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest52 = bulkShardRequest10.consistencyLevel(writeConsistencyLevel51);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest53 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest10);
        org.junit.Assert.assertNotNull(indicesOptions23);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel30 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel30.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(bulkItemRequest49);
        org.junit.Assert.assertNotNull(bulkShardRequestReplicationRequest50);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel51 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel51.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(bulkShardRequest52);
    }

    @Test
    public void test4361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4361");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting1 = null;
        java.lang.Throwable throwable3 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure5 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting1, "", throwable3, "");
        org.elasticsearch.action.update.UpdateHelper.Result result6 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult10 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult11 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result6, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, false, throwable9, writeResult10);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure5, (org.elasticsearch.transport.TransportMessage) bulkShardRequest7);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest14 = bulkShardRequest7.index("index.version.created");
        long long15 = bulkShardRequest7.seqNo();
        long long16 = bulkShardRequest7.primaryTerm();
        org.elasticsearch.cluster.routing.ShardRouting shardRouting18 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting20 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting22 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting24 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting26 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting28 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting30 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result32 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest34 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest35 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest34);
        org.elasticsearch.action.update.UpdateHelper.Result result36 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest38 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest39 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest38);
        java.lang.Throwable throwable41 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult42 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult43 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result36, (org.elasticsearch.action.ActionRequest) bulkShardRequest38, false, throwable41, writeResult42);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple44 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest35, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest38);
        org.elasticsearch.tasks.TaskId taskId45 = null;
        bulkShardRequest38.setParentTask(taskId45);
        org.elasticsearch.index.shard.ShardId shardId47 = bulkShardRequest38.shardId();
        bulkShardRequest38.seqNo((long) 0);
        java.lang.Throwable throwable51 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult52 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult53 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result32, (org.elasticsearch.action.ActionRequest) bulkShardRequest38, false, throwable51, writeResult52);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException54 = bulkShardRequest38.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure56 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting30, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException54, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure58 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting28, "update", (java.lang.Throwable) actionRequestValidationException54, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure60 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting26, "_na_", (java.lang.Throwable) actionRequestValidationException54, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure62 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting24, "_na_", (java.lang.Throwable) actionRequestValidationException54, "index.version.upgraded");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure64 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting22, "index.shadow_replicas", (java.lang.Throwable) actionRequestValidationException54, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure66 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting20, "index.blocks.write", (java.lang.Throwable) actionRequestValidationException54, "primary_terms");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure68 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting18, "current version [2] is higher than the one provided [-1]", (java.lang.Throwable) actionRequestValidationException54, "");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult69 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult70 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, true, (java.lang.Throwable) actionRequestValidationException54, writeResult69);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData71 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder72 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData71);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap73 = indexMetaData71.getActiveAllocationIds();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder74 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData71);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters75 = indexMetaData71.requireFilters();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData77 = indexMetaData71.mappingOrDefault("current version [97] is different than the one provided [35]");
        org.elasticsearch.index.Index index78 = indexMetaData71.getMergeSourceIndex();
        org.elasticsearch.Version version79 = indexMetaData71.getUpgradedVersion();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult, org.elasticsearch.common.io.stream.Writeable> updateResultTuple80 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult, org.elasticsearch.common.io.stream.Writeable>(updateResult70, (org.elasticsearch.common.io.stream.Writeable) indexMetaData71);
        org.junit.Assert.assertNotNull(bulkShardRequest14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNull(shardId47);
        org.junit.Assert.assertNotNull(actionRequestValidationException54);
        org.junit.Assert.assertNotNull(indexMetaData71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNull(discoveryNodeFilters75);
        org.junit.Assert.assertNull(mappingMetaData77);
        org.junit.Assert.assertNull(index78);
        org.junit.Assert.assertNotNull(version79);
    }

    @Test
    public void test4362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4362");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "current version [97] is higher than the one provided [10]", throwable2, "hi!");
    }

    @Test
    public void test4363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4363");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData1 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData1);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap3 = indexMetaData1.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet4 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple5 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData1, indexShardStateSet4);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters6 = indexMetaData1.includeFilters();
        org.elasticsearch.Version version7 = indexMetaData1.getUpgradedVersion();
        org.elasticsearch.action.ActionRequest actionRequest9 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest10 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest9);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest10, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest11);
        boolean boolean13 = bulkShardRequest11.getShouldPersistResult();
        org.elasticsearch.action.update.UpdateHelper.Result result14 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest16 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest17 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest16);
        org.elasticsearch.action.update.UpdateHelper.Result result18 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest20 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest20);
        java.lang.Throwable throwable23 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult24 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult25 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result18, (org.elasticsearch.action.ActionRequest) bulkShardRequest20, false, throwable23, writeResult24);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple26 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest17, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest20);
        java.lang.Throwable throwable28 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult29 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult30 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result14, (org.elasticsearch.action.ActionRequest) bulkShardRequest20, true, throwable28, writeResult29);
        org.elasticsearch.index.shard.ShardId shardId31 = bulkShardRequest20.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue32 = bulkShardRequest20.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest33 = bulkShardRequest11.timeout(timeValue32);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.Diffable<org.elasticsearch.cluster.metadata.IndexMetaData>, org.elasticsearch.action.ActionRequest<org.elasticsearch.action.bulk.BulkShardRequest>> indexMetaDataDiffableTuple34 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.cluster.Diffable<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData1, (org.elasticsearch.action.ActionRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest33);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest35 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue36 = bulkShardRequest35.timeout();
        java.lang.String str37 = bulkShardRequest35.index();
        org.elasticsearch.index.shard.ShardId shardId38 = bulkShardRequest35.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel39 = bulkShardRequest35.consistencyLevel();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest40 = bulkShardRequest33.consistencyLevel(writeConsistencyLevel39);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest41 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest33);
        org.junit.Assert.assertNotNull(indexMetaData1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap3);
        org.junit.Assert.assertNotNull(indexShardStateSet4);
        org.junit.Assert.assertNull(discoveryNodeFilters6);
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(shardId31);
        org.junit.Assert.assertNotNull(timeValue32);
        org.junit.Assert.assertNotNull(bulkShardRequest33);
        org.junit.Assert.assertNotNull(indexMetaDataDiffableTuple34);
        org.junit.Assert.assertNotNull(timeValue36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(shardId38);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel39 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel39.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(bulkShardRequest40);
    }

    @Test
    public void test4364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4364");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult7 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult8 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest4, false, throwable6, writeResult7);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest4, writeResult9);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest12 = bulkShardRequest4.consistencyLevel(writeConsistencyLevel11);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult13 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult14 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest12, writeResult13);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result18 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest20 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest20);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel22 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest23 = bulkShardRequest20.consistencyLevel(writeConsistencyLevel22);
        org.elasticsearch.action.update.UpdateHelper.Result result25 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest26 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue27 = bulkShardRequest26.timeout();
        java.lang.String str28 = bulkShardRequest26.index();
        org.elasticsearch.common.unit.TimeValue timeValue29 = bulkShardRequest26.timeout();
        org.elasticsearch.cluster.routing.ShardRouting shardRouting31 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting33 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result35 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest37 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest38 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest37);
        org.elasticsearch.action.update.UpdateHelper.Result result39 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest41 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest42 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest41);
        java.lang.Throwable throwable44 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult45 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult46 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result39, (org.elasticsearch.action.ActionRequest) bulkShardRequest41, false, throwable44, writeResult45);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple47 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest38, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest41);
        org.elasticsearch.tasks.TaskId taskId48 = null;
        bulkShardRequest41.setParentTask(taskId48);
        org.elasticsearch.index.shard.ShardId shardId50 = bulkShardRequest41.shardId();
        bulkShardRequest41.seqNo((long) 0);
        java.lang.Throwable throwable54 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult55 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult56 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result35, (org.elasticsearch.action.ActionRequest) bulkShardRequest41, false, throwable54, writeResult55);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException57 = bulkShardRequest41.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure59 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting33, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException57, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure61 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting31, "update", (java.lang.Throwable) actionRequestValidationException57, "index.version.created_string");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult62 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult63 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result25, (org.elasticsearch.action.ActionRequest) bulkShardRequest26, false, (java.lang.Throwable) actionRequestValidationException57, writeResult62);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult64 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult65 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result18, (org.elasticsearch.action.ActionRequest) bulkShardRequest20, true, (java.lang.Throwable) actionRequestValidationException57, writeResult64);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure67 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting16, "index.creation_date", (java.lang.Throwable) actionRequestValidationException57, "index.version.upgraded_string");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult68 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult69 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest12, false, (java.lang.Throwable) actionRequestValidationException57, writeResult68);
        org.junit.Assert.assertNotNull(bulkShardRequest12);
        org.junit.Assert.assertNotNull(bulkShardRequest23);
        org.junit.Assert.assertNotNull(timeValue27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(timeValue29);
        org.junit.Assert.assertNull(shardId50);
        org.junit.Assert.assertNotNull(actionRequestValidationException57);
    }

    @Test
    public void test4365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4365");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result4 = null;
        org.elasticsearch.action.ActionRequest actionRequest6 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest6);
        org.elasticsearch.action.ActionRequest actionRequest10 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest11 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest10);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest12 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest11, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest12);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest12);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple15 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest7, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest12);
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = null;
        bulkShardRequest12.remoteAddress(transportAddress16);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting19 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting21 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting23 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting25 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting27 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result29 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest31 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest32 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest31);
        org.elasticsearch.action.update.UpdateHelper.Result result33 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest35 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest36 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest35);
        java.lang.Throwable throwable38 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult39 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult40 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result33, (org.elasticsearch.action.ActionRequest) bulkShardRequest35, false, throwable38, writeResult39);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple41 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest32, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest35);
        org.elasticsearch.tasks.TaskId taskId42 = null;
        bulkShardRequest35.setParentTask(taskId42);
        org.elasticsearch.index.shard.ShardId shardId44 = bulkShardRequest35.shardId();
        bulkShardRequest35.seqNo((long) 0);
        java.lang.Throwable throwable48 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult49 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult50 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result29, (org.elasticsearch.action.ActionRequest) bulkShardRequest35, false, throwable48, writeResult49);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException51 = bulkShardRequest35.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure53 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting27, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException51, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure55 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting25, "update", (java.lang.Throwable) actionRequestValidationException51, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure57 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting23, "_na_", (java.lang.Throwable) actionRequestValidationException51, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure59 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting21, "_na_", (java.lang.Throwable) actionRequestValidationException51, "index.version.upgraded");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure61 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting19, "index.shadow_replicas", (java.lang.Throwable) actionRequestValidationException51, "");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult62 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult63 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result4, (org.elasticsearch.action.ActionRequest) bulkShardRequest12, false, (java.lang.Throwable) actionRequestValidationException51, writeResult62);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException64 = bulkShardRequest12.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure66 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "current version [32] is higher or equal to the one provided [1]", (java.lang.Throwable) actionRequestValidationException64, "current version [97] is different than the one provided [35]");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure68 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "current version [10] is different than the one provided [-1]", (java.lang.Throwable) actionRequestValidationException64, "current version [100] is higher than the one provided [-1]");
        org.junit.Assert.assertNull(shardId44);
        org.junit.Assert.assertNotNull(actionRequestValidationException51);
        org.junit.Assert.assertNotNull(actionRequestValidationException64);
    }

    @Test
    public void test4366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4366");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("_na_");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder1.removeAlias("current version [97] is different than the one provided [35]");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = builder5.version((long) (short) 100);
        org.elasticsearch.cluster.metadata.IndexMetaData.State state8 = org.elasticsearch.cluster.metadata.IndexMetaData.State.CLOSE;
        byte byte9 = state8.id();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder10 = builder5.state(state8);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = builder1.state(state8);
        org.elasticsearch.cluster.metadata.IndexMetaData.Custom custom13 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder14 = builder1.putCustom("", custom13);
        org.elasticsearch.cluster.metadata.IndexMetaData.State state15 = org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting17 = null;
        java.lang.Throwable throwable19 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure21 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting17, "", throwable19, "");
        org.elasticsearch.action.update.UpdateHelper.Result result22 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest23 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable25 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult26 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult27 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result22, (org.elasticsearch.action.ActionRequest) bulkShardRequest23, false, throwable25, writeResult26);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple28 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure21, (org.elasticsearch.transport.TransportMessage) bulkShardRequest23);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest30 = bulkShardRequest23.index("hi!");
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest31 = new org.elasticsearch.action.bulk.BulkItemRequest((int) '#', (org.elasticsearch.action.ActionRequest) bulkShardRequest30);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest32 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.String str33 = bulkShardRequest32.index();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple34 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest31, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest32);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest35 = bulkItemRequestTuple34.v1();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest37 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest38 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest37);
        org.elasticsearch.action.update.UpdateHelper.Result result39 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest41 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest42 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest41);
        java.lang.Throwable throwable44 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult45 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult46 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result39, (org.elasticsearch.action.ActionRequest) bulkShardRequest41, false, throwable44, writeResult45);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple47 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest38, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest41);
        org.elasticsearch.action.ActionRequest actionRequest49 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest50 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest49);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest51 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple52 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest50, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest51);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple53 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest38, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest51);
        int int54 = bulkItemRequest38.id();
        org.elasticsearch.action.update.UpdateHelper.Result result55 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest57 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest58 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest57);
        org.elasticsearch.action.update.UpdateHelper.Result result59 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest61 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest62 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest61);
        java.lang.Throwable throwable64 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult65 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult66 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result59, (org.elasticsearch.action.ActionRequest) bulkShardRequest61, false, throwable64, writeResult65);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple67 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest58, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest61);
        java.lang.Throwable throwable69 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult70 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult71 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result55, (org.elasticsearch.action.ActionRequest) bulkShardRequest61, true, throwable69, writeResult70);
        org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestReplicationRequest72 = updateResult71.request();
        org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestReplicationRequest73 = updateResult71.request();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple74 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest38, bulkShardRequestReplicationRequest73);
        boolean boolean75 = bulkItemRequestTuple34.equals((java.lang.Object) bulkItemRequestTuple74);
        org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestReplicationRequest76 = bulkItemRequestTuple34.v2();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData.State, org.elasticsearch.action.ActionRequest<org.elasticsearch.action.bulk.BulkShardRequest>> stateTuple77 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData.State, org.elasticsearch.action.ActionRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(state15, (org.elasticsearch.action.ActionRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequestReplicationRequest76);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder78 = builder14.state(state15);
        // The following exception was thrown during execution in test generation
        try {
            long long80 = builder78.primaryTerm((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: you must set the number of shards before setting/reading primary terms");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + state8 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.CLOSE + "'", state8.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.CLOSE));
        org.junit.Assert.assertTrue("'" + byte9 + "' != '" + (byte) 1 + "'", byte9 == (byte) 1);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertTrue("'" + state15 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state15.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertNotNull(bulkShardRequest30);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(bulkItemRequest35);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(bulkShardRequestReplicationRequest72);
        org.junit.Assert.assertNotNull(bulkShardRequestReplicationRequest73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(bulkShardRequestReplicationRequest76);
        org.junit.Assert.assertNotNull(builder78);
    }

    @Test
    public void test4367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4367");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.Version version6 = indexMetaData0.getUpgradedVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.IndexMetaData.Custom> strImmutableOpenMap8 = indexMetaData0.getCustoms();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters9 = indexMetaData0.excludeFilters();
        int int10 = indexMetaData0.getTotalNumberOfShards();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.Version version12 = indexMetaData0.getUpgradedVersion();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNotNull(version6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(strImmutableOpenMap8);
        org.junit.Assert.assertNull(discoveryNodeFilters9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(version12);
    }

    @Test
    public void test4368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4368");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.ActionRequest actionRequest3 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest3);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple6 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.action.ActionRequest actionRequest9 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest10 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest9);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest10, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest11);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest13 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest11);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest15 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 100, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        org.elasticsearch.action.ActionRequest actionRequest18 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest19 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest18);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest20 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple21 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest19, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest20);
        boolean boolean22 = bulkShardRequest20.getShouldPersistResult();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest23 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest20);
        org.elasticsearch.action.update.UpdateHelper.Result result24 = null;
        org.elasticsearch.action.ActionRequest actionRequest27 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest28 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest27);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest29 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple30 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest28, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest29);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest31 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest29);
        bulkShardRequest29.primaryTerm((long) 1);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult34 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult35 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result24, (org.elasticsearch.action.ActionRequest) bulkShardRequest29, writeResult34);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple36 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest23, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest29);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple37 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest15, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest29);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting39 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting41 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting43 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting45 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting47 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result49 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest51 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest52 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest51);
        org.elasticsearch.action.update.UpdateHelper.Result result53 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest55 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest56 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest55);
        java.lang.Throwable throwable58 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult59 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult60 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result53, (org.elasticsearch.action.ActionRequest) bulkShardRequest55, false, throwable58, writeResult59);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple61 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest52, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest55);
        org.elasticsearch.tasks.TaskId taskId62 = null;
        bulkShardRequest55.setParentTask(taskId62);
        org.elasticsearch.index.shard.ShardId shardId64 = bulkShardRequest55.shardId();
        bulkShardRequest55.seqNo((long) 0);
        java.lang.Throwable throwable68 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult69 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult70 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result49, (org.elasticsearch.action.ActionRequest) bulkShardRequest55, false, throwable68, writeResult69);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException71 = bulkShardRequest55.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure73 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting47, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException71, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure75 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting45, "update", (java.lang.Throwable) actionRequestValidationException71, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure77 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting43, "index.priority", (java.lang.Throwable) actionRequestValidationException71, "index.uuid");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure79 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting41, "index.shared_filesystem", (java.lang.Throwable) actionRequestValidationException71, "primary_terms");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure81 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting39, "current version [-1] is higher than the one provided [0]", (java.lang.Throwable) actionRequestValidationException71, "");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult82 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult83 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest29, false, (java.lang.Throwable) actionRequestValidationException71, writeResult82);
        org.elasticsearch.action.ActionRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestActionRequest84 = updateResult83.request();
        boolean boolean85 = updateResult83.retry;
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(shardId64);
        org.junit.Assert.assertNotNull(actionRequestValidationException71);
        org.junit.Assert.assertNotNull(bulkShardRequestActionRequest84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test4369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4369");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.ActionRequest actionRequest1 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting3 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting5 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result7 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result9 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        org.elasticsearch.action.update.UpdateHelper.Result result13 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest15 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest16 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest15);
        java.lang.Throwable throwable18 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult19 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult20 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result13, (org.elasticsearch.action.ActionRequest) bulkShardRequest15, false, throwable18, writeResult19);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple21 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest12, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest15);
        org.elasticsearch.tasks.TaskId taskId22 = null;
        bulkShardRequest15.setParentTask(taskId22);
        java.lang.Throwable throwable25 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult26 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult27 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result9, (org.elasticsearch.action.ActionRequest) bulkShardRequest15, true, throwable25, writeResult26);
        org.elasticsearch.action.support.IndicesOptions indicesOptions28 = bulkShardRequest15.indicesOptions();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest29 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest15);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting31 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result33 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting35 = null;
        java.lang.Throwable throwable37 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure39 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting35, "", throwable37, "");
        org.elasticsearch.action.update.UpdateHelper.Result result40 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest41 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable43 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult44 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult45 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result40, (org.elasticsearch.action.ActionRequest) bulkShardRequest41, false, throwable43, writeResult44);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple46 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure39, (org.elasticsearch.transport.TransportMessage) bulkShardRequest41);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest48 = bulkShardRequest41.index("index.version.created");
        org.elasticsearch.common.transport.TransportAddress transportAddress49 = bulkShardRequest41.remoteAddress();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest50 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest41);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting52 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result54 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest56 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest57 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest56);
        org.elasticsearch.action.update.UpdateHelper.Result result58 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest60 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest61 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest60);
        java.lang.Throwable throwable63 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult64 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult65 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result58, (org.elasticsearch.action.ActionRequest) bulkShardRequest60, false, throwable63, writeResult64);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple66 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest57, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest60);
        org.elasticsearch.tasks.TaskId taskId67 = null;
        bulkShardRequest60.setParentTask(taskId67);
        org.elasticsearch.index.shard.ShardId shardId69 = bulkShardRequest60.shardId();
        bulkShardRequest60.seqNo((long) 0);
        java.lang.Throwable throwable73 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult74 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult75 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result54, (org.elasticsearch.action.ActionRequest) bulkShardRequest60, false, throwable73, writeResult74);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException76 = bulkShardRequest60.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure78 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting52, "index.version.upgraded", (java.lang.Throwable) actionRequestValidationException76, "index.blocks.write");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult79 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult80 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result33, (org.elasticsearch.action.ActionRequest) bulkShardRequest41, false, (java.lang.Throwable) actionRequestValidationException76, writeResult79);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure82 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting31, "indices:data/write/bulk[s]", (java.lang.Throwable) actionRequestValidationException76, "hi!");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult83 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult84 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result7, (org.elasticsearch.action.ActionRequest) bulkShardRequest15, false, (java.lang.Throwable) actionRequestValidationException76, writeResult83);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure86 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting5, "index.version.created", (java.lang.Throwable) actionRequestValidationException76, "index.shared_filesystem");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure88 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting3, "current version [-1] is higher than the one provided [0]", (java.lang.Throwable) actionRequestValidationException76, "index.version.upgraded");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult89 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult90 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, actionRequest1, false, (java.lang.Throwable) actionRequestValidationException76, writeResult89);
        boolean boolean91 = updateResult90.failure();
        org.junit.Assert.assertNotNull(indicesOptions28);
        org.junit.Assert.assertNotNull(bulkShardRequest48);
        org.junit.Assert.assertNull(transportAddress49);
        org.junit.Assert.assertNull(shardId69);
        org.junit.Assert.assertNotNull(actionRequestValidationException76);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test4370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4370");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest3 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest3);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest6 = bulkShardRequest3.consistencyLevel(writeConsistencyLevel5);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest3);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = bulkShardRequest3.index("state-");
        long long10 = bulkShardRequest3.seqNo();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest11 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 100, (org.elasticsearch.action.ActionRequest) bulkShardRequest3);
        org.elasticsearch.action.ActionRequest actionRequest12 = bulkItemRequest11.request();
        org.junit.Assert.assertNotNull(bulkShardRequest6);
        org.junit.Assert.assertNotNull(bulkShardRequest9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(actionRequest12);
    }

    @Test
    public void test4371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4371");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters1 = indexMetaData0.requireFilters();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData3 = indexMetaData0.mappingOrDefault("index.auto_expand_replicas");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = builder4.creationDate((long) (byte) 0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = builder4.creationDate((long) (short) 1);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData9 = builder4.build();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder10 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData9);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData9);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder12 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData9);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap13 = indexMetaData9.getActiveAllocationIds();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNull(discoveryNodeFilters1);
        org.junit.Assert.assertNull(mappingMetaData3);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(indexMetaData9);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap13);
    }

    @Test
    public void test4372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4372");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.ActionRequest actionRequest5 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest5);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple8 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest6, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest7);
        boolean boolean9 = bulkShardRequest7.getShouldPersistResult();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int12 = builder11.numberOfShards();
        java.lang.String[] strArray16 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder19 = builder11.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet17);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>> streamableTuple20 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>>((org.elasticsearch.common.io.stream.Streamable) bulkShardRequest7, strSet17);
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest22 = bulkShardRequest7.setShardId(shardId21);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest23 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest24 = new org.elasticsearch.action.bulk.BulkItemRequest((int) '#', (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest25 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.common.transport.TransportAddress transportAddress26 = null;
        bulkShardRequest7.remoteAddress(transportAddress26);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult28 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult29 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, writeResult28);
        org.elasticsearch.tasks.TaskId taskId30 = bulkShardRequest7.getParentTask();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(bulkShardRequest22);
        org.junit.Assert.assertNotNull(taskId30);
    }

    @Test
    public void test4373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4373");
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest3 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.String str4 = bulkShardRequest3.index();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult5 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult6 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest3, writeResult5);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult7 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult8 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest3, writeResult7);
        bulkShardRequest3.setParentTask("indices:data/write/bulk[s]", (long) ' ');
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = null;
        bulkShardRequest3.remoteAddress(transportAddress12);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 2, (org.elasticsearch.action.ActionRequest) bulkShardRequest3);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String[] strArray15 = bulkShardRequest3.indices();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test4374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4374");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder2.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder3.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int9 = builder8.numberOfShards();
        java.lang.String[] strArray13 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder8.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder3.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple18 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData0, (java.lang.Iterable<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap19 = indexMetaData0.getAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder20 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        java.util.Set<java.lang.String> strSet22 = null; // flaky: indexMetaData0.activeAllocationIds((int) (short) 1);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData23 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder25 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder26 = builder25.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder28 = builder26.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder31 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int32 = builder31.numberOfShards();
        java.lang.String[] strArray36 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet37 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet37, strArray36);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder39 = builder31.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet37);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder40 = builder26.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet37);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple41 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData23, (java.lang.Iterable<java.lang.String>) strSet37);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap42 = indexMetaData23.getAliases();
        int int43 = indexMetaData23.getNumberOfShards();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters44 = indexMetaData23.excludeFilters();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap45 = indexMetaData23.getAliases();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters46 = indexMetaData23.excludeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder47 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData23);
        org.elasticsearch.common.settings.Settings settings48 = indexMetaData23.getSettings();
        org.elasticsearch.index.Index index49 = indexMetaData23.getMergeSourceIndex();
        long long50 = indexMetaData23.getCreationDate();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff51 = indexMetaData0.diff(indexMetaData23);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder52 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData53 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder54 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData53);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap55 = indexMetaData53.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet56 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple57 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData53, indexShardStateSet56);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters58 = indexMetaData53.includeFilters();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest60 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest61 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest60);
        org.elasticsearch.action.update.UpdateHelper.Result result62 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest64 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest65 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest64);
        java.lang.Throwable throwable67 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult68 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult69 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result62, (org.elasticsearch.action.ActionRequest) bulkShardRequest64, false, throwable67, writeResult68);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple70 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest61, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest64);
        org.elasticsearch.index.VersionType versionType71 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean75 = versionType71.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple76 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest61, versionType71);
        boolean boolean80 = versionType71.isVersionConflictForWrites((long) 0, (long) (short) 0, false);
        boolean boolean81 = indexMetaData53.equals((java.lang.Object) boolean80);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters82 = indexMetaData53.getInitialRecoveryFilters();
        java.lang.String str83 = indexMetaData53.getIndexUUID();
        java.util.Set<java.lang.String> strSet85 = null; // flaky: indexMetaData53.activeAllocationIds((int) (byte) -1);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder86 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData53);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff87 = indexMetaData0.diff(indexMetaData53);
        java.lang.String str88 = indexMetaData53.getIndexUUID();
        org.apache.lucene.util.Version version89 = indexMetaData53.getMinimumCompatibleVersion();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple18);
        org.junit.Assert.assertNotNull(strImmutableOpenMap19);
        org.junit.Assert.assertNull(strSet22);
        org.junit.Assert.assertNotNull(indexMetaData23);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple41);
        org.junit.Assert.assertNotNull(strImmutableOpenMap42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNull(discoveryNodeFilters44);
        org.junit.Assert.assertNotNull(strImmutableOpenMap45);
        org.junit.Assert.assertNull(discoveryNodeFilters46);
        org.junit.Assert.assertNotNull(settings48);
        org.junit.Assert.assertNull(index49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-1L) + "'", long50 == (-1L));
        org.junit.Assert.assertNotNull(indexMetaDataDiff51);
        org.junit.Assert.assertNotNull(indexMetaData53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap55);
        org.junit.Assert.assertNotNull(indexShardStateSet56);
        org.junit.Assert.assertNull(discoveryNodeFilters58);
        org.junit.Assert.assertNotNull(versionType71);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNull(discoveryNodeFilters82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "_na_" + "'", str83, "_na_");
        org.junit.Assert.assertNull(strSet85);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(indexMetaDataDiff87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "_na_" + "'", str88, "_na_");
        org.junit.Assert.assertNull(version89);
    }

    @Test
    public void test4375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4375");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.Version version2 = indexMetaData0.getCreationVersion();
        long long3 = indexMetaData0.getCreationDate();
        long long4 = indexMetaData0.getCreationDate();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state5 = indexMetaData0.getState();
        int int6 = indexMetaData0.getNumberOfReplicas();
        org.elasticsearch.common.io.stream.StreamInput streamInput7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff8 = indexMetaData0.readDiffFrom(streamInput7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(version2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertTrue("'" + state5 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state5.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test4376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4376");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder1.numberOfReplicas((int) '4');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder1.numberOfShards(10);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = builder1.version((long) (short) 1);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
    }

    @Test
    public void test4377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4377");
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.ActionRequest actionRequest3 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest3);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple6 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.common.transport.TransportAddress transportAddress7 = null;
        bulkShardRequest5.remoteAddress(transportAddress7);
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult11 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult12 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, false, throwable10, writeResult11);
        org.elasticsearch.action.update.UpdateResponse updateResponse13 = updateResult12.noopResult;
        org.elasticsearch.action.ActionRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestActionRequest14 = updateResult12.request();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest15 = new org.elasticsearch.action.bulk.BulkItemRequest(0, (org.elasticsearch.action.ActionRequest) bulkShardRequestActionRequest14);
        org.elasticsearch.action.update.UpdateHelper.Result result18 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest20 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest20);
        java.lang.Throwable throwable23 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult24 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult25 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result18, (org.elasticsearch.action.ActionRequest) bulkShardRequest20, false, throwable23, writeResult24);
        org.elasticsearch.action.update.UpdateHelper.Result result26 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest28 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest29 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest28);
        org.elasticsearch.action.update.UpdateHelper.Result result30 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest32 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest33 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest32);
        java.lang.Throwable throwable35 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult36 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult37 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result30, (org.elasticsearch.action.ActionRequest) bulkShardRequest32, false, throwable35, writeResult36);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple38 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest29, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest32);
        java.lang.Throwable throwable40 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult41 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult42 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result26, (org.elasticsearch.action.ActionRequest) bulkShardRequest32, true, throwable40, writeResult41);
        org.elasticsearch.index.shard.ShardId shardId43 = bulkShardRequest32.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue44 = bulkShardRequest32.timeout();
        org.elasticsearch.tasks.TaskId taskId45 = bulkShardRequest32.getParentTask();
        bulkShardRequest20.setParentTask(taskId45);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest47 = new org.elasticsearch.action.bulk.BulkItemRequest((int) '#', (org.elasticsearch.action.ActionRequest) bulkShardRequest20);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest48 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest20);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting49 = null;
        java.lang.Throwable throwable51 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure53 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting49, "", throwable51, "");
        org.elasticsearch.action.update.UpdateHelper.Result result54 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest55 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable57 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult58 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult59 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result54, (org.elasticsearch.action.ActionRequest) bulkShardRequest55, false, throwable57, writeResult58);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple60 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure53, (org.elasticsearch.transport.TransportMessage) bulkShardRequest55);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest62 = bulkShardRequest55.index("index.version.created");
        org.elasticsearch.action.update.UpdateHelper.Result result63 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result65 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest67 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest68 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest67);
        java.lang.Throwable throwable70 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult71 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult72 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result65, (org.elasticsearch.action.ActionRequest) bulkShardRequest67, false, throwable70, writeResult71);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest73 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest67);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult74 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult75 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result63, (org.elasticsearch.action.ActionRequest) bulkShardRequest67, writeResult74);
        org.elasticsearch.common.transport.TransportAddress transportAddress76 = bulkShardRequest67.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId77 = bulkShardRequest67.getParentTask();
        bulkShardRequest55.setParentTask(taskId77);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple79 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest48, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest55);
        long long80 = bulkShardRequest55.seqNo();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple81 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest15, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest55);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException82 = bulkShardRequest55.validate();
        org.elasticsearch.action.support.IndicesOptions indicesOptions83 = bulkShardRequest55.indicesOptions();
        org.junit.Assert.assertNull(updateResponse13);
        org.junit.Assert.assertNotNull(bulkShardRequestActionRequest14);
        org.junit.Assert.assertNull(shardId43);
        org.junit.Assert.assertNotNull(timeValue44);
        org.junit.Assert.assertNotNull(taskId45);
        org.junit.Assert.assertNotNull(bulkShardRequest62);
        org.junit.Assert.assertNull(transportAddress76);
        org.junit.Assert.assertNotNull(taskId77);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 0L + "'", long80 == 0L);
        org.junit.Assert.assertNull(actionRequestValidationException82);
        org.junit.Assert.assertNotNull(indicesOptions83);
    }

    @Test
    public void test4378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4378");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.Version version2 = indexMetaData0.getCreationVersion();
        long long3 = indexMetaData0.getCreationDate();
        long long4 = indexMetaData0.getCreationDate();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData5 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = builder7.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder10 = builder8.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder13 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int14 = builder13.numberOfShards();
        java.lang.String[] strArray18 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder21 = builder13.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet19);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder22 = builder8.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet19);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple23 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData5, (java.lang.Iterable<java.lang.String>) strSet19);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap24 = indexMetaData5.getAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder25 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData5);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder26 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData5);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder27 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData5);
        org.elasticsearch.common.settings.Settings settings28 = indexMetaData5.getSettings();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff29 = indexMetaData0.diff(indexMetaData5);
        long long30 = indexMetaData5.getVersion();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(version2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(indexMetaData5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple23);
        org.junit.Assert.assertNotNull(strImmutableOpenMap24);
        org.junit.Assert.assertNotNull(settings28);
        org.junit.Assert.assertNotNull(indexMetaDataDiff29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1L + "'", long30 == 1L);
    }

    @Test
    public void test4379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4379");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.Version version2 = indexMetaData0.getCreationVersion();
        long long3 = indexMetaData0.getCreationDate();
        int int4 = indexMetaData0.getTotalNumberOfShards();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap5 = indexMetaData0.getAliases();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters6 = indexMetaData0.includeFilters();
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap7 = indexMetaData0.getActiveAllocationIds();
        org.elasticsearch.index.Index index8 = indexMetaData0.getMergeSourceIndex();
        org.elasticsearch.index.Index index9 = indexMetaData0.getMergeSourceIndex();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state10 = indexMetaData0.getState();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.IndexMetaData.Custom> strImmutableOpenMap11 = indexMetaData0.getCustoms();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest13 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest13);
        org.elasticsearch.action.update.UpdateHelper.Result result15 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest17 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest18 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest17);
        java.lang.Throwable throwable20 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult21 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult22 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result15, (org.elasticsearch.action.ActionRequest) bulkShardRequest17, false, throwable20, writeResult21);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple23 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest14, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest17);
        org.elasticsearch.index.VersionType versionType24 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean28 = versionType24.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple29 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest14, versionType24);
        boolean boolean33 = versionType24.isVersionConflictForWrites(10L, (long) (byte) 0, false);
        long long36 = versionType24.updateVersion((long) 1, (long) (short) 10);
        boolean boolean38 = versionType24.validateVersionForWrites((long) '#');
        boolean boolean39 = indexMetaData0.equals((java.lang.Object) boolean38);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.IndexMetaData.Custom> strImmutableOpenMap40 = indexMetaData0.getCustoms();
        int int41 = indexMetaData0.getTotalNumberOfShards();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData43 = indexMetaData0.mappingOrDefault("hi!");
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(version2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(strImmutableOpenMap5);
        org.junit.Assert.assertNull(discoveryNodeFilters6);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap7);
        org.junit.Assert.assertNull(index8);
        org.junit.Assert.assertNull(index9);
        org.junit.Assert.assertTrue("'" + state10 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state10.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertNotNull(strImmutableOpenMap11);
        org.junit.Assert.assertNotNull(versionType24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 10L + "'", long36 == 10L);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strImmutableOpenMap40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNull(mappingMetaData43);
    }

    @Test
    public void test4380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4380");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder2.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder3.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int9 = builder8.numberOfShards();
        java.lang.String[] strArray13 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder8.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder3.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple18 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData0, (java.lang.Iterable<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap19 = indexMetaData0.getAliases();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData21 = indexMetaData0.mapping("index.version.created");
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters22 = indexMetaData0.requireFilters();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap23 = indexMetaData0.getAliases();
        int int24 = indexMetaData0.getNumberOfReplicas();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData25 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder26 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData25);
        org.elasticsearch.Version version27 = indexMetaData25.getCreationVersion();
        long long28 = indexMetaData25.getCreationDate();
        long long29 = indexMetaData25.getCreationDate();
        java.util.Set<java.lang.String> strSet31 = null; // flaky: indexMetaData25.activeAllocationIds((int) (byte) 3);
        long long32 = indexMetaData25.getVersion();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff33 = indexMetaData0.diff(indexMetaData25);
        int int34 = indexMetaData0.getNumberOfShards();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder35 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.IndexMetaData.Custom> strImmutableOpenMap36 = indexMetaData0.getCustoms();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple18);
        org.junit.Assert.assertNotNull(strImmutableOpenMap19);
        org.junit.Assert.assertNull(mappingMetaData21);
        org.junit.Assert.assertNull(discoveryNodeFilters22);
        org.junit.Assert.assertNotNull(strImmutableOpenMap23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(indexMetaData25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(version27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNull(strSet31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1L + "'", long32 == 1L);
        org.junit.Assert.assertNotNull(indexMetaDataDiff33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(strImmutableOpenMap36);
    }

    @Test
    public void test4381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4381");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters5 = indexMetaData0.includeFilters();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.action.update.UpdateHelper.Result result9 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult15 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult16 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result9, (org.elasticsearch.action.ActionRequest) bulkShardRequest11, false, throwable14, writeResult15);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest8, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest11);
        org.elasticsearch.index.VersionType versionType18 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean22 = versionType18.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple23 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest8, versionType18);
        boolean boolean27 = versionType18.isVersionConflictForWrites((long) 0, (long) (short) 0, false);
        boolean boolean28 = indexMetaData0.equals((java.lang.Object) boolean27);
        int int29 = indexMetaData0.getNumberOfReplicas();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state30 = indexMetaData0.getState();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData31 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder33 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder34 = builder33.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder36 = builder34.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder39 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int40 = builder39.numberOfShards();
        java.lang.String[] strArray44 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet45 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet45, strArray44);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder47 = builder39.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet45);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder48 = builder34.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet45);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple49 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData31, (java.lang.Iterable<java.lang.String>) strSet45);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap50 = indexMetaData31.getAliases();
        int int51 = indexMetaData31.getNumberOfShards();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters52 = indexMetaData31.excludeFilters();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap53 = indexMetaData31.getAliases();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff54 = indexMetaData0.diff(indexMetaData31);
        org.elasticsearch.Version version55 = indexMetaData0.getCreationVersion();
        int int56 = indexMetaData0.getTotalNumberOfShards();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNull(discoveryNodeFilters5);
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + state30 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state30.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertNotNull(indexMetaData31);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple49);
        org.junit.Assert.assertNotNull(strImmutableOpenMap50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNull(discoveryNodeFilters52);
        org.junit.Assert.assertNotNull(strImmutableOpenMap53);
        org.junit.Assert.assertNotNull(indexMetaDataDiff54);
        org.junit.Assert.assertNotNull(version55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
    }

    @Test
    public void test4382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4382");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("current version [35] is different than the one provided [35]");
        org.elasticsearch.cluster.metadata.AliasMetaData.Builder builder2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder1.putAlias(builder2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder1);
    }

    @Test
    public void test4383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4383");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest2 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest3 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest2);
        org.elasticsearch.action.update.UpdateHelper.Result result4 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest6 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest6);
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult10 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult11 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result4, (org.elasticsearch.action.ActionRequest) bulkShardRequest6, false, throwable9, writeResult10);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest6);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest14 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest15 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest14);
        org.elasticsearch.action.update.UpdateHelper.Result result16 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest18 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest19 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest18);
        java.lang.Throwable throwable21 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult22 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult23 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result16, (org.elasticsearch.action.ActionRequest) bulkShardRequest18, false, throwable21, writeResult22);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple24 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest15, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest18);
        org.elasticsearch.tasks.TaskId taskId25 = null;
        bulkShardRequest18.setParentTask(taskId25);
        boolean boolean27 = bulkItemRequestTuple12.equals((java.lang.Object) taskId25);
        org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestReplicationRequest28 = bulkItemRequestTuple12.v2();
        org.elasticsearch.cluster.routing.ShardRouting shardRouting30 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting32 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting34 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting36 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result38 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest40 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest41 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest40);
        org.elasticsearch.action.update.UpdateHelper.Result result42 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest44 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest45 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest44);
        java.lang.Throwable throwable47 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult48 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult49 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result42, (org.elasticsearch.action.ActionRequest) bulkShardRequest44, false, throwable47, writeResult48);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple50 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest41, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest44);
        org.elasticsearch.tasks.TaskId taskId51 = null;
        bulkShardRequest44.setParentTask(taskId51);
        org.elasticsearch.index.shard.ShardId shardId53 = bulkShardRequest44.shardId();
        bulkShardRequest44.seqNo((long) 0);
        java.lang.Throwable throwable57 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult58 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult59 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result38, (org.elasticsearch.action.ActionRequest) bulkShardRequest44, false, throwable57, writeResult58);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException60 = bulkShardRequest44.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure62 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting36, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException60, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure64 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting34, "update", (java.lang.Throwable) actionRequestValidationException60, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure66 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting32, "_na_", (java.lang.Throwable) actionRequestValidationException60, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure68 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting30, "index.blocks.metadata", (java.lang.Throwable) actionRequestValidationException60, "index.priority");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult69 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult70 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequestReplicationRequest28, true, (java.lang.Throwable) actionRequestValidationException60, writeResult69);
        org.elasticsearch.tasks.TaskId taskId71 = bulkShardRequestReplicationRequest28.getParentTask();
        org.elasticsearch.common.unit.TimeValue timeValue72 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest73 = bulkShardRequestReplicationRequest28.timeout(timeValue72);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(bulkShardRequestReplicationRequest28);
        org.junit.Assert.assertNull(shardId53);
        org.junit.Assert.assertNotNull(actionRequestValidationException60);
        org.junit.Assert.assertNotNull(taskId71);
        org.junit.Assert.assertNotNull(bulkShardRequest73);
    }

    @Test
    public void test4384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4384");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int2 = builder1.numberOfShards();
        java.lang.String[] strArray6 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = builder1.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet7);
        org.elasticsearch.cluster.metadata.IndexMetaData.State state10 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = builder9.state(state10);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder13 = builder9.removeAlias("hi!");
        long long14 = builder9.version();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder9.version((long) 1);
        org.elasticsearch.cluster.metadata.IndexMetaData.Custom custom18 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder19 = builder9.putCustom("_na_", custom18);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData20 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder21 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData20);
        org.elasticsearch.Version version22 = indexMetaData20.getCreationVersion();
        long long23 = indexMetaData20.getCreationDate();
        org.elasticsearch.common.settings.Settings settings24 = indexMetaData20.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder25 = builder19.settings(settings24);
        org.elasticsearch.cluster.metadata.IndexMetaData.Custom custom27 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder28 = builder25.putCustom("index.auto_expand_replicas", custom27);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder30 = builder28.numberOfShards(52);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(indexMetaData20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(version22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(settings24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
    }

    @Test
    public void test4385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4385");
        org.elasticsearch.action.ActionRequest actionRequest3 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest3);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple6 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        org.elasticsearch.action.ActionRequest actionRequest9 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest10 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest9);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest10, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest11);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest7, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest11);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest16 = bulkShardRequest11.setShardId(shardId15);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest18 = bulkShardRequest16.index("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String[] strArray19 = bulkShardRequest18.indices();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(bulkShardRequest16);
        org.junit.Assert.assertNotNull(bulkShardRequest18);
    }

    @Test
    public void test4386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4386");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.Version version2 = indexMetaData0.getCreationVersion();
        long long3 = indexMetaData0.getCreationDate();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        int int5 = indexMetaData0.getNumberOfShards();
        java.util.Set<java.lang.String> strSet7 = indexMetaData0.activeAllocationIds((int) (short) 0);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput8 = null;
        // The following exception was thrown during execution in test generation
        try {
            indexMetaData0.writeTo(streamOutput8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(version2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(strSet7);
    }

    @Test
    public void test4387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4387");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters5 = indexMetaData0.includeFilters();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.action.update.UpdateHelper.Result result9 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult15 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult16 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result9, (org.elasticsearch.action.ActionRequest) bulkShardRequest11, false, throwable14, writeResult15);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest8, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest11);
        org.elasticsearch.index.VersionType versionType18 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean22 = versionType18.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple23 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest8, versionType18);
        boolean boolean27 = versionType18.isVersionConflictForWrites((long) 0, (long) (short) 0, false);
        boolean boolean28 = indexMetaData0.equals((java.lang.Object) boolean27);
        org.elasticsearch.index.Index index29 = indexMetaData0.getMergeSourceIndex();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters30 = indexMetaData0.excludeFilters();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.IndexMetaData.Custom> strImmutableOpenMap31 = indexMetaData0.getCustoms();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.IndexMetaData.Custom> strImmutableOpenMap32 = indexMetaData0.getCustoms();
        java.lang.Class<?> wildcardClass33 = strImmutableOpenMap32.getClass();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNull(discoveryNodeFilters5);
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(index29);
        org.junit.Assert.assertNull(discoveryNodeFilters30);
        org.junit.Assert.assertNotNull(strImmutableOpenMap31);
        org.junit.Assert.assertNotNull(strImmutableOpenMap32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test4388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4388");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int2 = builder1.numberOfShards();
        java.lang.String[] strArray6 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = builder1.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet7);
        org.elasticsearch.cluster.metadata.IndexMetaData.State state10 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = builder9.state(state10);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder13 = builder9.removeAlias("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData14 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder15 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData14);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap16 = indexMetaData14.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet17 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple18 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData14, indexShardStateSet17);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters19 = indexMetaData14.includeFilters();
        org.elasticsearch.common.settings.Settings settings20 = indexMetaData14.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder21 = builder9.settings(settings20);
        java.lang.String str22 = builder9.index();
        java.lang.String str23 = builder9.index();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder26 = builder9.primaryTerm((int) (byte) -1, (long) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(indexMetaData14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap16);
        org.junit.Assert.assertNotNull(indexShardStateSet17);
        org.junit.Assert.assertNull(discoveryNodeFilters19);
        org.junit.Assert.assertNotNull(settings20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "index.blocks.write" + "'", str22, "index.blocks.write");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "index.blocks.write" + "'", str23, "index.blocks.write");
    }

    @Test
    public void test4389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4389");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData2 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData2);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap4 = indexMetaData2.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters5 = indexMetaData2.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData2);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff7 = indexMetaData0.diff(indexMetaData2);
        org.elasticsearch.cluster.metadata.IndexMetaData.State state8 = indexMetaData0.getState();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData10 = builder9.build();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(indexMetaData2);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap4);
        org.junit.Assert.assertNull(discoveryNodeFilters5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff7);
        org.junit.Assert.assertTrue("'" + state8 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state8.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertNotNull(indexMetaData10);
    }

    @Test
    public void test4390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4390");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue5 = bulkShardRequest4.timeout();
        org.elasticsearch.action.support.IndicesOptions indicesOptions6 = bulkShardRequest4.indicesOptions();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = bulkShardRequest4.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure9 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", (java.lang.Throwable) actionRequestValidationException7, "current version [35] is different than the one provided [35]");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure11 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "_na_", (java.lang.Throwable) actionRequestValidationException7, "");
        java.lang.String str12 = shardFailure11.indexUUID;
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertNotNull(indicesOptions6);
        org.junit.Assert.assertNotNull(actionRequestValidationException7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test4391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4391");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result4 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest6 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest6);
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult10 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult11 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result4, (org.elasticsearch.action.ActionRequest) bulkShardRequest6, false, throwable9, writeResult10);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest6);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest13 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest6);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest6);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult15 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult16 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest6, writeResult15);
        org.elasticsearch.action.update.UpdateHelper.Result result17 = updateResult16.result;
        org.elasticsearch.action.update.UpdateHelper.Result result18 = updateResult16.result;
        org.junit.Assert.assertNull(result17);
        org.junit.Assert.assertNull(result18);
    }

    @Test
    public void test4392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4392");
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest0 = null;
        java.util.LinkedHashSet<java.lang.String> strSet2 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result4 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable7 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult8 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult9 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result4, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, false, throwable7, writeResult8);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult10 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult11 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, writeResult10);
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest13 = bulkShardRequest5.setShardId(shardId12);
        org.elasticsearch.common.collect.Tuple<java.util.LinkedHashSet<java.lang.String>, org.elasticsearch.action.IndicesRequest> strSetTuple14 = new org.elasticsearch.common.collect.Tuple<java.util.LinkedHashSet<java.lang.String>, org.elasticsearch.action.IndicesRequest>(strSet2, (org.elasticsearch.action.IndicesRequest) bulkShardRequest13);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest15 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 3, (org.elasticsearch.action.ActionRequest) bulkShardRequest13);
        org.elasticsearch.action.ActionRequest actionRequest16 = bulkItemRequest15.request();
        org.elasticsearch.action.update.UpdateHelper.Result result17 = null;
        org.elasticsearch.action.ActionRequest actionRequest20 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest20);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest22 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple23 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest21, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest22);
        org.elasticsearch.common.transport.TransportAddress transportAddress24 = null;
        bulkShardRequest22.remoteAddress(transportAddress24);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel26 = bulkShardRequest22.consistencyLevel();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest27 = new org.elasticsearch.action.bulk.BulkItemRequest(35, (org.elasticsearch.action.ActionRequest) bulkShardRequest22);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting29 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result32 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest34 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest35 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest34);
        org.elasticsearch.action.update.UpdateHelper.Result result36 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest38 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest39 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest38);
        java.lang.Throwable throwable41 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult42 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult43 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result36, (org.elasticsearch.action.ActionRequest) bulkShardRequest38, false, throwable41, writeResult42);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple44 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest35, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest38);
        org.elasticsearch.tasks.TaskId taskId45 = null;
        bulkShardRequest38.setParentTask(taskId45);
        java.lang.Throwable throwable48 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult49 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult50 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result32, (org.elasticsearch.action.ActionRequest) bulkShardRequest38, true, throwable48, writeResult49);
        org.elasticsearch.action.support.IndicesOptions indicesOptions51 = bulkShardRequest38.indicesOptions();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest52 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest38);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException53 = bulkShardRequest38.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure55 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting29, "index.version.upgraded_string", (java.lang.Throwable) actionRequestValidationException53, "_na_");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult56 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult57 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result17, (org.elasticsearch.action.ActionRequest) bulkShardRequest22, true, (java.lang.Throwable) actionRequestValidationException53, writeResult56);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple58 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest15, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest22);
        org.elasticsearch.tasks.TaskId taskId59 = bulkShardRequest22.getParentTask();
        bulkShardRequest22.setParentTask("index.data_path", (long) 52);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple63 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest0, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest22);
        org.junit.Assert.assertNotNull(bulkShardRequest13);
        org.junit.Assert.assertNotNull(actionRequest16);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel26 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel26.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions51);
        org.junit.Assert.assertNotNull(actionRequestValidationException53);
        org.junit.Assert.assertNotNull(taskId59);
    }

    @Test
    public void test4393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4393");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData6 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData6);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap8 = indexMetaData6.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet9 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple10 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData6, indexShardStateSet9);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters11 = indexMetaData6.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder12 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData6);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff13 = indexMetaData0.diff(indexMetaData6);
        org.elasticsearch.Version version14 = indexMetaData0.getCreationVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder15 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder16 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData17 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder19 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder20 = builder19.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder22 = builder20.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder25 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int26 = builder25.numberOfShards();
        java.lang.String[] strArray30 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet31 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet31, strArray30);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder33 = builder25.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet31);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder34 = builder20.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet31);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple35 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData17, (java.lang.Iterable<java.lang.String>) strSet31);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap36 = indexMetaData17.getAliases();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData38 = indexMetaData17.mapping("index.version.created");
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters39 = indexMetaData17.requireFilters();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap40 = indexMetaData17.getAliases();
        org.elasticsearch.action.update.UpdateHelper.Result result41 = null;
        org.elasticsearch.action.ActionRequest actionRequest42 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting44 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting46 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting48 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting50 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting52 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result54 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest56 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest57 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest56);
        org.elasticsearch.action.update.UpdateHelper.Result result58 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest60 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest61 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest60);
        java.lang.Throwable throwable63 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult64 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult65 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result58, (org.elasticsearch.action.ActionRequest) bulkShardRequest60, false, throwable63, writeResult64);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple66 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest57, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest60);
        org.elasticsearch.tasks.TaskId taskId67 = null;
        bulkShardRequest60.setParentTask(taskId67);
        org.elasticsearch.index.shard.ShardId shardId69 = bulkShardRequest60.shardId();
        bulkShardRequest60.seqNo((long) 0);
        java.lang.Throwable throwable73 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult74 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult75 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result54, (org.elasticsearch.action.ActionRequest) bulkShardRequest60, false, throwable73, writeResult74);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException76 = bulkShardRequest60.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure78 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting52, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException76, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure80 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting50, "update", (java.lang.Throwable) actionRequestValidationException76, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure82 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting48, "_na_", (java.lang.Throwable) actionRequestValidationException76, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure84 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting46, "_na_", (java.lang.Throwable) actionRequestValidationException76, "index.version.upgraded");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure86 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting44, "index.blocks.metadata", (java.lang.Throwable) actionRequestValidationException76, "update");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult87 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult88 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result41, actionRequest42, true, (java.lang.Throwable) actionRequestValidationException76, writeResult87);
        org.elasticsearch.common.xcontent.ToXContent.Params params89 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.common.collect.Tuple<java.lang.Exception, org.elasticsearch.common.xcontent.ToXContent.Params> exceptionTuple90 = new org.elasticsearch.common.collect.Tuple<java.lang.Exception, org.elasticsearch.common.xcontent.ToXContent.Params>((java.lang.Exception) actionRequestValidationException76, params89);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData>, org.elasticsearch.common.xcontent.ToXContent.Params> strImmutableOpenMapTuple91 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData>, org.elasticsearch.common.xcontent.ToXContent.Params>(strImmutableOpenMap40, params89);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder92 = indexMetaData0.toXContent(xContentBuilder16, params89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNotNull(indexMetaData6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap8);
        org.junit.Assert.assertNotNull(indexShardStateSet9);
        org.junit.Assert.assertNull(discoveryNodeFilters11);
        org.junit.Assert.assertNotNull(indexMetaDataDiff13);
        org.junit.Assert.assertNotNull(version14);
        org.junit.Assert.assertNotNull(indexMetaData17);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple35);
        org.junit.Assert.assertNotNull(strImmutableOpenMap36);
        org.junit.Assert.assertNull(mappingMetaData38);
        org.junit.Assert.assertNull(discoveryNodeFilters39);
        org.junit.Assert.assertNotNull(strImmutableOpenMap40);
        org.junit.Assert.assertNull(shardId69);
        org.junit.Assert.assertNotNull(actionRequestValidationException76);
        org.junit.Assert.assertNotNull(params89);
    }

    @Test
    public void test4394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4394");
        org.elasticsearch.action.ActionRequest actionRequest4 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest4);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest6 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple7 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest6);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest6);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue10 = bulkShardRequest9.timeout();
        java.lang.String str11 = bulkShardRequest9.index();
        org.elasticsearch.common.unit.TimeValue timeValue12 = bulkShardRequest9.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest13 = bulkShardRequest6.timeout(timeValue12);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest13);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest16 = bulkShardRequest13.setShardId(shardId15);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest17 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 10, (org.elasticsearch.action.ActionRequest) bulkShardRequest13);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(timeValue12);
        org.junit.Assert.assertNotNull(bulkShardRequest13);
        org.junit.Assert.assertNotNull(bulkShardRequest16);
    }

    @Test
    public void test4395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4395");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.Version version2 = indexMetaData0.getCreationVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int5 = builder4.numberOfShards();
        java.lang.String[] strArray9 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet10 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet10, strArray9);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder12 = builder4.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet10);
        org.elasticsearch.cluster.metadata.IndexMetaData.State state13 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder14 = builder12.state(state13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder14.removeAlias("hi!");
        boolean boolean17 = indexMetaData0.equals((java.lang.Object) builder14);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters18 = indexMetaData0.requireFilters();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters19 = indexMetaData0.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder20 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder21 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(version2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(discoveryNodeFilters18);
        org.junit.Assert.assertNull(discoveryNodeFilters19);
    }

    @Test
    public void test4396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4396");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int2 = builder1.numberOfShards();
        java.lang.String[] strArray6 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = builder1.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet7);
        org.elasticsearch.cluster.metadata.IndexMetaData.State state10 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = builder9.state(state10);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder13 = builder9.removeAlias("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData14 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder15 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData14);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap16 = indexMetaData14.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet17 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple18 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData14, indexShardStateSet17);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters19 = indexMetaData14.includeFilters();
        org.elasticsearch.common.settings.Settings settings20 = indexMetaData14.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder21 = builder9.settings(settings20);
        boolean boolean22 = org.elasticsearch.cluster.metadata.IndexMetaData.isIndexUsingShadowReplicas(settings20);
        boolean boolean23 = org.elasticsearch.cluster.metadata.IndexMetaData.isIndexUsingShadowReplicas(settings20);
        java.lang.String[] strArray47 = new java.lang.String[] { "current version [97] is different than the one provided [1]", "", "current version [0] is higher or equal to the one provided [35]", "current version [0] is different than the one provided [100]", "index.blocks.read_only", "index.creation_date", "index.number_of_replicas", "index.blocks.write", "current version [32] is different than the one provided [32]", "current version [0] is higher than the one provided [98]", "current version [-1] is different than the one provided [52]", "current version [-1] is higher than the one provided [0]", "current version [10] is higher than the one provided [1]", "index.version.upgraded_string", "index.shared_filesystem.recover_on_any_node", "current version [-1] is higher than the one provided [0]", "current version [2] is higher than the one provided [-1]", "index.number_of_shards", "index.number_of_shards", "current version [10] is different than the one provided [52]", "current version [10] is different than the one provided [52]", "index.blocks.read_only", "current version [10] is higher or equal to the one provided [1]" };
        java.util.ArrayList<java.lang.String> strList48 = new java.util.ArrayList<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.settings.Settings, java.util.List<java.lang.String>> settingsTuple50 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.settings.Settings, java.util.List<java.lang.String>>(settings20, (java.util.List<java.lang.String>) strList48);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(indexMetaData14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap16);
        org.junit.Assert.assertNotNull(indexShardStateSet17);
        org.junit.Assert.assertNull(discoveryNodeFilters19);
        org.junit.Assert.assertNotNull(settings20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test4397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4397");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData2 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters3 = indexMetaData2.requireFilters();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData5 = indexMetaData2.mappingOrDefault("index.auto_expand_replicas");
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.IndexMetaData.Custom> strImmutableOpenMap6 = indexMetaData2.getCustoms();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData2);
        int int8 = indexMetaData2.getTotalNumberOfShards();
        java.lang.Class<?> wildcardClass9 = indexMetaData2.getClass();
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting18 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result20 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest22 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest23 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest22);
        org.elasticsearch.action.update.UpdateHelper.Result result24 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest26 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest27 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest26);
        java.lang.Throwable throwable29 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult30 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult31 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result24, (org.elasticsearch.action.ActionRequest) bulkShardRequest26, false, throwable29, writeResult30);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple32 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest23, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest26);
        org.elasticsearch.tasks.TaskId taskId33 = null;
        bulkShardRequest26.setParentTask(taskId33);
        org.elasticsearch.index.shard.ShardId shardId35 = bulkShardRequest26.shardId();
        bulkShardRequest26.seqNo((long) 0);
        java.lang.Throwable throwable39 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult40 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult41 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result20, (org.elasticsearch.action.ActionRequest) bulkShardRequest26, false, throwable39, writeResult40);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException42 = bulkShardRequest26.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting18, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException42, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting16, "update", (java.lang.Throwable) actionRequestValidationException42, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "index.shared_filesystem", (java.lang.Throwable) actionRequestValidationException42, "index.version.minimum_compatible");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "current version [97] is different than the one provided [35]", (java.lang.Throwable) actionRequestValidationException42, "index.");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure52 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "index.blocks.read_only", (java.lang.Throwable) actionRequestValidationException42, "current version [97] is different than the one provided [1]");
        org.elasticsearch.common.collect.Tuple<java.lang.reflect.Type, java.lang.RuntimeException> typeTuple53 = new org.elasticsearch.common.collect.Tuple<java.lang.reflect.Type, java.lang.RuntimeException>((java.lang.reflect.Type) wildcardClass9, (java.lang.RuntimeException) actionRequestValidationException42);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure55 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "current version [52] is different than the one provided [32]", (java.lang.Throwable) actionRequestValidationException42, "current version [97] is different than the one provided [1]");
        org.junit.Assert.assertNotNull(indexMetaData2);
        org.junit.Assert.assertNull(discoveryNodeFilters3);
        org.junit.Assert.assertNull(mappingMetaData5);
        org.junit.Assert.assertNotNull(strImmutableOpenMap6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNull(shardId35);
        org.junit.Assert.assertNotNull(actionRequestValidationException42);
    }

    @Test
    public void test4398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4398");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.ActionRequest actionRequest3 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest3);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple6 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure12 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "", throwable10, "");
        org.elasticsearch.action.update.UpdateHelper.Result result13 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest14 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable16 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult17 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult18 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result13, (org.elasticsearch.action.ActionRequest) bulkShardRequest14, false, throwable16, writeResult17);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple19 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure12, (org.elasticsearch.transport.TransportMessage) bulkShardRequest14);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest21 = bulkShardRequest14.index("hi!");
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple22 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest7, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest14);
        org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestReplicationRequest23 = bulkItemRequestTuple22.v2();
        long long24 = bulkShardRequestReplicationRequest23.seqNo();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult25 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult26 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequestReplicationRequest23, writeResult25);
        org.junit.Assert.assertNotNull(bulkShardRequest21);
        org.junit.Assert.assertNotNull(bulkShardRequestReplicationRequest23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
    }

    @Test
    public void test4399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4399");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters2 = indexMetaData0.requireFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData3);
        org.elasticsearch.Version version5 = indexMetaData3.getCreationVersion();
        long long6 = indexMetaData3.getCreationDate();
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap8 = indexMetaData3.getActiveAllocationIds();
        boolean boolean9 = indexMetaData0.equals((java.lang.Object) indexMetaData3);
        org.apache.lucene.util.Version version10 = indexMetaData3.getMinimumCompatibleVersion();
        org.apache.lucene.util.Version version11 = indexMetaData3.getMinimumCompatibleVersion();
        org.elasticsearch.common.settings.Settings settings12 = indexMetaData3.getSettings();
        org.elasticsearch.transport.TransportService transportService13 = null;
        org.elasticsearch.cluster.service.ClusterService clusterService14 = null;
        org.elasticsearch.indices.IndicesService indicesService15 = null;
        org.elasticsearch.threadpool.ThreadPool threadPool16 = null;
        org.elasticsearch.cluster.action.shard.ShardStateAction shardStateAction17 = null;
        org.elasticsearch.cluster.action.index.MappingUpdatedAction mappingUpdatedAction18 = null;
        org.elasticsearch.action.update.UpdateHelper updateHelper19 = null;
        org.elasticsearch.action.support.ActionFilters actionFilters20 = null;
        org.elasticsearch.cluster.metadata.IndexNameExpressionResolver indexNameExpressionResolver21 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.bulk.TransportShardBulkAction transportShardBulkAction22 = new org.elasticsearch.action.bulk.TransportShardBulkAction(settings12, transportService13, clusterService14, indicesService15, threadPool16, shardStateAction17, mappingUpdatedAction18, updateHelper19, actionFilters20, indexNameExpressionResolver21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNull(discoveryNodeFilters2);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(version5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(version10);
        org.junit.Assert.assertNull(version11);
        org.junit.Assert.assertNotNull(settings12);
    }

    @Test
    public void test4400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4400");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result4 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result6 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult12 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult13 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result6, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable11, writeResult12);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult15 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult16 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result4, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, writeResult15);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest17 = updateResult16.request();
        java.lang.String str18 = bulkShardRequest17.index();
        long long19 = bulkShardRequest17.seqNo();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult20 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult21 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest17, writeResult20);
        org.elasticsearch.action.update.UpdateHelper.Result result23 = null;
        org.elasticsearch.action.ActionRequest actionRequest27 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest28 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest27);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest29 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple30 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest28, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest29);
        org.elasticsearch.action.ActionRequest actionRequest33 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest34 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest33);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest35 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple36 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest34, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest35);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest37 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest35);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple38 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest28, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest35);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest39 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 100, (org.elasticsearch.action.ActionRequest) bulkShardRequest35);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest40 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest35);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting42 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting44 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting46 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting48 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result50 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest52 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest53 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest52);
        org.elasticsearch.action.update.UpdateHelper.Result result54 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest56 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest57 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest56);
        java.lang.Throwable throwable59 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult60 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult61 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result54, (org.elasticsearch.action.ActionRequest) bulkShardRequest56, false, throwable59, writeResult60);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple62 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest53, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest56);
        org.elasticsearch.tasks.TaskId taskId63 = null;
        bulkShardRequest56.setParentTask(taskId63);
        org.elasticsearch.index.shard.ShardId shardId65 = bulkShardRequest56.shardId();
        bulkShardRequest56.seqNo((long) 0);
        java.lang.Throwable throwable69 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult70 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult71 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result50, (org.elasticsearch.action.ActionRequest) bulkShardRequest56, false, throwable69, writeResult70);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException72 = bulkShardRequest56.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure74 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting48, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException72, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure76 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting46, "update", (java.lang.Throwable) actionRequestValidationException72, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure78 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting44, "_na_", (java.lang.Throwable) actionRequestValidationException72, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure80 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting42, "index.blocks.metadata", (java.lang.Throwable) actionRequestValidationException72, "index.priority");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult81 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult82 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result23, (org.elasticsearch.action.ActionRequest) bulkShardRequest35, true, (java.lang.Throwable) actionRequestValidationException72, writeResult81);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult83 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult84 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest17, true, (java.lang.Throwable) actionRequestValidationException72, writeResult83);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure86 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "current version [10] is higher than the one provided [98]", (java.lang.Throwable) actionRequestValidationException72, "current version [32] is different than the one provided [2]");
        org.junit.Assert.assertNotNull(bulkShardRequest17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNull(shardId65);
        org.junit.Assert.assertNotNull(actionRequestValidationException72);
    }

    @Test
    public void test4401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4401");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest1 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest1);
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, false, throwable8, writeResult9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.index.VersionType versionType12 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean16 = versionType12.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest2, versionType12);
        boolean boolean21 = versionType12.isVersionConflictForWrites(10L, (long) (byte) 0, false);
        boolean boolean23 = versionType12.validateVersionForReads(10L);
        boolean boolean26 = versionType12.isVersionConflictForReads(100L, (long) 'a');
        boolean boolean28 = versionType12.validateVersionForWrites((long) 100);
        boolean boolean31 = versionType12.isVersionConflictForReads((long) 'a', (long) (byte) 2);
        boolean boolean33 = versionType12.validateVersionForWrites((long) ' ');
        org.elasticsearch.index.VersionType versionType34 = versionType12.versionTypeForReplicationAndRecovery();
        byte byte35 = versionType12.getValue();
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(versionType34);
        org.junit.Assert.assertTrue("'" + byte35 + "' != '" + (byte) 3 + "'", byte35 == (byte) 3);
    }

    @Test
    public void test4402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4402");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest1 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest1);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = bulkShardRequest1.consistencyLevel(writeConsistencyLevel3);
        bulkShardRequest4.setParentTask("_na_", 1L);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData8 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder10 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = builder10.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder13 = builder11.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int17 = builder16.numberOfShards();
        java.lang.String[] strArray21 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet22 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet22, strArray21);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder24 = builder16.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet22);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder25 = builder11.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet22);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple26 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData8, (java.lang.Iterable<java.lang.String>) strSet22);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap27 = indexMetaData8.getAliases();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData29 = indexMetaData8.mapping("state-");
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap30 = indexMetaData8.getActiveAllocationIds();
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap31 = indexMetaData8.getActiveAllocationIds();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.transport.TransportMessage, org.elasticsearch.common.io.stream.Writeable> transportMessageTuple32 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.transport.TransportMessage, org.elasticsearch.common.io.stream.Writeable>((org.elasticsearch.transport.TransportMessage) bulkShardRequest4, (org.elasticsearch.common.io.stream.Writeable) indexMetaData8);
        boolean boolean33 = bulkShardRequest4.getShouldPersistResult();
        org.junit.Assert.assertNotNull(bulkShardRequest4);
        org.junit.Assert.assertNotNull(indexMetaData8);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple26);
        org.junit.Assert.assertNotNull(strImmutableOpenMap27);
        org.junit.Assert.assertNull(mappingMetaData29);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap30);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test4403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4403");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder2.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder3.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int9 = builder8.numberOfShards();
        java.lang.String[] strArray13 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder8.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder3.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple18 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData0, (java.lang.Iterable<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap19 = indexMetaData0.getAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder20 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder21 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder22 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder24 = builder22.numberOfShards((int) (byte) 1);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder26 = builder24.index("index.priority");
        long long27 = builder24.version();
        java.lang.String str28 = builder24.index();
        org.elasticsearch.cluster.metadata.IndexMetaData.Custom custom30 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder31 = builder24.putCustom("index.creation_date", custom30);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple18);
        org.junit.Assert.assertNotNull(strImmutableOpenMap19);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 1L + "'", long27 == 1L);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "index.priority" + "'", str28, "index.priority");
        org.junit.Assert.assertNotNull(builder31);
    }

    @Test
    public void test4404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4404");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData6 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData6);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap8 = indexMetaData6.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet9 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple10 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData6, indexShardStateSet9);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters11 = indexMetaData6.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder12 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData6);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff13 = indexMetaData0.diff(indexMetaData6);
        int int14 = indexMetaData0.getNumberOfReplicas();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters15 = indexMetaData0.getInitialRecoveryFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        long long17 = indexMetaData0.getVersion();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData19 = indexMetaData0.mappingOrDefault("current version [52] is different than the one provided [32]");
        java.lang.Object obj20 = null;
        boolean boolean21 = indexMetaData0.equals(obj20);
        int int22 = indexMetaData0.getTotalNumberOfShards();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNotNull(indexMetaData6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap8);
        org.junit.Assert.assertNotNull(indexShardStateSet9);
        org.junit.Assert.assertNull(discoveryNodeFilters11);
        org.junit.Assert.assertNotNull(indexMetaDataDiff13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(discoveryNodeFilters15);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1L + "'", long17 == 1L);
        org.junit.Assert.assertNull(mappingMetaData19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
    }

    @Test
    public void test4405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4405");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.ActionRequest actionRequest3 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest3);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple6 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        boolean boolean7 = bulkShardRequest5.getShouldPersistResult();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        java.lang.String str9 = bulkShardRequest5.index();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = bulkShardRequest5.consistencyLevel();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest12 = bulkShardRequest5.index("index.auto_expand_replicas");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult13 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult14 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest12, writeResult13);
        boolean boolean15 = updateResult14.failure();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(bulkShardRequest12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test4406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4406");
        org.elasticsearch.action.ActionRequest actionRequest2 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest3 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest((int) '#', actionRequest2);
        org.elasticsearch.action.update.UpdateHelper.Result result5 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.action.update.UpdateHelper.Result result9 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult15 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult16 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result9, (org.elasticsearch.action.ActionRequest) bulkShardRequest11, false, throwable14, writeResult15);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest8, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest11);
        org.elasticsearch.tasks.TaskId taskId18 = null;
        bulkShardRequest11.setParentTask(taskId18);
        org.elasticsearch.index.shard.ShardId shardId20 = bulkShardRequest11.shardId();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult21 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult22 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result5, (org.elasticsearch.action.ActionRequest) bulkShardRequest11, writeResult21);
        long long23 = bulkShardRequest11.primaryTerm();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest25 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest26 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest25);
        org.elasticsearch.action.update.UpdateHelper.Result result27 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest29 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest30 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest29);
        java.lang.Throwable throwable32 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult33 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult34 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result27, (org.elasticsearch.action.ActionRequest) bulkShardRequest29, false, throwable32, writeResult33);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple35 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest26, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest29);
        org.elasticsearch.action.ActionRequest actionRequest37 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest38 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest37);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest39 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple40 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest38, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest39);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple41 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest26, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest39);
        org.elasticsearch.action.update.UpdateHelper.Result result42 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest44 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest45 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest44);
        java.lang.Throwable throwable47 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult48 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult49 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result42, (org.elasticsearch.action.ActionRequest) bulkShardRequest44, false, throwable47, writeResult48);
        org.elasticsearch.action.update.UpdateHelper.Result result50 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest52 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest53 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest52);
        org.elasticsearch.action.update.UpdateHelper.Result result54 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest56 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest57 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest56);
        java.lang.Throwable throwable59 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult60 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult61 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result54, (org.elasticsearch.action.ActionRequest) bulkShardRequest56, false, throwable59, writeResult60);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple62 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest53, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest56);
        java.lang.Throwable throwable64 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult65 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult66 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result50, (org.elasticsearch.action.ActionRequest) bulkShardRequest56, true, throwable64, writeResult65);
        org.elasticsearch.index.shard.ShardId shardId67 = bulkShardRequest56.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue68 = bulkShardRequest56.timeout();
        org.elasticsearch.tasks.TaskId taskId69 = bulkShardRequest56.getParentTask();
        bulkShardRequest44.setParentTask(taskId69);
        bulkShardRequest39.setParentTask(taskId69);
        org.elasticsearch.tasks.TaskId taskId72 = bulkShardRequest39.getParentTask();
        bulkShardRequest11.setParentTask(taskId72);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest74 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple75 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest11);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest76 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 100, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        int int77 = bulkItemRequest76.id();
        org.junit.Assert.assertNull(shardId20);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertNull(shardId67);
        org.junit.Assert.assertNotNull(timeValue68);
        org.junit.Assert.assertNotNull(taskId69);
        org.junit.Assert.assertNotNull(taskId72);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 100 + "'", int77 == 100);
    }

    @Test
    public void test4407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4407");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.ActionRequest actionRequest5 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest5);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple8 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest6, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest7);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = bulkShardRequest7.setShardId(shardId10);
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest13 = bulkShardRequest7.setShardId(shardId12);
        bulkShardRequest13.setParentTask("index.uuid", (long) 97);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest18 = bulkShardRequest13.index("index.number_of_shards");
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest19 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 100, (org.elasticsearch.action.ActionRequest) bulkShardRequest18);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult20 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult21 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest18, writeResult20);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest23 = bulkShardRequest18.index("current version [97] is different than the one provided [35]");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting25 = null;
        java.lang.Throwable throwable27 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure29 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting25, "", throwable27, "");
        org.elasticsearch.action.update.UpdateHelper.Result result30 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest31 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable33 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult34 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult35 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result30, (org.elasticsearch.action.ActionRequest) bulkShardRequest31, false, throwable33, writeResult34);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple36 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure29, (org.elasticsearch.transport.TransportMessage) bulkShardRequest31);
        org.elasticsearch.common.transport.TransportAddress transportAddress37 = bulkShardRequest31.remoteAddress();
        org.elasticsearch.action.support.IndicesOptions indicesOptions38 = bulkShardRequest31.indicesOptions();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException39 = bulkShardRequest31.validate();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult40 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult41 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest18, false, (java.lang.Throwable) actionRequestValidationException39, writeResult40);
        boolean boolean42 = updateResult41.success();
        org.junit.Assert.assertNotNull(bulkShardRequest11);
        org.junit.Assert.assertNotNull(bulkShardRequest13);
        org.junit.Assert.assertNotNull(bulkShardRequest18);
        org.junit.Assert.assertNotNull(bulkShardRequest23);
        org.junit.Assert.assertNull(transportAddress37);
        org.junit.Assert.assertNotNull(indicesOptions38);
        org.junit.Assert.assertNotNull(actionRequestValidationException39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test4408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4408");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest1 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest1);
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, false, throwable8, writeResult9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.index.VersionType versionType12 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean16 = versionType12.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest2, versionType12);
        boolean boolean21 = versionType12.isVersionConflictForWrites(10L, (long) (byte) 0, false);
        boolean boolean23 = versionType12.validateVersionForReads(10L);
        boolean boolean27 = versionType12.isVersionConflictForWrites((long) (short) -1, (long) 0, true);
        org.elasticsearch.index.VersionType versionType28 = versionType12.versionTypeForReplicationAndRecovery();
        byte byte29 = versionType12.getValue();
        byte byte30 = versionType12.getValue();
        boolean boolean32 = versionType12.validateVersionForWrites((long) (short) -1);
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertTrue("'" + byte29 + "' != '" + (byte) 3 + "'", byte29 == (byte) 3);
        org.junit.Assert.assertTrue("'" + byte30 + "' != '" + (byte) 3 + "'", byte30 == (byte) 3);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test4409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4409");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters5 = indexMetaData0.includeFilters();
        org.elasticsearch.common.settings.Settings settings6 = indexMetaData0.getSettings();
        boolean boolean8 = indexMetaData0.isSameUUID("index.blocks.metadata");
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData10 = indexMetaData0.mappingOrDefault("index.blocks.metadata");
        long long12 = indexMetaData0.primaryTerm(0);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNull(discoveryNodeFilters5);
        org.junit.Assert.assertNotNull(settings6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(mappingMetaData10);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
    }

    @Test
    public void test4410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4410");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting1 = null;
        java.lang.Throwable throwable3 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure5 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting1, "", throwable3, "");
        org.elasticsearch.action.update.UpdateHelper.Result result6 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult10 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult11 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result6, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, false, throwable9, writeResult10);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure5, (org.elasticsearch.transport.TransportMessage) bulkShardRequest7);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest14 = bulkShardRequest7.index("index.version.created");
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = bulkShardRequest7.remoteAddress();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest16 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting17 = null;
        java.lang.Throwable throwable19 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure21 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting17, "", throwable19, "");
        org.elasticsearch.action.update.UpdateHelper.Result result22 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest23 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable25 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult26 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult27 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result22, (org.elasticsearch.action.ActionRequest) bulkShardRequest23, false, throwable25, writeResult26);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple28 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure21, (org.elasticsearch.transport.TransportMessage) bulkShardRequest23);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple29 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest16, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest23);
        org.elasticsearch.action.update.UpdateHelper.Result result30 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest32 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest33 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest32);
        org.elasticsearch.action.update.UpdateHelper.Result result34 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest36 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest37 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest36);
        java.lang.Throwable throwable39 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult40 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult41 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result34, (org.elasticsearch.action.ActionRequest) bulkShardRequest36, false, throwable39, writeResult40);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple42 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest33, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest36);
        org.elasticsearch.tasks.TaskId taskId43 = null;
        bulkShardRequest36.setParentTask(taskId43);
        org.elasticsearch.index.shard.ShardId shardId45 = bulkShardRequest36.shardId();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult46 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult47 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result30, (org.elasticsearch.action.ActionRequest) bulkShardRequest36, writeResult46);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple48 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest16, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest36);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest49 = bulkItemRequestTuple48.v1();
        org.junit.Assert.assertNotNull(bulkShardRequest14);
        org.junit.Assert.assertNull(transportAddress15);
        org.junit.Assert.assertNull(shardId45);
        org.junit.Assert.assertNotNull(bulkItemRequest49);
    }

    @Test
    public void test4411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4411");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.Version version2 = indexMetaData0.getCreationVersion();
        long long3 = indexMetaData0.getCreationDate();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters4 = indexMetaData0.includeFilters();
        java.lang.String str5 = indexMetaData0.getIndexUUID();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        int int7 = indexMetaData0.getNumberOfShards();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(version2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNull(discoveryNodeFilters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "_na_" + "'", str5, "_na_");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
    }

    @Test
    public void test4412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4412");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        int int3 = indexMetaData0.getTotalNumberOfShards();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = builder4.putMapping(mappingMetaData5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(builder4);
    }

    @Test
    public void test4413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4413");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = bulkShardRequest4.consistencyLevel(writeConsistencyLevel6);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting9 = null;
        org.elasticsearch.action.ActionRequest actionRequest12 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest13 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest12);
        org.elasticsearch.action.ActionRequest actionRequest16 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest17 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest16);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest18 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple19 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest17, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest18);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest20 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest18);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple21 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest13, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest18);
        org.elasticsearch.common.transport.TransportAddress transportAddress22 = null;
        bulkShardRequest18.remoteAddress(transportAddress22);
        org.elasticsearch.action.update.UpdateHelper.Result result24 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest25 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue26 = bulkShardRequest25.timeout();
        java.lang.String str27 = bulkShardRequest25.index();
        org.elasticsearch.common.unit.TimeValue timeValue28 = bulkShardRequest25.timeout();
        org.elasticsearch.cluster.routing.ShardRouting shardRouting30 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting32 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result34 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest36 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest37 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest36);
        org.elasticsearch.action.update.UpdateHelper.Result result38 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest40 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest41 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest40);
        java.lang.Throwable throwable43 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult44 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult45 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result38, (org.elasticsearch.action.ActionRequest) bulkShardRequest40, false, throwable43, writeResult44);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple46 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest37, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest40);
        org.elasticsearch.tasks.TaskId taskId47 = null;
        bulkShardRequest40.setParentTask(taskId47);
        org.elasticsearch.index.shard.ShardId shardId49 = bulkShardRequest40.shardId();
        bulkShardRequest40.seqNo((long) 0);
        java.lang.Throwable throwable53 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult54 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult55 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result34, (org.elasticsearch.action.ActionRequest) bulkShardRequest40, false, throwable53, writeResult54);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException56 = bulkShardRequest40.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure58 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting32, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException56, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure60 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting30, "update", (java.lang.Throwable) actionRequestValidationException56, "index.version.created_string");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult61 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult62 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result24, (org.elasticsearch.action.ActionRequest) bulkShardRequest25, false, (java.lang.Throwable) actionRequestValidationException56, writeResult61);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.transport.TransportRequest, java.lang.RuntimeException> transportRequestTuple63 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.transport.TransportRequest, java.lang.RuntimeException>((org.elasticsearch.transport.TransportRequest) bulkShardRequest18, (java.lang.RuntimeException) actionRequestValidationException56);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure65 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting9, "", (java.lang.Throwable) actionRequestValidationException56, "index.shadow_replicas");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult66 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult67 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest4, false, (java.lang.Throwable) actionRequestValidationException56, writeResult66);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure69 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "index.number_of_shards", (java.lang.Throwable) actionRequestValidationException56, "active_allocations");
        java.lang.String str70 = shardFailure69.reason;
        org.junit.Assert.assertNotNull(bulkShardRequest7);
        org.junit.Assert.assertNotNull(timeValue26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(timeValue28);
        org.junit.Assert.assertNull(shardId49);
        org.junit.Assert.assertNotNull(actionRequestValidationException56);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "index.number_of_shards" + "'", str70, "index.number_of_shards");
    }

    @Test
    public void test4414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4414");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters5 = indexMetaData0.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.index.Index index7 = indexMetaData0.getMergeSourceIndex();
        boolean boolean9 = indexMetaData0.isSameUUID("current version [32] is higher or equal to the one provided [1]");
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNull(discoveryNodeFilters5);
        org.junit.Assert.assertNull(index7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test4415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4415");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData3 = indexMetaData0.mapping("index.blocks.write");
        org.elasticsearch.cluster.metadata.IndexMetaData.State state4 = indexMetaData0.getState();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.Version version7 = indexMetaData0.getUpgradedVersion();
        org.apache.lucene.util.Version version8 = indexMetaData0.getMinimumCompatibleVersion();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNull(mappingMetaData3);
        org.junit.Assert.assertTrue("'" + state4 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state4.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertNull(version8);
    }

    @Test
    public void test4416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4416");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest1 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest1);
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, false, throwable8, writeResult9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.action.ActionRequest actionRequest13 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest13);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest15 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple16 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest14, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest15);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest15);
        org.elasticsearch.action.update.UpdateHelper.Result result18 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest20 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest20);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel22 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest23 = bulkShardRequest20.consistencyLevel(writeConsistencyLevel22);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult24 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult25 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result18, (org.elasticsearch.action.ActionRequest) bulkShardRequest20, writeResult24);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple26 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest20);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData27 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder28 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData27);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap29 = indexMetaData27.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters30 = indexMetaData27.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder31 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData27);
        org.apache.lucene.util.Version version32 = indexMetaData27.getMinimumCompatibleVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData33 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder34 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData33);
        org.elasticsearch.Version version35 = indexMetaData33.getCreationVersion();
        long long36 = indexMetaData33.getCreationDate();
        long long37 = indexMetaData33.getCreationDate();
        java.util.Set<java.lang.String> strSet39 = null; // flaky: indexMetaData33.activeAllocationIds((int) (byte) 3);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData41 = indexMetaData33.mapping("hi!");
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff42 = indexMetaData27.diff(indexMetaData33);
        boolean boolean43 = bulkItemRequestTuple26.equals((java.lang.Object) indexMetaData33);
        long long44 = indexMetaData33.getCreationDate();
        org.elasticsearch.index.Index index45 = indexMetaData33.getMergeSourceIndex();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder47 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.creation_date_string");
        int int48 = builder47.numberOfReplicas();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder49 = builder47.removeAllAliases();
        boolean boolean50 = indexMetaData33.equals((java.lang.Object) builder47);
        int int51 = builder47.numberOfReplicas();
        org.junit.Assert.assertNotNull(bulkShardRequest23);
        org.junit.Assert.assertNotNull(indexMetaData27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap29);
        org.junit.Assert.assertNull(discoveryNodeFilters30);
        org.junit.Assert.assertNull(version32);
        org.junit.Assert.assertNotNull(indexMetaData33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(version35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertNull(strSet39);
        org.junit.Assert.assertNull(mappingMetaData41);
        org.junit.Assert.assertNotNull(indexMetaDataDiff42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertNull(index45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
    }

    @Test
    public void test4417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4417");
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest3 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest3);
        org.elasticsearch.action.update.UpdateHelper.Result result5 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult11 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult12 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result5, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, false, throwable10, writeResult11);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest7);
        org.elasticsearch.tasks.TaskId taskId14 = null;
        bulkShardRequest7.setParentTask(taskId14);
        org.elasticsearch.index.shard.ShardId shardId16 = bulkShardRequest7.shardId();
        bulkShardRequest7.seqNo((long) 0);
        java.lang.Throwable throwable20 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult21 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult22 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, false, throwable20, writeResult21);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException23 = bulkShardRequest7.validate();
        org.elasticsearch.common.transport.TransportAddress transportAddress24 = bulkShardRequest7.remoteAddress();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest25 = new org.elasticsearch.action.bulk.BulkItemRequest(97, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertNotNull(actionRequestValidationException23);
        org.junit.Assert.assertNull(transportAddress24);
    }

    @Test
    public void test4418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4418");
        org.elasticsearch.action.ActionRequest actionRequest3 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest3);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple6 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        org.elasticsearch.action.ActionRequest actionRequest9 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest10 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest9);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest10, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest11);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest7, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest11);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest14 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue15 = bulkShardRequest14.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest16 = bulkShardRequest11.timeout(timeValue15);
        long long17 = bulkShardRequest11.primaryTerm();
        org.elasticsearch.common.transport.TransportAddress transportAddress18 = null;
        bulkShardRequest11.remoteAddress(transportAddress18);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest20 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest21 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions22 = bulkShardRequest21.indicesOptions();
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest24 = bulkShardRequest21.setShardId(shardId23);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple25 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest20, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest24);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(bulkShardRequest16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertNotNull(indicesOptions22);
        org.junit.Assert.assertNotNull(bulkShardRequest24);
    }

    @Test
    public void test4419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4419");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result4 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest6 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest6);
        org.elasticsearch.action.update.UpdateHelper.Result result8 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest10 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest11 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest10);
        java.lang.Throwable throwable13 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult14 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult15 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result8, (org.elasticsearch.action.ActionRequest) bulkShardRequest10, false, throwable13, writeResult14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple16 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest7, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest10);
        java.lang.Throwable throwable18 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult19 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult20 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result4, (org.elasticsearch.action.ActionRequest) bulkShardRequest10, true, throwable18, writeResult19);
        org.elasticsearch.index.shard.ShardId shardId21 = bulkShardRequest10.shardId();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest10);
        org.elasticsearch.common.unit.TimeValue timeValue23 = bulkShardRequest10.timeout();
        long long24 = bulkShardRequest10.seqNo();
        org.elasticsearch.action.update.UpdateHelper.Result result26 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result27 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest29 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest30 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest29);
        java.lang.Throwable throwable32 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult33 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult34 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result27, (org.elasticsearch.action.ActionRequest) bulkShardRequest29, false, throwable32, writeResult33);
        org.elasticsearch.action.update.UpdateHelper.Result result36 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest37 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue38 = bulkShardRequest37.timeout();
        java.lang.String str39 = bulkShardRequest37.index();
        org.elasticsearch.common.unit.TimeValue timeValue40 = bulkShardRequest37.timeout();
        org.elasticsearch.cluster.routing.ShardRouting shardRouting42 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting44 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result46 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest48 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest49 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest48);
        org.elasticsearch.action.update.UpdateHelper.Result result50 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest52 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest53 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest52);
        java.lang.Throwable throwable55 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult56 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult57 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result50, (org.elasticsearch.action.ActionRequest) bulkShardRequest52, false, throwable55, writeResult56);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple58 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest49, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest52);
        org.elasticsearch.tasks.TaskId taskId59 = null;
        bulkShardRequest52.setParentTask(taskId59);
        org.elasticsearch.index.shard.ShardId shardId61 = bulkShardRequest52.shardId();
        bulkShardRequest52.seqNo((long) 0);
        java.lang.Throwable throwable65 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult66 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult67 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result46, (org.elasticsearch.action.ActionRequest) bulkShardRequest52, false, throwable65, writeResult66);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException68 = bulkShardRequest52.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure70 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting44, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException68, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure72 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting42, "update", (java.lang.Throwable) actionRequestValidationException68, "index.version.created_string");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult73 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult74 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result36, (org.elasticsearch.action.ActionRequest) bulkShardRequest37, false, (java.lang.Throwable) actionRequestValidationException68, writeResult73);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult75 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult76 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result26, (org.elasticsearch.action.ActionRequest) bulkShardRequest29, false, (java.lang.Throwable) actionRequestValidationException68, writeResult75);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult77 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult78 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest10, true, (java.lang.Throwable) actionRequestValidationException68, writeResult77);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure80 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "current version [97] is different than the one provided [2]", (java.lang.Throwable) actionRequestValidationException68, "index.version.created_string");
        org.junit.Assert.assertNull(shardId21);
        org.junit.Assert.assertNotNull(timeValue23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNotNull(timeValue38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(timeValue40);
        org.junit.Assert.assertNull(shardId61);
        org.junit.Assert.assertNotNull(actionRequestValidationException68);
    }

    @Test
    public void test4420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4420");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = builder1.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = builder2.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int8 = builder7.numberOfShards();
        java.lang.String[] strArray12 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder15 = builder7.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder2.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder18 = builder16.creationDate((long) (byte) 10);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData19 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder20 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData19);
        java.lang.String str21 = builder20.index();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder23 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int24 = builder23.numberOfShards();
        java.lang.String[] strArray28 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet29 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet29, strArray28);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder31 = builder23.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet29);
        org.elasticsearch.cluster.metadata.IndexMetaData.State state32 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder33 = builder31.state(state32);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder35 = builder31.removeAlias("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData36 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder37 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData36);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap38 = indexMetaData36.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet39 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple40 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData36, indexShardStateSet39);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters41 = indexMetaData36.includeFilters();
        org.elasticsearch.common.settings.Settings settings42 = indexMetaData36.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder43 = builder31.settings(settings42);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder44 = builder20.settings(settings42);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder45 = builder16.settings(settings42);
        boolean boolean46 = org.elasticsearch.cluster.metadata.IndexMetaData.isIndexUsingShadowReplicas(settings42);
        org.elasticsearch.transport.TransportService transportService47 = null;
        org.elasticsearch.cluster.service.ClusterService clusterService48 = null;
        org.elasticsearch.indices.IndicesService indicesService49 = null;
        org.elasticsearch.threadpool.ThreadPool threadPool50 = null;
        org.elasticsearch.cluster.action.shard.ShardStateAction shardStateAction51 = null;
        org.elasticsearch.cluster.action.index.MappingUpdatedAction mappingUpdatedAction52 = null;
        org.elasticsearch.action.update.UpdateHelper updateHelper53 = null;
        org.elasticsearch.action.support.ActionFilters actionFilters54 = null;
        org.elasticsearch.cluster.metadata.IndexNameExpressionResolver indexNameExpressionResolver55 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.bulk.TransportShardBulkAction transportShardBulkAction56 = new org.elasticsearch.action.bulk.TransportShardBulkAction(settings42, transportService47, clusterService48, indicesService49, threadPool50, shardStateAction51, mappingUpdatedAction52, updateHelper53, actionFilters54, indexNameExpressionResolver55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(indexMetaData19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(indexMetaData36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap38);
        org.junit.Assert.assertNotNull(indexShardStateSet39);
        org.junit.Assert.assertNull(discoveryNodeFilters41);
        org.junit.Assert.assertNotNull(settings42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test4421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4421");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest3 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest3);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest6 = bulkShardRequest3.consistencyLevel(writeConsistencyLevel5);
        org.elasticsearch.action.update.UpdateHelper.Result result8 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue10 = bulkShardRequest9.timeout();
        java.lang.String str11 = bulkShardRequest9.index();
        org.elasticsearch.common.unit.TimeValue timeValue12 = bulkShardRequest9.timeout();
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result18 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest20 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest20);
        org.elasticsearch.action.update.UpdateHelper.Result result22 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest24 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest25 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest24);
        java.lang.Throwable throwable27 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult28 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult29 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result22, (org.elasticsearch.action.ActionRequest) bulkShardRequest24, false, throwable27, writeResult28);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple30 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest21, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest24);
        org.elasticsearch.tasks.TaskId taskId31 = null;
        bulkShardRequest24.setParentTask(taskId31);
        org.elasticsearch.index.shard.ShardId shardId33 = bulkShardRequest24.shardId();
        bulkShardRequest24.seqNo((long) 0);
        java.lang.Throwable throwable37 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult38 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult39 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result18, (org.elasticsearch.action.ActionRequest) bulkShardRequest24, false, throwable37, writeResult38);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException40 = bulkShardRequest24.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting16, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException40, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "update", (java.lang.Throwable) actionRequestValidationException40, "index.version.created_string");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult45 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult46 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result8, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, false, (java.lang.Throwable) actionRequestValidationException40, writeResult45);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult47 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult48 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest3, true, (java.lang.Throwable) actionRequestValidationException40, writeResult47);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult49 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult50 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest3, writeResult49);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult51 = updateResult50.writeResult;
        java.lang.Throwable throwable52 = updateResult50.error;
        java.lang.Throwable throwable53 = updateResult50.error;
        org.junit.Assert.assertNotNull(bulkShardRequest6);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(timeValue12);
        org.junit.Assert.assertNull(shardId33);
        org.junit.Assert.assertNotNull(actionRequestValidationException40);
        org.junit.Assert.assertNull(writeResult51);
        org.junit.Assert.assertNull(throwable52);
        org.junit.Assert.assertNull(throwable53);
    }

    @Test
    public void test4422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4422");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.VersionType versionType1 = org.elasticsearch.index.VersionType.fromString("current version [97] is higher than the one provided [32]");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No version type match [current version [97] is higher than the one provided [32]]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test4423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4423");
        org.elasticsearch.action.ActionRequest actionRequest2 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest3 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest2);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple5 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest4);
        boolean boolean6 = bulkShardRequest4.getShouldPersistResult();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int9 = builder8.numberOfShards();
        java.lang.String[] strArray13 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder8.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>> streamableTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>>((org.elasticsearch.common.io.stream.Streamable) bulkShardRequest4, strSet14);
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest19 = bulkShardRequest4.setShardId(shardId18);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest20 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest19);
        int int21 = bulkItemRequest20.id();
        org.elasticsearch.common.io.stream.StreamInput streamInput22 = null;
        // The following exception was thrown during execution in test generation
        try {
            bulkItemRequest20.readFrom(streamInput22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(bulkShardRequest19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
    }

    @Test
    public void test4424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4424");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData3 = indexMetaData0.mapping("index.blocks.write");
        org.elasticsearch.cluster.metadata.IndexMetaData.State state4 = indexMetaData0.getState();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.IndexMetaData.Custom> strImmutableOpenMap5 = indexMetaData0.getCustoms();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNull(mappingMetaData3);
        org.junit.Assert.assertTrue("'" + state4 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state4.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertNotNull(strImmutableOpenMap5);
    }

    @Test
    public void test4425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4425");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.Version version2 = indexMetaData0.getCreationVersion();
        long long3 = indexMetaData0.getCreationDate();
        long long4 = indexMetaData0.getCreationDate();
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap5 = indexMetaData0.getActiveAllocationIds();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData7 = indexMetaData0.mapping("_na_");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("index.creation_date_string");
        boolean boolean10 = indexMetaData0.equals((java.lang.Object) "index.creation_date_string");
        org.elasticsearch.common.settings.Settings settings11 = indexMetaData0.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder12 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        // The following exception was thrown during execution in test generation
        try {
            long long14 = indexMetaData0.primaryTerm(100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 100");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(version2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap5);
        org.junit.Assert.assertNull(mappingMetaData7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(settings11);
        org.junit.Assert.assertNotNull(builder12);
    }

    @Test
    public void test4426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4426");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.Version version6 = indexMetaData0.getUpgradedVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap8 = indexMetaData0.getAliases();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData10 = indexMetaData0.mapping("index.");
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.MappingMetaData> strImmutableOpenMap11 = indexMetaData0.getMappings();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput12 = null;
        // The following exception was thrown during execution in test generation
        try {
            indexMetaData0.writeTo(streamOutput12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNotNull(version6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(strImmutableOpenMap8);
        org.junit.Assert.assertNull(mappingMetaData10);
        org.junit.Assert.assertNotNull(strImmutableOpenMap11);
    }

    @Test
    public void test4427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4427");
        org.elasticsearch.index.VersionType versionType1 = org.elasticsearch.index.VersionType.EXTERNAL_GTE;
        boolean boolean4 = versionType1.isVersionConflictForReads((long) 10, (long) (byte) -1);
        byte byte5 = versionType1.getValue();
        java.lang.String str8 = versionType1.explainConflictForReads(35L, (long) '#');
        boolean boolean11 = versionType1.isVersionConflictForReads((long) '4', (long) (byte) 1);
        java.lang.String str14 = versionType1.explainConflictForReads(10L, (long) (-1));
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.VersionType versionType15 = org.elasticsearch.index.VersionType.fromString("current version [10] is different than the one provided [-1]", versionType1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No version type match [current version [10] is different than the one provided [-1]]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(versionType1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 2 + "'", byte5 == (byte) 2);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "current version [35] is different than the one provided [35]" + "'", str8, "current version [35] is different than the one provided [35]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "current version [10] is different than the one provided [-1]" + "'", str14, "current version [10] is different than the one provided [-1]");
    }

    @Test
    public void test4428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4428");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.ActionRequest actionRequest6 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest6);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple9 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest7, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest8);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest10 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.action.ActionRequest actionRequest12 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest13 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest12);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest14 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple15 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest13, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple16 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest10, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest14);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest17 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue18 = bulkShardRequest17.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest19 = bulkShardRequest14.timeout(timeValue18);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest20 = new org.elasticsearch.action.bulk.BulkItemRequest((-1), (org.elasticsearch.action.ActionRequest) bulkShardRequest19);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult21 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult22 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest19, writeResult21);
        org.elasticsearch.action.update.UpdateHelper.Result result23 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest25 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest26 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest25);
        org.elasticsearch.action.update.UpdateHelper.Result result27 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest29 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest30 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest29);
        java.lang.Throwable throwable32 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult33 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult34 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result27, (org.elasticsearch.action.ActionRequest) bulkShardRequest29, false, throwable32, writeResult33);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple35 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest26, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest29);
        java.lang.Throwable throwable37 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult38 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult39 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result23, (org.elasticsearch.action.ActionRequest) bulkShardRequest29, true, throwable37, writeResult38);
        org.elasticsearch.index.shard.ShardId shardId40 = bulkShardRequest29.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue41 = bulkShardRequest29.timeout();
        org.elasticsearch.tasks.TaskId taskId42 = bulkShardRequest29.getParentTask();
        bulkShardRequest19.setParentTask(taskId42);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest44 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 10, (org.elasticsearch.action.ActionRequest) bulkShardRequest19);
        java.lang.Throwable throwable46 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult47 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult48 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest19, false, throwable46, writeResult47);
        boolean boolean49 = updateResult48.failure();
        org.elasticsearch.action.ActionRequest actionRequest50 = updateResult48.actionRequest;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest51 = updateResult48.request();
        org.elasticsearch.common.io.stream.StreamInput streamInput52 = null;
        // The following exception was thrown during execution in test generation
        try {
            bulkShardRequest51.readFrom(streamInput52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(timeValue18);
        org.junit.Assert.assertNotNull(bulkShardRequest19);
        org.junit.Assert.assertNull(shardId40);
        org.junit.Assert.assertNotNull(timeValue41);
        org.junit.Assert.assertNotNull(taskId42);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(actionRequest50);
        org.junit.Assert.assertNotNull(bulkShardRequest51);
    }

    @Test
    public void test4429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4429");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters5 = indexMetaData0.includeFilters();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.action.update.UpdateHelper.Result result9 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult15 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult16 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result9, (org.elasticsearch.action.ActionRequest) bulkShardRequest11, false, throwable14, writeResult15);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest8, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest11);
        org.elasticsearch.index.VersionType versionType18 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean22 = versionType18.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple23 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest8, versionType18);
        boolean boolean27 = versionType18.isVersionConflictForWrites((long) 0, (long) (short) 0, false);
        boolean boolean28 = indexMetaData0.equals((java.lang.Object) boolean27);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder29 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        long long30 = indexMetaData0.getCreationDate();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder31 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        long long33 = indexMetaData0.primaryTerm(0);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData34 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData35 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder36 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData35);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap37 = indexMetaData35.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters38 = indexMetaData35.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff39 = indexMetaData34.diff(indexMetaData35);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters40 = indexMetaData35.requireFilters();
        org.elasticsearch.Version version41 = indexMetaData35.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings42 = indexMetaData35.getSettings();
        org.elasticsearch.index.Index index43 = indexMetaData35.getMergeSourceIndex();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff44 = indexMetaData0.diff(indexMetaData35);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder45 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder46 = builder45.removeAllAliases();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder49 = builder46.putMapping("current version [52] is different than the one provided [1]", "current version [97] is higher than the one provided [100]");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to derive xcontent");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNull(discoveryNodeFilters5);
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertNotNull(indexMetaData34);
        org.junit.Assert.assertNotNull(indexMetaData35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap37);
        org.junit.Assert.assertNull(discoveryNodeFilters38);
        org.junit.Assert.assertNotNull(indexMetaDataDiff39);
        org.junit.Assert.assertNull(discoveryNodeFilters40);
        org.junit.Assert.assertNotNull(version41);
        org.junit.Assert.assertNotNull(settings42);
        org.junit.Assert.assertNull(index43);
        org.junit.Assert.assertNotNull(indexMetaDataDiff44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder46);
    }

    @Test
    public void test4430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4430");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.Version version2 = indexMetaData0.getCreationVersion();
        long long3 = indexMetaData0.getCreationDate();
        long long4 = indexMetaData0.getCreationDate();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters5 = indexMetaData0.requireFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = builder6.index("current version [0] is different than the one provided [100]");
        org.elasticsearch.common.settings.Settings settings9 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder10 = builder6.settings(settings9);
        org.elasticsearch.cluster.metadata.AliasMetaData aliasMetaData11 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder12 = builder6.putAlias(aliasMetaData11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(version2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(discoveryNodeFilters5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
    }

    @Test
    public void test4431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4431");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure10 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "", throwable8, "");
        org.elasticsearch.action.update.UpdateHelper.Result result11 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest12 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult15 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult16 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result11, (org.elasticsearch.action.ActionRequest) bulkShardRequest12, false, throwable14, writeResult15);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure10, (org.elasticsearch.transport.TransportMessage) bulkShardRequest12);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest19 = bulkShardRequest12.index("index.version.created");
        org.elasticsearch.common.transport.TransportAddress transportAddress20 = bulkShardRequest12.remoteAddress();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest12);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting23 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result25 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest27 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest28 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest27);
        org.elasticsearch.action.update.UpdateHelper.Result result29 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest31 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest32 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest31);
        java.lang.Throwable throwable34 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult35 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult36 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result29, (org.elasticsearch.action.ActionRequest) bulkShardRequest31, false, throwable34, writeResult35);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple37 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest28, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest31);
        org.elasticsearch.tasks.TaskId taskId38 = null;
        bulkShardRequest31.setParentTask(taskId38);
        org.elasticsearch.index.shard.ShardId shardId40 = bulkShardRequest31.shardId();
        bulkShardRequest31.seqNo((long) 0);
        java.lang.Throwable throwable44 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult45 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult46 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result25, (org.elasticsearch.action.ActionRequest) bulkShardRequest31, false, throwable44, writeResult45);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException47 = bulkShardRequest31.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure49 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting23, "index.version.upgraded", (java.lang.Throwable) actionRequestValidationException47, "index.blocks.write");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult50 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult51 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result4, (org.elasticsearch.action.ActionRequest) bulkShardRequest12, false, (java.lang.Throwable) actionRequestValidationException47, writeResult50);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure53 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "indices:data/write/bulk[s]", (java.lang.Throwable) actionRequestValidationException47, "_na_");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure55 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "current version [10] is higher than the one provided [98]", (java.lang.Throwable) actionRequestValidationException47, "");
        java.lang.String str56 = shardFailure55.reason;
        org.junit.Assert.assertNotNull(bulkShardRequest19);
        org.junit.Assert.assertNull(transportAddress20);
        org.junit.Assert.assertNull(shardId40);
        org.junit.Assert.assertNotNull(actionRequestValidationException47);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "current version [10] is higher than the one provided [98]" + "'", str56, "current version [10] is higher than the one provided [98]");
    }

    @Test
    public void test4432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4432");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest1 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest1);
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, false, throwable8, writeResult9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.index.VersionType versionType12 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean16 = versionType12.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest2, versionType12);
        boolean boolean21 = versionType12.isVersionConflictForWrites(10L, (long) (byte) 0, false);
        org.elasticsearch.index.VersionType versionType22 = versionType12.versionTypeForReplicationAndRecovery();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData23 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder24 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData23);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap25 = indexMetaData23.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet26 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple27 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData23, indexShardStateSet26);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder28 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData23);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData29 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder30 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData29);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap31 = indexMetaData29.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet32 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple33 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData29, indexShardStateSet32);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters34 = indexMetaData29.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder35 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData29);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff36 = indexMetaData23.diff(indexMetaData29);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData37 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder39 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder40 = builder39.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder42 = builder40.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder45 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int46 = builder45.numberOfShards();
        java.lang.String[] strArray50 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet51 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet51, strArray50);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder53 = builder45.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet51);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder54 = builder40.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet51);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple55 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData37, (java.lang.Iterable<java.lang.String>) strSet51);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap56 = indexMetaData37.getAliases();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff57 = indexMetaData23.diff(indexMetaData37);
        org.elasticsearch.cluster.metadata.IndexMetaData.State state58 = indexMetaData37.getState();
        org.elasticsearch.cluster.routing.ShardRouting shardRouting59 = null;
        java.lang.Throwable throwable61 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure63 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting59, "", throwable61, "");
        org.elasticsearch.action.update.UpdateHelper.Result result64 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest65 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable67 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult68 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult69 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result64, (org.elasticsearch.action.ActionRequest) bulkShardRequest65, false, throwable67, writeResult68);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple70 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure63, (org.elasticsearch.transport.TransportMessage) bulkShardRequest65);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest72 = bulkShardRequest65.index("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue73 = bulkShardRequest72.timeout();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData.State, org.elasticsearch.common.unit.TimeValue> stateTuple74 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData.State, org.elasticsearch.common.unit.TimeValue>(state58, timeValue73);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Writeable, org.elasticsearch.cluster.metadata.IndexMetaData.State> writeableTuple75 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Writeable, org.elasticsearch.cluster.metadata.IndexMetaData.State>((org.elasticsearch.common.io.stream.Writeable) versionType22, state58);
        java.lang.Class<?> wildcardClass76 = versionType22.getClass();
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertNotNull(indexMetaData23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap25);
        org.junit.Assert.assertNotNull(indexShardStateSet26);
        org.junit.Assert.assertNotNull(indexMetaData29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap31);
        org.junit.Assert.assertNotNull(indexShardStateSet32);
        org.junit.Assert.assertNull(discoveryNodeFilters34);
        org.junit.Assert.assertNotNull(indexMetaDataDiff36);
        org.junit.Assert.assertNotNull(indexMetaData37);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple55);
        org.junit.Assert.assertNotNull(strImmutableOpenMap56);
        org.junit.Assert.assertNotNull(indexMetaDataDiff57);
        org.junit.Assert.assertTrue("'" + state58 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state58.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertNotNull(bulkShardRequest72);
        org.junit.Assert.assertNotNull(timeValue73);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test4433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4433");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData6 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData6);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap8 = indexMetaData6.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet9 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple10 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData6, indexShardStateSet9);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters11 = indexMetaData6.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder12 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData6);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff13 = indexMetaData0.diff(indexMetaData6);
        int int14 = indexMetaData0.getNumberOfReplicas();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters15 = indexMetaData0.getInitialRecoveryFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder18 = builder16.removeAlias("current version [97] is different than the one provided [97]");
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNotNull(indexMetaData6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap8);
        org.junit.Assert.assertNotNull(indexShardStateSet9);
        org.junit.Assert.assertNull(discoveryNodeFilters11);
        org.junit.Assert.assertNotNull(indexMetaDataDiff13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(discoveryNodeFilters15);
        org.junit.Assert.assertNotNull(builder18);
    }

    @Test
    public void test4434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4434");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.Version version2 = indexMetaData0.getCreationVersion();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters3 = indexMetaData0.includeFilters();
        int int4 = indexMetaData0.getNumberOfReplicas();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.Version version6 = indexMetaData0.getCreationVersion();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters7 = indexMetaData0.includeFilters();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.MappingMetaData> strImmutableOpenMap8 = indexMetaData0.getMappings();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder9 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params10 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder.toXContent(indexMetaData0, xContentBuilder9, params10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(version2);
        org.junit.Assert.assertNull(discoveryNodeFilters3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(version6);
        org.junit.Assert.assertNull(discoveryNodeFilters7);
        org.junit.Assert.assertNotNull(strImmutableOpenMap8);
        org.junit.Assert.assertNotNull(params10);
    }

    @Test
    public void test4435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4435");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int2 = builder1.numberOfShards();
        java.lang.String[] strArray6 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = builder1.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet7);
        org.elasticsearch.cluster.metadata.IndexMetaData.State state10 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = builder9.state(state10);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder13 = builder9.removeAlias("hi!");
        long long14 = builder9.version();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder9.numberOfReplicas((int) (byte) 10);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder18 = builder9.numberOfShards(10);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder20 = builder9.removeAlias("index.shared_filesystem");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder22 = builder9.removeAlias("current version [0] is different than the one provided [100]");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder24 = builder22.index("index.uuid");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder26 = builder24.numberOfReplicas((int) '4');
        // The following exception was thrown during execution in test generation
        try {
            long long28 = builder26.primaryTerm((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 35");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
    }

    @Test
    public void test4436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4436");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.VersionType versionType1 = org.elasticsearch.index.VersionType.fromString("current version [1] is different than the one provided [32]");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No version type match [current version [1] is different than the one provided [32]]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test4437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4437");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters5 = indexMetaData0.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters7 = indexMetaData0.excludeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.index.Index index9 = indexMetaData0.getMergeSourceIndex();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder10 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        int int11 = indexMetaData0.getTotalNumberOfShards();
        org.elasticsearch.action.update.UpdateHelper.Result result14 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest16 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest17 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest16);
        org.elasticsearch.action.update.UpdateHelper.Result result18 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest20 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest20);
        java.lang.Throwable throwable23 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult24 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult25 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result18, (org.elasticsearch.action.ActionRequest) bulkShardRequest20, false, throwable23, writeResult24);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple26 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest17, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest20);
        java.lang.Throwable throwable28 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult29 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult30 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result14, (org.elasticsearch.action.ActionRequest) bulkShardRequest20, true, throwable28, writeResult29);
        org.elasticsearch.index.shard.ShardId shardId31 = bulkShardRequest20.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue32 = bulkShardRequest20.timeout();
        long long33 = bulkShardRequest20.seqNo();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest34 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest20);
        org.elasticsearch.action.support.IndicesOptions indicesOptions35 = bulkShardRequest20.indicesOptions();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest36 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 3, (org.elasticsearch.action.ActionRequest) bulkShardRequest20);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting38 = null;
        java.lang.Throwable throwable40 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting38, "", throwable40, "");
        org.elasticsearch.action.update.UpdateHelper.Result result43 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest44 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable46 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult47 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult48 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result43, (org.elasticsearch.action.ActionRequest) bulkShardRequest44, false, throwable46, writeResult47);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple49 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure42, (org.elasticsearch.transport.TransportMessage) bulkShardRequest44);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest51 = bulkShardRequest44.index("hi!");
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest52 = new org.elasticsearch.action.bulk.BulkItemRequest((int) '#', (org.elasticsearch.action.ActionRequest) bulkShardRequest51);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest53 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.String str54 = bulkShardRequest53.index();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple55 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest52, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest53);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest58 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest59 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest58);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel60 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest61 = bulkShardRequest58.consistencyLevel(writeConsistencyLevel60);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest62 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest61);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple63 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest52, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest61);
        org.elasticsearch.action.ActionRequest actionRequest66 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest67 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest66);
        org.elasticsearch.action.ActionRequest actionRequest70 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest71 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest70);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest72 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple73 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest71, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest72);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest74 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest72);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple75 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest67, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest72);
        org.elasticsearch.common.transport.TransportAddress transportAddress76 = null;
        bulkShardRequest72.remoteAddress(transportAddress76);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest78 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest72);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>, org.elasticsearch.action.IndicesRequest> bulkItemRequestTupleTuple79 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>, org.elasticsearch.action.IndicesRequest>(bulkItemRequestTuple63, (org.elasticsearch.action.IndicesRequest) bulkShardRequest72);
        org.elasticsearch.common.transport.TransportAddress transportAddress80 = null;
        bulkShardRequest72.remoteAddress(transportAddress80);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple82 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest36, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest72);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData83 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder84 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData83);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap85 = indexMetaData83.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet86 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple87 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData83, indexShardStateSet86);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters88 = indexMetaData83.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder89 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData83);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters90 = indexMetaData83.excludeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder91 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData83);
        boolean boolean92 = bulkItemRequestTuple82.equals((java.lang.Object) indexMetaData83);
        org.elasticsearch.common.settings.Settings settings93 = indexMetaData83.getSettings();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff94 = indexMetaData0.diff(indexMetaData83);
        long long95 = indexMetaData83.getVersion();
        org.elasticsearch.common.settings.Settings settings96 = indexMetaData83.getSettings();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNull(discoveryNodeFilters5);
        org.junit.Assert.assertNull(discoveryNodeFilters7);
        org.junit.Assert.assertNull(index9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNull(shardId31);
        org.junit.Assert.assertNotNull(timeValue32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertNotNull(indicesOptions35);
        org.junit.Assert.assertNotNull(bulkShardRequest51);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(bulkShardRequest61);
        org.junit.Assert.assertNotNull(indexMetaData83);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap85);
        org.junit.Assert.assertNotNull(indexShardStateSet86);
        org.junit.Assert.assertNull(discoveryNodeFilters88);
        org.junit.Assert.assertNull(discoveryNodeFilters90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(settings93);
        org.junit.Assert.assertNotNull(indexMetaDataDiff94);
        org.junit.Assert.assertTrue("'" + long95 + "' != '" + 1L + "'", long95 == 1L);
        org.junit.Assert.assertNotNull(settings96);
    }

    @Test
    public void test4438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4438");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest1 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest1);
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, false, throwable8, writeResult9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.index.VersionType versionType12 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean16 = versionType12.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest2, versionType12);
        boolean boolean21 = versionType12.isVersionConflictForWrites(10L, (long) (byte) 0, false);
        boolean boolean23 = versionType12.validateVersionForReads((long) (byte) 100);
        long long26 = versionType12.updateVersion((long) (byte) 0, (long) (byte) -1);
        org.elasticsearch.index.VersionType versionType27 = versionType12.versionTypeForReplicationAndRecovery();
        boolean boolean29 = versionType12.validateVersionForReads(10L);
        org.elasticsearch.index.VersionType versionType30 = versionType12.versionTypeForReplicationAndRecovery();
        boolean boolean32 = versionType12.validateVersionForWrites(11L);
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(versionType27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(versionType30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test4439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4439");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters3 = indexMetaData0.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap5 = indexMetaData0.getAliases();
        int int6 = indexMetaData0.getTotalNumberOfShards();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput7 = null;
        // The following exception was thrown during execution in test generation
        try {
            indexMetaData0.writeTo(streamOutput7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNull(discoveryNodeFilters3);
        org.junit.Assert.assertNotNull(strImmutableOpenMap5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
    }

    @Test
    public void test4440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4440");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest1 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest1);
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, false, throwable8, writeResult9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest13 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest13);
        org.elasticsearch.action.update.UpdateHelper.Result result15 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest17 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest18 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest17);
        java.lang.Throwable throwable20 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult21 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult22 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result15, (org.elasticsearch.action.ActionRequest) bulkShardRequest17, false, throwable20, writeResult21);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple23 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest14, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest17);
        org.elasticsearch.tasks.TaskId taskId24 = null;
        bulkShardRequest17.setParentTask(taskId24);
        boolean boolean26 = bulkItemRequestTuple11.equals((java.lang.Object) taskId24);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting27 = null;
        java.lang.Throwable throwable29 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure31 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting27, "hi!", throwable29, "hi!");
        boolean boolean32 = bulkItemRequestTuple11.equals((java.lang.Object) throwable29);
        org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestReplicationRequest33 = bulkItemRequestTuple11.v2();
        org.elasticsearch.action.update.UpdateHelper.Result result34 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result35 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest37 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest38 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest37);
        org.elasticsearch.action.update.UpdateHelper.Result result39 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest41 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest42 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest41);
        java.lang.Throwable throwable44 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult45 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult46 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result39, (org.elasticsearch.action.ActionRequest) bulkShardRequest41, false, throwable44, writeResult45);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple47 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest38, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest41);
        org.elasticsearch.tasks.TaskId taskId48 = null;
        bulkShardRequest41.setParentTask(taskId48);
        org.elasticsearch.index.shard.ShardId shardId50 = bulkShardRequest41.shardId();
        bulkShardRequest41.seqNo((long) 0);
        java.lang.Throwable throwable54 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult55 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult56 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result35, (org.elasticsearch.action.ActionRequest) bulkShardRequest41, false, throwable54, writeResult55);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException57 = bulkShardRequest41.validate();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult58 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult59 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result34, (org.elasticsearch.action.ActionRequest) bulkShardRequest41, writeResult58);
        org.elasticsearch.common.transport.TransportAddress transportAddress60 = null;
        bulkShardRequest41.remoteAddress(transportAddress60);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest63 = bulkShardRequest41.index("current version [10] is different than the one provided [32]");
        org.elasticsearch.action.update.UpdateHelper.Result result64 = null;
        org.elasticsearch.action.ActionRequest actionRequest67 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest68 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest67);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest69 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple70 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest68, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest69);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest71 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest69);
        bulkShardRequest69.primaryTerm((long) 1);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult74 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult75 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result64, (org.elasticsearch.action.ActionRequest) bulkShardRequest69, writeResult74);
        org.elasticsearch.tasks.TaskId taskId76 = bulkShardRequest69.getParentTask();
        bulkShardRequest63.setParentTask(taskId76);
        bulkShardRequestReplicationRequest33.setParentTask(taskId76);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(bulkShardRequestReplicationRequest33);
        org.junit.Assert.assertNull(shardId50);
        org.junit.Assert.assertNotNull(actionRequestValidationException57);
        org.junit.Assert.assertNotNull(bulkShardRequest63);
        org.junit.Assert.assertNotNull(taskId76);
    }

    @Test
    public void test4441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4441");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest1 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest1);
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, false, throwable8, writeResult9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.index.VersionType versionType12 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean16 = versionType12.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest2, versionType12);
        boolean boolean21 = versionType12.isVersionConflictForWrites(10L, (long) (byte) 0, false);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting22 = null;
        java.lang.Throwable throwable24 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure26 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting22, "", throwable24, "");
        org.elasticsearch.common.collect.Tuple<java.lang.Enum<org.elasticsearch.index.VersionType>, org.elasticsearch.index.shard.IndexShard.ShardFailure> versionTypeEnumTuple27 = new org.elasticsearch.common.collect.Tuple<java.lang.Enum<org.elasticsearch.index.VersionType>, org.elasticsearch.index.shard.IndexShard.ShardFailure>((java.lang.Enum<org.elasticsearch.index.VersionType>) versionType12, shardFailure26);
        java.lang.Class<?> wildcardClass28 = versionTypeEnumTuple27.getClass();
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test4442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4442");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest((-1), (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest(0, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        boolean boolean8 = bulkShardRequest4.getShouldPersistResult();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 2, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        long long10 = bulkShardRequest4.seqNo();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
    }

    @Test
    public void test4443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4443");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters4 = indexMetaData0.requireFilters();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData6 = indexMetaData0.mappingOrDefault("current version [97] is different than the one provided [35]");
        org.elasticsearch.index.Index index7 = indexMetaData0.getMergeSourceIndex();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData8 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder10 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = builder10.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder13 = builder11.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int17 = builder16.numberOfShards();
        java.lang.String[] strArray21 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet22 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet22, strArray21);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder24 = builder16.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet22);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder25 = builder11.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet22);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple26 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData8, (java.lang.Iterable<java.lang.String>) strSet22);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap27 = indexMetaData8.getAliases();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData29 = indexMetaData8.mapping("index.version.created");
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters30 = indexMetaData8.requireFilters();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap31 = indexMetaData8.getAliases();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters32 = indexMetaData8.requireFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff33 = indexMetaData0.diff(indexMetaData8);
        boolean boolean35 = indexMetaData0.isSameUUID("current version [97] is higher than the one provided [100]");
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(discoveryNodeFilters4);
        org.junit.Assert.assertNull(mappingMetaData6);
        org.junit.Assert.assertNull(index7);
        org.junit.Assert.assertNotNull(indexMetaData8);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple26);
        org.junit.Assert.assertNotNull(strImmutableOpenMap27);
        org.junit.Assert.assertNull(mappingMetaData29);
        org.junit.Assert.assertNull(discoveryNodeFilters30);
        org.junit.Assert.assertNotNull(strImmutableOpenMap31);
        org.junit.Assert.assertNull(discoveryNodeFilters32);
        org.junit.Assert.assertNotNull(indexMetaDataDiff33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test4444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4444");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder2.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder3.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int9 = builder8.numberOfShards();
        java.lang.String[] strArray13 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder8.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder3.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple18 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData0, (java.lang.Iterable<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap19 = indexMetaData0.getAliases();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData21 = indexMetaData0.mapping("index.version.created");
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters22 = indexMetaData0.requireFilters();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap23 = indexMetaData0.getAliases();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters24 = indexMetaData0.requireFilters();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData26 = indexMetaData0.mapping("state-");
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.IndexMetaData.Custom> strImmutableOpenMap27 = indexMetaData0.getCustoms();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple18);
        org.junit.Assert.assertNotNull(strImmutableOpenMap19);
        org.junit.Assert.assertNull(mappingMetaData21);
        org.junit.Assert.assertNull(discoveryNodeFilters22);
        org.junit.Assert.assertNotNull(strImmutableOpenMap23);
        org.junit.Assert.assertNull(discoveryNodeFilters24);
        org.junit.Assert.assertNull(mappingMetaData26);
        org.junit.Assert.assertNotNull(strImmutableOpenMap27);
    }

    @Test
    public void test4445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4445");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.ActionRequest actionRequest1 = null;
        java.lang.Throwable throwable3 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult4 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult5 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, actionRequest1, false, throwable3, writeResult4);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult6 = updateResult5.writeResult;
        java.lang.Throwable throwable7 = updateResult5.error;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult8 = updateResult5.writeResult;
        org.junit.Assert.assertNull(writeResult6);
        org.junit.Assert.assertNull(throwable7);
        org.junit.Assert.assertNull(writeResult8);
    }

    @Test
    public void test4446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4446");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("current version [32] is different than the one provided [32]");
        org.junit.Assert.assertNotNull(builder1);
    }

    @Test
    public void test4447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4447");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        org.elasticsearch.action.update.UpdateHelper.Result result7 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest10 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        java.lang.Throwable throwable12 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult13 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult14 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result7, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, false, throwable12, writeResult13);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple15 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest6, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest9);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest16 = new org.elasticsearch.action.bulk.BulkItemRequest((int) 'a', (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        java.lang.Throwable throwable18 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult19 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult20 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, false, throwable18, writeResult19);
        org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestReplicationRequest21 = updateResult20.request();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 100, (org.elasticsearch.action.ActionRequest) bulkShardRequestReplicationRequest21);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult23 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult24 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequestReplicationRequest21, writeResult23);
        boolean boolean25 = updateResult24.failure();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult26 = updateResult24.writeResult;
        org.junit.Assert.assertNotNull(bulkShardRequestReplicationRequest21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(writeResult26);
    }

    @Test
    public void test4448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4448");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int2 = builder1.numberOfShards();
        java.lang.String[] strArray6 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = builder1.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet7);
        org.elasticsearch.cluster.metadata.IndexMetaData.Custom custom11 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder12 = builder1.putCustom("state-", custom11);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData14 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData15 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData15);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap17 = indexMetaData15.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters18 = indexMetaData15.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff19 = indexMetaData14.diff(indexMetaData15);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters20 = indexMetaData15.requireFilters();
        org.elasticsearch.Version version21 = indexMetaData15.getCreationVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder22 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData15);
        org.elasticsearch.action.ActionRequest actionRequest25 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest26 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest25);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest27 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple28 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest26, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest27);
        boolean boolean29 = bulkShardRequest27.getShouldPersistResult();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder31 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int32 = builder31.numberOfShards();
        java.lang.String[] strArray36 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet37 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet37, strArray36);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder39 = builder31.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet37);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>> streamableTuple40 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>>((org.elasticsearch.common.io.stream.Streamable) bulkShardRequest27, strSet37);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder41 = builder22.putActiveAllocationIds((int) (short) -1, (java.util.Set<java.lang.String>) strSet37);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder42 = builder12.putActiveAllocationIds((int) (short) 100, (java.util.Set<java.lang.String>) strSet37);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(indexMetaData14);
        org.junit.Assert.assertNotNull(indexMetaData15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap17);
        org.junit.Assert.assertNull(discoveryNodeFilters18);
        org.junit.Assert.assertNotNull(indexMetaDataDiff19);
        org.junit.Assert.assertNull(discoveryNodeFilters20);
        org.junit.Assert.assertNotNull(version21);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
    }

    @Test
    public void test4449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4449");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest3 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest3);
        org.elasticsearch.action.update.UpdateHelper.Result result5 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult11 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult12 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result5, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, false, throwable10, writeResult11);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest7);
        org.elasticsearch.tasks.TaskId taskId14 = null;
        bulkShardRequest7.setParentTask(taskId14);
        org.elasticsearch.index.shard.ShardId shardId16 = bulkShardRequest7.shardId();
        bulkShardRequest7.seqNo((long) 0);
        org.elasticsearch.action.support.IndicesOptions indicesOptions19 = bulkShardRequest7.indicesOptions();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest20 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        bulkShardRequest7.primaryTerm((long) ' ');
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult23 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult24 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, writeResult23);
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertNotNull(indicesOptions19);
    }

    @Test
    public void test4450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4450");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters3 = indexMetaData0.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.apache.lucene.util.Version version5 = indexMetaData0.getMinimumCompatibleVersion();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters6 = indexMetaData0.requireFilters();
        org.elasticsearch.common.settings.Settings settings7 = indexMetaData0.getSettings();
        boolean boolean8 = org.elasticsearch.cluster.metadata.IndexMetaData.isIndexUsingShadowReplicas(settings7);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        org.elasticsearch.action.update.UpdateHelper.Result result13 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest15 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest16 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest15);
        java.lang.Throwable throwable18 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult19 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult20 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result13, (org.elasticsearch.action.ActionRequest) bulkShardRequest15, false, throwable18, writeResult19);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple21 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest12, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest15);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = new org.elasticsearch.action.bulk.BulkItemRequest((int) 'a', (org.elasticsearch.action.ActionRequest) bulkShardRequest15);
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting23 = org.elasticsearch.cluster.metadata.IndexMetaData.INDEX_NUMBER_OF_REPLICAS_SETTING;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.common.xcontent.ToXContent> streamableTuple24 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.common.xcontent.ToXContent>((org.elasticsearch.common.io.stream.Streamable) bulkShardRequest15, (org.elasticsearch.common.xcontent.ToXContent) intSetting23);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.settings.Settings, org.elasticsearch.action.support.ToXContentToBytes> settingsTuple25 = org.elasticsearch.common.collect.Tuple.tuple(settings7, (org.elasticsearch.action.support.ToXContentToBytes) intSetting23);
        org.elasticsearch.common.settings.Settings settings26 = org.elasticsearch.cluster.metadata.IndexMetaData.addHumanReadableSettings(settings7);
        boolean boolean27 = org.elasticsearch.cluster.metadata.IndexMetaData.isOnSharedFilesystem(settings26);
        org.elasticsearch.transport.TransportService transportService28 = null;
        org.elasticsearch.cluster.service.ClusterService clusterService29 = null;
        org.elasticsearch.indices.IndicesService indicesService30 = null;
        org.elasticsearch.threadpool.ThreadPool threadPool31 = null;
        org.elasticsearch.cluster.action.shard.ShardStateAction shardStateAction32 = null;
        org.elasticsearch.cluster.action.index.MappingUpdatedAction mappingUpdatedAction33 = null;
        org.elasticsearch.action.update.UpdateHelper updateHelper34 = null;
        org.elasticsearch.action.support.ActionFilters actionFilters35 = null;
        org.elasticsearch.cluster.metadata.IndexNameExpressionResolver indexNameExpressionResolver36 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.bulk.TransportShardBulkAction transportShardBulkAction37 = new org.elasticsearch.action.bulk.TransportShardBulkAction(settings26, transportService28, clusterService29, indicesService30, threadPool31, shardStateAction32, mappingUpdatedAction33, updateHelper34, actionFilters35, indexNameExpressionResolver36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNull(discoveryNodeFilters3);
        org.junit.Assert.assertNull(version5);
        org.junit.Assert.assertNull(discoveryNodeFilters6);
        org.junit.Assert.assertNotNull(settings7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(intSetting23);
        org.junit.Assert.assertNotNull(settingsTuple25);
        org.junit.Assert.assertNotNull(settings26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test4451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4451");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue5 = bulkShardRequest4.timeout();
        java.lang.String str6 = bulkShardRequest4.index();
        org.elasticsearch.index.shard.ShardId shardId7 = bulkShardRequest4.shardId();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 10, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest10 = new org.elasticsearch.action.bulk.BulkItemRequest((int) '#', (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        bulkShardRequest4.seqNo((long) 32);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest13 = new org.elasticsearch.action.bulk.BulkItemRequest((int) '4', (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.update.UpdateHelper.Result result15 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest17 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest18 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest17);
        org.elasticsearch.action.update.UpdateHelper.Result result19 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest21 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest21);
        java.lang.Throwable throwable24 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult25 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult26 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result19, (org.elasticsearch.action.ActionRequest) bulkShardRequest21, false, throwable24, writeResult25);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple27 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest18, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest21);
        java.lang.Throwable throwable29 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult30 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult31 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result15, (org.elasticsearch.action.ActionRequest) bulkShardRequest21, true, throwable29, writeResult30);
        org.elasticsearch.index.shard.ShardId shardId32 = bulkShardRequest21.shardId();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest33 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest21);
        org.elasticsearch.common.unit.TimeValue timeValue34 = bulkShardRequest21.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest36 = bulkShardRequest21.index("");
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest38 = bulkShardRequest21.setShardId(shardId37);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException39 = bulkShardRequest21.validate();
        bulkShardRequest21.seqNo((long) (short) 1);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple42 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest13, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest21);
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertNull(shardId32);
        org.junit.Assert.assertNotNull(timeValue34);
        org.junit.Assert.assertNotNull(bulkShardRequest36);
        org.junit.Assert.assertNotNull(bulkShardRequest38);
        org.junit.Assert.assertNull(actionRequestValidationException39);
    }

    @Test
    public void test4452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4452");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result8 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest10 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest11 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest10);
        org.elasticsearch.action.update.UpdateHelper.Result result12 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest14 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest15 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest14);
        java.lang.Throwable throwable17 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult18 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult19 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result12, (org.elasticsearch.action.ActionRequest) bulkShardRequest14, false, throwable17, writeResult18);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple20 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest11, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest14);
        org.elasticsearch.tasks.TaskId taskId21 = null;
        bulkShardRequest14.setParentTask(taskId21);
        org.elasticsearch.index.shard.ShardId shardId23 = bulkShardRequest14.shardId();
        bulkShardRequest14.seqNo((long) 0);
        java.lang.Throwable throwable27 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult28 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult29 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result8, (org.elasticsearch.action.ActionRequest) bulkShardRequest14, false, throwable27, writeResult28);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException30 = bulkShardRequest14.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException30, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "update", (java.lang.Throwable) actionRequestValidationException30, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "_na_", (java.lang.Throwable) actionRequestValidationException30, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "current version [10] is higher than the one provided [98]", (java.lang.Throwable) actionRequestValidationException30, "index.blocks.metadata");
        org.junit.Assert.assertNull(shardId23);
        org.junit.Assert.assertNotNull(actionRequestValidationException30);
    }

    @Test
    public void test4453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4453");
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result5 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult11 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult12 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result5, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, false, throwable10, writeResult11);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest13 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult14 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult15 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, writeResult14);
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = bulkShardRequest7.remoteAddress();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult17 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult18 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, writeResult17);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest19 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest20 = new org.elasticsearch.action.bulk.BulkItemRequest(97, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.junit.Assert.assertNull(transportAddress16);
    }

    @Test
    public void test4454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4454");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.ActionRequest actionRequest7 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest7);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple10 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest8, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest9);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest11 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        org.elasticsearch.action.ActionRequest actionRequest13 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest13);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest15 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple16 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest14, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest15);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest11, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest15);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest18 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue19 = bulkShardRequest18.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest20 = bulkShardRequest15.timeout(timeValue19);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest((-1), (org.elasticsearch.action.ActionRequest) bulkShardRequest20);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult22 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult23 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest20, writeResult22);
        org.elasticsearch.action.update.UpdateHelper.Result result24 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest26 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest27 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest26);
        org.elasticsearch.action.update.UpdateHelper.Result result28 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest30 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest31 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest30);
        java.lang.Throwable throwable33 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult34 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult35 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result28, (org.elasticsearch.action.ActionRequest) bulkShardRequest30, false, throwable33, writeResult34);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple36 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest27, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest30);
        java.lang.Throwable throwable38 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult39 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult40 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result24, (org.elasticsearch.action.ActionRequest) bulkShardRequest30, true, throwable38, writeResult39);
        org.elasticsearch.index.shard.ShardId shardId41 = bulkShardRequest30.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue42 = bulkShardRequest30.timeout();
        org.elasticsearch.tasks.TaskId taskId43 = bulkShardRequest30.getParentTask();
        bulkShardRequest20.setParentTask(taskId43);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest45 = new org.elasticsearch.action.bulk.BulkItemRequest(0, (org.elasticsearch.action.ActionRequest) bulkShardRequest20);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult46 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult47 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest20, writeResult46);
        bulkShardRequest20.primaryTerm(2L);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult50 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult51 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest20, writeResult50);
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertNotNull(bulkShardRequest20);
        org.junit.Assert.assertNull(shardId41);
        org.junit.Assert.assertNotNull(timeValue42);
        org.junit.Assert.assertNotNull(taskId43);
    }

    @Test
    public void test4455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4455");
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        org.elasticsearch.action.update.UpdateHelper.Result result7 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest10 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        java.lang.Throwable throwable12 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult13 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult14 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result7, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, false, throwable12, writeResult13);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple15 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest6, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest9);
        org.elasticsearch.tasks.TaskId taskId16 = null;
        bulkShardRequest9.setParentTask(taskId16);
        org.elasticsearch.index.shard.ShardId shardId18 = bulkShardRequest9.shardId();
        bulkShardRequest9.seqNo((long) 0);
        java.lang.Throwable throwable22 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult23 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult24 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, false, throwable22, writeResult23);
        long long25 = bulkShardRequest9.seqNo();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult26 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult27 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, writeResult26);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult28 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult29 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, writeResult28);
        boolean boolean30 = updateResult29.failure();
        org.elasticsearch.action.ActionRequest actionRequest31 = updateResult29.actionRequest;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest32 = new org.elasticsearch.action.bulk.BulkItemRequest(32, actionRequest31);
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(actionRequest31);
    }

    @Test
    public void test4456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4456");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest1 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest1);
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, false, throwable8, writeResult9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.index.VersionType versionType12 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean16 = versionType12.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest2, versionType12);
        boolean boolean21 = versionType12.isVersionConflictForWrites(10L, (long) (byte) 0, false);
        boolean boolean23 = versionType12.validateVersionForReads(10L);
        boolean boolean26 = versionType12.isVersionConflictForReads(100L, (long) 'a');
        long long29 = versionType12.updateVersion((long) (byte) 1, (long) (byte) 10);
        long long32 = versionType12.updateVersion((long) (short) 1, (long) 1);
        boolean boolean34 = versionType12.validateVersionForReads((long) 52);
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 10L + "'", long29 == 10L);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1L + "'", long32 == 1L);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test4457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4457");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result4 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest6 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest6);
        org.elasticsearch.action.update.UpdateHelper.Result result8 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest10 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest11 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest10);
        java.lang.Throwable throwable13 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult14 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult15 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result8, (org.elasticsearch.action.ActionRequest) bulkShardRequest10, false, throwable13, writeResult14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple16 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest7, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest10);
        java.lang.Throwable throwable18 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult19 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult20 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result4, (org.elasticsearch.action.ActionRequest) bulkShardRequest10, true, throwable18, writeResult19);
        org.elasticsearch.index.shard.ShardId shardId21 = bulkShardRequest10.shardId();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest10);
        org.elasticsearch.common.unit.TimeValue timeValue23 = bulkShardRequest10.timeout();
        long long24 = bulkShardRequest10.seqNo();
        org.elasticsearch.action.update.UpdateHelper.Result result26 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result27 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest29 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest30 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest29);
        java.lang.Throwable throwable32 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult33 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult34 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result27, (org.elasticsearch.action.ActionRequest) bulkShardRequest29, false, throwable32, writeResult33);
        org.elasticsearch.action.update.UpdateHelper.Result result36 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest37 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue38 = bulkShardRequest37.timeout();
        java.lang.String str39 = bulkShardRequest37.index();
        org.elasticsearch.common.unit.TimeValue timeValue40 = bulkShardRequest37.timeout();
        org.elasticsearch.cluster.routing.ShardRouting shardRouting42 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting44 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result46 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest48 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest49 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest48);
        org.elasticsearch.action.update.UpdateHelper.Result result50 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest52 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest53 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest52);
        java.lang.Throwable throwable55 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult56 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult57 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result50, (org.elasticsearch.action.ActionRequest) bulkShardRequest52, false, throwable55, writeResult56);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple58 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest49, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest52);
        org.elasticsearch.tasks.TaskId taskId59 = null;
        bulkShardRequest52.setParentTask(taskId59);
        org.elasticsearch.index.shard.ShardId shardId61 = bulkShardRequest52.shardId();
        bulkShardRequest52.seqNo((long) 0);
        java.lang.Throwable throwable65 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult66 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult67 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result46, (org.elasticsearch.action.ActionRequest) bulkShardRequest52, false, throwable65, writeResult66);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException68 = bulkShardRequest52.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure70 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting44, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException68, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure72 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting42, "update", (java.lang.Throwable) actionRequestValidationException68, "index.version.created_string");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult73 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult74 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result36, (org.elasticsearch.action.ActionRequest) bulkShardRequest37, false, (java.lang.Throwable) actionRequestValidationException68, writeResult73);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult75 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult76 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result26, (org.elasticsearch.action.ActionRequest) bulkShardRequest29, false, (java.lang.Throwable) actionRequestValidationException68, writeResult75);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult77 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult78 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest10, true, (java.lang.Throwable) actionRequestValidationException68, writeResult77);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest79 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 100, (org.elasticsearch.action.ActionRequest) bulkShardRequest10);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult80 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult81 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest10, writeResult80);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest83 = bulkShardRequest10.index("index.auto_expand_replicas");
        java.lang.String str84 = bulkShardRequest10.index();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String[] strArray85 = bulkShardRequest10.indices();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId21);
        org.junit.Assert.assertNotNull(timeValue23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNotNull(timeValue38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(timeValue40);
        org.junit.Assert.assertNull(shardId61);
        org.junit.Assert.assertNotNull(actionRequestValidationException68);
        org.junit.Assert.assertNotNull(bulkShardRequest83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "index.auto_expand_replicas" + "'", str84, "index.auto_expand_replicas");
    }

    @Test
    public void test4458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4458");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest1 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest1);
        org.elasticsearch.action.ActionRequest actionRequest5 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest5);
        org.elasticsearch.action.ActionRequest actionRequest9 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest10 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest9);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest10, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest11);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest13 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest6, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest11);
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = null;
        bulkShardRequest11.remoteAddress(transportAddress15);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest17 = new org.elasticsearch.action.bulk.BulkItemRequest((int) ' ', (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestReplicationRequest18 = null;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple19 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest17, bulkShardRequestReplicationRequest18);
        org.elasticsearch.action.update.UpdateHelper.Result result20 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result21 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result22 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest23 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.String str24 = bulkShardRequest23.index();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult25 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult26 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result22, (org.elasticsearch.action.ActionRequest) bulkShardRequest23, writeResult25);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult27 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult28 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result21, (org.elasticsearch.action.ActionRequest) bulkShardRequest23, writeResult27);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult29 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult30 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result20, (org.elasticsearch.action.ActionRequest) bulkShardRequest23, writeResult29);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple31 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest17, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest23);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest32 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel33 = bulkShardRequest32.consistencyLevel();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest34 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue35 = bulkShardRequest34.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest36 = bulkShardRequest32.timeout(timeValue35);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple37 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest17, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest32);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple38 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest32);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str39 = bulkItemRequest2.index();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel33 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel33.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(timeValue35);
        org.junit.Assert.assertNotNull(bulkShardRequest36);
    }

    @Test
    public void test4459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4459");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder2.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder3.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int9 = builder8.numberOfShards();
        java.lang.String[] strArray13 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder8.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder3.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple18 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData0, (java.lang.Iterable<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap19 = indexMetaData0.getAliases();
        int int20 = indexMetaData0.getNumberOfShards();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.IndexMetaData.Custom> strImmutableOpenMap21 = indexMetaData0.getCustoms();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters22 = indexMetaData0.requireFilters();
        org.elasticsearch.Version version23 = indexMetaData0.getUpgradedVersion();
        java.util.Set<java.lang.String> strSet25 = indexMetaData0.activeAllocationIds((int) (byte) 0);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple18);
        org.junit.Assert.assertNotNull(strImmutableOpenMap19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(strImmutableOpenMap21);
        org.junit.Assert.assertNull(discoveryNodeFilters22);
        org.junit.Assert.assertNotNull(version23);
        org.junit.Assert.assertNotNull(strSet25);
    }

    @Test
    public void test4460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4460");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting3 = null;
        java.lang.Throwable throwable5 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure7 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting3, "", throwable5, "");
        org.elasticsearch.action.update.UpdateHelper.Result result8 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult12 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult13 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result8, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, false, throwable11, writeResult12);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure7, (org.elasticsearch.transport.TransportMessage) bulkShardRequest9);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest16 = bulkShardRequest9.index("index.version.created");
        org.elasticsearch.common.transport.TransportAddress transportAddress17 = bulkShardRequest9.remoteAddress();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest18 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest19 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        org.elasticsearch.tasks.TaskId taskId20 = bulkShardRequest9.getParentTask();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel21 = bulkShardRequest9.consistencyLevel();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput23 = null;
        // The following exception was thrown during execution in test generation
        try {
            bulkShardRequest9.writeTo(streamOutput23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(bulkShardRequest16);
        org.junit.Assert.assertNull(transportAddress17);
        org.junit.Assert.assertNotNull(taskId20);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel21 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel21.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test4461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4461");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters2 = indexMetaData0.requireFilters();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters3 = indexMetaData0.requireFilters();
        org.elasticsearch.Version version4 = indexMetaData0.getUpgradedVersion();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNull(discoveryNodeFilters2);
        org.junit.Assert.assertNull(discoveryNodeFilters3);
        org.junit.Assert.assertNotNull(version4);
    }

    @Test
    public void test4462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4462");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData4 = indexMetaData0.mapping("index.version.created");
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters5 = indexMetaData0.excludeFilters();
        org.elasticsearch.common.settings.Settings settings6 = indexMetaData0.getSettings();
        boolean boolean7 = org.elasticsearch.cluster.metadata.IndexMetaData.isIndexUsingShadowReplicas(settings6);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNull(mappingMetaData4);
        org.junit.Assert.assertNull(discoveryNodeFilters5);
        org.junit.Assert.assertNotNull(settings6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test4463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4463");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.ActionRequest actionRequest6 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest6);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple9 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest7, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest8);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest10 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue12 = bulkShardRequest11.timeout();
        java.lang.String str13 = bulkShardRequest11.index();
        org.elasticsearch.common.unit.TimeValue timeValue14 = bulkShardRequest11.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest15 = bulkShardRequest8.timeout(timeValue14);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest16 = new org.elasticsearch.action.bulk.BulkItemRequest(35, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.action.ActionRequest actionRequest19 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest20 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest19);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest21 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple22 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest20, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest21);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest23 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest21);
        java.lang.String str24 = bulkShardRequest21.index();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple25 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest16, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest21);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult26 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult27 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest21, writeResult26);
        boolean boolean28 = bulkShardRequest21.getShouldPersistResult();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult29 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult30 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest21, writeResult29);
        java.lang.String str31 = bulkShardRequest21.index();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult32 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult33 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest21, writeResult32);
        bulkShardRequest21.seqNo(0L);
        org.junit.Assert.assertNotNull(timeValue12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(timeValue14);
        org.junit.Assert.assertNotNull(bulkShardRequest15);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(str31);
    }

    @Test
    public void test4464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4464");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder2.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder3.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int9 = builder8.numberOfShards();
        java.lang.String[] strArray13 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder8.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder3.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple18 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData0, (java.lang.Iterable<java.lang.String>) strSet14);
        long long19 = indexMetaData0.getCreationDate();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder20 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        java.lang.String str21 = indexMetaData0.getIndexUUID();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData23 = indexMetaData0.mapping("index.shared_filesystem.recover_on_any_node");
        org.elasticsearch.Version version24 = indexMetaData0.getCreationVersion();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "_na_" + "'", str21, "_na_");
        org.junit.Assert.assertNull(mappingMetaData23);
        org.junit.Assert.assertNotNull(version24);
    }

    @Test
    public void test4465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4465");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("current version [0] is different than the one provided [97]");
    }

    @Test
    public void test4466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4466");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData1 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData1);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap3 = indexMetaData1.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters4 = indexMetaData1.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff5 = indexMetaData0.diff(indexMetaData1);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters6 = indexMetaData1.requireFilters();
        org.elasticsearch.Version version7 = indexMetaData1.getUpgradedVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData8 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData8);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap10 = indexMetaData8.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet11 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData8, indexShardStateSet11);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff13 = indexMetaData1.diff(indexMetaData8);
        org.elasticsearch.common.settings.Settings settings14 = indexMetaData8.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder15 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData8);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData16 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData16);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap18 = indexMetaData16.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters19 = indexMetaData16.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder20 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData16);
        org.apache.lucene.util.Version version21 = indexMetaData16.getMinimumCompatibleVersion();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters22 = indexMetaData16.requireFilters();
        org.elasticsearch.common.settings.Settings settings23 = indexMetaData16.getSettings();
        boolean boolean24 = org.elasticsearch.cluster.metadata.IndexMetaData.isIndexUsingShadowReplicas(settings23);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest27 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest28 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest27);
        org.elasticsearch.action.update.UpdateHelper.Result result29 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest31 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest32 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest31);
        java.lang.Throwable throwable34 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult35 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult36 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result29, (org.elasticsearch.action.ActionRequest) bulkShardRequest31, false, throwable34, writeResult35);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple37 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest28, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest31);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest38 = new org.elasticsearch.action.bulk.BulkItemRequest((int) 'a', (org.elasticsearch.action.ActionRequest) bulkShardRequest31);
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting39 = org.elasticsearch.cluster.metadata.IndexMetaData.INDEX_NUMBER_OF_REPLICAS_SETTING;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.common.xcontent.ToXContent> streamableTuple40 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.common.xcontent.ToXContent>((org.elasticsearch.common.io.stream.Streamable) bulkShardRequest31, (org.elasticsearch.common.xcontent.ToXContent) intSetting39);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.settings.Settings, org.elasticsearch.action.support.ToXContentToBytes> settingsTuple41 = org.elasticsearch.common.collect.Tuple.tuple(settings23, (org.elasticsearch.action.support.ToXContentToBytes) intSetting39);
        org.elasticsearch.common.settings.Settings settings42 = org.elasticsearch.cluster.metadata.IndexMetaData.addHumanReadableSettings(settings23);
        boolean boolean43 = org.elasticsearch.cluster.metadata.IndexMetaData.isOnSharedFilesystem(settings42);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder44 = builder15.settings(settings42);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(indexMetaData1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap3);
        org.junit.Assert.assertNull(discoveryNodeFilters4);
        org.junit.Assert.assertNotNull(indexMetaDataDiff5);
        org.junit.Assert.assertNull(discoveryNodeFilters6);
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertNotNull(indexMetaData8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap10);
        org.junit.Assert.assertNotNull(indexShardStateSet11);
        org.junit.Assert.assertNotNull(indexMetaDataDiff13);
        org.junit.Assert.assertNotNull(settings14);
        org.junit.Assert.assertNotNull(indexMetaData16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap18);
        org.junit.Assert.assertNull(discoveryNodeFilters19);
        org.junit.Assert.assertNull(version21);
        org.junit.Assert.assertNull(discoveryNodeFilters22);
        org.junit.Assert.assertNotNull(settings23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(intSetting39);
        org.junit.Assert.assertNotNull(settingsTuple41);
        org.junit.Assert.assertNotNull(settings42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(builder44);
    }

    @Test
    public void test4467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4467");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("index.uuid");
        long long2 = builder1.version();
        int int3 = builder1.numberOfShards();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1L + "'", long2 == 1L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test4468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4468");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest2 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest3 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest2);
        org.elasticsearch.action.update.UpdateHelper.Result result4 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest6 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest6);
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult10 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult11 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result4, (org.elasticsearch.action.ActionRequest) bulkShardRequest6, false, throwable9, writeResult10);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest6);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest13 = new org.elasticsearch.action.bulk.BulkItemRequest((int) 'a', (org.elasticsearch.action.ActionRequest) bulkShardRequest6);
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting14 = org.elasticsearch.cluster.metadata.IndexMetaData.INDEX_NUMBER_OF_REPLICAS_SETTING;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.common.xcontent.ToXContent> streamableTuple15 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.common.xcontent.ToXContent>((org.elasticsearch.common.io.stream.Streamable) bulkShardRequest6, (org.elasticsearch.common.xcontent.ToXContent) intSetting14);
        org.elasticsearch.common.unit.TimeValue timeValue16 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest17 = bulkShardRequest6.timeout(timeValue16);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException18 = bulkShardRequest17.validate();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = bulkShardRequest17.getDescription();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intSetting14);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(bulkShardRequest17);
        org.junit.Assert.assertNotNull(actionRequestValidationException18);
    }

    @Test
    public void test4469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4469");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters5 = indexMetaData0.includeFilters();
        org.elasticsearch.common.settings.Settings settings6 = indexMetaData0.getSettings();
        long long7 = indexMetaData0.getVersion();
        org.elasticsearch.action.update.UpdateHelper.Result result8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting9 = null;
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure13 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting9, "", throwable11, "");
        org.elasticsearch.action.update.UpdateHelper.Result result14 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest15 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable17 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult18 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult19 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result14, (org.elasticsearch.action.ActionRequest) bulkShardRequest15, false, throwable17, writeResult18);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple20 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure13, (org.elasticsearch.transport.TransportMessage) bulkShardRequest15);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest22 = bulkShardRequest15.index("hi!");
        java.lang.Throwable throwable24 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult25 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult26 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result8, (org.elasticsearch.action.ActionRequest) bulkShardRequest15, false, throwable24, writeResult25);
        boolean boolean27 = indexMetaData0.equals((java.lang.Object) result8);
        org.elasticsearch.common.settings.Settings settings28 = indexMetaData0.getSettings();
        long long29 = indexMetaData0.getVersion();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters30 = indexMetaData0.excludeFilters();
        long long31 = indexMetaData0.getVersion();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNull(discoveryNodeFilters5);
        org.junit.Assert.assertNotNull(settings6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertNotNull(bulkShardRequest22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(settings28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 1L + "'", long29 == 1L);
        org.junit.Assert.assertNull(discoveryNodeFilters30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 1L + "'", long31 == 1L);
    }

    @Test
    public void test4470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4470");
        org.elasticsearch.action.ActionRequest actionRequest4 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest4);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest6 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple7 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest6);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest6);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue10 = bulkShardRequest9.timeout();
        java.lang.String str11 = bulkShardRequest9.index();
        org.elasticsearch.common.unit.TimeValue timeValue12 = bulkShardRequest9.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest13 = bulkShardRequest6.timeout(timeValue12);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = new org.elasticsearch.action.bulk.BulkItemRequest(35, (org.elasticsearch.action.ActionRequest) bulkShardRequest6);
        org.elasticsearch.action.ActionRequest actionRequest17 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest18 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest17);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest19 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple20 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest18, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest19);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest19);
        java.lang.String str22 = bulkShardRequest19.index();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple23 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest14, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest19);
        org.elasticsearch.action.ActionRequest actionRequest26 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest27 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest26);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest28 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple29 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest27, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest28);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest30 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest28);
        org.elasticsearch.action.ActionRequest actionRequest32 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest33 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest32);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest34 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple35 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest33, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest34);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple36 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest30, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest34);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest37 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue38 = bulkShardRequest37.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest39 = bulkShardRequest34.timeout(timeValue38);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest40 = bulkShardRequest19.timeout(timeValue38);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest41 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 3, (org.elasticsearch.action.ActionRequest) bulkShardRequest40);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(timeValue12);
        org.junit.Assert.assertNotNull(bulkShardRequest13);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(timeValue38);
        org.junit.Assert.assertNotNull(bulkShardRequest39);
        org.junit.Assert.assertNotNull(bulkShardRequest40);
    }

    @Test
    public void test4471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4471");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder1.numberOfShards((int) (short) 10);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder1.version((long) (byte) -1);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = builder1.removeAlias("current version [0] is different than the one provided [100]");
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
    }

    @Test
    public void test4472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4472");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.Version version2 = indexMetaData0.getCreationVersion();
        long long3 = indexMetaData0.getCreationDate();
        long long4 = indexMetaData0.getCreationDate();
        java.util.Set<java.lang.String> strSet6 = null; // flaky: indexMetaData0.activeAllocationIds((int) (byte) 3);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData7 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData7);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap9 = indexMetaData7.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet10 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData7, indexShardStateSet10);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters12 = indexMetaData7.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff13 = indexMetaData0.diff(indexMetaData7);
        org.elasticsearch.Version version14 = indexMetaData0.getCreationVersion();
        long long15 = indexMetaData0.getVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(version2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(strSet6);
        org.junit.Assert.assertNotNull(indexMetaData7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap9);
        org.junit.Assert.assertNotNull(indexShardStateSet10);
        org.junit.Assert.assertNull(discoveryNodeFilters12);
        org.junit.Assert.assertNotNull(indexMetaDataDiff13);
        org.junit.Assert.assertNotNull(version14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1L + "'", long15 == 1L);
    }

    @Test
    public void test4473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4473");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData1 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData1);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap3 = indexMetaData1.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters4 = indexMetaData1.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff5 = indexMetaData0.diff(indexMetaData1);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters6 = indexMetaData1.requireFilters();
        org.elasticsearch.Version version7 = indexMetaData1.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings8 = indexMetaData1.getSettings();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters9 = indexMetaData1.requireFilters();
        // The following exception was thrown during execution in test generation
        try {
            long long11 = indexMetaData1.primaryTerm(3);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(indexMetaData1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap3);
        org.junit.Assert.assertNull(discoveryNodeFilters4);
        org.junit.Assert.assertNotNull(indexMetaDataDiff5);
        org.junit.Assert.assertNull(discoveryNodeFilters6);
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertNotNull(settings8);
        org.junit.Assert.assertNull(discoveryNodeFilters9);
    }

    @Test
    public void test4474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4474");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = builder1.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = builder2.numberOfReplicas((int) '#');
        org.elasticsearch.action.ActionRequest actionRequest7 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest7);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple10 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest8, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest9);
        boolean boolean11 = bulkShardRequest9.getShouldPersistResult();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder13 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int14 = builder13.numberOfShards();
        java.lang.String[] strArray18 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder21 = builder13.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet19);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>> streamableTuple22 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>>((org.elasticsearch.common.io.stream.Streamable) bulkShardRequest9, strSet19);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder23 = builder2.putActiveAllocationIds((int) (short) 10, (java.util.Set<java.lang.String>) strSet19);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder25 = builder2.numberOfShards((int) (short) -1);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder27 = builder2.numberOfReplicas((int) (byte) 0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Custom custom29 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder30 = builder27.putCustom("", custom29);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder30);
    }

    @Test
    public void test4475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4475");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder2.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder3.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int9 = builder8.numberOfShards();
        java.lang.String[] strArray13 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder8.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder3.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple18 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData0, (java.lang.Iterable<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap19 = indexMetaData0.getAliases();
        int int20 = indexMetaData0.getNumberOfShards();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.IndexMetaData.Custom> strImmutableOpenMap21 = indexMetaData0.getCustoms();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters22 = indexMetaData0.requireFilters();
        org.elasticsearch.common.settings.Settings settings23 = indexMetaData0.getSettings();
        boolean boolean24 = org.elasticsearch.cluster.metadata.IndexMetaData.isIndexUsingShadowReplicas(settings23);
        org.elasticsearch.transport.TransportService transportService25 = null;
        org.elasticsearch.cluster.service.ClusterService clusterService26 = null;
        org.elasticsearch.indices.IndicesService indicesService27 = null;
        org.elasticsearch.threadpool.ThreadPool threadPool28 = null;
        org.elasticsearch.cluster.action.shard.ShardStateAction shardStateAction29 = null;
        org.elasticsearch.cluster.action.index.MappingUpdatedAction mappingUpdatedAction30 = null;
        org.elasticsearch.action.update.UpdateHelper updateHelper31 = null;
        org.elasticsearch.action.support.ActionFilters actionFilters32 = null;
        org.elasticsearch.cluster.metadata.IndexNameExpressionResolver indexNameExpressionResolver33 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.bulk.TransportShardBulkAction transportShardBulkAction34 = new org.elasticsearch.action.bulk.TransportShardBulkAction(settings23, transportService25, clusterService26, indicesService27, threadPool28, shardStateAction29, mappingUpdatedAction30, updateHelper31, actionFilters32, indexNameExpressionResolver33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple18);
        org.junit.Assert.assertNotNull(strImmutableOpenMap19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(strImmutableOpenMap21);
        org.junit.Assert.assertNull(discoveryNodeFilters22);
        org.junit.Assert.assertNotNull(settings23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test4476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4476");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters5 = indexMetaData0.includeFilters();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.action.update.UpdateHelper.Result result9 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult15 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult16 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result9, (org.elasticsearch.action.ActionRequest) bulkShardRequest11, false, throwable14, writeResult15);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest8, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest11);
        org.elasticsearch.index.VersionType versionType18 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean22 = versionType18.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple23 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest8, versionType18);
        boolean boolean27 = versionType18.isVersionConflictForWrites((long) 0, (long) (short) 0, false);
        boolean boolean28 = indexMetaData0.equals((java.lang.Object) boolean27);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder29 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        long long30 = indexMetaData0.getCreationDate();
        org.elasticsearch.Version version31 = indexMetaData0.getCreationVersion();
        boolean boolean33 = indexMetaData0.equals((java.lang.Object) "_na_");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData34 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder35 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData34);
        org.elasticsearch.Version version36 = indexMetaData34.getCreationVersion();
        long long37 = indexMetaData34.getCreationDate();
        long long38 = indexMetaData34.getCreationDate();
        java.util.Set<java.lang.String> strSet40 = null; // flaky: indexMetaData34.activeAllocationIds((int) (byte) 3);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters41 = indexMetaData34.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff42 = indexMetaData0.diff(indexMetaData34);
        boolean boolean44 = indexMetaData34.isSameUUID("current version [52] is different than the one provided [1]");
        java.util.Set<java.lang.String> strSet46 = null; // flaky: indexMetaData34.activeAllocationIds((int) (short) -1);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder47 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData34);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNull(discoveryNodeFilters5);
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(version31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(indexMetaData34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(version36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNull(strSet40);
        org.junit.Assert.assertNull(discoveryNodeFilters41);
        org.junit.Assert.assertNotNull(indexMetaDataDiff42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(strSet46);
    }

    @Test
    public void test4477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4477");
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.update.UpdateHelper.Result result6 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult12 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult13 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result6, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable11, writeResult12);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest8);
        org.elasticsearch.tasks.TaskId taskId15 = null;
        bulkShardRequest8.setParentTask(taskId15);
        org.elasticsearch.index.shard.ShardId shardId17 = bulkShardRequest8.shardId();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult18 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult19 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, writeResult18);
        org.elasticsearch.common.unit.TimeValue timeValue20 = bulkShardRequest8.timeout();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 10, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = new org.elasticsearch.action.bulk.BulkItemRequest((int) '4', (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest23 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue24 = bulkShardRequest23.timeout();
        java.lang.String str25 = bulkShardRequest23.index();
        org.elasticsearch.index.shard.ShardId shardId26 = bulkShardRequest23.shardId();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple27 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest22, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest23);
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(timeValue24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(shardId26);
    }

    @Test
    public void test4478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4478");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result4 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest6 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest6);
        org.elasticsearch.action.update.UpdateHelper.Result result8 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest10 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest11 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest10);
        java.lang.Throwable throwable13 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult14 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult15 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result8, (org.elasticsearch.action.ActionRequest) bulkShardRequest10, false, throwable13, writeResult14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple16 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest7, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest10);
        org.elasticsearch.tasks.TaskId taskId17 = null;
        bulkShardRequest10.setParentTask(taskId17);
        org.elasticsearch.index.shard.ShardId shardId19 = bulkShardRequest10.shardId();
        bulkShardRequest10.seqNo((long) 0);
        java.lang.Throwable throwable23 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult24 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult25 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result4, (org.elasticsearch.action.ActionRequest) bulkShardRequest10, false, throwable23, writeResult24);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException26 = bulkShardRequest10.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure28 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", (java.lang.Throwable) actionRequestValidationException26, "update");
        java.lang.String str29 = shardFailure28.indexUUID;
        java.lang.Throwable throwable30 = shardFailure28.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "current version [10] is higher than the one provided [52]", throwable30, "current version [-1] is higher than the one provided [52]");
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertNotNull(actionRequestValidationException26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "update" + "'", str29, "update");
        org.junit.Assert.assertNotNull(throwable30);
        org.junit.Assert.assertEquals(throwable30.getLocalizedMessage(), "Validation Failed: 1: index is missing;");
        org.junit.Assert.assertEquals(throwable30.getMessage(), "Validation Failed: 1: index is missing;");
        org.junit.Assert.assertEquals(throwable30.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;");
    }

    @Test
    public void test4479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4479");
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        org.elasticsearch.action.update.UpdateHelper.Result result7 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest10 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        java.lang.Throwable throwable12 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult13 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult14 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result7, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, false, throwable12, writeResult13);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple15 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest6, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest9);
        org.elasticsearch.tasks.TaskId taskId16 = null;
        bulkShardRequest9.setParentTask(taskId16);
        org.elasticsearch.index.shard.ShardId shardId18 = bulkShardRequest9.shardId();
        bulkShardRequest9.seqNo((long) 0);
        java.lang.Throwable throwable22 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult23 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult24 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, false, throwable22, writeResult23);
        org.elasticsearch.action.ActionRequest actionRequest25 = updateResult24.actionRequest;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult26 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult27 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, actionRequest25, writeResult26);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult28 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult29 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, actionRequest25, writeResult28);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest30 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 10, actionRequest25);
        org.elasticsearch.action.ActionRequest actionRequest36 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest37 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest36);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest38 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple39 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest37, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest38);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest40 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest38);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest41 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue42 = bulkShardRequest41.timeout();
        java.lang.String str43 = bulkShardRequest41.index();
        org.elasticsearch.common.unit.TimeValue timeValue44 = bulkShardRequest41.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest45 = bulkShardRequest38.timeout(timeValue44);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest46 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest45);
        org.elasticsearch.action.ActionRequest actionRequest50 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest51 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest50);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest52 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple53 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest51, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest52);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest54 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest52);
        org.elasticsearch.action.ActionRequest actionRequest56 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest57 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest56);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest58 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple59 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest57, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest58);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple60 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest54, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest58);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest61 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest58);
        org.elasticsearch.index.shard.ShardId shardId62 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest63 = bulkShardRequest58.setShardId(shardId62);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple64 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest46, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest58);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest65 = new org.elasticsearch.action.bulk.BulkItemRequest((int) '4', (org.elasticsearch.action.ActionRequest) bulkShardRequest58);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel66 = bulkShardRequest58.consistencyLevel();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest67 = new org.elasticsearch.action.bulk.BulkItemRequest((int) '4', (org.elasticsearch.action.ActionRequest) bulkShardRequest58);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple68 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest30, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest58);
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(actionRequest25);
        org.junit.Assert.assertNotNull(timeValue42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(timeValue44);
        org.junit.Assert.assertNotNull(bulkShardRequest45);
        org.junit.Assert.assertNotNull(bulkShardRequest63);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel66 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel66.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test4480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4480");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result6 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = bulkShardRequest8.consistencyLevel(writeConsistencyLevel10);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting13 = null;
        org.elasticsearch.action.ActionRequest actionRequest16 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest17 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest16);
        org.elasticsearch.action.ActionRequest actionRequest20 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest20);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest22 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple23 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest21, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest22);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest24 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest22);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple25 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest17, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest22);
        org.elasticsearch.common.transport.TransportAddress transportAddress26 = null;
        bulkShardRequest22.remoteAddress(transportAddress26);
        org.elasticsearch.action.update.UpdateHelper.Result result28 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest29 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue30 = bulkShardRequest29.timeout();
        java.lang.String str31 = bulkShardRequest29.index();
        org.elasticsearch.common.unit.TimeValue timeValue32 = bulkShardRequest29.timeout();
        org.elasticsearch.cluster.routing.ShardRouting shardRouting34 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting36 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result38 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest40 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest41 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest40);
        org.elasticsearch.action.update.UpdateHelper.Result result42 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest44 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest45 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest44);
        java.lang.Throwable throwable47 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult48 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult49 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result42, (org.elasticsearch.action.ActionRequest) bulkShardRequest44, false, throwable47, writeResult48);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple50 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest41, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest44);
        org.elasticsearch.tasks.TaskId taskId51 = null;
        bulkShardRequest44.setParentTask(taskId51);
        org.elasticsearch.index.shard.ShardId shardId53 = bulkShardRequest44.shardId();
        bulkShardRequest44.seqNo((long) 0);
        java.lang.Throwable throwable57 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult58 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult59 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result38, (org.elasticsearch.action.ActionRequest) bulkShardRequest44, false, throwable57, writeResult58);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException60 = bulkShardRequest44.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure62 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting36, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException60, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure64 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting34, "update", (java.lang.Throwable) actionRequestValidationException60, "index.version.created_string");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult65 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult66 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result28, (org.elasticsearch.action.ActionRequest) bulkShardRequest29, false, (java.lang.Throwable) actionRequestValidationException60, writeResult65);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.transport.TransportRequest, java.lang.RuntimeException> transportRequestTuple67 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.transport.TransportRequest, java.lang.RuntimeException>((org.elasticsearch.transport.TransportRequest) bulkShardRequest22, (java.lang.RuntimeException) actionRequestValidationException60);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure69 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting13, "", (java.lang.Throwable) actionRequestValidationException60, "index.shadow_replicas");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult70 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult71 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result6, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, (java.lang.Throwable) actionRequestValidationException60, writeResult70);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure73 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "index.number_of_shards", (java.lang.Throwable) actionRequestValidationException60, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure75 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "current version [97] is different than the one provided [2]", (java.lang.Throwable) actionRequestValidationException60, "index.creation_date_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure77 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "current version [32] is different than the one provided [2]", (java.lang.Throwable) actionRequestValidationException60, "current version [1] is different than the one provided [32]");
        org.junit.Assert.assertNotNull(bulkShardRequest11);
        org.junit.Assert.assertNotNull(timeValue30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(timeValue32);
        org.junit.Assert.assertNull(shardId53);
        org.junit.Assert.assertNotNull(actionRequestValidationException60);
    }

    @Test
    public void test4481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4481");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters3 = indexMetaData0.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.apache.lucene.util.Version version5 = indexMetaData0.getMinimumCompatibleVersion();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters6 = indexMetaData0.requireFilters();
        java.util.Set<java.lang.String> strSet8 = null; // flaky: indexMetaData0.activeAllocationIds((int) (short) 10);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        int int10 = builder9.numberOfReplicas();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder12 = builder9.removeAlias("current version [-1] is higher than the one provided [0]");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder13 = builder9.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData14 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder16.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder19 = builder17.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder22 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int23 = builder22.numberOfShards();
        java.lang.String[] strArray27 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet28 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet28, strArray27);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder30 = builder22.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet28);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder31 = builder17.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet28);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple32 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData14, (java.lang.Iterable<java.lang.String>) strSet28);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap33 = indexMetaData14.getAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state34 = indexMetaData14.getState();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder35 = builder13.state(state34);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData37 = builder35.mapping("index.version.upgraded_string");
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNull(discoveryNodeFilters3);
        org.junit.Assert.assertNull(version5);
        org.junit.Assert.assertNull(discoveryNodeFilters6);
        org.junit.Assert.assertNull(strSet8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(indexMetaData14);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple32);
        org.junit.Assert.assertNotNull(strImmutableOpenMap33);
        org.junit.Assert.assertTrue("'" + state34 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state34.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNull(mappingMetaData37);
    }

    @Test
    public void test4482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4482");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest3 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable5 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult6 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult7 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest3, false, throwable5, writeResult6);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult8 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult9 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest3, writeResult8);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = bulkShardRequest3.consistencyLevel(writeConsistencyLevel10);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult12 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult13 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest11, writeResult12);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput14 = null;
        // The following exception was thrown during execution in test generation
        try {
            bulkShardRequest11.writeTo(streamOutput14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(bulkShardRequest11);
    }

    @Test
    public void test4483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4483");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting1 = null;
        java.lang.Throwable throwable3 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure5 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting1, "", throwable3, "");
        org.elasticsearch.action.update.UpdateHelper.Result result6 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult10 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult11 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result6, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, false, throwable9, writeResult10);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure5, (org.elasticsearch.transport.TransportMessage) bulkShardRequest7);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest14 = bulkShardRequest7.index("hi!");
        org.elasticsearch.action.support.IndicesOptions indicesOptions15 = bulkShardRequest14.indicesOptions();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest16 = new org.elasticsearch.action.bulk.BulkItemRequest((int) 'a', (org.elasticsearch.action.ActionRequest) bulkShardRequest14);
        org.elasticsearch.action.update.UpdateHelper.Result result17 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest19 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest20 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest19);
        java.lang.Throwable throwable22 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult23 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult24 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result17, (org.elasticsearch.action.ActionRequest) bulkShardRequest19, false, throwable22, writeResult23);
        org.elasticsearch.action.update.UpdateHelper.Result result25 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest27 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest28 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest27);
        org.elasticsearch.action.update.UpdateHelper.Result result29 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest31 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest32 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest31);
        java.lang.Throwable throwable34 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult35 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult36 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result29, (org.elasticsearch.action.ActionRequest) bulkShardRequest31, false, throwable34, writeResult35);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple37 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest28, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest31);
        java.lang.Throwable throwable39 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult40 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult41 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result25, (org.elasticsearch.action.ActionRequest) bulkShardRequest31, true, throwable39, writeResult40);
        org.elasticsearch.index.shard.ShardId shardId42 = bulkShardRequest31.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue43 = bulkShardRequest31.timeout();
        org.elasticsearch.tasks.TaskId taskId44 = bulkShardRequest31.getParentTask();
        bulkShardRequest19.setParentTask(taskId44);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple46 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest16, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest19);
        org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestReplicationRequest47 = bulkItemRequestTuple46.v2();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest48 = bulkItemRequestTuple46.v1();
        org.junit.Assert.assertNotNull(bulkShardRequest14);
        org.junit.Assert.assertNotNull(indicesOptions15);
        org.junit.Assert.assertNull(shardId42);
        org.junit.Assert.assertNotNull(timeValue43);
        org.junit.Assert.assertNotNull(taskId44);
        org.junit.Assert.assertNotNull(bulkShardRequestReplicationRequest47);
        org.junit.Assert.assertNotNull(bulkItemRequest48);
    }

    @Test
    public void test4484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4484");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting3 = null;
        java.lang.Throwable throwable5 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure7 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting3, "", throwable5, "");
        org.elasticsearch.action.update.UpdateHelper.Result result8 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult12 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult13 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result8, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, false, throwable11, writeResult12);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure7, (org.elasticsearch.transport.TransportMessage) bulkShardRequest9);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest16 = bulkShardRequest9.index("hi!");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult17 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult18 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, writeResult17);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest19 = new org.elasticsearch.action.bulk.BulkItemRequest((int) 'a', (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting21 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting23 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting25 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting27 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting29 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting31 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting33 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting35 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result37 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest39 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest40 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest39);
        org.elasticsearch.action.update.UpdateHelper.Result result41 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest43 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest44 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest43);
        java.lang.Throwable throwable46 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult47 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult48 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result41, (org.elasticsearch.action.ActionRequest) bulkShardRequest43, false, throwable46, writeResult47);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple49 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest40, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest43);
        org.elasticsearch.tasks.TaskId taskId50 = null;
        bulkShardRequest43.setParentTask(taskId50);
        org.elasticsearch.index.shard.ShardId shardId52 = bulkShardRequest43.shardId();
        bulkShardRequest43.seqNo((long) 0);
        java.lang.Throwable throwable56 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult57 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult58 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result37, (org.elasticsearch.action.ActionRequest) bulkShardRequest43, false, throwable56, writeResult57);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException59 = bulkShardRequest43.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure61 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting35, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException59, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure63 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting33, "update", (java.lang.Throwable) actionRequestValidationException59, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure65 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting31, "_na_", (java.lang.Throwable) actionRequestValidationException59, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure67 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting29, "primary_terms", (java.lang.Throwable) actionRequestValidationException59, "delete");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure69 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting27, "current version [97] is different than the one provided [35]", (java.lang.Throwable) actionRequestValidationException59, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure71 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting25, "", (java.lang.Throwable) actionRequestValidationException59, "index.blocks.metadata");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure73 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting23, "index.shadow_replicas", (java.lang.Throwable) actionRequestValidationException59, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure75 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting21, "current version [32] is different than the one provided [2]", (java.lang.Throwable) actionRequestValidationException59, "current version [1] is different than the one provided [0]");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult76 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult77 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, true, (java.lang.Throwable) actionRequestValidationException59, writeResult76);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult78 = updateResult77.writeResult;
        boolean boolean79 = updateResult77.retry;
        boolean boolean80 = updateResult77.success();
        org.junit.Assert.assertNotNull(bulkShardRequest16);
        org.junit.Assert.assertNull(shardId52);
        org.junit.Assert.assertNotNull(actionRequestValidationException59);
        org.junit.Assert.assertNull(writeResult78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test4485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4485");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest1 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest1);
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, false, throwable8, writeResult9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.index.VersionType versionType12 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean16 = versionType12.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest2, versionType12);
        boolean boolean21 = versionType12.isVersionConflictForWrites(10L, (long) (byte) 0, false);
        boolean boolean23 = versionType12.validateVersionForReads((long) (byte) 100);
        long long26 = versionType12.updateVersion((long) (byte) 10, 10L);
        org.elasticsearch.index.VersionType versionType27 = versionType12.versionTypeForReplicationAndRecovery();
        boolean boolean29 = versionType12.validateVersionForWrites((long) 0);
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 10L + "'", long26 == 10L);
        org.junit.Assert.assertNotNull(versionType27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test4486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4486");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder2.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder3.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int9 = builder8.numberOfShards();
        java.lang.String[] strArray13 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder8.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder3.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple18 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData0, (java.lang.Iterable<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap19 = indexMetaData0.getAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder20 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder21 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder22 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder24 = builder22.numberOfReplicas((int) (byte) 0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder26 = builder24.creationDate((long) (byte) -1);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder28 = builder26.version((long) (short) -1);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple18);
        org.junit.Assert.assertNotNull(strImmutableOpenMap19);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
    }

    @Test
    public void test4487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4487");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder1.index("current version [0] is different than the one provided [100]");
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData5 = builder3.mapping("current version [10] is different than the one provided [32]");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = builder3.creationDate(0L);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData9 = builder3.mapping("current version [10] is higher than the one provided [98]");
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(mappingMetaData5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNull(mappingMetaData9);
    }

    @Test
    public void test4488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4488");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result4 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest6 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest6);
        org.elasticsearch.action.update.UpdateHelper.Result result8 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest10 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest11 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest10);
        java.lang.Throwable throwable13 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult14 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult15 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result8, (org.elasticsearch.action.ActionRequest) bulkShardRequest10, false, throwable13, writeResult14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple16 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest7, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest10);
        org.elasticsearch.tasks.TaskId taskId17 = null;
        bulkShardRequest10.setParentTask(taskId17);
        java.lang.Throwable throwable20 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult21 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult22 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result4, (org.elasticsearch.action.ActionRequest) bulkShardRequest10, true, throwable20, writeResult21);
        org.elasticsearch.action.support.IndicesOptions indicesOptions23 = bulkShardRequest10.indicesOptions();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest24 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest10);
        java.lang.Throwable throwable26 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult27 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult28 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest10, true, throwable26, writeResult27);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest29 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest10);
        org.elasticsearch.action.update.UpdateHelper.Result result30 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest32 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest33 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest32);
        org.elasticsearch.action.update.UpdateHelper.Result result34 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest36 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest37 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest36);
        java.lang.Throwable throwable39 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult40 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult41 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result34, (org.elasticsearch.action.ActionRequest) bulkShardRequest36, false, throwable39, writeResult40);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple42 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest33, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest36);
        org.elasticsearch.tasks.TaskId taskId43 = null;
        bulkShardRequest36.setParentTask(taskId43);
        java.lang.Throwable throwable46 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult47 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult48 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result30, (org.elasticsearch.action.ActionRequest) bulkShardRequest36, true, throwable46, writeResult47);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple49 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest29, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest36);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult50 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult51 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest36, writeResult50);
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest53 = bulkShardRequest36.setShardId(shardId52);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str54 = bulkShardRequest36.getDescription();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indicesOptions23);
        org.junit.Assert.assertNotNull(bulkShardRequest53);
    }

    @Test
    public void test4489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4489");
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        org.elasticsearch.action.update.UpdateHelper.Result result7 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest10 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        java.lang.Throwable throwable12 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult13 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult14 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result7, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, false, throwable12, writeResult13);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple15 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest6, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest9);
        org.elasticsearch.tasks.TaskId taskId16 = null;
        bulkShardRequest9.setParentTask(taskId16);
        org.elasticsearch.index.shard.ShardId shardId18 = bulkShardRequest9.shardId();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult19 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult20 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, writeResult19);
        long long21 = bulkShardRequest9.seqNo();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest23 = new org.elasticsearch.action.bulk.BulkItemRequest((int) '#', (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest24 = new org.elasticsearch.action.bulk.BulkItemRequest((int) '4', (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        org.elasticsearch.action.ActionRequest actionRequest25 = bulkItemRequest24.request();
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertNotNull(actionRequest25);
    }

    @Test
    public void test4490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4490");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder2.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder3.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int9 = builder8.numberOfShards();
        java.lang.String[] strArray13 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder8.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder3.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple18 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData0, (java.lang.Iterable<java.lang.String>) strSet14);
        long long19 = indexMetaData0.getCreationDate();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder20 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Custom custom22 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder23 = builder20.putCustom("index.auto_expand_replicas", custom22);
        int int24 = builder20.numberOfShards();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
    }

    @Test
    public void test4491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4491");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        bulkShardRequest4.primaryTerm((long) (-1));
        org.elasticsearch.action.update.UpdateHelper.Result result9 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest13 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest13);
        org.elasticsearch.action.update.UpdateHelper.Result result15 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest17 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest18 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest17);
        java.lang.Throwable throwable20 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult21 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult22 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result15, (org.elasticsearch.action.ActionRequest) bulkShardRequest17, false, throwable20, writeResult21);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple23 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest14, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest17);
        org.elasticsearch.tasks.TaskId taskId24 = null;
        bulkShardRequest17.setParentTask(taskId24);
        org.elasticsearch.index.shard.ShardId shardId26 = bulkShardRequest17.shardId();
        bulkShardRequest17.seqNo((long) 0);
        org.elasticsearch.action.support.IndicesOptions indicesOptions29 = bulkShardRequest17.indicesOptions();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest30 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest17);
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest32 = bulkShardRequest17.setShardId(shardId31);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest33 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest32);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting35 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting37 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting39 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result41 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest43 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest44 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest43);
        org.elasticsearch.action.update.UpdateHelper.Result result45 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest47 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest48 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest47);
        java.lang.Throwable throwable50 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult51 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult52 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result45, (org.elasticsearch.action.ActionRequest) bulkShardRequest47, false, throwable50, writeResult51);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple53 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest44, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest47);
        org.elasticsearch.tasks.TaskId taskId54 = null;
        bulkShardRequest47.setParentTask(taskId54);
        org.elasticsearch.index.shard.ShardId shardId56 = bulkShardRequest47.shardId();
        bulkShardRequest47.seqNo((long) 0);
        java.lang.Throwable throwable60 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult61 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult62 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result41, (org.elasticsearch.action.ActionRequest) bulkShardRequest47, false, throwable60, writeResult61);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException63 = bulkShardRequest47.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure65 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting39, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException63, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure67 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting37, "update", (java.lang.Throwable) actionRequestValidationException63, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure69 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting35, "index.shared_filesystem", (java.lang.Throwable) actionRequestValidationException63, "index.version.minimum_compatible");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult70 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult71 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result9, (org.elasticsearch.action.ActionRequest) bulkShardRequest32, false, (java.lang.Throwable) actionRequestValidationException63, writeResult70);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult72 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult73 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest4, false, (java.lang.Throwable) actionRequestValidationException63, writeResult72);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure75 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "index.blocks.read", (java.lang.Throwable) actionRequestValidationException63, "update");
        java.lang.String str76 = shardFailure75.indexUUID;
        java.lang.Throwable throwable77 = shardFailure75.cause;
        org.junit.Assert.assertNull(shardId26);
        org.junit.Assert.assertNotNull(indicesOptions29);
        org.junit.Assert.assertNotNull(bulkShardRequest32);
        org.junit.Assert.assertNull(shardId56);
        org.junit.Assert.assertNotNull(actionRequestValidationException63);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "update" + "'", str76, "update");
        org.junit.Assert.assertNotNull(throwable77);
        org.junit.Assert.assertEquals(throwable77.getLocalizedMessage(), "Validation Failed: 1: index is missing;");
        org.junit.Assert.assertEquals(throwable77.getMessage(), "Validation Failed: 1: index is missing;");
        org.junit.Assert.assertEquals(throwable77.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;");
    }

    @Test
    public void test4492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4492");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.ActionRequest actionRequest7 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest7);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple10 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest8, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest9);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest11 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        org.elasticsearch.action.ActionRequest actionRequest13 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest13);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest15 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple16 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest14, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest15);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest11, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest15);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest18 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue19 = bulkShardRequest18.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest20 = bulkShardRequest15.timeout(timeValue19);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest((-1), (org.elasticsearch.action.ActionRequest) bulkShardRequest20);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult22 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult23 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest20, writeResult22);
        org.elasticsearch.action.update.UpdateHelper.Result result24 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest26 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest27 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest26);
        org.elasticsearch.action.update.UpdateHelper.Result result28 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest30 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest31 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest30);
        java.lang.Throwable throwable33 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult34 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult35 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result28, (org.elasticsearch.action.ActionRequest) bulkShardRequest30, false, throwable33, writeResult34);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple36 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest27, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest30);
        java.lang.Throwable throwable38 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult39 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult40 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result24, (org.elasticsearch.action.ActionRequest) bulkShardRequest30, true, throwable38, writeResult39);
        org.elasticsearch.index.shard.ShardId shardId41 = bulkShardRequest30.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue42 = bulkShardRequest30.timeout();
        org.elasticsearch.tasks.TaskId taskId43 = bulkShardRequest30.getParentTask();
        bulkShardRequest20.setParentTask(taskId43);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest45 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 10, (org.elasticsearch.action.ActionRequest) bulkShardRequest20);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting46 = null;
        java.lang.Throwable throwable48 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting46, "", throwable48, "");
        org.elasticsearch.action.update.UpdateHelper.Result result51 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest52 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable54 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult55 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult56 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result51, (org.elasticsearch.action.ActionRequest) bulkShardRequest52, false, throwable54, writeResult55);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple57 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure50, (org.elasticsearch.transport.TransportMessage) bulkShardRequest52);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest59 = bulkShardRequest52.index("hi!");
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple60 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest45, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest52);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult61 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult62 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest52, writeResult61);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting64 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting66 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result68 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest70 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest71 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest70);
        org.elasticsearch.action.update.UpdateHelper.Result result72 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest74 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest75 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest74);
        java.lang.Throwable throwable77 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult78 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult79 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result72, (org.elasticsearch.action.ActionRequest) bulkShardRequest74, false, throwable77, writeResult78);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple80 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest71, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest74);
        org.elasticsearch.tasks.TaskId taskId81 = null;
        bulkShardRequest74.setParentTask(taskId81);
        org.elasticsearch.index.shard.ShardId shardId83 = bulkShardRequest74.shardId();
        bulkShardRequest74.seqNo((long) 0);
        java.lang.Throwable throwable87 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult88 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult89 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result68, (org.elasticsearch.action.ActionRequest) bulkShardRequest74, false, throwable87, writeResult88);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException90 = bulkShardRequest74.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure92 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting66, "index.version.upgraded", (java.lang.Throwable) actionRequestValidationException90, "index.blocks.write");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure94 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting64, "hi!", (java.lang.Throwable) actionRequestValidationException90, "primary_terms");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult95 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult96 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest52, false, (java.lang.Throwable) actionRequestValidationException90, writeResult95);
        boolean boolean97 = updateResult96.retry;
        boolean boolean98 = updateResult96.failure();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest99 = updateResult96.request();
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertNotNull(bulkShardRequest20);
        org.junit.Assert.assertNull(shardId41);
        org.junit.Assert.assertNotNull(timeValue42);
        org.junit.Assert.assertNotNull(taskId43);
        org.junit.Assert.assertNotNull(bulkShardRequest59);
        org.junit.Assert.assertNull(shardId83);
        org.junit.Assert.assertNotNull(actionRequestValidationException90);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
        org.junit.Assert.assertNotNull(bulkShardRequest99);
    }

    @Test
    public void test4493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4493");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest1 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue2 = bulkShardRequest1.timeout();
        org.elasticsearch.action.support.IndicesOptions indicesOptions3 = bulkShardRequest1.indicesOptions();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException4 = bulkShardRequest1.validate();
        org.elasticsearch.action.update.UpdateHelper.Result result7 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest10 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        org.elasticsearch.action.update.UpdateHelper.Result result11 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest13 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest13);
        java.lang.Throwable throwable16 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult17 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult18 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result11, (org.elasticsearch.action.ActionRequest) bulkShardRequest13, false, throwable16, writeResult17);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple19 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest10, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest13);
        org.elasticsearch.tasks.TaskId taskId20 = null;
        bulkShardRequest13.setParentTask(taskId20);
        java.lang.Throwable throwable23 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult24 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult25 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result7, (org.elasticsearch.action.ActionRequest) bulkShardRequest13, true, throwable23, writeResult24);
        org.elasticsearch.action.support.IndicesOptions indicesOptions26 = bulkShardRequest13.indicesOptions();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest27 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest13);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException28 = bulkShardRequest13.validate();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult29 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult30 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest1, false, (java.lang.Throwable) actionRequestValidationException28, writeResult29);
        org.elasticsearch.action.support.IndicesOptions indicesOptions31 = bulkShardRequest1.indicesOptions();
        org.junit.Assert.assertNotNull(timeValue2);
        org.junit.Assert.assertNotNull(indicesOptions3);
        org.junit.Assert.assertNotNull(actionRequestValidationException4);
        org.junit.Assert.assertNotNull(indicesOptions26);
        org.junit.Assert.assertNotNull(actionRequestValidationException28);
        org.junit.Assert.assertNotNull(indicesOptions31);
    }

    @Test
    public void test4494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4494");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.Version version2 = indexMetaData0.getCreationVersion();
        long long3 = indexMetaData0.getCreationDate();
        int int4 = indexMetaData0.getTotalNumberOfShards();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = builder5.removeAlias("index.version.minimum_compatible");
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(version2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(builder7);
    }

    @Test
    public void test4495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4495");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest1 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest1);
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, false, throwable8, writeResult9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.index.VersionType versionType12 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean16 = versionType12.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest2, versionType12);
        boolean boolean21 = versionType12.isVersionConflictForWrites(10L, (long) (byte) 0, false);
        boolean boolean23 = versionType12.validateVersionForReads((long) (byte) 100);
        long long26 = versionType12.updateVersion((long) (byte) 0, (long) (byte) -1);
        boolean boolean29 = versionType12.isVersionConflictForReads((long) (short) 1, 0L);
        org.elasticsearch.index.VersionType versionType30 = versionType12.versionTypeForReplicationAndRecovery();
        boolean boolean33 = versionType12.isVersionConflictForReads((long) (byte) 0, 4L);
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(versionType30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test4496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4496");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.Version version2 = indexMetaData0.getCreationVersion();
        long long3 = indexMetaData0.getCreationDate();
        long long4 = indexMetaData0.getCreationDate();
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap5 = indexMetaData0.getActiveAllocationIds();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(version2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap5);
        org.junit.Assert.assertNotNull(builder6);
    }

    @Test
    public void test4497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4497");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder2.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder3.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int9 = builder8.numberOfShards();
        java.lang.String[] strArray13 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder8.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder3.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple18 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData0, (java.lang.Iterable<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap19 = indexMetaData0.getAliases();
        int int20 = indexMetaData0.getNumberOfShards();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters21 = indexMetaData0.excludeFilters();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap22 = indexMetaData0.getAliases();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters23 = indexMetaData0.excludeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder24 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.common.settings.Settings settings25 = indexMetaData0.getSettings();
        long long27 = indexMetaData0.primaryTerm(0);
        int int28 = indexMetaData0.getNumberOfShards();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder29 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        java.lang.String str30 = builder29.index();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData32 = builder29.mapping("");
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple18);
        org.junit.Assert.assertNotNull(strImmutableOpenMap19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNull(discoveryNodeFilters21);
        org.junit.Assert.assertNotNull(strImmutableOpenMap22);
        org.junit.Assert.assertNull(discoveryNodeFilters23);
        org.junit.Assert.assertNotNull(settings25);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNull(mappingMetaData32);
    }

    @Test
    public void test4498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4498");
        org.elasticsearch.action.ActionRequest actionRequest1 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 0, actionRequest1);
    }

    @Test
    public void test4499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4499");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest1 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest1);
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, false, throwable8, writeResult9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.index.VersionType versionType12 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean16 = versionType12.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest2, versionType12);
        boolean boolean21 = versionType12.isVersionConflictForWrites(10L, (long) (byte) 0, false);
        boolean boolean23 = versionType12.validateVersionForReads((long) (byte) 100);
        long long26 = versionType12.updateVersion((long) (byte) 0, (long) (byte) -1);
        org.elasticsearch.index.VersionType versionType27 = versionType12.versionTypeForReplicationAndRecovery();
        org.elasticsearch.index.VersionType versionType28 = versionType27.versionTypeForReplicationAndRecovery();
        boolean boolean31 = versionType28.isVersionConflictForReads((long) (-1), 97L);
        org.elasticsearch.index.VersionType versionType32 = versionType28.versionTypeForReplicationAndRecovery();
        org.elasticsearch.action.ActionRequest actionRequest35 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest36 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest35);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest37 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple38 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest36, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest37);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest39 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest37);
        org.elasticsearch.action.ActionRequest actionRequest41 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest42 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest41);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest43 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple44 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest42, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest43);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple45 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest39, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest43);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest46 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue47 = bulkShardRequest46.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest48 = bulkShardRequest43.timeout(timeValue47);
        long long49 = bulkShardRequest43.primaryTerm();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException50 = bulkShardRequest43.validate();
        org.elasticsearch.common.collect.Tuple<java.lang.Object, org.elasticsearch.common.ValidationException> objTuple51 = new org.elasticsearch.common.collect.Tuple<java.lang.Object, org.elasticsearch.common.ValidationException>((java.lang.Object) versionType28, (org.elasticsearch.common.ValidationException) actionRequestValidationException50);
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(versionType27);
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(versionType32);
        org.junit.Assert.assertNotNull(timeValue47);
        org.junit.Assert.assertNotNull(bulkShardRequest48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 0L + "'", long49 == 0L);
        org.junit.Assert.assertNotNull(actionRequestValidationException50);
    }

    @Test
    public void test4500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4500");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest3 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue4 = bulkShardRequest3.timeout();
        org.elasticsearch.action.support.IndicesOptions indicesOptions5 = bulkShardRequest3.indicesOptions();
        org.elasticsearch.cluster.routing.ShardRouting shardRouting7 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting9 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting11 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting13 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting15 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result17 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest19 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest20 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest19);
        org.elasticsearch.action.update.UpdateHelper.Result result21 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest23 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest24 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest23);
        java.lang.Throwable throwable26 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult27 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult28 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result21, (org.elasticsearch.action.ActionRequest) bulkShardRequest23, false, throwable26, writeResult27);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple29 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest20, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest23);
        org.elasticsearch.tasks.TaskId taskId30 = null;
        bulkShardRequest23.setParentTask(taskId30);
        org.elasticsearch.index.shard.ShardId shardId32 = bulkShardRequest23.shardId();
        bulkShardRequest23.seqNo((long) 0);
        java.lang.Throwable throwable36 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult37 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult38 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result17, (org.elasticsearch.action.ActionRequest) bulkShardRequest23, false, throwable36, writeResult37);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException39 = bulkShardRequest23.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure41 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting15, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException39, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure43 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting13, "update", (java.lang.Throwable) actionRequestValidationException39, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure45 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting11, "_na_", (java.lang.Throwable) actionRequestValidationException39, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure47 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting9, "primary_terms", (java.lang.Throwable) actionRequestValidationException39, "delete");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure49 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting7, "index.blocks.read_only", (java.lang.Throwable) actionRequestValidationException39, "delete");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult50 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult51 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest3, true, (java.lang.Throwable) actionRequestValidationException39, writeResult50);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure53 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "current version [97] is different than the one provided [1]", (java.lang.Throwable) actionRequestValidationException39, "index.number_of_replicas");
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(indicesOptions5);
        org.junit.Assert.assertNull(shardId32);
        org.junit.Assert.assertNotNull(actionRequestValidationException39);
    }
}
