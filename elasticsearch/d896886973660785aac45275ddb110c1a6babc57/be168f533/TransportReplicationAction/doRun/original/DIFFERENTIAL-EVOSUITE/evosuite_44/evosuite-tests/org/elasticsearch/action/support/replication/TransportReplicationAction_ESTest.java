/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 05 17:36:14 GMT 2021
 */

package org.elasticsearch.action.support.replication;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.EOFException;
import org.elasticsearch.action.support.replication.BasicReplicationRequest;
import org.elasticsearch.action.support.replication.ReplicationResponse;
import org.elasticsearch.action.support.replication.TransportReplicationAction;
import org.elasticsearch.action.support.replication.TransportReplicationActionTests;
import org.elasticsearch.common.io.stream.StreamInput;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TransportReplicationAction_ESTest extends TransportReplicationAction_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TransportReplicationAction<TransportReplicationActionTests.Request, BasicReplicationRequest, ReplicationResponse> transportReplicationAction0 = (TransportReplicationAction<TransportReplicationActionTests.Request, BasicReplicationRequest, ReplicationResponse>) mock(TransportReplicationAction.class, CALLS_REAL_METHODS);
      BasicReplicationRequest basicReplicationRequest0 = new BasicReplicationRequest();
      TransportReplicationAction.PrimaryResult transportReplicationAction_PrimaryResult0 = transportReplicationAction0.new PrimaryResult(basicReplicationRequest0, (ReplicationResponse) null);
      byte[] byteArray0 = new byte[2];
      StreamInput streamInput0 = StreamInput.wrap(byteArray0, 5, (-739));
      // EXCEPTION DIFF:
      // The modified version did not exhibit this exception:
      //     java.io.EOFException : null
      try { 
        ReplicationResponse.ShardInfo.readShardInfo(streamInput0);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.common.io.stream.InputStreamStreamInput", e);
      }
  }
}
