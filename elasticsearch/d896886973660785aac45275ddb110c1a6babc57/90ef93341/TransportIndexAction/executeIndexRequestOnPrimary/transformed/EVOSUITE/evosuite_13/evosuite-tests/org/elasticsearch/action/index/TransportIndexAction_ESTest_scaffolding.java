/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Fri Nov 05 10:47:11 GMT 2021
 */

package org.elasticsearch.action.index;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class TransportIndexAction_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 10000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "org.elasticsearch.action.index.TransportIndexAction"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    /*No java.lang.System property to set*/
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(TransportIndexAction_ESTest_scaffolding.class.getClassLoader() ,
      "org.elasticsearch.ElasticsearchException",
      "org.elasticsearch.transport.TransportRequest",
      "org.elasticsearch.action.DocumentRequest",
      "org.elasticsearch.common.io.stream.Streamable",
      "org.elasticsearch.action.IndicesRequest",
      "org.elasticsearch.action.ActionFuture",
      "org.elasticsearch.action.support.TransportAction",
      "org.elasticsearch.action.index.IndexRequest",
      "org.elasticsearch.action.admin.indices.create.CreateIndexRequest",
      "org.elasticsearch.common.ValidationException",
      "org.elasticsearch.transport.TransportResponse",
      "org.elasticsearch.action.index.IndexResponse",
      "org.elasticsearch.action.index.TransportIndexAction",
      "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException",
      "org.elasticsearch.action.ReplicationResponse",
      "org.elasticsearch.transport.TransportMessage",
      "org.elasticsearch.action.ActionRequest",
      "org.elasticsearch.action.support.master.MasterNodeRequest",
      "org.elasticsearch.common.component.AbstractComponent",
      "org.elasticsearch.action.support.master.AcknowledgedRequest",
      "org.elasticsearch.action.ActionResponse",
      "org.elasticsearch.common.xcontent.ToXContent",
      "org.elasticsearch.transport.TransportRequestHandler",
      "org.elasticsearch.action.DocWriteResponse",
      "org.elasticsearch.action.support.replication.TransportReplicationAction",
      "org.elasticsearch.action.support.replication.ReplicationRequest",
      "org.elasticsearch.cluster.ack.AckedRequest",
      "org.elasticsearch.action.ActionRequestValidationException",
      "org.elasticsearch.action.support.replication.TransportReplicationAction$RetryOnReplicaException",
      "org.elasticsearch.common.io.stream.Writeable",
      "org.elasticsearch.action.ActionListener",
      "org.elasticsearch.common.xcontent.StatusToXContent"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(TransportIndexAction_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "org.elasticsearch.common.component.AbstractComponent",
      "org.elasticsearch.action.support.TransportAction",
      "org.elasticsearch.action.support.replication.TransportReplicationAction",
      "org.elasticsearch.action.index.TransportIndexAction",
      "org.elasticsearch.action.index.TransportIndexAction$1",
      "com.carrotsearch.randomizedtesting.annotations.ThreadLeakScope$Scope",
      "com.carrotsearch.randomizedtesting.annotations.ThreadLeakGroup$Group",
      "com.carrotsearch.randomizedtesting.annotations.ThreadLeakAction$Action",
      "com.carrotsearch.randomizedtesting.annotations.ThreadLeakZombies$Consequence",
      "org.elasticsearch.index.mapper.SourceToParse$Origin",
      "org.elasticsearch.test.ESIntegTestCase$Scope"
    );
  }
}
