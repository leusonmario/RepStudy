/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Sat Nov 06 11:25:24 GMT 2021
 */

package org.elasticsearch.cluster.metadata;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

import static org.evosuite.shaded.org.mockito.Mockito.*;
@EvoSuiteClassExclude
public class MetaDataCreateIndexService_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 10000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "org.elasticsearch.cluster.metadata.MetaDataCreateIndexService"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
    java.lang.System.setProperty("user.country", "US"); 
    java.lang.System.setProperty("user.dir", "/home/CIN/lmps2/semanticConflicts/SMAT/output-test-dest/elasticsearch/d896886973660785aac45275ddb110c1a6babc57/evosuite_102"); 
    java.lang.System.setProperty("user.home", "/home/CIN/lmps2"); 
    java.lang.System.setProperty("user.language", "en"); 
    java.lang.System.setProperty("user.name", "lmps2"); 
    java.lang.System.setProperty("user.timezone", "America/Recife"); 
    java.lang.System.setProperty("log4j.configuration", "SUT.log4j.properties"); 
    java.lang.System.setProperty("sun.arch.data.model", "64"); 
    java.lang.System.setProperty("sun.boot.class.path", "/usr/lib/jvm/jdk1.8.0_291/jre/lib/resources.jar:/usr/lib/jvm/jdk1.8.0_291/jre/lib/rt.jar:/usr/lib/jvm/jdk1.8.0_291/jre/lib/sunrsasign.jar:/usr/lib/jvm/jdk1.8.0_291/jre/lib/jsse.jar:/usr/lib/jvm/jdk1.8.0_291/jre/lib/jce.jar:/usr/lib/jvm/jdk1.8.0_291/jre/lib/charsets.jar:/usr/lib/jvm/jdk1.8.0_291/jre/lib/jfr.jar:/usr/lib/jvm/jdk1.8.0_291/jre/classes"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(MetaDataCreateIndexService_ESTest_scaffolding.class.getClassLoader() ,
      "org.apache.lucene.index.MultiReader",
      "org.elasticsearch.common.util.CancellableThreads$ExecutionCancelledException",
      "org.apache.lucene.index.ParallelLeafReader",
      "org.elasticsearch.ElasticsearchSecurityException",
      "com.carrotsearch.hppc.ObjectObjectHashMap$ValuesIterator",
      "org.elasticsearch.index.snapshots.IndexShardRestoreException",
      "org.elasticsearch.cluster.routing.allocation.AllocationService",
      "org.elasticsearch.cluster.block.ClusterBlocks",
      "org.elasticsearch.common.io.BytesStream",
      "org.elasticsearch.http.BindHttpException",
      "org.elasticsearch.common.unit.SizeValue",
      "org.elasticsearch.common.logging.LoggerMessageFormat",
      "org.elasticsearch.ElasticsearchException$ElasticsearchExceptionHandle",
      "org.elasticsearch.cluster.Diff",
      "org.elasticsearch.index.engine.SnapshotFailedEngineException",
      "org.elasticsearch.indices.recovery.RecoverySettings",
      "org.elasticsearch.common.xcontent.AbstractObjectParser$NoContextParser",
      "org.elasticsearch.action.admin.indices.stats.IndicesStatsRequest",
      "org.elasticsearch.cluster.RestoreInProgress",
      "org.apache.lucene.index.MergePolicy",
      "com.carrotsearch.hppc.predicates.ObjectPredicate",
      "org.apache.lucene.index.LeafReader$CoreClosedListener",
      "org.apache.lucene.search.QueryCache",
      "org.apache.lucene.util.TestRuleAssertionsRequired",
      "org.elasticsearch.cluster.routing.IllegalShardRoutingStateException",
      "org.elasticsearch.transport.ActionTransportException",
      "org.apache.lucene.store.IOContext",
      "org.elasticsearch.common.logging.ESLogger",
      "org.elasticsearch.action.ActionRequest",
      "org.apache.lucene.index.AssertingLeafReader",
      "org.elasticsearch.common.io.FastStringReader",
      "org.elasticsearch.cluster.metadata.MetaDataCreateIndexService$DefaultIndexTemplateFilter",
      "org.apache.lucene.codecs.asserting.AssertingDocValuesFormat",
      "org.elasticsearch.index.engine.DeleteFailedEngineException",
      "org.elasticsearch.action.ActionRequestValidationException",
      "org.joda.time.format.PeriodFormatterBuilder",
      "org.elasticsearch.cluster.metadata.IndexMetaData",
      "org.elasticsearch.snapshots.SnapshotException",
      "org.apache.lucene.util.Accountable",
      "com.carrotsearch.hppc.Containers",
      "org.joda.time.format.PeriodFormatterBuilder$FieldFormatter",
      "com.carrotsearch.hppc.IntLookupContainer",
      "org.elasticsearch.tasks.Task",
      "org.elasticsearch.ElasticsearchParseException",
      "org.elasticsearch.transport.TransportException",
      "org.elasticsearch.indices.IndexPrimaryShardNotAllocatedException",
      "org.elasticsearch.index.mapper.MapperException",
      "org.elasticsearch.indices.InvalidTypeNameException",
      "org.elasticsearch.index.shard.IndexShardClosedException",
      "org.elasticsearch.common.unit.ByteSizeUnit$6",
      "org.elasticsearch.common.unit.ByteSizeUnit$5",
      "org.elasticsearch.common.io.stream.Streamable",
      "org.apache.lucene.search.spans.SpanBoostQuery",
      "org.elasticsearch.ingest.PipelineConfiguration$Builder",
      "org.elasticsearch.indices.recovery.RecoverFilesRecoveryException",
      "org.elasticsearch.common.settings.Setting$Key",
      "org.apache.lucene.index.LogDocMergePolicy",
      "org.elasticsearch.common.io.stream.BytesStreamOutput",
      "org.elasticsearch.cluster.metadata.IndexGraveyard",
      "com.carrotsearch.hppc.BitMixer",
      "org.apache.log4j.Hierarchy",
      "org.apache.lucene.search.LRUQueryCache",
      "org.elasticsearch.index.translog.TranslogCorruptedException",
      "org.elasticsearch.cluster.node.DiscoveryNode",
      "com.carrotsearch.hppc.ObjectContainer",
      "org.elasticsearch.search.fetch.FetchPhaseExecutionException",
      "org.apache.lucene.index.FilterLeafReader",
      "org.elasticsearch.indices.IndicesService",
      "org.apache.lucene.search.similarities.TFIDFSimilarity",
      "org.elasticsearch.common.component.AbstractComponent",
      "org.elasticsearch.action.get.MultiGetRequest$Item",
      "org.elasticsearch.discovery.DiscoverySettings",
      "org.elasticsearch.discovery.Discovery$AckListener",
      "org.elasticsearch.common.xcontent.XContentParser$Token$10",
      "org.apache.lucene.search.CollectorManager",
      "org.elasticsearch.action.admin.cluster.node.stats.NodesStatsRequest",
      "org.elasticsearch.action.support.replication.ReplicationRequest",
      "org.apache.lucene.util.RoaringDocIdSet",
      "org.apache.lucene.index.SerialMergeScheduler",
      "org.elasticsearch.common.util.concurrent.EsRejectedExecutionException",
      "org.elasticsearch.common.logging.ESLoggerFactory",
      "com.carrotsearch.hppc.IntObjectHashMap",
      "org.apache.lucene.store.LockFactory",
      "org.elasticsearch.cluster.metadata.IndexMetaData$1",
      "org.apache.log4j.helpers.OptionConverter",
      "org.apache.lucene.index.SimpleMergedSegmentWarmer",
      "org.apache.lucene.util.TestRuleStoreClassName$1",
      "org.elasticsearch.snapshots.SnapshotMissingException",
      "org.apache.lucene.util.TestRuleSetupAndRestoreClassEnv$ThreadNameFixingPrintStreamInfoStream",
      "org.elasticsearch.transport.TransportRequest",
      "org.elasticsearch.index.query.QueryShardContext",
      "org.elasticsearch.cluster.metadata.MappingMetaData",
      "org.elasticsearch.common.blobstore.BlobStoreException",
      "org.apache.lucene.util.TestRuleSetupAndRestoreClassEnv",
      "org.elasticsearch.common.settings.Settings",
      "org.elasticsearch.common.settings.Setting$AffixKey",
      "org.elasticsearch.script.GeneralScriptException",
      "org.elasticsearch.cluster.metadata.IndexMetaData$IndexMetaDataDiff",
      "org.elasticsearch.repositories.RepositoryException",
      "org.elasticsearch.common.lease.Releasable",
      "org.apache.log4j.Category",
      "org.elasticsearch.transport.ReceiveTimeoutTransportException",
      "org.elasticsearch.search.aggregations.AggregationExecutionException",
      "org.elasticsearch.action.admin.indices.create.CreateIndexClusterStateUpdateRequest",
      "org.apache.lucene.util.FrequencyTrackingRingBuffer",
      "org.elasticsearch.index.store.IndexStoreConfig",
      "org.elasticsearch.common.transport.InetSocketTransportAddress",
      "org.elasticsearch.search.aggregations.AggregationInitializationException",
      "org.elasticsearch.action.support.replication.TransportReplicationActionTests",
      "org.apache.lucene.search.IndexSearcher$1$1",
      "org.apache.lucene.search.IndexSearcher$1$2",
      "org.elasticsearch.index.query.QueryParseContext",
      "org.elasticsearch.common.util.set.Sets",
      "org.apache.lucene.search.CollectionTerminatedException",
      "org.elasticsearch.cluster.metadata.IndexTemplateFilter",
      "org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix",
      "org.elasticsearch.transport.ActionNotFoundTransportException",
      "org.joda.time.ReadablePeriod",
      "org.elasticsearch.transport.RemoteTransportException",
      "org.elasticsearch.Version",
      "org.elasticsearch.cluster.routing.RoutingException",
      "org.elasticsearch.cluster.service.ClusterService$SafeClusterStateTaskListener",
      "org.elasticsearch.common.xcontent.ObjectParser",
      "org.elasticsearch.common.unit.ByteSizeUnit$2",
      "org.apache.lucene.util.LuceneTestCase",
      "org.elasticsearch.common.unit.ByteSizeUnit$1",
      "org.elasticsearch.common.unit.ByteSizeUnit$4",
      "org.elasticsearch.common.unit.ByteSizeUnit$3",
      "org.apache.lucene.util.LuceneTestCase$ThrowingRunnable",
      "org.elasticsearch.cluster.node.DiscoveryNodeFilters",
      "org.apache.lucene.search.similarities.BM25Similarity",
      "org.elasticsearch.index.engine.DocumentSourceMissingException",
      "org.elasticsearch.cluster.metadata.AliasOrIndex",
      "org.elasticsearch.index.engine.FlushNotAllowedEngineException",
      "org.elasticsearch.common.settings.NoClassSettingsException",
      "org.elasticsearch.cluster.metadata.IndexGraveyard$Builder",
      "org.elasticsearch.cluster.metadata.MetaDataCreateIndexService",
      "org.elasticsearch.common.logging.DeprecationLogger",
      "org.elasticsearch.common.ParsingException",
      "org.elasticsearch.common.xcontent.XContentType",
      "org.apache.lucene.util.TestRuleMarkFailure$1",
      "org.apache.lucene.store.DataOutput",
      "org.elasticsearch.rest.action.admin.indices.alias.delete.AliasesNotFoundException",
      "com.carrotsearch.hppc.ObjectIntMap",
      "org.elasticsearch.common.xcontent.XContentParser$Token",
      "org.elasticsearch.cluster.metadata.IndexTemplateMetaData$Builder",
      "org.apache.lucene.store.BaseDirectoryWrapper",
      "org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1",
      "org.elasticsearch.ElasticsearchTimeoutException",
      "com.carrotsearch.hppc.IntObjectAssociativeContainer",
      "org.elasticsearch.repositories.RepositoryVerificationException",
      "org.elasticsearch.common.unit.TimeValue",
      "com.carrotsearch.hppc.predicates.ObjectObjectPredicate",
      "org.elasticsearch.cluster.block.ClusterBlockLevel",
      "org.apache.lucene.store.SimpleFSDirectory",
      "com.carrotsearch.hppc.ObjectObjectHashMap$ValuesContainer",
      "org.apache.lucene.index.PostingsEnum",
      "org.elasticsearch.cluster.ack.ClusterStateUpdateRequest",
      "org.elasticsearch.action.support.ToXContentToBytes",
      "org.elasticsearch.common.xcontent.AbstractObjectParser$ContextParser",
      "org.elasticsearch.common.io.CharSequenceReader",
      "org.apache.log4j.spi.AppenderAttachable",
      "org.apache.lucene.search.Collector",
      "org.elasticsearch.action.ShardOperationFailedException",
      "org.elasticsearch.common.settings.IndexScopedSettings",
      "org.apache.lucene.codecs.simpletext.SimpleTextCodec",
      "org.elasticsearch.common.RandomBasedUUIDGenerator",
      "org.elasticsearch.action.UnavailableShardsException",
      "org.elasticsearch.index.engine.FlushFailedEngineException",
      "org.apache.lucene.document.Field",
      "org.joda.time.format.PeriodFormatterBuilder$Separator",
      "org.apache.lucene.codecs.Codec",
      "org.elasticsearch.script.ScriptMetaData",
      "org.elasticsearch.cluster.SnapshotsInProgress",
      "org.elasticsearch.cluster.AckedClusterStateTaskListener",
      "org.elasticsearch.common.settings.Setting$4",
      "org.apache.lucene.search.ConstantScoreWeight",
      "org.joda.time.DurationFieldType$StandardDurationFieldType",
      "org.elasticsearch.common.settings.Setting$3",
      "org.elasticsearch.cluster.ClusterState$Metric",
      "org.elasticsearch.common.settings.Setting$2",
      "com.carrotsearch.hppc.ObjectLookupContainer",
      "org.elasticsearch.index.snapshots.IndexShardSnapshotFailedException",
      "org.elasticsearch.common.io.stream.StreamOutput",
      "org.elasticsearch.common.unit.ByteSizeUnit",
      "org.elasticsearch.discovery.MasterNotDiscoveredException",
      "org.apache.lucene.index.IndexFormatTooNewException",
      "org.elasticsearch.action.IndicesRequest",
      "org.elasticsearch.cluster.ClusterState$Custom",
      "org.elasticsearch.common.xcontent.XContentBuilder",
      "org.elasticsearch.indices.IndexClosedException",
      "org.apache.lucene.index.AssertingDirectoryReader",
      "org.elasticsearch.transport.ConnectTransportException",
      "org.elasticsearch.cluster.ClusterStateUpdateTask",
      "org.elasticsearch.transport.ResponseHandlerFailureTransportException",
      "org.elasticsearch.indices.IndexCreationException",
      "org.elasticsearch.rest.RestRequest",
      "org.elasticsearch.action.support.broadcast.BroadcastRequest",
      "org.apache.lucene.search.QueryCachingPolicy",
      "org.elasticsearch.ElasticsearchGenerationException",
      "org.elasticsearch.common.xcontent.AbstractObjectParser",
      "org.elasticsearch.cluster.ClusterInfoService",
      "org.apache.lucene.codecs.mockrandom.MockRandomPostingsFormat",
      "org.elasticsearch.common.xcontent.XContentParser$Token$6",
      "org.apache.lucene.search.similarities.Similarity$SimWeight",
      "org.elasticsearch.common.xcontent.XContentParser$Token$7",
      "org.elasticsearch.common.xcontent.XContentParser$Token$8",
      "org.elasticsearch.cluster.InternalClusterInfoService",
      "org.elasticsearch.common.xcontent.XContentParser$Token$9",
      "org.apache.lucene.search.similarities.ClassicSimilarity",
      "org.elasticsearch.search.SearchContextMissingException",
      "org.elasticsearch.common.settings.AbstractScopedSettings$SettingUpdater",
      "org.elasticsearch.common.xcontent.XContentParser$Token$2",
      "org.elasticsearch.common.xcontent.XContentParser$Token$3",
      "org.elasticsearch.common.xcontent.XContentParser$Token$4",
      "org.elasticsearch.common.xcontent.XContentParser$Token$5",
      "org.elasticsearch.common.UUIDs",
      "org.elasticsearch.common.xcontent.XContentParser$Token$1",
      "com.carrotsearch.hppc.Containers$1",
      "org.elasticsearch.action.IndicesRequest$Replaceable",
      "org.elasticsearch.cluster.service.ClusterService$SafeAckedClusterStateTaskListener",
      "org.elasticsearch.common.network.InetAddresses",
      "org.elasticsearch.cluster.ack.AckedRequest",
      "org.elasticsearch.rest.RestRequest$Method",
      "org.elasticsearch.indices.InvalidAliasNameException",
      "org.elasticsearch.cluster.action.shard.ShardStateAction$NoLongerPrimaryShardException",
      "org.elasticsearch.indices.InvalidIndexNameException",
      "org.apache.lucene.util.ThreadInterruptedException",
      "org.apache.lucene.index.LiveIndexWriterConfig",
      "org.elasticsearch.action.DocumentRequest",
      "org.apache.lucene.store.FSLockFactory",
      "org.elasticsearch.action.termvectors.TermVectorsRequest$Flag",
      "org.elasticsearch.cluster.routing.RoutingNodes$UnassignedShards",
      "org.elasticsearch.common.io.stream.NamedWriteable",
      "com.carrotsearch.randomizedtesting.rules.StaticFieldsInvariantRule$1",
      "org.elasticsearch.index.translog.TruncatedTranslogException",
      "org.elasticsearch.index.shard.IndexShardRelocatedException",
      "org.apache.log4j.helpers.Loader",
      "org.elasticsearch.cluster.routing.ShardRoutingState",
      "org.apache.lucene.index.ConcurrentMergeScheduler",
      "org.elasticsearch.indices.IndexTemplateAlreadyExistsException",
      "com.carrotsearch.hppc.ObjectIntHashMap",
      "org.elasticsearch.cluster.block.ClusterBlockException",
      "org.apache.lucene.codecs.DocValuesFormat",
      "org.apache.lucene.search.TopDocs",
      "org.elasticsearch.action.NoSuchNodeException",
      "org.apache.lucene.analysis.Analyzer",
      "org.elasticsearch.cluster.routing.UnassignedInfo",
      "com.carrotsearch.randomizedtesting.RandomizedTest$5",
      "org.elasticsearch.transport.SendRequestTransportException",
      "com.carrotsearch.randomizedtesting.RandomizedTest$1",
      "org.elasticsearch.common.io.stream.NotSerializableExceptionWrapper",
      "org.apache.lucene.index.DocValuesType",
      "org.elasticsearch.action.support.single.shard.SingleShardRequest",
      "org.joda.time.format.PeriodParser",
      "org.elasticsearch.index.query.AbstractQueryBuilder",
      "org.elasticsearch.cluster.metadata.IndexGraveyard$Tombstone$Builder",
      "org.apache.lucene.store.BaseDirectory",
      "org.apache.lucene.index.BaseCompositeReader",
      "org.apache.lucene.index.IndexReader$ReaderClosedListener",
      "com.carrotsearch.hppc.AbstractIterator",
      "org.elasticsearch.action.ActionListener",
      "org.elasticsearch.ElasticsearchException",
      "org.elasticsearch.action.PrimaryMissingActionException",
      "org.elasticsearch.action.FailedNodeException",
      "org.apache.lucene.util.AbstractBeforeAfterRule",
      "org.apache.lucene.document.FieldType",
      "org.elasticsearch.common.settings.PropertyPlaceholder$PlaceholderResolver",
      "org.apache.lucene.index.Fields",
      "org.elasticsearch.cluster.RestoreInProgress$Entry",
      "org.apache.lucene.index.CorruptIndexException",
      "com.carrotsearch.hppc.cursors.ObjectObjectCursor",
      "org.apache.lucene.store.Directory",
      "org.elasticsearch.action.RoutingMissingException",
      "org.elasticsearch.common.ParseFieldMatcher",
      "org.apache.lucene.index.LeafReaderContext",
      "org.elasticsearch.index.snapshots.IndexShardRestoreFailedException",
      "org.apache.lucene.util.NullInfoStream",
      "org.elasticsearch.index.query.QueryShardException",
      "org.elasticsearch.common.settings.Setting",
      "org.apache.lucene.store.MockDirectoryWrapper$Throttling",
      "org.apache.lucene.util.BytesRef",
      "org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDecider",
      "org.elasticsearch.indices.recovery.DelayRecoveryException",
      "org.apache.lucene.search.QueryCachingPolicy$CacheOnLargeSegments",
      "org.apache.lucene.index.MismatchedDirectoryReader",
      "org.elasticsearch.common.bytes.BytesReference",
      "org.elasticsearch.snapshots.InvalidSnapshotNameException",
      "org.apache.lucene.search.similarities.BM25Similarity$BM25Stats",
      "org.elasticsearch.common.transport.TransportAddress",
      "org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures",
      "org.joda.time.DurationFieldType",
      "org.elasticsearch.cluster.routing.allocation.decider.AllocationDecider",
      "org.elasticsearch.repositories.RepositoryMissingException",
      "org.apache.lucene.search.TopFieldDocs",
      "org.apache.lucene.store.MockDirectoryWrapper",
      "org.apache.lucene.index.IndexWriterConfig",
      "com.carrotsearch.randomizedtesting.rules.TestRuleAdapter$1",
      "org.elasticsearch.cluster.routing.ShardRouting",
      "org.apache.lucene.search.Weight",
      "org.apache.lucene.index.PointValues$IntersectVisitor",
      "org.apache.log4j.PropertyConfigurator",
      "org.elasticsearch.tasks.TaskId",
      "org.elasticsearch.action.support.nodes.BaseNodesRequest",
      "org.apache.lucene.util.TestRuleLimitSysouts$DelegateStream",
      "org.elasticsearch.cluster.ClusterStateTaskListener",
      "org.apache.lucene.index.IndexableFieldType",
      "org.elasticsearch.search.query.QueryPhaseExecutionException",
      "org.elasticsearch.cluster.routing.RoutingNodes",
      "org.elasticsearch.client.Requests",
      "org.elasticsearch.cluster.ClusterState$ClusterStateDiff",
      "com.carrotsearch.hppc.ObjectIntAssociativeContainer",
      "org.apache.lucene.index.ParallelCompositeReader",
      "org.elasticsearch.common.Classes",
      "org.apache.lucene.store.IndexOutput",
      "org.elasticsearch.cluster.routing.ShardsIterator",
      "org.elasticsearch.index.mapper.MapperParsingException",
      "org.apache.lucene.document.Field$Store",
      "org.elasticsearch.common.settings.SettingsFilter",
      "org.joda.time.format.PeriodFormat",
      "com.carrotsearch.hppc.Preallocable",
      "org.joda.time.format.PeriodFormatterBuilder$Composite",
      "org.elasticsearch.common.TimeBasedUUIDGenerator",
      "org.elasticsearch.common.SecureRandomHolder",
      "org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix",
      "org.apache.lucene.index.IndexFormatTooOldException",
      "com.carrotsearch.hppc.IntObjectMap",
      "org.elasticsearch.cluster.LocalNodeMasterListener",
      "org.apache.lucene.util.BytesRefIterator",
      "org.elasticsearch.common.breaker.CircuitBreakingException",
      "org.elasticsearch.index.mapper.StrictDynamicMappingException",
      "org.apache.log4j.spi.LoggerRepository",
      "com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1",
      "org.elasticsearch.indices.TypeMissingException",
      "org.elasticsearch.index.shard.IndexShardRecoveryException",
      "org.elasticsearch.cluster.metadata.MetaData",
      "org.elasticsearch.index.query.IdsQueryBuilder",
      "org.apache.lucene.index.CompositeReader",
      "org.elasticsearch.action.admin.indices.alias.Alias",
      "com.carrotsearch.randomizedtesting.rules.TestRuleAdapter",
      "org.apache.lucene.util.TestRuleStoreClassName",
      "org.elasticsearch.node.NodeClosedException",
      "org.elasticsearch.index.shard.ShardNotFoundException",
      "org.apache.lucene.codecs.FilterCodec",
      "org.apache.lucene.store.RawDirectoryWrapper",
      "org.elasticsearch.cluster.block.ClusterBlock",
      "org.apache.log4j.Level",
      "org.elasticsearch.action.support.broadcast.BroadcastShardOperationFailedException",
      "org.apache.lucene.queries.TermsQuery",
      "com.carrotsearch.randomizedtesting.rules.NoClassHooksShadowingRule",
      "org.elasticsearch.script.ScriptException",
      "org.apache.lucene.util.TestRuleLimitSysouts",
      "org.elasticsearch.common.xcontent.ToXContent$MapParams",
      "org.apache.lucene.util.NamedSPILoader$NamedSPI",
      "com.carrotsearch.hppc.cursors.ObjectCursor",
      "org.elasticsearch.index.NodeServicesProvider",
      "org.elasticsearch.common.UUIDGenerator",
      "org.elasticsearch.index.shard.TranslogRecoveryPerformer$BatchOperationException",
      "org.elasticsearch.snapshots.SnapshotCreationException",
      "org.elasticsearch.common.settings.Setting$Property",
      "org.apache.lucene.util.FrequencyTrackingRingBuffer$IntBag",
      "org.apache.lucene.util.InfoStream",
      "org.elasticsearch.common.lucene.store.InputStreamIndexInput",
      "org.elasticsearch.index.engine.DocumentMissingException",
      "org.apache.lucene.store.NRTCachingDirectory",
      "org.apache.lucene.codecs.PostingsFormat",
      "org.elasticsearch.search.SearchException",
      "org.elasticsearch.common.network.NetworkAddress",
      "org.apache.lucene.codecs.asserting.AssertingPostingsFormat",
      "org.apache.lucene.store.StoreRateLimiting$Type",
      "org.apache.lucene.store.DataInput",
      "org.elasticsearch.common.collect.ImmutableOpenMap",
      "org.elasticsearch.common.xcontent.ObjectParser$Parser",
      "org.elasticsearch.indices.recovery.RecoveryFailedException",
      "org.joda.time.format.PeriodFormatter",
      "org.apache.lucene.search.similarities.Similarity$SimScorer",
      "org.elasticsearch.action.termvectors.TermVectorsRequest$FilterSettings",
      "org.apache.lucene.util.TestRuleMarkFailure",
      "org.apache.lucene.search.AssertingIndexSearcher",
      "org.elasticsearch.common.settings.Setting$GroupKey",
      "org.apache.lucene.index.FilterDirectoryReader",
      "org.apache.lucene.search.similarities.Similarity",
      "org.elasticsearch.common.regex.Regex",
      "org.elasticsearch.index.IndexShardAlreadyExistsException",
      "org.elasticsearch.gateway.MetaDataStateFormat",
      "org.elasticsearch.test.ESTestCase",
      "org.elasticsearch.index.engine.VersionConflictEngineException",
      "org.apache.lucene.store.FSDirectory",
      "org.elasticsearch.cluster.metadata.MetaData$Custom",
      "org.elasticsearch.index.engine.EngineException",
      "org.apache.lucene.index.TieredMergePolicy",
      "org.elasticsearch.cluster.metadata.IndexMetaData$State",
      "org.apache.lucene.util.LuceneTestCase$4",
      "org.elasticsearch.common.logging.Loggers",
      "org.elasticsearch.cluster.metadata.MetaData$XContentContext",
      "org.elasticsearch.index.query.QueryBuilder",
      "org.elasticsearch.cluster.node.DiscoveryNodes",
      "org.apache.log4j.spi.DefaultRepositorySelector",
      "org.apache.lucene.util.LuceneTestCase$2",
      "org.apache.lucene.util.LuceneTestCase$3",
      "org.apache.lucene.store.IndexInput",
      "org.elasticsearch.common.unit.RatioValue",
      "org.joda.time.ReadWritablePeriod",
      "org.elasticsearch.cluster.ClusterStateTaskConfig",
      "com.carrotsearch.hppc.ObjectObjectMap",
      "org.elasticsearch.cluster.ClusterStateTaskExecutor",
      "org.elasticsearch.index.query.QueryValidationException",
      "org.apache.lucene.util.LuceneTestCase$1",
      "org.elasticsearch.indices.IndexTemplateMissingException",
      "org.joda.time.format.PeriodPrinter",
      "org.apache.lucene.store.RateLimiter$SimpleRateLimiter",
      "org.elasticsearch.common.xcontent.XContentParser",
      "org.apache.lucene.util.TestRuleAssertionsRequired$1",
      "org.elasticsearch.action.support.replication.BasicReplicationRequest",
      "org.elasticsearch.common.lucene.Lucene$EarlyTerminationException",
      "org.elasticsearch.indices.AliasFilterParsingException",
      "org.elasticsearch.cluster.ClusterState$Builder",
      "org.elasticsearch.cluster.metadata.IndexTemplateMetaData",
      "org.apache.lucene.util.RamUsageEstimator$1",
      "org.elasticsearch.common.collect.Tuple",
      "org.apache.lucene.util.TestRuleRestoreSystemProperties",
      "org.apache.lucene.index.MockRandomMergePolicy",
      "org.elasticsearch.snapshots.ConcurrentSnapshotExecutionException",
      "org.elasticsearch.env.Environment",
      "org.elasticsearch.common.xcontent.XContent",
      "org.apache.log4j.or.ObjectRenderer",
      "org.elasticsearch.index.engine.RecoveryEngineException",
      "org.elasticsearch.index.VersionType",
      "org.elasticsearch.action.RealtimeRequest",
      "org.elasticsearch.common.util.concurrent.UncategorizedExecutionException",
      "org.elasticsearch.action.WriteConsistencyLevel",
      "com.carrotsearch.hppc.ObjectObjectHashMap$EntryIterator",
      "org.elasticsearch.action.support.IndicesOptions",
      "org.elasticsearch.common.ValidationException",
      "org.elasticsearch.cluster.ClusterName",
      "org.elasticsearch.index.engine.IndexFailedEngineException",
      "org.elasticsearch.common.settings.AbstractScopedSettings",
      "org.elasticsearch.index.query.QueryRewriteContext",
      "org.apache.lucene.index.LogMergePolicy",
      "org.elasticsearch.transport.NodeDisconnectedException",
      "org.elasticsearch.index.AlreadyExpiredException",
      "org.elasticsearch.index.Index$Builder",
      "org.apache.lucene.codecs.lucene60.Lucene60Codec",
      "org.apache.lucene.index.MismatchedLeafReader",
      "org.apache.lucene.index.Terms",
      "org.elasticsearch.common.xcontent.ToXContent",
      "com.carrotsearch.hppc.IntContainer",
      "org.elasticsearch.client.transport.NoNodeAvailableException",
      "org.elasticsearch.gateway.MetaDataStateFormat$1",
      "org.elasticsearch.cluster.AbstractDiffable",
      "com.carrotsearch.randomizedtesting.rules.StatementAdapter",
      "org.apache.lucene.index.AlcoholicMergePolicy",
      "org.apache.lucene.util.RamUsageEstimator",
      "org.elasticsearch.discovery.Discovery$FailedToCommitClusterStateException",
      "org.apache.log4j.spi.LoggerFactory",
      "org.apache.log4j.spi.Configurator",
      "org.apache.lucene.index.LeafReader",
      "org.elasticsearch.index.engine.IgnoreOnRecoveryEngineException",
      "org.apache.lucene.index.LogByteSizeMergePolicy",
      "org.apache.lucene.index.IndexReader",
      "org.apache.lucene.search.IndexSearcher",
      "org.elasticsearch.search.fetch.source.FetchSourceContext",
      "org.elasticsearch.transport.BindTransportException",
      "org.elasticsearch.index.shard.IndexShardRecoveringException",
      "org.elasticsearch.common.Booleans",
      "org.elasticsearch.index.Index",
      "org.elasticsearch.common.xcontent.FromXContentBuilder",
      "org.apache.lucene.util.AbstractBeforeAfterRule$1",
      "org.elasticsearch.cluster.metadata.ProcessClusterEventTimeoutException",
      "org.elasticsearch.common.Strings",
      "org.elasticsearch.cluster.block.ClusterBlocks$ImmutableLevelHolder",
      "org.elasticsearch.cluster.metadata.MetaDataCreateIndexService$1",
      "org.apache.lucene.search.similarities.BM25Similarity$BM25DocScorer",
      "org.elasticsearch.indices.IndexAlreadyExistsException",
      "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException",
      "org.elasticsearch.script.Script$ScriptParseException",
      "org.apache.lucene.util.TestRuleIgnoreTestSuites$1",
      "org.elasticsearch.cluster.metadata.RepositoryMetaData",
      "org.elasticsearch.search.SearchContextException",
      "org.apache.lucene.codecs.asserting.AssertingCodec",
      "org.elasticsearch.search.builder.SearchSourceBuilderException",
      "org.elasticsearch.cluster.node.DiscoveryNodes$Builder",
      "org.elasticsearch.cluster.metadata.MetaData$2",
      "org.apache.lucene.util.Version",
      "com.carrotsearch.hppc.HashOrderMixing$1",
      "org.elasticsearch.index.IndexService$ShardStoreDeleter",
      "org.apache.log4j.Priority",
      "org.apache.lucene.util.Constants",
      "org.elasticsearch.common.io.stream.StreamInput",
      "org.elasticsearch.transport.NodeNotConnectedException",
      "org.elasticsearch.common.xcontent.ToXContent$DelegatingMapParams",
      "org.elasticsearch.cluster.metadata.MetaData$Builder",
      "org.apache.log4j.LogManager",
      "org.elasticsearch.common.xcontent.ToXContent$Params",
      "org.apache.lucene.index.IndexOptions",
      "org.apache.lucene.store.RateLimiter",
      "com.carrotsearch.hppc.HashOrderMixing$4",
      "org.elasticsearch.index.shard.ShardId",
      "org.apache.lucene.search.Query",
      "org.elasticsearch.search.dfs.DfsPhaseExecutionException",
      "com.carrotsearch.hppc.ObjectObjectHashMap",
      "org.apache.log4j.DefaultCategoryFactory",
      "org.elasticsearch.ElasticsearchCorruptionException",
      "org.elasticsearch.ElasticsearchException$FunctionThatThrowsIOException",
      "org.elasticsearch.cluster.ClusterStateListener",
      "org.elasticsearch.action.search.ReduceSearchPhaseException",
      "org.apache.log4j.or.RendererMap",
      "org.elasticsearch.common.ParseFieldMatcherSupplier",
      "org.elasticsearch.cluster.ClusterState",
      "com.carrotsearch.hppc.ObjectCollection",
      "org.apache.lucene.search.UsageTrackingQueryCachingPolicy",
      "org.elasticsearch.transport.NotSerializableTransportException",
      "org.elasticsearch.index.IndexNotFoundException",
      "org.apache.lucene.index.TermsEnum",
      "org.elasticsearch.ResourceNotFoundException",
      "org.elasticsearch.action.termvectors.TermVectorsRequest",
      "org.apache.lucene.index.RandomCodec",
      "org.elasticsearch.common.ParseField",
      "org.elasticsearch.common.MacAddressProvider",
      "org.elasticsearch.index.shard.IndexShardStartedException",
      "com.carrotsearch.hppc.AbstractObjectCollection",
      "org.elasticsearch.cluster.SnapshotsInProgress$Entry",
      "org.elasticsearch.common.xcontent.XContentType$4",
      "com.carrotsearch.hppc.RandomizedHashOrderMixer",
      "org.elasticsearch.common.collect.ImmutableOpenMap$2",
      "com.carrotsearch.randomizedtesting.RandomizedTest",
      "org.elasticsearch.common.settings.Setting$SimpleKey",
      "org.elasticsearch.common.xcontent.XContentType$1",
      "org.elasticsearch.common.xcontent.XContentType$3",
      "org.apache.log4j.CategoryKey",
      "org.elasticsearch.rest.RestStatus",
      "org.elasticsearch.common.xcontent.XContentType$2",
      "com.carrotsearch.hppc.HashOrderMixing$Strategy$2",
      "com.carrotsearch.hppc.HashOrderMixing$Strategy$3",
      "org.elasticsearch.common.lucene.store.IndexOutputOutputStream",
      "com.carrotsearch.hppc.HashOrderMixing$Strategy$1",
      "org.elasticsearch.snapshots.SnapshotRestoreException",
      "org.apache.lucene.search.LeafCollector",
      "org.apache.lucene.util.SmallFloat",
      "org.apache.lucene.util.TestRuleSetupAndRestoreClassEnv$1",
      "org.apache.lucene.search.similarities.RandomSimilarity",
      "org.elasticsearch.cluster.service.ClusterService",
      "com.carrotsearch.hppc.HashOrderMixing",
      "org.elasticsearch.transport.NodeShouldNotConnectException",
      "org.joda.time.PeriodType",
      "org.apache.log4j.ProvisionNode",
      "org.elasticsearch.index.VersionType$3",
      "org.elasticsearch.index.VersionType$4",
      "org.elasticsearch.index.VersionType$1",
      "org.elasticsearch.index.VersionType$2",
      "org.elasticsearch.common.collect.ImmutableOpenIntMap$Builder",
      "org.elasticsearch.cluster.metadata.IndexMetaData$Custom",
      "org.elasticsearch.common.logging.ESLoggerFactory$LogLevel",
      "org.apache.lucene.search.DocIdSetIterator",
      "org.elasticsearch.transport.TransportMessage",
      "org.elasticsearch.ElasticsearchWrapperException",
      "com.carrotsearch.hppc.HashContainers",
      "org.elasticsearch.cluster.metadata.IndexGraveyard$Tombstone",
      "org.apache.log4j.spi.RootLogger",
      "org.elasticsearch.indices.ttl.IndicesTTLService",
      "com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule",
      "org.elasticsearch.common.settings.SettingsException",
      "org.elasticsearch.cluster.routing.RoutingNode",
      "org.apache.lucene.search.QueryUtils$FCInvisibleMultiReader",
      "org.apache.log4j.spi.RendererSupport",
      "org.elasticsearch.cluster.metadata.AutoExpandReplicas",
      "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
      "org.elasticsearch.common.component.LifecycleComponent",
      "org.elasticsearch.cluster.metadata.AliasValidator",
      "org.apache.lucene.search.BoostQuery",
      "org.elasticsearch.cluster.routing.RoutingTable",
      "org.apache.lucene.index.FieldInfo",
      "org.joda.time.format.PeriodFormatterBuilder$PluralAffix",
      "org.elasticsearch.gateway.GatewayException",
      "org.elasticsearch.index.shard.IndexShardNotRecoveringException",
      "org.elasticsearch.http.HttpException",
      "com.carrotsearch.hppc.BitUtil",
      "org.elasticsearch.ingest.IngestMetadata",
      "org.elasticsearch.search.SearchParseException",
      "org.elasticsearch.cluster.ClusterState$ClusterStateStatus",
      "com.carrotsearch.hppc.HashOrderMixingStrategy",
      "org.apache.lucene.index.IndexableField",
      "com.carrotsearch.randomizedtesting.rules.StaticFieldsInvariantRule",
      "org.elasticsearch.cluster.IncompatibleClusterStateVersionException",
      "org.apache.lucene.util.TestRuleIgnoreTestSuites",
      "org.apache.lucene.index.IndexWriter$IndexReaderWarmer",
      "org.apache.log4j.Logger",
      "com.carrotsearch.hppc.HashOrderMixing$Strategy",
      "org.apache.lucene.index.MergeScheduler",
      "org.elasticsearch.action.TimestampParsingException",
      "org.elasticsearch.cluster.routing.RoutingNodes$UnassignedShards$UnassignedIterator",
      "com.carrotsearch.hppc.BufferAllocationException",
      "org.apache.lucene.search.IndexSearcher$1",
      "org.apache.log4j.helpers.LogLog",
      "org.elasticsearch.common.unit.ByteSizeValue",
      "org.elasticsearch.indices.InvalidIndexTemplateException",
      "org.elasticsearch.action.get.GetRequest",
      "org.elasticsearch.index.engine.RefreshFailedEngineException",
      "org.apache.lucene.index.DirectoryReader",
      "org.apache.log4j.spi.RepositorySelector",
      "org.elasticsearch.index.shard.IllegalIndexShardStateException",
      "org.apache.lucene.util.LuceneTestCase$LiveIWCFlushMode",
      "org.elasticsearch.index.snapshots.IndexShardSnapshotException",
      "org.elasticsearch.index.shard.IndexShardNotStartedException",
      "org.apache.lucene.analysis.MockAnalyzer",
      "org.elasticsearch.action.search.SearchPhaseExecutionException",
      "org.elasticsearch.transport.TransportSerializationException",
      "org.elasticsearch.ingest.PipelineConfiguration",
      "org.elasticsearch.common.collect.ImmutableOpenMap$Builder",
      "org.elasticsearch.index.engine.EngineCreationFailureException",
      "org.elasticsearch.common.collect.ImmutableOpenIntMap",
      "org.joda.time.format.PeriodFormat$DynamicWordBased",
      "org.apache.lucene.store.OutputStreamIndexOutput",
      "org.apache.log4j.or.DefaultRenderer",
      "org.elasticsearch.cluster.AckedClusterStateUpdateTask",
      "org.apache.lucene.index.NumericDocValues",
      "org.apache.lucene.util.TestRuleDelegate",
      "org.apache.log4j.spi.ThrowableRendererSupport",
      "org.apache.lucene.util.TestRuleTemporaryFilesCleanup",
      "org.apache.lucene.search.similarities.PerFieldSimilarityWrapper",
      "org.elasticsearch.index.translog.TranslogException",
      "org.elasticsearch.gateway.CorruptStateException",
      "org.apache.lucene.search.DocIdSet",
      "org.elasticsearch.common.xcontent.ObjectParser$ValueType",
      "org.apache.lucene.search.LRUQueryCache$CachingWrapperWeight",
      "org.elasticsearch.search.aggregations.InvalidAggregationPathException",
      "org.apache.lucene.search.spans.SpanQuery",
      "org.elasticsearch.common.xcontent.ObjectParser$FieldParser",
      "com.carrotsearch.hppc.ObjectObjectAssociativeContainer",
      "org.elasticsearch.cluster.metadata.RepositoriesMetaData",
      "org.elasticsearch.transport.netty.SizeHeaderFrameDecoder$HttpOnTransportException",
      "org.elasticsearch.cluster.Diffable",
      "org.apache.lucene.codecs.compressing.CompressingCodec",
      "org.elasticsearch.cluster.routing.RoutingTable$Builder",
      "org.elasticsearch.index.engine.EngineClosedException",
      "org.elasticsearch.test.rest.FakeRestRequest",
      "com.carrotsearch.hppc.IntCollection",
      "org.elasticsearch.action.NoShardAvailableActionException",
      "org.apache.lucene.codecs.cheapbastard.CheapBastardCodec",
      "org.elasticsearch.cluster.ClusterInfoService$Listener",
      "org.apache.lucene.util.PrintStreamInfoStream",
      "org.elasticsearch.common.component.AbstractLifecycleComponent",
      "org.apache.lucene.store.FilterDirectory",
      "org.elasticsearch.cluster.metadata.IndexMetaData$Builder",
      "org.elasticsearch.action.support.replication.TransportReplicationAction$RetryOnReplicaException",
      "com.carrotsearch.randomizedtesting.rules.NoInstanceHooksOverridesRule",
      "org.elasticsearch.common.io.stream.Writeable",
      "org.elasticsearch.common.settings.Settings$Builder",
      "org.elasticsearch.action.support.replication.ReplicationTask",
      "org.apache.lucene.index.IndexReaderContext"
    );
  } 
  private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
    mock(Class.forName("java.lang.ThreadGroup", false, MetaDataCreateIndexService_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("java.util.function.BiFunction", false, MetaDataCreateIndexService_ESTest_scaffolding.class.getClassLoader()));
  }

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(MetaDataCreateIndexService_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "org.elasticsearch.common.component.AbstractComponent",
      "org.elasticsearch.cluster.metadata.MetaDataCreateIndexService$DefaultIndexTemplateFilter",
      "org.elasticsearch.cluster.metadata.MetaDataCreateIndexService",
      "org.elasticsearch.cluster.ClusterStateUpdateTask",
      "org.elasticsearch.cluster.AckedClusterStateUpdateTask",
      "org.elasticsearch.cluster.metadata.MetaDataCreateIndexService$1",
      "org.elasticsearch.cluster.metadata.MetaDataCreateIndexService$2",
      "org.elasticsearch.common.util.set.Sets",
      "org.elasticsearch.common.Strings",
      "org.elasticsearch.common.Priority",
      "org.elasticsearch.rest.RestStatus",
      "org.elasticsearch.cluster.block.ClusterBlockLevel",
      "org.elasticsearch.common.settings.Setting$Property",
      "org.elasticsearch.common.logging.Loggers",
      "org.elasticsearch.common.logging.ESLoggerFactory$LogLevel",
      "org.elasticsearch.action.support.ToXContentToBytes",
      "org.elasticsearch.common.Classes",
      "org.elasticsearch.common.settings.Setting$SimpleKey",
      "org.elasticsearch.common.xcontent.XContentType",
      "org.elasticsearch.client.Requests",
      "org.elasticsearch.common.settings.Setting$AffixKey",
      "org.elasticsearch.common.settings.Setting$4",
      "org.elasticsearch.common.logging.ESLoggerFactory",
      "org.elasticsearch.common.logging.ESLogger",
      "org.apache.log4j.Category",
      "org.apache.log4j.Logger",
      "org.apache.log4j.Hierarchy",
      "org.apache.log4j.spi.RootLogger",
      "org.apache.log4j.Priority",
      "org.apache.log4j.Level",
      "org.apache.log4j.or.DefaultRenderer",
      "org.apache.log4j.or.RendererMap",
      "org.apache.log4j.DefaultCategoryFactory",
      "org.apache.log4j.spi.DefaultRepositorySelector",
      "org.apache.log4j.helpers.OptionConverter",
      "org.apache.log4j.helpers.Loader",
      "org.apache.log4j.helpers.LogLog",
      "org.apache.log4j.PropertyConfigurator",
      "org.apache.log4j.LogManager",
      "org.apache.log4j.CategoryKey",
      "org.apache.log4j.ProvisionNode",
      "org.elasticsearch.common.logging.DeprecationLogger",
      "org.elasticsearch.common.settings.Setting",
      "org.elasticsearch.cluster.metadata.AutoExpandReplicas",
      "org.apache.lucene.util.Version",
      "org.elasticsearch.Version",
      "org.elasticsearch.cluster.block.ClusterBlock",
      "org.elasticsearch.common.settings.Setting$3",
      "org.elasticsearch.common.settings.Setting$GroupKey",
      "org.elasticsearch.cluster.metadata.IndexMetaData$Builder",
      "org.elasticsearch.cluster.metadata.IndexMetaData$State",
      "org.elasticsearch.common.settings.Settings",
      "org.elasticsearch.common.settings.Settings$Builder",
      "com.carrotsearch.hppc.ObjectObjectHashMap",
      "com.carrotsearch.hppc.HashOrderMixing$1",
      "com.carrotsearch.hppc.HashOrderMixing",
      "com.carrotsearch.hppc.HashOrderMixing$4",
      "com.carrotsearch.hppc.HashOrderMixing$Strategy",
      "com.carrotsearch.hppc.Containers",
      "com.carrotsearch.hppc.Containers$1",
      "com.carrotsearch.hppc.BitMixer",
      "com.carrotsearch.hppc.RandomizedHashOrderMixer",
      "com.carrotsearch.hppc.HashContainers",
      "com.carrotsearch.hppc.BitUtil",
      "org.elasticsearch.common.collect.ImmutableOpenMap",
      "org.elasticsearch.common.collect.ImmutableOpenMap$Builder",
      "com.carrotsearch.hppc.IntObjectHashMap",
      "org.elasticsearch.common.collect.ImmutableOpenIntMap",
      "org.elasticsearch.common.collect.ImmutableOpenIntMap$Builder",
      "org.elasticsearch.common.xcontent.AbstractObjectParser",
      "org.elasticsearch.common.xcontent.ObjectParser",
      "org.elasticsearch.common.ParseField",
      "org.elasticsearch.common.xcontent.XContentParser$Token",
      "org.elasticsearch.common.xcontent.ObjectParser$ValueType",
      "org.elasticsearch.common.xcontent.ObjectParser$FieldParser",
      "org.elasticsearch.index.Index",
      "org.elasticsearch.common.xcontent.ToXContent$MapParams",
      "org.elasticsearch.gateway.MetaDataStateFormat",
      "org.elasticsearch.cluster.metadata.IndexMetaData$1",
      "org.elasticsearch.cluster.metadata.IndexMetaData",
      "org.elasticsearch.common.io.PathUtils",
      "org.elasticsearch.cluster.routing.ShardRoutingState",
      "com.carrotsearch.randomizedtesting.annotations.ThreadLeakScope$Scope",
      "com.carrotsearch.randomizedtesting.annotations.ThreadLeakGroup$Group",
      "com.carrotsearch.randomizedtesting.annotations.ThreadLeakAction$Action",
      "com.carrotsearch.randomizedtesting.annotations.ThreadLeakZombies$Consequence",
      "org.elasticsearch.test.ESIntegTestCase$Scope",
      "org.elasticsearch.cluster.AbstractDiffable",
      "org.elasticsearch.cluster.metadata.IndexTemplateMetaData$Builder",
      "org.elasticsearch.cluster.metadata.IndexTemplateMetaData",
      "com.carrotsearch.hppc.BufferAllocationException",
      "com.carrotsearch.randomizedtesting.RandomizedTest$5",
      "com.carrotsearch.randomizedtesting.RandomizedTest",
      "org.apache.lucene.store.MockDirectoryWrapper$Throttling",
      "org.apache.lucene.util.LuceneTestCase$1",
      "org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures",
      "org.apache.lucene.util.TestRuleDelegate",
      "com.carrotsearch.randomizedtesting.rules.TestRuleAdapter",
      "org.apache.lucene.util.TestRuleLimitSysouts$DelegateStream",
      "org.apache.lucene.util.TestRuleLimitSysouts",
      "org.apache.lucene.util.TestRuleIgnoreTestSuites",
      "org.apache.lucene.util.TestRuleMarkFailure",
      "org.apache.lucene.util.TestRuleAssertionsRequired",
      "org.apache.lucene.util.TestRuleTemporaryFilesCleanup",
      "com.carrotsearch.randomizedtesting.rules.StaticFieldsInvariantRule",
      "org.apache.lucene.util.LuceneTestCase$3",
      "com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule",
      "com.carrotsearch.randomizedtesting.rules.NoClassHooksShadowingRule",
      "com.carrotsearch.randomizedtesting.rules.NoInstanceHooksOverridesRule",
      "org.apache.lucene.util.LuceneTestCase$2",
      "org.apache.lucene.util.TestRuleStoreClassName",
      "org.apache.lucene.util.TestRuleRestoreSystemProperties",
      "org.apache.lucene.util.AbstractBeforeAfterRule",
      "org.apache.lucene.util.TestRuleSetupAndRestoreClassEnv",
      "org.apache.lucene.search.similarities.Similarity",
      "org.apache.lucene.search.IndexSearcher$1",
      "org.apache.lucene.search.UsageTrackingQueryCachingPolicy",
      "org.apache.lucene.search.QueryCachingPolicy$CacheOnLargeSegments",
      "org.apache.lucene.util.Constants",
      "org.apache.lucene.util.RamUsageEstimator$1",
      "org.apache.lucene.util.RamUsageEstimator",
      "org.apache.lucene.util.FrequencyTrackingRingBuffer",
      "org.apache.lucene.util.FrequencyTrackingRingBuffer$IntBag",
      "org.apache.lucene.search.LRUQueryCache",
      "org.apache.lucene.util.SmallFloat",
      "org.apache.lucene.search.similarities.BM25Similarity",
      "org.apache.lucene.search.IndexSearcher",
      "org.apache.lucene.util.LuceneTestCase",
      "org.elasticsearch.bootstrap.Security",
      "org.elasticsearch.bootstrap.Bootstrap",
      "org.elasticsearch.bootstrap.Natives",
      "org.elasticsearch.bootstrap.BootstrapForTesting",
      "org.elasticsearch.test.ESTestCase",
      "org.elasticsearch.transport.TransportMessage",
      "org.elasticsearch.transport.TransportResponse",
      "org.elasticsearch.action.ActionResponse",
      "org.elasticsearch.action.support.replication.ReplicationResponse",
      "org.elasticsearch.action.DocWriteResponse",
      "org.elasticsearch.action.update.UpdateResponse",
      "org.elasticsearch.cluster.ack.ClusterStateUpdateRequest",
      "org.elasticsearch.action.admin.indices.create.CreateIndexClusterStateUpdateRequest",
      "org.elasticsearch.common.io.stream.StreamInput",
      "org.elasticsearch.common.io.stream.InputStreamStreamInput",
      "org.apache.lucene.util.CharsRefBuilder",
      "org.apache.lucene.util.CharsRef$UTF16SortedAsUTF8Comparator",
      "org.apache.lucene.util.CharsRef",
      "org.elasticsearch.common.io.stream.NamedWriteableRegistry",
      "org.elasticsearch.common.io.stream.FilterStreamInput",
      "org.elasticsearch.common.io.stream.NamedWriteableAwareStreamInput",
      "org.apache.lucene.util.ArrayUtil",
      "org.elasticsearch.cluster.ClusterName",
      "org.elasticsearch.cluster.ClusterState$Builder",
      "org.elasticsearch.cluster.metadata.MetaData$Builder",
      "org.elasticsearch.cluster.metadata.IndexGraveyard$Tombstone",
      "org.elasticsearch.cluster.metadata.IndexGraveyard",
      "org.elasticsearch.cluster.metadata.IndexGraveyard$Builder",
      "com.carrotsearch.hppc.AbstractObjectCollection",
      "com.carrotsearch.hppc.ObjectObjectHashMap$ValuesContainer",
      "com.carrotsearch.hppc.AbstractIterator",
      "com.carrotsearch.hppc.ObjectObjectHashMap$ValuesIterator",
      "com.carrotsearch.hppc.cursors.ObjectCursor",
      "org.elasticsearch.cluster.metadata.MetaData$XContentContext",
      "org.elasticsearch.cluster.metadata.RepositoriesMetaData",
      "org.elasticsearch.ingest.PipelineConfiguration",
      "org.elasticsearch.ingest.IngestMetadata",
      "org.elasticsearch.script.ScriptMetaData",
      "org.apache.lucene.store.StoreRateLimiting$Type",
      "org.elasticsearch.common.unit.ByteSizeValue",
      "org.elasticsearch.index.store.IndexStoreConfig",
      "org.elasticsearch.common.unit.TimeValue",
      "org.joda.time.format.PeriodFormat",
      "org.joda.time.format.PeriodFormat$DynamicWordBased",
      "org.joda.time.format.PeriodFormatterBuilder",
      "org.joda.time.format.PeriodFormatterBuilder$FieldFormatter",
      "org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix",
      "org.joda.time.format.PeriodFormatterBuilder$PluralAffix",
      "org.joda.time.format.PeriodFormatterBuilder$Composite",
      "org.joda.time.format.PeriodFormatterBuilder$Separator",
      "org.joda.time.format.PeriodFormatter",
      "org.joda.time.PeriodType",
      "org.joda.time.DurationFieldType$StandardDurationFieldType",
      "org.joda.time.DurationFieldType",
      "org.elasticsearch.indices.recovery.RecoverySettings",
      "org.elasticsearch.common.component.AbstractLifecycleComponent",
      "org.elasticsearch.indices.ttl.IndicesTTLService",
      "org.elasticsearch.cluster.routing.allocation.decider.AllocationDecider",
      "org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDecider",
      "org.elasticsearch.cluster.InternalClusterInfoService",
      "org.elasticsearch.discovery.DiscoverySettings",
      "org.elasticsearch.cluster.service.ClusterService",
      "org.elasticsearch.cluster.metadata.MetaData$2",
      "org.elasticsearch.cluster.metadata.MetaData",
      "org.elasticsearch.cluster.routing.RoutingTable$Builder",
      "org.elasticsearch.cluster.routing.RoutingTable",
      "org.elasticsearch.cluster.node.DiscoveryNodes$Builder",
      "com.carrotsearch.hppc.ObjectObjectHashMap$EntryIterator",
      "com.carrotsearch.hppc.cursors.ObjectObjectCursor",
      "org.elasticsearch.cluster.node.DiscoveryNodes",
      "org.elasticsearch.cluster.block.ClusterBlocks$ImmutableLevelHolder",
      "org.elasticsearch.cluster.block.ClusterBlocks",
      "org.elasticsearch.common.RandomBasedUUIDGenerator",
      "org.elasticsearch.common.MacAddressProvider",
      "org.elasticsearch.common.SecureRandomHolder",
      "org.elasticsearch.common.TimeBasedUUIDGenerator",
      "org.elasticsearch.common.UUIDs",
      "org.elasticsearch.cluster.SnapshotsInProgress",
      "org.elasticsearch.cluster.RestoreInProgress",
      "org.elasticsearch.cluster.ClusterState",
      "org.elasticsearch.common.settings.SettingsFilter",
      "org.apache.lucene.store.DataInput",
      "org.apache.lucene.store.IndexInput",
      "org.apache.lucene.store.ByteArrayIndexInput",
      "org.elasticsearch.transport.TransportRequest",
      "org.elasticsearch.action.ActionRequest",
      "org.elasticsearch.action.support.IndicesOptions",
      "org.elasticsearch.action.support.single.shard.SingleShardRequest",
      "org.elasticsearch.action.explain.ExplainRequest",
      "org.elasticsearch.tasks.TaskId",
      "com.carrotsearch.hppc.ObjectObjectIdentityHashMap",
      "org.elasticsearch.cluster.metadata.AliasMetaData",
      "org.elasticsearch.common.xcontent.ToXContent$1",
      "org.elasticsearch.common.xcontent.ToXContent",
      "org.elasticsearch.common.unit.MemorySizeValue",
      "org.elasticsearch.ElasticsearchException$ElasticsearchExceptionHandle",
      "org.elasticsearch.ElasticsearchException",
      "org.elasticsearch.ElasticsearchParseException",
      "org.elasticsearch.common.logging.LoggerMessageFormat",
      "org.elasticsearch.action.support.broadcast.BroadcastRequest",
      "org.elasticsearch.action.admin.indices.flush.FlushRequest",
      "org.elasticsearch.common.regex.Regex",
      "org.apache.lucene.util.automaton.RegExp",
      "org.apache.lucene.util.automaton.RegExp$Kind",
      "org.apache.lucene.util.automaton.RegExp$1",
      "org.elasticsearch.cluster.DiskUsage",
      "org.elasticsearch.cluster.MockInternalClusterInfoService",
      "org.elasticsearch.monitor.fs.FsInfo$Path",
      "org.elasticsearch.monitor.fs.FsInfo",
      "org.elasticsearch.action.support.nodes.BaseNodeResponse",
      "org.elasticsearch.action.admin.cluster.node.stats.NodeStats",
      "org.elasticsearch.cluster.node.DiscoveryNode",
      "org.elasticsearch.common.transport.DummyTransportAddress",
      "org.elasticsearch.action.delete.DeleteResponse",
      "org.elasticsearch.action.termvectors.TermVectorsRequest",
      "org.elasticsearch.action.termvectors.TermVectorsRequest$Flag",
      "org.elasticsearch.common.util.BigArrays",
      "org.elasticsearch.cluster.AbstractDiffable$CompleteDiff",
      "org.elasticsearch.common.unit.SizeValue",
      "org.elasticsearch.search.fetch.ShardFetchRequest",
      "org.elasticsearch.action.support.replication.ReplicationRequest",
      "org.elasticsearch.action.support.replication.BasicReplicationRequest",
      "org.jboss.netty.buffer.AbstractChannelBuffer",
      "org.jboss.netty.buffer.DynamicChannelBuffer",
      "org.jboss.netty.buffer.AbstractChannelBufferFactory",
      "org.jboss.netty.buffer.HeapChannelBufferFactory",
      "org.elasticsearch.action.support.replication.ReplicatedWriteRequest",
      "org.elasticsearch.action.index.IndexRequest",
      "org.elasticsearch.action.index.IndexRequest$OpType",
      "com.carrotsearch.hppc.ObjectObjectHashMap$KeysContainer",
      "org.elasticsearch.action.search.SearchScrollRequest",
      "org.elasticsearch.rest.RestRequest",
      "org.elasticsearch.test.rest.FakeRestRequest",
      "org.elasticsearch.gateway.MetaStateService",
      "org.elasticsearch.common.Booleans",
      "org.elasticsearch.env.NodeEnvironment",
      "org.elasticsearch.node.Node",
      "org.elasticsearch.action.index.IndexResponse",
      "org.elasticsearch.action.termvectors.TermVectorsResponse",
      "org.elasticsearch.search.internal.ShardSearchTransportRequest",
      "org.elasticsearch.common.transport.LocalTransportAddress",
      "org.elasticsearch.action.search.SearchRequest",
      "org.elasticsearch.search.builder.SearchSourceBuilder",
      "org.elasticsearch.cluster.metadata.IndexNameExpressionResolver",
      "org.elasticsearch.cluster.metadata.IndexNameExpressionResolver$DateMathExpressionResolver",
      "org.joda.time.UTCDateTimeZone",
      "org.joda.time.DateTimeZone",
      "org.joda.time.format.DateTimeFormat",
      "org.joda.time.format.DateTimeFormatterBuilder",
      "org.joda.time.DateTimeFieldType$StandardDateTimeFieldType",
      "org.joda.time.DateTimeFieldType",
      "org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter",
      "org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber",
      "org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral",
      "org.joda.time.format.DateTimeFormatterBuilder$Composite",
      "org.joda.time.format.DateTimeFormatter",
      "org.elasticsearch.cluster.metadata.IndexNameExpressionResolver$WildcardExpressionResolver",
      "org.elasticsearch.action.support.single.instance.InstanceShardOperationRequest",
      "org.elasticsearch.action.update.UpdateRequest",
      "org.elasticsearch.cluster.routing.allocation.decider.RebalanceOnlyWhenActiveAllocationDecider",
      "org.elasticsearch.action.bulk.BulkShardRequest",
      "org.elasticsearch.cluster.metadata.IndexNameExpressionResolver$Context",
      "org.elasticsearch.action.support.master.MasterNodeRequest",
      "org.elasticsearch.action.support.master.AcknowledgedRequest",
      "org.elasticsearch.action.admin.cluster.storedscripts.PutStoredScriptRequest",
      "org.elasticsearch.action.ingest.DeletePipelineRequest",
      "org.joda.time.format.ISODateTimeFormat",
      "org.joda.time.format.DateTimeFormatterBuilder$StringLiteral",
      "org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber",
      "org.joda.time.format.DateTimeFormatterBuilder$Fraction",
      "org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset",
      "org.joda.time.format.DateTimeFormatterBuilder$FixedNumber",
      "org.joda.time.format.InternalParserDateTimeParser",
      "org.joda.time.format.DateTimeParserInternalParser",
      "org.joda.time.format.DateTimeFormatterBuilder$MatchingParser",
      "org.joda.time.format.DateTimePrinterInternalPrinter",
      "org.joda.time.format.ISODateTimeFormat$Constants",
      "org.elasticsearch.common.xcontent.XContentBuilder",
      "org.elasticsearch.common.io.stream.StreamOutput",
      "org.elasticsearch.common.io.stream.BytesStreamOutput",
      "org.apache.lucene.util.BytesRefBuilder",
      "org.apache.lucene.util.BytesRef",
      "org.elasticsearch.common.util.AbstractArray",
      "org.elasticsearch.common.util.BigArrays$AbstractArrayWrapper",
      "org.elasticsearch.common.util.BigArrays$ByteArrayWrapper",
      "org.elasticsearch.rest.RestController",
      "org.elasticsearch.common.component.Lifecycle",
      "org.elasticsearch.common.component.Lifecycle$State",
      "org.elasticsearch.common.path.PathTrie",
      "org.elasticsearch.rest.support.RestUtils$1",
      "org.elasticsearch.rest.support.RestUtils",
      "org.elasticsearch.common.path.PathTrie$TrieNode",
      "org.elasticsearch.rest.RestFilter",
      "org.elasticsearch.rest.RestController$RestHandlerFilter",
      "org.elasticsearch.action.ingest.GetPipelineResponse",
      "com.fasterxml.jackson.core.JsonFactory$Feature",
      "com.fasterxml.jackson.core.JsonParser$Feature",
      "com.fasterxml.jackson.core.JsonGenerator$Feature",
      "com.fasterxml.jackson.core.io.SerializedString",
      "com.fasterxml.jackson.core.util.DefaultPrettyPrinter",
      "com.fasterxml.jackson.core.JsonFactory",
      "com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer",
      "com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer",
      "com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo",
      "org.elasticsearch.common.xcontent.json.JsonXContent",
      "com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter",
      "com.fasterxml.jackson.core.util.DefaultIndenter",
      "org.elasticsearch.common.xcontent.json.JsonXContentGenerator",
      "com.fasterxml.jackson.core.JsonEncoding",
      "com.fasterxml.jackson.core.io.IOContext",
      "com.fasterxml.jackson.core.util.BufferRecycler",
      "com.fasterxml.jackson.core.JsonGenerator",
      "com.fasterxml.jackson.core.base.GeneratorBase",
      "com.fasterxml.jackson.core.io.CharTypes",
      "com.fasterxml.jackson.core.json.JsonGeneratorImpl",
      "com.fasterxml.jackson.core.json.UTF8JsonGenerator",
      "com.fasterxml.jackson.core.JsonStreamContext",
      "com.fasterxml.jackson.core.json.JsonWriteContext",
      "org.elasticsearch.common.util.CollectionUtils",
      "org.jboss.netty.buffer.HeapChannelBuffer",
      "org.jboss.netty.buffer.BigEndianHeapChannelBuffer",
      "org.jboss.netty.buffer.EmptyChannelBuffer",
      "org.jboss.netty.buffer.ChannelBuffers",
      "org.elasticsearch.tasks.Task",
      "org.elasticsearch.client.support.AbstractClient",
      "org.elasticsearch.client.FilterClient",
      "org.elasticsearch.client.ParentTaskAssigningClient",
      "org.joda.time.tz.ZoneInfoProvider",
      "org.joda.time.tz.ZoneInfoProvider$1",
      "org.elasticsearch.index.translog.Translog$Durability",
      "org.elasticsearch.index.IndexSettings",
      "org.jboss.netty.buffer.LittleEndianHeapChannelBuffer",
      "org.jboss.netty.buffer.DuplicatedChannelBuffer",
      "org.elasticsearch.common.bytes.ChannelBufferBytesReference",
      "org.elasticsearch.transport.netty.ChannelBufferStreamInputFactory",
      "org.elasticsearch.transport.netty.ChannelBufferStreamInput",
      "org.elasticsearch.common.collect.ImmutableOpenMap$2",
      "org.elasticsearch.cluster.routing.RoutingNodes",
      "org.elasticsearch.cluster.routing.RoutingNodes$UnassignedShards",
      "org.elasticsearch.cluster.routing.RoutingNodes$UnassignedShards$UnassignedIterator",
      "org.elasticsearch.ResourceNotFoundException",
      "org.elasticsearch.index.IndexNotFoundException",
      "org.elasticsearch.search.query.QuerySearchRequest",
      "org.apache.lucene.index.SegmentInfos",
      "org.elasticsearch.action.get.GetRequest",
      "org.elasticsearch.common.transport.InetSocketTransportAddress",
      "org.elasticsearch.common.network.NetworkAddress",
      "org.elasticsearch.common.network.InetAddresses",
      "org.elasticsearch.action.delete.DeleteRequest",
      "org.elasticsearch.action.bulk.BulkItemResponse",
      "org.elasticsearch.common.bytes.BytesArray",
      "org.elasticsearch.action.search.ClearScrollRequest",
      "org.apache.lucene.mockfile.FilterFileSystemProvider",
      "org.apache.lucene.mockfile.HandleTrackingFS",
      "org.apache.lucene.mockfile.LeakFS",
      "org.elasticsearch.common.xcontent.XContentFactory",
      "com.fasterxml.jackson.core.util.DefaultPrettyPrinter$FixedSpaceIndenter",
      "org.elasticsearch.cluster.ClusterState$Metric",
      "com.fasterxml.jackson.core.io.NumberOutput",
      "org.elasticsearch.common.lease.Releasables",
      "org.apache.lucene.util.IOUtils",
      "org.elasticsearch.common.bytes.PagedBytesReference",
      "org.elasticsearch.index.query.AbstractQueryBuilder",
      "org.elasticsearch.index.query.BaseTermQueryBuilder",
      "org.elasticsearch.index.query.SpanTermQueryBuilder",
      "org.elasticsearch.index.query.SpanFirstQueryBuilder",
      "org.elasticsearch.index.query.SpanNotQueryBuilder",
      "org.elasticsearch.common.xcontent.ParseFieldRegistry",
      "org.elasticsearch.indices.query.IndicesQueriesRegistry",
      "org.elasticsearch.common.xcontent.support.AbstractXContentParser$1",
      "org.elasticsearch.common.xcontent.support.AbstractXContentParser$2",
      "org.elasticsearch.common.xcontent.support.AbstractXContentParser",
      "org.elasticsearch.common.xcontent.json.JsonXContentParser",
      "com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper",
      "com.fasterxml.jackson.core.JsonParser",
      "com.fasterxml.jackson.core.base.ParserMinimalBase",
      "com.fasterxml.jackson.core.base.ParserBase",
      "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
      "com.fasterxml.jackson.core.util.TextBuffer",
      "com.fasterxml.jackson.core.json.JsonReadContext",
      "org.elasticsearch.common.settings.AbstractScopedSettings",
      "org.elasticsearch.cluster.routing.allocation.decider.MaxRetryAllocationDecider",
      "org.elasticsearch.index.AbstractIndexComponent",
      "org.elasticsearch.index.store.IndexStore",
      "org.elasticsearch.index.MergeSchedulerConfig",
      "org.elasticsearch.index.SlowLogLevel",
      "org.elasticsearch.index.SearchSlowLog",
      "org.elasticsearch.index.IndexingSlowLog",
      "org.elasticsearch.index.MergePolicyConfig",
      "org.elasticsearch.cluster.routing.allocation.decider.ShardsLimitAllocationDecider",
      "org.elasticsearch.indices.IndicesRequestCache",
      "org.elasticsearch.common.joda.Joda$1",
      "org.elasticsearch.common.joda.Joda$2",
      "org.elasticsearch.common.joda.Joda",
      "org.elasticsearch.common.joda.FormatDateTimeFormatter",
      "org.elasticsearch.cluster.routing.UnassignedInfo",
      "org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationDecider$Allocation",
      "org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationDecider$Rebalance",
      "org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationDecider",
      "org.elasticsearch.index.fielddata.IndexFieldDataService$1",
      "org.elasticsearch.index.fielddata.IndexFieldDataService",
      "org.elasticsearch.index.mapper.Mapper",
      "org.elasticsearch.index.mapper.FieldMapper",
      "org.elasticsearch.index.shard.AbstractIndexShardComponent",
      "org.elasticsearch.index.store.Store",
      "com.carrotsearch.hppc.ObjectHashSet",
      "org.elasticsearch.index.mapper.MapperService",
      "org.elasticsearch.index.cache.bitset.BitsetFilterCache",
      "org.elasticsearch.index.IndexModule",
      "org.elasticsearch.gateway.PrimaryShardAllocator",
      "org.elasticsearch.index.store.DirectoryService",
      "org.elasticsearch.index.store.FsDirectoryService",
      "org.elasticsearch.index.engine.EngineConfig",
      "org.elasticsearch.common.settings.IndexScopedSettings",
      "org.elasticsearch.search.highlight.AbstractHighlighterBuilder",
      "org.elasticsearch.search.highlight.SearchContextHighlight$FieldOptions$Builder",
      "org.elasticsearch.search.highlight.SearchContextHighlight$FieldOptions",
      "org.apache.lucene.search.vectorhighlight.SimpleBoundaryScanner",
      "org.elasticsearch.search.highlight.HighlightBuilder$Field",
      "org.elasticsearch.search.highlight.HighlightBuilder",
      "org.elasticsearch.index.engine.Engine",
      "org.elasticsearch.index.engine.InternalEngine",
      "org.elasticsearch.common.util.concurrent.ReleasableLock",
      "org.elasticsearch.common.io.stream.ByteBufferStreamInput",
      "org.elasticsearch.action.termvectors.MultiTermVectorsShardRequest",
      "org.apache.lucene.util.UnicodeUtil",
      "org.elasticsearch.transport.BytesTransportRequest",
      "org.elasticsearch.action.get.MultiGetShardRequest",
      "org.elasticsearch.cluster.ClusterState$ClusterStateDiff",
      "org.apache.lucene.mockfile.FilterPath",
      "org.apache.lucene.store.LockFactory",
      "org.apache.lucene.store.FSLockFactory",
      "org.apache.lucene.store.NativeFSLockFactory",
      "org.elasticsearch.action.ingest.SimulatePipelineResponse",
      "org.elasticsearch.common.xcontent.ToXContent$DelegatingMapParams",
      "org.elasticsearch.index.shard.ShardId",
      "com.carrotsearch.randomizedtesting.RandomizedContext",
      "com.carrotsearch.randomizedtesting.Threads",
      "org.elasticsearch.index.translog.Translog$TranslogGeneration",
      "org.elasticsearch.index.translog.Translog",
      "org.elasticsearch.common.ParseFieldMatcher",
      "org.elasticsearch.common.ParsingException",
      "org.apache.lucene.store.ChecksumIndexInput",
      "org.apache.lucene.store.BufferedChecksumIndexInput",
      "org.apache.lucene.store.BufferedChecksum",
      "org.apache.lucene.index.MergePolicy$OneMerge",
      "org.elasticsearch.action.main.MainRequest",
      "org.elasticsearch.cluster.ClusterInfo",
      "org.elasticsearch.cluster.routing.allocation.RoutingAllocation",
      "org.elasticsearch.cluster.routing.allocation.FailedRerouteAllocation",
      "org.elasticsearch.cluster.routing.allocation.AllocationExplanation",
      "org.elasticsearch.action.search.MultiSearchResponse$Item",
      "org.elasticsearch.action.search.MultiSearchResponse",
      "com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature",
      "com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature",
      "com.fasterxml.jackson.dataformat.yaml.YAMLFactory",
      "org.elasticsearch.common.xcontent.yaml.YamlXContent",
      "org.elasticsearch.common.xcontent.yaml.YamlXContentGenerator",
      "com.fasterxml.jackson.dataformat.yaml.UTF8Writer",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.events.ImplicitTuple",
      "com.fasterxml.jackson.dataformat.yaml.YAMLGenerator",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.DumperOptions",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.DumperOptions$ScalarStyle",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.DumperOptions$FlowStyle",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.DumperOptions$LineBreak",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.emitter.Emitter",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.util.ArrayStack",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.emitter.Emitter$ExpectStreamStart",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.events.Event",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.events.StreamStartEvent",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.emitter.Emitter$ExpectFirstDocumentStart",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.events.DocumentStartEvent",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.events.NodeEvent",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.events.CollectionStartEvent",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.events.MappingStartEvent",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.emitter.Emitter$ExpectDocumentStart",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.emitter.Emitter$ExpectDocumentRoot",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.events.CollectionEndEvent",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.events.MappingEndEvent",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.emitter.Emitter$ExpectDocumentEnd",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowMappingKey",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.events.DocumentEndEvent",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.events.StreamEndEvent",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.emitter.Emitter$ExpectNothing",
      "org.elasticsearch.action.support.broadcast.BroadcastResponse",
      "org.elasticsearch.action.admin.indices.recovery.RecoveryResponse",
      "org.elasticsearch.action.fieldstats.FieldStatsResponse",
      "org.elasticsearch.common.unit.RatioValue",
      "org.elasticsearch.search.internal.InternalScrollSearchRequest",
      "org.elasticsearch.transport.AbstractSimpleTransportTestCase$StringMessageRequest",
      "org.elasticsearch.action.admin.indices.upgrade.post.UpgradeRequest",
      "org.apache.lucene.mockfile.HandleLimitFS",
      "org.elasticsearch.action.support.replication.TransportReplicationActionTests$Request",
      "org.elasticsearch.transport.AbstractSimpleTransportTestCase$TestRequest",
      "org.elasticsearch.transport.TransportRequest$Empty",
      "com.carrotsearch.hppc.ObjectObjectScatterMap",
      "com.carrotsearch.hppc.HashOrderMixing$3",
      "org.elasticsearch.cluster.routing.allocation.decider.ThrottlingAllocationDecider",
      "com.fasterxml.jackson.dataformat.smile.SmileParser$Feature",
      "com.fasterxml.jackson.dataformat.smile.SmileGenerator$Feature",
      "com.fasterxml.jackson.dataformat.smile.SmileFactory",
      "org.elasticsearch.common.xcontent.smile.SmileXContent",
      "org.elasticsearch.common.xcontent.smile.SmileXContentGenerator",
      "com.fasterxml.jackson.dataformat.smile.SmileGenerator",
      "com.fasterxml.jackson.dataformat.smile.SmileBufferRecycler",
      "org.elasticsearch.script.ScriptParameterParser",
      "org.elasticsearch.script.ScriptService",
      "org.elasticsearch.common.xcontent.smile.SmileXContentParser",
      "com.fasterxml.jackson.dataformat.smile.SmileParserBootstrapper",
      "com.fasterxml.jackson.dataformat.smile.SmileParser",
      "com.fasterxml.jackson.core.JsonToken",
      "org.elasticsearch.common.settings.Setting$2",
      "org.elasticsearch.common.settings.Setting$ListKey",
      "org.elasticsearch.env.Environment",
      "org.apache.lucene.mockfile.ExtrasFS",
      "org.apache.lucene.mockfile.FilterFileSystem",
      "org.elasticsearch.action.bulk.BulkRequest",
      "org.apache.lucene.store.StoreRateLimiting",
      "org.apache.lucene.store.RateLimiter",
      "org.apache.lucene.store.RateLimiter$SimpleRateLimiter",
      "org.elasticsearch.index.Index$Builder",
      "org.elasticsearch.index.query.MoreLikeThisQueryBuilder$Item",
      "org.elasticsearch.common.bytes.ByteBufferBytesReference",
      "org.elasticsearch.indices.breaker.CircuitBreakerService",
      "org.elasticsearch.indices.breaker.NoneCircuitBreakerService",
      "org.elasticsearch.common.breaker.NoopCircuitBreaker",
      "org.elasticsearch.common.util.MockBigArrays",
      "org.elasticsearch.common.util.PageCacheRecycler$Type",
      "org.elasticsearch.common.util.PageCacheRecycler",
      "org.elasticsearch.common.util.MockPageCacheRecycler",
      "org.elasticsearch.monitor.jvm.JvmInfo$Mem",
      "org.elasticsearch.monitor.jvm.JvmInfo",
      "org.elasticsearch.common.util.concurrent.EsExecutors",
      "org.elasticsearch.common.recycler.AbstractRecyclerC",
      "org.elasticsearch.common.util.PageCacheRecycler$1",
      "org.elasticsearch.common.recycler.Recyclers",
      "org.elasticsearch.common.recycler.Recyclers$1",
      "org.elasticsearch.common.recycler.AbstractRecycler",
      "org.elasticsearch.common.recycler.DequeRecycler",
      "org.elasticsearch.common.recycler.FilterRecycler",
      "org.elasticsearch.common.recycler.Recyclers$3",
      "org.elasticsearch.common.util.PageCacheRecycler$2",
      "org.elasticsearch.common.util.PageCacheRecycler$3",
      "org.elasticsearch.common.util.PageCacheRecycler$4",
      "org.elasticsearch.common.util.MockBigArrays$AbstractArrayWrapper",
      "org.elasticsearch.common.util.MockBigArrays$ByteArrayWrapper",
      "org.jboss.netty.buffer.DirectChannelBufferFactory",
      "org.jboss.netty.buffer.ByteBufferBackedChannelBuffer",
      "org.jboss.netty.buffer.TruncatedChannelBuffer",
      "org.elasticsearch.cluster.routing.RoutingTable$RoutingTableDiff",
      "org.elasticsearch.cluster.DiffableUtils",
      "org.elasticsearch.cluster.DiffableUtils$StringKeySerializer",
      "org.elasticsearch.cluster.routing.IndexRoutingTable$Builder",
      "org.elasticsearch.cluster.routing.ShardShuffler",
      "org.elasticsearch.cluster.routing.RotationShardShuffler",
      "org.elasticsearch.common.Randomness",
      "org.elasticsearch.cluster.routing.IndexRoutingTable",
      "org.joda.time.tz.UTCProvider",
      "org.elasticsearch.action.termvectors.MultiTermVectorsRequest",
      "org.apache.lucene.codecs.Codec",
      "org.apache.lucene.util.NamedSPILoader",
      "org.apache.lucene.codecs.Codec$Holder",
      "org.elasticsearch.action.fieldstats.FieldStatsRequest",
      "org.elasticsearch.cluster.routing.allocation.decider.AwarenessAllocationDecider",
      "org.elasticsearch.client.transport.TransportClientNodesService",
      "org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator",
      "org.elasticsearch.cluster.routing.allocation.decider.ClusterRebalanceAllocationDecider$ClusterRebalanceType",
      "org.elasticsearch.cluster.routing.allocation.decider.ClusterRebalanceAllocationDecider",
      "org.elasticsearch.cluster.routing.allocation.decider.ConcurrentRebalanceAllocationDecider",
      "org.elasticsearch.cluster.routing.allocation.decider.FilterAllocationDecider",
      "org.elasticsearch.repositories.blobstore.BlobStoreRepository",
      "org.elasticsearch.repositories.fs.FsRepository",
      "org.elasticsearch.indices.IndicesQueryCache",
      "org.elasticsearch.cluster.action.index.MappingUpdatedAction",
      "org.elasticsearch.cluster.routing.allocation.decider.SnapshotInProgressAllocationDecider",
      "org.elasticsearch.action.support.DestructiveOperations",
      "org.elasticsearch.gateway.GatewayService",
      "org.elasticsearch.common.inject.AbstractModule",
      "org.elasticsearch.common.network.NetworkModule",
      "org.elasticsearch.http.HttpTransportSettings",
      "org.elasticsearch.common.netty.NettyUtils$EsThreadNameDeterminer",
      "org.jboss.netty.logging.JdkLoggerFactory",
      "org.jboss.netty.logging.InternalLoggerFactory",
      "org.elasticsearch.transport.netty.NettyInternalESLoggerFactory",
      "org.elasticsearch.common.netty.NettyUtils$1",
      "org.jboss.netty.logging.AbstractInternalLogger",
      "org.elasticsearch.transport.netty.NettyInternalESLogger",
      "org.jboss.netty.util.ThreadNameDeterminer$1",
      "org.jboss.netty.util.ThreadNameDeterminer$2",
      "org.jboss.netty.util.ThreadNameDeterminer",
      "org.jboss.netty.util.ThreadRenamingRunnable",
      "org.elasticsearch.common.netty.NettyUtils",
      "org.elasticsearch.common.network.NetworkUtils$2",
      "org.elasticsearch.common.network.NetworkUtils",
      "org.elasticsearch.common.network.NetworkService$TcpSettings",
      "org.elasticsearch.http.netty.NettyHttpServerTransport",
      "org.elasticsearch.indices.breaker.HierarchyCircuitBreakerService",
      "org.elasticsearch.search.SearchService",
      "org.elasticsearch.discovery.zen.elect.ElectMasterService",
      "org.elasticsearch.action.support.TransportAction",
      "org.elasticsearch.action.support.HandledTransportAction",
      "org.elasticsearch.action.search.TransportSearchAction",
      "org.elasticsearch.transport.TransportService",
      "org.elasticsearch.action.support.master.TransportMasterNodeAction",
      "org.elasticsearch.action.admin.indices.close.TransportCloseIndexAction",
      "org.elasticsearch.cluster.NodeConnectionsService",
      "org.elasticsearch.transport.Transport",
      "org.elasticsearch.transport.TransportSettings",
      "org.elasticsearch.transport.netty.NettyTransport",
      "org.elasticsearch.common.network.NetworkService",
      "org.elasticsearch.indices.IndicesService",
      "org.elasticsearch.indices.fielddata.cache.IndicesFieldDataCache",
      "org.elasticsearch.indices.analysis.HunspellService",
      "org.elasticsearch.index.shard.IndexShardState",
      "org.elasticsearch.indices.store.IndicesStore",
      "org.elasticsearch.cluster.node.DiscoveryNodeService",
      "org.elasticsearch.discovery.DiscoveryModule",
      "org.elasticsearch.discovery.zen.fd.FaultDetection",
      "org.elasticsearch.discovery.zen.ZenDiscovery",
      "org.elasticsearch.discovery.zen.ping.unicast.UnicastZenPing",
      "org.elasticsearch.repositories.uri.URLRepository",
      "org.elasticsearch.action.support.master.TransportMasterNodeReadAction",
      "org.elasticsearch.action.support.AutoCreateIndex",
      "org.elasticsearch.rest.BaseRestHandler",
      "org.elasticsearch.client.Client",
      "org.elasticsearch.cluster.ClusterModule",
      "org.elasticsearch.common.util.concurrent.ThreadContext$ThreadContextStruct",
      "org.elasticsearch.common.util.concurrent.ThreadContext",
      "org.elasticsearch.tribe.TribeService",
      "org.elasticsearch.monitor.os.OsService",
      "org.elasticsearch.monitor.process.ProcessService",
      "org.elasticsearch.monitor.jvm.JvmService",
      "org.elasticsearch.monitor.fs.FsService",
      "org.elasticsearch.monitor.jvm.JvmGcMonitorService",
      "org.elasticsearch.plugins.PluginsService",
      "org.elasticsearch.bootstrap.BootstrapSettings",
      "org.elasticsearch.indices.IndexingMemoryController",
      "org.elasticsearch.watcher.ResourceWatcherService$Frequency",
      "org.elasticsearch.watcher.ResourceWatcherService",
      "org.elasticsearch.search.aggregations.InternalAggregation",
      "org.elasticsearch.search.aggregations.metrics.InternalMetricsAggregation",
      "org.elasticsearch.search.DocValueFormat$1",
      "org.elasticsearch.search.DocValueFormat$2",
      "org.elasticsearch.search.DocValueFormat$3",
      "org.elasticsearch.search.DocValueFormat$4",
      "org.elasticsearch.search.DocValueFormat",
      "org.elasticsearch.search.aggregations.metrics.InternalNumericMetricsAggregation",
      "org.elasticsearch.search.aggregations.metrics.InternalNumericMetricsAggregation$SingleValue",
      "org.elasticsearch.search.aggregations.InternalAggregation$Type",
      "org.elasticsearch.search.aggregations.metrics.avg.InternalAvg$1",
      "org.elasticsearch.search.aggregations.metrics.avg.InternalAvg",
      "org.elasticsearch.search.aggregations.AggregationStreams",
      "org.elasticsearch.common.bytes.BytesReference$Helper",
      "org.elasticsearch.search.aggregations.metrics.sum.InternalSum$1",
      "org.elasticsearch.search.aggregations.metrics.sum.InternalSum",
      "org.elasticsearch.search.aggregations.metrics.min.InternalMin$1",
      "org.elasticsearch.search.aggregations.metrics.min.InternalMin",
      "org.elasticsearch.search.aggregations.metrics.max.InternalMax$1",
      "org.elasticsearch.search.aggregations.metrics.max.InternalMax",
      "org.elasticsearch.search.aggregations.metrics.InternalNumericMetricsAggregation$MultiValue",
      "org.elasticsearch.search.aggregations.metrics.stats.InternalStats$1",
      "org.elasticsearch.search.aggregations.metrics.stats.InternalStats",
      "org.elasticsearch.search.aggregations.metrics.stats.extended.InternalExtendedStats$1",
      "org.elasticsearch.search.aggregations.metrics.stats.extended.InternalExtendedStats",
      "org.elasticsearch.search.aggregations.metrics.valuecount.InternalValueCount$1",
      "org.elasticsearch.search.aggregations.metrics.valuecount.InternalValueCount",
      "org.elasticsearch.search.aggregations.metrics.percentiles.tdigest.AbstractInternalTDigestPercentiles",
      "org.elasticsearch.search.aggregations.metrics.percentiles.tdigest.InternalTDigestPercentiles$1",
      "org.elasticsearch.search.aggregations.metrics.percentiles.tdigest.InternalTDigestPercentiles",
      "org.elasticsearch.search.aggregations.metrics.percentiles.tdigest.InternalTDigestPercentileRanks$1",
      "org.elasticsearch.search.aggregations.metrics.percentiles.tdigest.InternalTDigestPercentileRanks",
      "org.elasticsearch.search.aggregations.metrics.percentiles.hdr.AbstractInternalHDRPercentiles",
      "org.elasticsearch.search.aggregations.metrics.percentiles.hdr.InternalHDRPercentiles$1",
      "org.elasticsearch.search.aggregations.metrics.percentiles.hdr.InternalHDRPercentiles",
      "org.elasticsearch.search.aggregations.metrics.percentiles.hdr.InternalHDRPercentileRanks$1",
      "org.elasticsearch.search.aggregations.metrics.percentiles.hdr.InternalHDRPercentileRanks",
      "org.elasticsearch.search.aggregations.metrics.cardinality.InternalCardinality$1",
      "org.elasticsearch.search.aggregations.metrics.cardinality.InternalCardinality",
      "org.elasticsearch.search.aggregations.metrics.scripted.InternalScriptedMetric$1",
      "org.elasticsearch.search.aggregations.metrics.scripted.InternalScriptedMetric",
      "org.elasticsearch.search.aggregations.metrics.geocentroid.InternalGeoCentroid$1",
      "org.elasticsearch.search.aggregations.metrics.geocentroid.InternalGeoCentroid",
      "org.elasticsearch.search.aggregations.bucket.InternalSingleBucketAggregation",
      "org.elasticsearch.search.aggregations.bucket.global.InternalGlobal$1",
      "org.elasticsearch.search.aggregations.bucket.global.InternalGlobal",
      "org.elasticsearch.search.aggregations.bucket.filter.InternalFilter$1",
      "org.elasticsearch.search.aggregations.bucket.filter.InternalFilter",
      "org.elasticsearch.search.aggregations.InternalMultiBucketAggregation",
      "org.elasticsearch.search.aggregations.bucket.filters.InternalFilters$1",
      "org.elasticsearch.search.aggregations.bucket.filters.InternalFilters$2",
      "org.elasticsearch.search.aggregations.bucket.filters.InternalFilters",
      "org.elasticsearch.search.aggregations.bucket.BucketStreams",
      "org.elasticsearch.search.aggregations.bucket.sampler.InternalSampler$1",
      "org.elasticsearch.search.aggregations.bucket.sampler.InternalSampler",
      "org.elasticsearch.search.aggregations.bucket.sampler.UnmappedSampler$1",
      "org.elasticsearch.search.aggregations.bucket.sampler.UnmappedSampler",
      "org.elasticsearch.search.aggregations.bucket.missing.InternalMissing$1",
      "org.elasticsearch.search.aggregations.bucket.missing.InternalMissing",
      "org.elasticsearch.search.aggregations.bucket.terms.InternalTerms",
      "org.elasticsearch.search.aggregations.bucket.terms.StringTerms$1",
      "org.elasticsearch.search.aggregations.bucket.terms.StringTerms$2",
      "org.elasticsearch.search.aggregations.bucket.terms.StringTerms",
      "org.elasticsearch.search.aggregations.bucket.terms.LongTerms$1",
      "org.elasticsearch.search.aggregations.bucket.terms.LongTerms$2",
      "org.elasticsearch.search.aggregations.bucket.terms.LongTerms",
      "org.elasticsearch.search.aggregations.bucket.significant.InternalSignificantTerms",
      "org.elasticsearch.search.aggregations.bucket.significant.SignificantStringTerms$1",
      "org.elasticsearch.search.aggregations.bucket.significant.SignificantStringTerms$2",
      "org.elasticsearch.search.aggregations.bucket.significant.SignificantStringTerms",
      "org.elasticsearch.search.aggregations.bucket.significant.SignificantLongTerms$1",
      "org.elasticsearch.search.aggregations.bucket.significant.SignificantLongTerms$2",
      "org.elasticsearch.search.aggregations.bucket.significant.SignificantLongTerms",
      "org.elasticsearch.search.aggregations.bucket.significant.UnmappedSignificantTerms$1",
      "org.elasticsearch.search.aggregations.bucket.significant.UnmappedSignificantTerms",
      "org.elasticsearch.search.aggregations.bucket.geogrid.InternalGeoHashGrid$1",
      "org.elasticsearch.search.aggregations.bucket.geogrid.InternalGeoHashGrid$2",
      "org.elasticsearch.search.aggregations.bucket.geogrid.InternalGeoHashGrid",
      "org.elasticsearch.search.aggregations.bucket.terms.DoubleTerms$1",
      "org.elasticsearch.search.aggregations.bucket.terms.DoubleTerms$2",
      "org.elasticsearch.search.aggregations.bucket.terms.DoubleTerms",
      "org.elasticsearch.search.aggregations.bucket.terms.UnmappedTerms$1",
      "org.elasticsearch.search.aggregations.bucket.terms.UnmappedTerms",
      "org.elasticsearch.search.aggregations.bucket.range.InternalRange$Factory",
      "org.elasticsearch.search.aggregations.bucket.range.InternalRange$1",
      "org.elasticsearch.search.aggregations.bucket.range.InternalRange$2",
      "org.elasticsearch.search.aggregations.bucket.range.InternalRange",
      "org.elasticsearch.search.aggregations.bucket.range.date.InternalDateRange$1",
      "org.elasticsearch.search.aggregations.bucket.range.date.InternalDateRange$2",
      "org.elasticsearch.search.aggregations.bucket.range.date.InternalDateRange$Factory",
      "org.elasticsearch.search.aggregations.bucket.range.date.InternalDateRange",
      "org.elasticsearch.search.aggregations.bucket.range.InternalBinaryRange$1",
      "org.elasticsearch.search.aggregations.bucket.range.InternalBinaryRange$2",
      "org.elasticsearch.search.aggregations.bucket.range.InternalBinaryRange",
      "org.elasticsearch.search.aggregations.bucket.histogram.InternalHistogram$Factory",
      "org.elasticsearch.search.aggregations.bucket.histogram.InternalHistogram$1",
      "org.elasticsearch.search.aggregations.bucket.histogram.InternalHistogram$2",
      "org.elasticsearch.search.aggregations.bucket.histogram.InternalHistogram",
      "org.elasticsearch.search.aggregations.bucket.range.geodistance.InternalGeoDistance$1",
      "org.elasticsearch.search.aggregations.bucket.range.geodistance.InternalGeoDistance$2",
      "org.elasticsearch.search.aggregations.bucket.range.geodistance.InternalGeoDistance$Factory",
      "org.elasticsearch.search.aggregations.bucket.range.geodistance.InternalGeoDistance",
      "org.elasticsearch.search.aggregations.bucket.nested.InternalNested$1",
      "org.elasticsearch.search.aggregations.bucket.nested.InternalNested",
      "org.elasticsearch.search.aggregations.bucket.nested.InternalReverseNested$1",
      "org.elasticsearch.search.aggregations.bucket.nested.InternalReverseNested",
      "org.elasticsearch.search.aggregations.metrics.tophits.InternalTopHits$1",
      "org.elasticsearch.search.aggregations.metrics.tophits.InternalTopHits",
      "org.elasticsearch.search.aggregations.metrics.geobounds.InternalGeoBounds$1",
      "org.elasticsearch.search.aggregations.metrics.geobounds.InternalGeoBounds",
      "org.elasticsearch.search.aggregations.bucket.children.InternalChildren$1",
      "org.elasticsearch.search.aggregations.bucket.children.InternalChildren",
      "org.elasticsearch.search.aggregations.pipeline.PipelineAggregator",
      "org.elasticsearch.search.aggregations.pipeline.derivative.DerivativePipelineAggregator$1",
      "org.elasticsearch.search.aggregations.pipeline.derivative.DerivativePipelineAggregator",
      "org.elasticsearch.search.aggregations.pipeline.PipelineAggregatorStreams",
      "org.elasticsearch.search.aggregations.pipeline.InternalSimpleValue$1",
      "org.elasticsearch.search.aggregations.pipeline.InternalSimpleValue",
      "org.elasticsearch.search.aggregations.pipeline.derivative.InternalDerivative$1",
      "org.elasticsearch.search.aggregations.pipeline.derivative.InternalDerivative",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.InternalBucketMetricValue$1",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.InternalBucketMetricValue",
      "org.elasticsearch.search.aggregations.pipeline.SiblingPipelineAggregator",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.BucketMetricsPipelineAggregator",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.max.MaxBucketPipelineAggregator$1",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.max.MaxBucketPipelineAggregator",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.min.MinBucketPipelineAggregator$1",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.min.MinBucketPipelineAggregator",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.avg.AvgBucketPipelineAggregator$1",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.avg.AvgBucketPipelineAggregator",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.sum.SumBucketPipelineAggregator$1",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.sum.SumBucketPipelineAggregator",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.stats.StatsBucketPipelineAggregator$1",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.stats.StatsBucketPipelineAggregator",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.stats.InternalStatsBucket$1",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.stats.InternalStatsBucket",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.stats.extended.ExtendedStatsBucketPipelineAggregator$1",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.stats.extended.ExtendedStatsBucketPipelineAggregator",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.stats.extended.InternalExtendedStatsBucket$1",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.stats.extended.InternalExtendedStatsBucket",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.percentile.PercentilesBucketPipelineAggregator$1",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.percentile.PercentilesBucketPipelineAggregator",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.percentile.InternalPercentilesBucket$1",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.percentile.InternalPercentilesBucket",
      "org.elasticsearch.search.aggregations.pipeline.movavg.MovAvgPipelineAggregator$1",
      "org.elasticsearch.search.aggregations.pipeline.movavg.MovAvgPipelineAggregator",
      "org.elasticsearch.search.aggregations.pipeline.cumulativesum.CumulativeSumPipelineAggregator",
      "org.elasticsearch.search.aggregations.pipeline.bucketscript.BucketScriptPipelineAggregator",
      "org.elasticsearch.search.aggregations.pipeline.bucketselector.BucketSelectorPipelineAggregator$1",
      "org.elasticsearch.search.aggregations.pipeline.bucketselector.BucketSelectorPipelineAggregator",
      "org.elasticsearch.search.aggregations.pipeline.serialdiff.SerialDiffPipelineAggregator",
      "org.elasticsearch.search.SearchModule",
      "org.elasticsearch.threadpool.ThreadPool$ThreadPoolType",
      "org.elasticsearch.threadpool.ThreadPool",
      "org.elasticsearch.common.settings.ClusterSettings",
      "org.elasticsearch.index.store.Store$MetadataSnapshot",
      "org.apache.lucene.index.FieldInfo",
      "org.elasticsearch.transport.AbstractSimpleTransportTestCase$Version0Request",
      "org.elasticsearch.search.fetch.source.FetchSourceContext",
      "org.joda.time.format.FormatUtils",
      "org.joda.time.tz.FixedDateTimeZone",
      "com.fasterxml.jackson.dataformat.cbor.CBORParser$Feature",
      "com.fasterxml.jackson.dataformat.cbor.CBORGenerator$Feature",
      "com.fasterxml.jackson.dataformat.cbor.CBORFactory",
      "org.elasticsearch.common.xcontent.cbor.CborXContent",
      "org.elasticsearch.common.xcontent.cbor.CborXContentParser",
      "com.fasterxml.jackson.dataformat.cbor.CBORParserBootstrapper",
      "com.fasterxml.jackson.dataformat.cbor.CBORConstants",
      "com.fasterxml.jackson.dataformat.cbor.CBORParser",
      "com.fasterxml.jackson.dataformat.cbor.CBORReadContext",
      "com.fasterxml.jackson.core.JsonParser$NumberType",
      "org.elasticsearch.common.xcontent.json.JsonXContentParser$1",
      "org.elasticsearch.action.search.SearchResponse",
      "org.elasticsearch.common.io.stream.ReleasableBytesStreamOutput",
      "org.elasticsearch.common.xcontent.XContentHelper",
      "com.fasterxml.jackson.core.JsonProcessingException",
      "com.fasterxml.jackson.core.JsonParseException",
      "com.fasterxml.jackson.core.JsonLocation",
      "org.apache.lucene.store.IOContext",
      "org.elasticsearch.cluster.DiffableUtils$MapDiff",
      "org.elasticsearch.cluster.DiffableUtils$ImmutableOpenMapDiff",
      "org.elasticsearch.cluster.DiffableUtils$DiffableValueSerializer$1",
      "org.elasticsearch.cluster.DiffableUtils$DiffableValueSerializer",
      "com.carrotsearch.hppc.ObjectObjectHashMap$KeysIterator",
      "org.elasticsearch.cluster.metadata.MetaData$MetaDataDiff",
      "org.apache.lucene.util.CommandLineUtil",
      "org.apache.lucene.store.Directory",
      "org.apache.lucene.store.BaseDirectory",
      "org.apache.lucene.store.RAMDirectory",
      "org.apache.lucene.store.SingleInstanceLockFactory",
      "org.apache.lucene.store.FilterDirectory",
      "org.apache.lucene.store.BaseDirectoryWrapper",
      "org.apache.lucene.store.MockDirectoryWrapper",
      "org.apache.lucene.store.DataOutput",
      "org.apache.lucene.store.IndexOutput",
      "org.apache.lucene.util.ThrottledIndexOutput",
      "org.apache.lucene.util.CloseableDirectory",
      "org.elasticsearch.action.GenericAction",
      "org.elasticsearch.action.Action",
      "org.elasticsearch.action.termvectors.TermVectorsAction",
      "org.elasticsearch.index.query.IdsQueryBuilder",
      "org.apache.lucene.util.CloseableThreadLocal",
      "org.elasticsearch.common.util.concurrent.ThreadContext$ContextThreadLocal",
      "org.elasticsearch.action.admin.indices.alias.Alias",
      "org.elasticsearch.index.analysis.AnalysisService",
      "org.elasticsearch.index.translog.BufferedChecksumStreamOutput",
      "org.elasticsearch.common.bytes.PagedBytesReference$PagedBytesReferenceStreamInput",
      "org.jboss.netty.buffer.SlicedChannelBuffer",
      "org.elasticsearch.repositories.RepositoryName",
      "org.elasticsearch.repositories.RepositorySettings",
      "org.elasticsearch.common.metrics.CounterMetric",
      "org.elasticsearch.repositories.RepositoryException",
      "org.elasticsearch.cluster.routing.allocation.decider.AllocationDeciders",
      "org.elasticsearch.action.ValidateActions",
      "org.elasticsearch.common.ValidationException",
      "org.elasticsearch.action.ActionRequestValidationException",
      "org.elasticsearch.search.aggregations.support.AggregationContext",
      "org.apache.lucene.store.MockIndexInputWrapper",
      "org.apache.lucene.queryparser.classic.QueryParserSettings",
      "org.apache.lucene.index.SegmentCommitInfo",
      "org.elasticsearch.index.get.GetResult",
      "org.jboss.netty.handler.codec.http.HttpVersion",
      "org.apache.lucene.mockfile.ShuffleFS",
      "org.elasticsearch.snapshots.SnapshotId",
      "org.elasticsearch.action.WriteConsistencyLevel",
      "org.elasticsearch.common.unit.ByteSizeUnit",
      "org.elasticsearch.cluster.ClusterState$ClusterStateStatus",
      "org.elasticsearch.index.VersionType",
      "org.elasticsearch.rest.RestRequest$Method"
    );
  }
}
