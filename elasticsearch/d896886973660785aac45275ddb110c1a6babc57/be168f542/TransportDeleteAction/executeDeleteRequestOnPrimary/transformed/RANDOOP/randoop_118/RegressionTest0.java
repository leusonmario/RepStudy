import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test0001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0001");
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet0 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.junit.Assert.assertNotNull(indexShardStateSet0);
    }

    @Test
    public void test0002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0002");
        org.elasticsearch.common.settings.Settings settings0 = null;
        org.elasticsearch.transport.TransportService transportService1 = null;
        org.elasticsearch.cluster.service.ClusterService clusterService2 = null;
        org.elasticsearch.indices.IndicesService indicesService3 = null;
        org.elasticsearch.threadpool.ThreadPool threadPool4 = null;
        org.elasticsearch.cluster.action.shard.ShardStateAction shardStateAction5 = null;
        org.elasticsearch.action.admin.indices.create.TransportCreateIndexAction transportCreateIndexAction6 = null;
        org.elasticsearch.action.support.ActionFilters actionFilters7 = null;
        org.elasticsearch.cluster.metadata.IndexNameExpressionResolver indexNameExpressionResolver8 = null;
        org.elasticsearch.action.support.AutoCreateIndex autoCreateIndex9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction transportDeleteAction10 = new org.elasticsearch.action.delete.TransportDeleteAction(settings0, transportService1, clusterService2, indicesService3, threadPool4, shardStateAction5, transportCreateIndexAction6, actionFilters7, indexNameExpressionResolver8, autoCreateIndex9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0003");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.index.shard.IndexShard indexShard4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult5 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest3, indexShard4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0004");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.io.stream.StreamInput streamInput4 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.readFrom(streamInput4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0005");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.routing("");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[][hi!][]}", deleteRequest7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest7);
    }

    @Test
    public void test0006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0006");
        org.elasticsearch.index.shard.IndexShard indexShard0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.routing("");
        org.elasticsearch.index.VersionType versionType7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest4.versionType(versionType7);
        org.elasticsearch.index.translog.Translog.Location location9 = null;
        org.elasticsearch.action.support.replication.TransportWriteAction.RespondingWriteResult respondingWriteResult10 = null;
        org.elasticsearch.common.logging.ESLogger eSLogger11 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.postWriteActions(indexShard0, (org.elasticsearch.action.support.WriteRequest<org.elasticsearch.action.delete.DeleteRequest>) deleteRequest8, location9, respondingWriteResult10, eSLogger11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
    }

    @Test
    public void test0007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0007");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy2 = deleteRequest1.getRefreshPolicy();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput3 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest1.writeTo(streamOutput3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + refreshPolicy2 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy2.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
    }

    @Test
    public void test0008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0008");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        java.lang.String str8 = deleteRequest7.index();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.setRefreshPolicy("delete {[][null][null]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[][null][null]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }

    @Test
    public void test0009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0009");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str4 = deleteRequest3.toString();
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.setParentTask("", (long) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: 0 length nodeIds are reserved for EMPTY_TASK_ID and are otherwise invalid.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][hi!][]}" + "'", str4, "delete {[][hi!][]}");
    }

    @Test
    public void test0010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0010");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.tasks.TaskId taskId18 = null;
        org.elasticsearch.tasks.Task task19 = deleteRequest7.createTask((long) '4', "", "", taskId18);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest7.setRefreshPolicy("delete {[][hi!][]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[][hi!][]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(task19);
    }

    @Test
    public void test0011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0011");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str4 = deleteRequest3.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("");
        java.lang.String str8 = deleteRequest3.id();
        org.elasticsearch.action.support.IndicesOptions indicesOptions9 = deleteRequest3.indicesOptions();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput10 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.writeTo(streamOutput10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][hi!][]}" + "'", str4, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(indicesOptions9);
    }

    @Test
    public void test0012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0012");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = deleteRequest3.remoteAddress();
        java.lang.Class<?> wildcardClass9 = deleteRequest3.getClass();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(transportAddress8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0013");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.routing("");
        org.elasticsearch.index.VersionType versionType21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str27 = deleteRequest26.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest7.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.index.shard.IndexShard indexShard31 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult32 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest7, indexShard31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][hi!][]}" + "'", str27, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
    }

    @Test
    public void test0014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0014");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.index("");
        java.lang.String str6 = deleteRequest3.toString();
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest3.getParentTask();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput8 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.writeTo(streamOutput8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][hi!][]}" + "'", str6, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(taskId7);
    }

    @Test
    public void test0015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0015");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str4 = deleteRequest3.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("");
        java.lang.String str8 = deleteRequest3.id();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput9 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.writeTo(streamOutput9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][hi!][]}" + "'", str4, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }

    @Test
    public void test0016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0016");
        org.elasticsearch.action.support.replication.ReplicationTask replicationTask0 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.setPhase(replicationTask0, "delete {[][hi!][]}");
    }

    @Test
    public void test0017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0017");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        java.lang.String str8 = deleteRequest7.index();
        java.lang.Class<?> wildcardClass9 = deleteRequest7.getClass();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0018");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.timeout("hi!");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [hi!] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
    }

    @Test
    public void test0019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0019");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.setShardId(shardId2);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest1.timeout("delete {[][hi!][]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[][hi!][]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest3);
    }

    @Test
    public void test0020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0020");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.version((long) '4');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest14.routing("");
        long long19 = deleteRequest14.version();
        org.elasticsearch.common.io.stream.StreamInput streamInput20 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest14.readFrom(streamInput20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 52L + "'", long19 == 52L);
    }

    @Test
    public void test0021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0021");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = null;
        org.elasticsearch.index.shard.IndexShard indexShard1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult2 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest0, indexShard1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0022");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.version((long) '4');
        org.elasticsearch.index.VersionType versionType17 = deleteRequest14.versionType();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest14.setShardId(shardId18);
        java.lang.Class<?> wildcardClass20 = deleteRequest19.getClass();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNull(versionType17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0023");
        org.elasticsearch.index.shard.IndexShard indexShard0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.routing("");
        org.elasticsearch.index.VersionType versionType7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest4.versionType(versionType7);
        org.elasticsearch.index.VersionType versionType9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest4.versionType(versionType9);
        org.elasticsearch.index.translog.Translog.Location location11 = null;
        org.elasticsearch.action.support.replication.TransportWriteAction.RespondingWriteResult respondingWriteResult12 = null;
        org.elasticsearch.common.logging.ESLogger eSLogger13 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.postWriteActions(indexShard0, (org.elasticsearch.action.support.WriteRequest<org.elasticsearch.action.delete.DeleteRequest>) deleteRequest10, location11, respondingWriteResult12, eSLogger13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
    }

    @Test
    public void test0024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0024");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str6 = deleteRequest5.toString();
        deleteRequest5.primaryTerm(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.routing("");
        org.elasticsearch.index.VersionType versionType15 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest12.versionType(versionType15);
        org.elasticsearch.common.transport.TransportAddress transportAddress17 = deleteRequest12.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy18 = deleteRequest12.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest5.setRefreshPolicy(refreshPolicy18);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "", deleteRequest5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][hi!][]}" + "'", str6, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNull(transportAddress17);
        org.junit.Assert.assertTrue("'" + refreshPolicy18 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy18.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest19);
    }

    @Test
    public void test0025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0025");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str4 = deleteRequest3.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("");
        java.lang.String str8 = deleteRequest3.id();
        boolean boolean9 = deleteRequest3.getShouldPersistResult();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][hi!][]}" + "'", str4, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0026");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        long long4 = deleteRequest3.version();
        boolean boolean5 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.index.shard.IndexShard indexShard6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult7 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest3, indexShard6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-3L) + "'", long4 == (-3L));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0027");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.index.IndexSettings indexSettings1 = null;
        org.elasticsearch.index.shard.ShardPath shardPath2 = null;
        org.elasticsearch.index.store.Store store3 = null;
        org.elasticsearch.index.cache.IndexCache indexCache4 = null;
        org.elasticsearch.index.mapper.MapperService mapperService5 = null;
        org.elasticsearch.index.similarity.SimilarityService similarityService6 = null;
        org.elasticsearch.index.fielddata.IndexFieldDataService indexFieldDataService7 = null;
        org.elasticsearch.index.engine.EngineFactory engineFactory8 = null;
        org.elasticsearch.index.shard.IndexEventListener indexEventListener9 = null;
        org.elasticsearch.index.shard.IndexSearcherWrapper indexSearcherWrapper10 = null;
        org.elasticsearch.threadpool.ThreadPool threadPool11 = null;
        org.elasticsearch.common.util.BigArrays bigArrays12 = null;
        org.elasticsearch.index.engine.Engine.Warmer warmer13 = null;
        org.elasticsearch.index.shard.SearchOperationListener[] searchOperationListenerArray14 = new org.elasticsearch.index.shard.SearchOperationListener[] {};
        java.util.ArrayList<org.elasticsearch.index.shard.SearchOperationListener> searchOperationListenerList15 = new java.util.ArrayList<org.elasticsearch.index.shard.SearchOperationListener>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.elasticsearch.index.shard.SearchOperationListener>) searchOperationListenerList15, searchOperationListenerArray14);
        org.elasticsearch.index.shard.IndexingOperationListener[] indexingOperationListenerArray17 = new org.elasticsearch.index.shard.IndexingOperationListener[] {};
        java.util.ArrayList<org.elasticsearch.index.shard.IndexingOperationListener> indexingOperationListenerList18 = new java.util.ArrayList<org.elasticsearch.index.shard.IndexingOperationListener>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.elasticsearch.index.shard.IndexingOperationListener>) indexingOperationListenerList18, indexingOperationListenerArray17);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.shard.IndexShard indexShard20 = new org.elasticsearch.index.shard.IndexShard(shardRouting0, indexSettings1, shardPath2, store3, indexCache4, mapperService5, similarityService6, indexFieldDataService7, engineFactory8, indexEventListener9, indexSearcherWrapper10, threadPool11, bigArrays12, warmer13, (java.util.List<org.elasticsearch.index.shard.SearchOperationListener>) searchOperationListenerList15, (java.util.List<org.elasticsearch.index.shard.IndexingOperationListener>) indexingOperationListenerList18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(searchOperationListenerArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(indexingOperationListenerArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test0028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0028");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.index.VersionType versionType8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.versionType(versionType8);
        org.elasticsearch.index.shard.IndexShard indexShard10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult11 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest9, indexShard10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
    }

    @Test
    public void test0029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0029");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest3.primaryTerm(10L);
        java.lang.String[] strArray6 = deleteRequest3.indices();
        org.elasticsearch.common.transport.TransportAddress transportAddress7 = deleteRequest3.remoteAddress();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[][null][null]}", deleteRequest3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNull(transportAddress7);
    }

    @Test
    public void test0030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0030");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.tasks.TaskId taskId6 = null;
        deleteRequest5.setParentTask(taskId6);
        org.elasticsearch.common.io.stream.StreamInput streamInput8 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest5.readFrom(streamInput8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
    }

    @Test
    public void test0031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0031");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.version((long) '4');
        org.elasticsearch.index.VersionType versionType17 = deleteRequest14.versionType();
        org.elasticsearch.common.io.stream.StreamInput streamInput18 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest14.readFrom(streamInput18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNull(versionType17);
    }

    @Test
    public void test0032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0032");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.version((long) '4');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest14.routing("");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput19 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest18.writeTo(streamOutput19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
    }

    @Test
    public void test0033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0033");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str4 = deleteRequest3.toString();
        org.elasticsearch.index.shard.IndexShard indexShard5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult6 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest3, indexShard5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][hi!][]}" + "'", str4, "delete {[][hi!][]}");
    }

    @Test
    public void test0034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0034");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.common.io.stream.StreamInput streamInput2 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest1.readFrom(streamInput2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0035");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.routing("");
        org.elasticsearch.index.VersionType versionType24 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest21.versionType(versionType24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str30 = deleteRequest29.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel31 = deleteRequest29.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest25.consistencyLevel(writeConsistencyLevel31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest36.routing("");
        org.elasticsearch.index.VersionType versionType39 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest36.versionType(versionType39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str45 = deleteRequest44.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel46 = deleteRequest44.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest40.consistencyLevel(writeConsistencyLevel46);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest25.consistencyLevel(writeConsistencyLevel46);
        org.elasticsearch.tasks.TaskId taskId49 = deleteRequest48.getParentTask();
        org.elasticsearch.tasks.Task task50 = deleteRequest7.createTask((long) (-1), "delete {[][hi!][]}", "delete {[][hi!][]}", taskId49);
        deleteRequest7.setParentTask("delete {[][null][null]}", (long) ' ');
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest7.setRefreshPolicy("delete {[][null][null]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[][null][null]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "delete {[][hi!][]}" + "'", str30, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel31 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel31.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "delete {[][hi!][]}" + "'", str45, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel46 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel46.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(taskId49);
        org.junit.Assert.assertNotNull(task50);
    }

    @Test
    public void test0036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0036");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.index.VersionType versionType8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.versionType(versionType8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.parent("");
        java.lang.String str12 = deleteRequest11.index();
        org.elasticsearch.common.io.stream.StreamInput streamInput13 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest11.readFrom(streamInput13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test0037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0037");
        org.elasticsearch.index.shard.IndexShard indexShard0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.routing("");
        org.elasticsearch.index.VersionType versionType8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest5.versionType(versionType8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str14 = deleteRequest13.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel15 = deleteRequest13.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest9.consistencyLevel(writeConsistencyLevel15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.routing("");
        org.elasticsearch.index.VersionType versionType23 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest20.versionType(versionType23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str29 = deleteRequest28.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel30 = deleteRequest28.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest24.consistencyLevel(writeConsistencyLevel30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest9.consistencyLevel(writeConsistencyLevel30);
        org.elasticsearch.tasks.TaskId taskId33 = deleteRequest32.getParentTask();
        deleteRequest1.setParentTask(taskId33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.index("");
        org.elasticsearch.common.unit.TimeValue timeValue41 = deleteRequest40.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest1.timeout(timeValue41);
        org.elasticsearch.index.translog.Translog.Location location43 = null;
        org.elasticsearch.action.support.replication.TransportWriteAction.RespondingWriteResult respondingWriteResult44 = null;
        org.elasticsearch.common.logging.ESLogger eSLogger45 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.postWriteActions(indexShard0, (org.elasticsearch.action.support.WriteRequest<org.elasticsearch.action.delete.DeleteRequest>) deleteRequest1, location43, respondingWriteResult44, eSLogger45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[][hi!][]}" + "'", str14, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel15 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel15.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "delete {[][hi!][]}" + "'", str29, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel30 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel30.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(taskId33);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(timeValue41);
        org.junit.Assert.assertNotNull(deleteRequest42);
    }

    @Test
    public void test0038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0038");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.version((long) '4');
        org.elasticsearch.index.VersionType versionType17 = deleteRequest14.versionType();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest14.setShardId(shardId18);
        org.elasticsearch.index.VersionType versionType20 = deleteRequest19.versionType();
        org.elasticsearch.index.shard.IndexShard indexShard21 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult22 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest19, indexShard21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNull(versionType17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNull(versionType20);
    }

    @Test
    public void test0039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0039");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest14.timeout();
        org.elasticsearch.common.io.stream.StreamInput streamInput16 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest14.readFrom(streamInput16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(timeValue15);
    }

    @Test
    public void test0040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0040");
        org.elasticsearch.index.shard.IndexShard indexShard0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str5 = deleteRequest4.toString();
        java.lang.String str6 = deleteRequest4.toString();
        org.elasticsearch.index.translog.Translog.Location location7 = null;
        org.elasticsearch.action.support.replication.TransportWriteAction.RespondingWriteResult respondingWriteResult8 = null;
        org.elasticsearch.common.logging.ESLogger eSLogger9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.postWriteActions(indexShard0, (org.elasticsearch.action.support.WriteRequest<org.elasticsearch.action.delete.DeleteRequest>) deleteRequest4, location7, respondingWriteResult8, eSLogger9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[][hi!][]}" + "'", str5, "delete {[][hi!][]}");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][hi!][]}" + "'", str6, "delete {[][hi!][]}");
    }

    @Test
    public void test0041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0041");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy2 = deleteRequest1.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.id("hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress7 = null;
        deleteRequest6.remoteAddress(transportAddress7);
        org.elasticsearch.index.shard.IndexShard indexShard9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete10 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest6, indexShard9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + refreshPolicy2 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy2.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
    }

    @Test
    public void test0042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0042");
        org.elasticsearch.index.shard.IndexShard indexShard0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str5 = deleteRequest4.toString();
        deleteRequest4.primaryTerm(0L);
        org.elasticsearch.index.translog.Translog.Location location8 = null;
        org.elasticsearch.action.support.replication.TransportWriteAction.RespondingWriteResult respondingWriteResult9 = null;
        org.elasticsearch.common.logging.ESLogger eSLogger10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.postWriteActions(indexShard0, (org.elasticsearch.action.support.WriteRequest<org.elasticsearch.action.delete.DeleteRequest>) deleteRequest4, location8, respondingWriteResult9, eSLogger10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[][hi!][]}" + "'", str5, "delete {[][hi!][]}");
    }

    @Test
    public void test0043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0043");
        org.elasticsearch.action.support.replication.ReplicationTask replicationTask0 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.setPhase(replicationTask0, "delete {[][delete {[][hi!][]}][]}");
    }

    @Test
    public void test0044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0044");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.index.VersionType versionType8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.versionType(versionType8);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.timeout("delete {[][delete {[][hi!][]}][]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[][delete {[][hi!][]}][]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
    }

    @Test
    public void test0045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0045");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.index.VersionType versionType8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.versionType(versionType8);
        java.lang.String[] strArray10 = deleteRequest3.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy13 = deleteRequest12.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.setRefreshPolicy(refreshPolicy13);
        java.lang.String str15 = deleteRequest3.toString();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + refreshPolicy13 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy13.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[][hi!][]}" + "'", str15, "delete {[][hi!][]}");
    }

    @Test
    public void test0046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0046");
        org.elasticsearch.action.support.replication.ReplicationTask replicationTask0 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.setPhase(replicationTask0, "hi!");
    }

    @Test
    public void test0047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0047");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.routing("");
        org.elasticsearch.index.VersionType versionType21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str27 = deleteRequest26.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest7.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.type("delete {[][hi!][]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest30.timeout("");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][hi!][]}" + "'", str27, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
    }

    @Test
    public void test0048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0048");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        long long4 = deleteRequest3.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.index("");
        java.lang.String str11 = deleteRequest8.toString();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest8.getParentTask();
        deleteRequest3.setParentTask(taskId12);
        org.elasticsearch.index.shard.IndexShard indexShard14 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete15 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest3, indexShard14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-3L) + "'", long4 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][hi!][]}" + "'", str11, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(taskId12);
    }

    @Test
    public void test0049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0049");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.routing("");
        org.elasticsearch.index.VersionType versionType21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str27 = deleteRequest26.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest7.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.tasks.TaskId taskId31 = deleteRequest30.getParentTask();
        java.lang.String str32 = deleteRequest30.getDescription();
        java.lang.Class<?> wildcardClass33 = deleteRequest30.getClass();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][hi!][]}" + "'", str27, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(taskId31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[][hi!][]}" + "'", str32, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0050");
        org.elasticsearch.action.support.replication.ReplicationTask replicationTask0 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.setPhase(replicationTask0, "");
    }

    @Test
    public void test0051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0051");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.routing("");
        org.elasticsearch.index.VersionType versionType21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str27 = deleteRequest26.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest7.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.type("delete {[][hi!][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.routing("delete {[][null][null]}");
        org.elasticsearch.index.shard.IndexShard indexShard35 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult36 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest32, indexShard35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][hi!][]}" + "'", str27, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
    }

    @Test
    public void test0052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0052");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.timeout("delete {[][hi!][]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[][hi!][]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0053");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException8 = deleteRequest7.validate();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
    }

    @Test
    public void test0054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0054");
        org.elasticsearch.index.shard.IndexShard indexShard0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str5 = deleteRequest4.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = deleteRequest4.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest4.id("");
        org.elasticsearch.tasks.TaskId taskId9 = deleteRequest8.getParentTask();
        org.elasticsearch.index.translog.Translog.Location location10 = null;
        org.elasticsearch.action.support.replication.TransportWriteAction.RespondingWriteResult respondingWriteResult11 = null;
        org.elasticsearch.common.logging.ESLogger eSLogger12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.postWriteActions(indexShard0, (org.elasticsearch.action.support.WriteRequest<org.elasticsearch.action.delete.DeleteRequest>) deleteRequest8, location10, respondingWriteResult11, eSLogger12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[][hi!][]}" + "'", str5, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel6 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel6.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(taskId9);
    }

    @Test
    public void test0055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0055");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.routing("");
        org.elasticsearch.index.VersionType versionType21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str27 = deleteRequest26.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest7.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.type("delete {[][hi!][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.routing("delete {[][null][null]}");
        deleteRequest34.primaryTerm((long) '4');
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException37 = deleteRequest34.validate();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][hi!][]}" + "'", str27, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
    }

    @Test
    public void test0056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0056");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.setRefreshPolicy("");
        java.lang.String str10 = deleteRequest7.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.id("delete {[][hi!][]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "hi!", deleteRequest7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
    }

    @Test
    public void test0057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0057");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.index("");
        org.elasticsearch.common.io.stream.StreamInput streamInput6 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.readFrom(streamInput6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
    }

    @Test
    public void test0058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0058");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.setRefreshPolicy("");
        java.lang.String str8 = deleteRequest5.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest5.id("delete {[][hi!][]}");
        org.elasticsearch.index.shard.IndexShard indexShard13 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult14 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest5, indexShard13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
    }

    @Test
    public void test0059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0059");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str4 = deleteRequest3.toString();
        java.lang.String str5 = deleteRequest3.parent();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.timeout("");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][hi!][]}" + "'", str4, "delete {[][hi!][]}");
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test0060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0060");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.setRefreshPolicy("");
        java.lang.String str8 = deleteRequest5.parent();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput9 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest5.writeTo(streamOutput9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test0061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0061");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str4 = deleteRequest3.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.type("delete {[][null][null]}");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput12 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest9.writeTo(streamOutput12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][hi!][]}" + "'", str4, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
    }

    @Test
    public void test0062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0062");
        org.elasticsearch.index.shard.IndexShard indexShard0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.index("");
        java.lang.String str11 = deleteRequest8.toString();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest8.getParentTask();
        deleteRequest4.setParentTask(taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.routing("");
        org.elasticsearch.index.VersionType versionType20 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest17.versionType(versionType20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str26 = deleteRequest25.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest25.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest21.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest4.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest33.routing("");
        org.elasticsearch.index.VersionType versionType36 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest33.versionType(versionType36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str42 = deleteRequest41.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel43 = deleteRequest41.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest37.consistencyLevel(writeConsistencyLevel43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest48.routing("");
        org.elasticsearch.index.VersionType versionType51 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest48.versionType(versionType51);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str57 = deleteRequest56.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel58 = deleteRequest56.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest52.consistencyLevel(writeConsistencyLevel58);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest37.consistencyLevel(writeConsistencyLevel58);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest29.consistencyLevel(writeConsistencyLevel58);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy62 = deleteRequest61.getRefreshPolicy();
        org.elasticsearch.index.translog.Translog.Location location63 = null;
        org.elasticsearch.action.support.replication.TransportWriteAction.RespondingWriteResult respondingWriteResult64 = null;
        org.elasticsearch.common.logging.ESLogger eSLogger65 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.postWriteActions(indexShard0, (org.elasticsearch.action.support.WriteRequest<org.elasticsearch.action.delete.DeleteRequest>) deleteRequest61, location63, respondingWriteResult64, eSLogger65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][hi!][]}" + "'", str11, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "delete {[][hi!][]}" + "'", str26, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "delete {[][hi!][]}" + "'", str42, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel43 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel43.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "delete {[][hi!][]}" + "'", str57, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel58 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel58.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertTrue("'" + refreshPolicy62 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy62.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
    }

    @Test
    public void test0063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0063");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.index.VersionType versionType8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.versionType(versionType8);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput10 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.writeTo(streamOutput10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
    }

    @Test
    public void test0064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0064");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.id("delete {[][null][null]}");
        java.lang.Class<?> wildcardClass8 = deleteRequest5.getClass();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0065");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.routing("");
        org.elasticsearch.index.VersionType versionType21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str27 = deleteRequest26.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest7.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.type("delete {[][hi!][]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy33 = deleteRequest32.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest32.id("delete {[][hi!][]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest32.setRefreshPolicy("delete {[][delete {[][hi!][]}][]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[][delete {[][hi!][]}][]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][hi!][]}" + "'", str27, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + refreshPolicy33 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy33.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest35);
    }

    @Test
    public void test0066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0066");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][hi!][]}", "delete {[][delete {[][hi!][]}][]}", "hi!");
    }

    @Test
    public void test0067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0067");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy9 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.index("");
        java.lang.String str20 = deleteRequest17.toString();
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest17.getParentTask();
        deleteRequest13.setParentTask(taskId21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.routing("");
        org.elasticsearch.index.VersionType versionType29 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest26.versionType(versionType29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str35 = deleteRequest34.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel36 = deleteRequest34.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest30.consistencyLevel(writeConsistencyLevel36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest13.consistencyLevel(writeConsistencyLevel36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest43.routing("");
        org.elasticsearch.index.VersionType versionType46 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest43.versionType(versionType46);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str52 = deleteRequest51.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel53 = deleteRequest51.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest47.consistencyLevel(writeConsistencyLevel53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest58.routing("");
        org.elasticsearch.index.VersionType versionType61 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest58.versionType(versionType61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str67 = deleteRequest66.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel68 = deleteRequest66.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest62.consistencyLevel(writeConsistencyLevel68);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest47.consistencyLevel(writeConsistencyLevel68);
        org.elasticsearch.tasks.TaskId taskId71 = deleteRequest70.getParentTask();
        deleteRequest39.setParentTask(taskId71);
        deleteRequest38.setParentTask(taskId71);
        org.elasticsearch.index.VersionType versionType74 = deleteRequest38.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest3.versionType(versionType74);
        java.lang.String str76 = deleteRequest75.type();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = deleteRequest75.timeout("delete {[][null][null]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[][null][null]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(transportAddress8);
        org.junit.Assert.assertTrue("'" + refreshPolicy9 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy9.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[][hi!][]}" + "'", str20, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "delete {[][hi!][]}" + "'", str35, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel36 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel36.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "delete {[][hi!][]}" + "'", str52, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel53 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel53.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "delete {[][hi!][]}" + "'", str67, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel68 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel68.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNotNull(taskId71);
        org.junit.Assert.assertNotNull(versionType74);
        org.junit.Assert.assertNotNull(deleteRequest75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
    }

    @Test
    public void test0068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0068");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.setRefreshPolicy("");
        java.lang.String str8 = deleteRequest5.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.id("delete {[][delete {[][hi!][]}][]}");
        org.elasticsearch.index.shard.IndexShard indexShard11 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete12 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest10, indexShard11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(deleteRequest10);
    }

    @Test
    public void test0069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0069");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        long long4 = deleteRequest3.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.routing("");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setRefreshPolicy("delete {[][null][null]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[][null][null]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-3L) + "'", long4 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest6);
    }

    @Test
    public void test0070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0070");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.index.VersionType versionType8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.versionType(versionType8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.parent("");
        java.lang.String str12 = deleteRequest11.index();
        org.elasticsearch.index.VersionType versionType13 = deleteRequest11.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.routing("");
        org.elasticsearch.index.VersionType versionType20 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest17.versionType(versionType20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str26 = deleteRequest25.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest25.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest21.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.routing("");
        org.elasticsearch.index.VersionType versionType35 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest32.versionType(versionType35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str41 = deleteRequest40.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel42 = deleteRequest40.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest36.consistencyLevel(writeConsistencyLevel42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest21.consistencyLevel(writeConsistencyLevel42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest44.type("delete {[][hi!][]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy47 = deleteRequest46.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest11.setRefreshPolicy(refreshPolicy47);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput49 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest48.writeTo(streamOutput49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(versionType13);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "delete {[][hi!][]}" + "'", str26, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "delete {[][hi!][]}" + "'", str41, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel42 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel42.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertTrue("'" + refreshPolicy47 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy47.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest48);
    }

    @Test
    public void test0071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0071");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = null;
        org.elasticsearch.index.shard.IndexShard indexShard1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete2 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest0, indexShard1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0072");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.routing("");
        org.elasticsearch.index.VersionType versionType7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest4.versionType(versionType7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str13 = deleteRequest12.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest8.consistencyLevel(writeConsistencyLevel14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.routing("");
        org.elasticsearch.index.VersionType versionType22 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest19.versionType(versionType22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str28 = deleteRequest27.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = deleteRequest27.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest23.consistencyLevel(writeConsistencyLevel29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest8.consistencyLevel(writeConsistencyLevel29);
        org.elasticsearch.tasks.TaskId taskId32 = deleteRequest31.getParentTask();
        deleteRequest0.setParentTask(taskId32);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput34 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest0.writeTo(streamOutput34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[][hi!][]}" + "'", str13, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "delete {[][hi!][]}" + "'", str28, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel29 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel29.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(taskId32);
    }

    @Test
    public void test0073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0073");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str4 = deleteRequest3.id();
        long long5 = deleteRequest3.version();
        org.elasticsearch.index.shard.IndexShard indexShard6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult7 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest3, indexShard6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-3L) + "'", long5 == (-3L));
    }

    @Test
    public void test0074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0074");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str4 = deleteRequest3.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("");
        java.lang.String str8 = deleteRequest3.id();
        java.lang.String[] strArray9 = deleteRequest3.indices();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setRefreshPolicy("delete {[][null][null]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[][null][null]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][hi!][]}" + "'", str4, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strArray9);
    }

    @Test
    public void test0075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0075");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.routing("");
        org.elasticsearch.index.VersionType versionType21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str27 = deleteRequest26.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest7.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.type("delete {[][hi!][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.routing("delete {[][null][null]}");
        org.elasticsearch.tasks.TaskId taskId35 = deleteRequest32.getParentTask();
        java.lang.Class<?> wildcardClass36 = deleteRequest32.getClass();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][hi!][]}" + "'", str27, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(taskId35);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0076");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.version((long) '4');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest14.routing("");
        long long19 = deleteRequest14.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.index("delete {[][null][null]}");
        org.elasticsearch.common.io.stream.StreamInput streamInput22 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest21.readFrom(streamInput22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 52L + "'", long19 == 52L);
        org.junit.Assert.assertNotNull(deleteRequest21);
    }

    @Test
    public void test0077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0077");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.index.IndexSettings indexSettings1 = null;
        org.elasticsearch.index.shard.ShardPath shardPath2 = null;
        org.elasticsearch.index.store.Store store3 = null;
        org.elasticsearch.index.cache.IndexCache indexCache4 = null;
        org.elasticsearch.index.mapper.MapperService mapperService5 = null;
        org.elasticsearch.index.similarity.SimilarityService similarityService6 = null;
        org.elasticsearch.index.fielddata.IndexFieldDataService indexFieldDataService7 = null;
        org.elasticsearch.index.engine.EngineFactory engineFactory8 = null;
        org.elasticsearch.index.shard.IndexEventListener indexEventListener9 = null;
        org.elasticsearch.index.shard.IndexSearcherWrapper indexSearcherWrapper10 = null;
        org.elasticsearch.threadpool.ThreadPool threadPool11 = null;
        org.elasticsearch.common.util.BigArrays bigArrays12 = null;
        org.elasticsearch.index.engine.Engine.Warmer warmer13 = null;
        org.elasticsearch.index.shard.SearchOperationListener[] searchOperationListenerArray14 = new org.elasticsearch.index.shard.SearchOperationListener[] {};
        java.util.ArrayList<org.elasticsearch.index.shard.SearchOperationListener> searchOperationListenerList15 = new java.util.ArrayList<org.elasticsearch.index.shard.SearchOperationListener>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.elasticsearch.index.shard.SearchOperationListener>) searchOperationListenerList15, searchOperationListenerArray14);
        java.util.List<org.elasticsearch.index.shard.IndexingOperationListener> indexingOperationListenerList17 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.shard.IndexShard indexShard18 = new org.elasticsearch.index.shard.IndexShard(shardRouting0, indexSettings1, shardPath2, store3, indexCache4, mapperService5, similarityService6, indexFieldDataService7, engineFactory8, indexEventListener9, indexSearcherWrapper10, threadPool11, bigArrays12, warmer13, (java.util.List<org.elasticsearch.index.shard.SearchOperationListener>) searchOperationListenerList15, indexingOperationListenerList17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(searchOperationListenerArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test0078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0078");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        java.lang.String str15 = deleteRequest14.index();
        java.lang.String[] strArray16 = deleteRequest14.indices();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput17 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest14.writeTo(streamOutput17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test0079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0079");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.setRefreshPolicy("");
        java.lang.String str8 = deleteRequest5.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest5.id("delete {[][hi!][]}");
        org.elasticsearch.index.shard.IndexShard indexShard13 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete14 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest12, indexShard13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
    }

    @Test
    public void test0080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0080");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy2 = deleteRequest1.getRefreshPolicy();
        java.lang.String str3 = deleteRequest1.type();
        java.lang.String str4 = deleteRequest1.id();
        deleteRequest1.primaryTerm((long) (short) 100);
        org.elasticsearch.index.shard.IndexShard indexShard7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult8 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest1, indexShard7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + refreshPolicy2 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy2.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test0081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0081");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.routing("");
        org.elasticsearch.index.VersionType versionType21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str27 = deleteRequest26.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest7.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.tasks.TaskId taskId31 = deleteRequest30.getParentTask();
        java.lang.String str32 = deleteRequest30.index();
        org.elasticsearch.index.shard.IndexShard indexShard33 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult34 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest30, indexShard33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][hi!][]}" + "'", str27, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(taskId31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
    }

    @Test
    public void test0082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0082");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.common.transport.TransportAddress transportAddress1 = deleteRequest0.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.routing("");
        org.elasticsearch.index.VersionType versionType8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest5.versionType(versionType8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str14 = deleteRequest13.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel15 = deleteRequest13.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest9.consistencyLevel(writeConsistencyLevel15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.routing("");
        org.elasticsearch.index.VersionType versionType23 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest20.versionType(versionType23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str29 = deleteRequest28.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel30 = deleteRequest28.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest24.consistencyLevel(writeConsistencyLevel30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest9.consistencyLevel(writeConsistencyLevel30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.type("delete {[][hi!][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest34.routing("delete {[][null][null]}");
        org.elasticsearch.tasks.TaskId taskId37 = deleteRequest34.getParentTask();
        deleteRequest0.setParentTask(taskId37);
        org.elasticsearch.index.shard.IndexShard indexShard39 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult40 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest0, indexShard39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(transportAddress1);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[][hi!][]}" + "'", str14, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel15 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel15.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "delete {[][hi!][]}" + "'", str29, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel30 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel30.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(taskId37);
    }

    @Test
    public void test0083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0083");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.index("");
        java.lang.String str10 = deleteRequest7.toString();
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest7.getParentTask();
        deleteRequest3.setParentTask(taskId11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.routing("");
        org.elasticsearch.index.VersionType versionType19 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest16.versionType(versionType19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str25 = deleteRequest24.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel26 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest20.consistencyLevel(writeConsistencyLevel26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest3.consistencyLevel(writeConsistencyLevel26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.routing("");
        org.elasticsearch.index.VersionType versionType35 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest32.versionType(versionType35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str41 = deleteRequest40.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel42 = deleteRequest40.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest36.consistencyLevel(writeConsistencyLevel42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest47.routing("");
        org.elasticsearch.index.VersionType versionType50 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest47.versionType(versionType50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str56 = deleteRequest55.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel57 = deleteRequest55.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest51.consistencyLevel(writeConsistencyLevel57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest36.consistencyLevel(writeConsistencyLevel57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest28.consistencyLevel(writeConsistencyLevel57);
        java.lang.Class<?> wildcardClass61 = writeConsistencyLevel57.getClass();
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][hi!][]}" + "'", str10, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[][hi!][]}" + "'", str25, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel26 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel26.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "delete {[][hi!][]}" + "'", str41, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel42 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel42.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "delete {[][hi!][]}" + "'", str56, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel57 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel57.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0084");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.index("");
        java.lang.String str10 = deleteRequest7.toString();
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest7.getParentTask();
        deleteRequest3.setParentTask(taskId11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.routing("");
        org.elasticsearch.index.VersionType versionType19 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest16.versionType(versionType19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str25 = deleteRequest24.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel26 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest20.consistencyLevel(writeConsistencyLevel26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest3.consistencyLevel(writeConsistencyLevel26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest33.routing("");
        org.elasticsearch.index.VersionType versionType36 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest33.versionType(versionType36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str42 = deleteRequest41.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel43 = deleteRequest41.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest37.consistencyLevel(writeConsistencyLevel43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest48.routing("");
        org.elasticsearch.index.VersionType versionType51 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest48.versionType(versionType51);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str57 = deleteRequest56.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel58 = deleteRequest56.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest52.consistencyLevel(writeConsistencyLevel58);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest37.consistencyLevel(writeConsistencyLevel58);
        org.elasticsearch.tasks.TaskId taskId61 = deleteRequest60.getParentTask();
        deleteRequest29.setParentTask(taskId61);
        deleteRequest28.setParentTask(taskId61);
        org.elasticsearch.index.VersionType versionType64 = deleteRequest28.versionType();
        org.elasticsearch.index.shard.IndexShard indexShard65 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult66 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest28, indexShard65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][hi!][]}" + "'", str10, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[][hi!][]}" + "'", str25, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel26 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel26.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "delete {[][hi!][]}" + "'", str42, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel43 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel43.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "delete {[][hi!][]}" + "'", str57, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel58 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel58.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(taskId61);
        org.junit.Assert.assertNotNull(versionType64);
    }

    @Test
    public void test0085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0085");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str4 = deleteRequest3.toString();
        java.lang.String str5 = deleteRequest3.toString();
        java.lang.Class<?> wildcardClass6 = deleteRequest3.getClass();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][hi!][]}" + "'", str4, "delete {[][hi!][]}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[][hi!][]}" + "'", str5, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0086");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.routing("");
        org.elasticsearch.index.VersionType versionType8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest5.versionType(versionType8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str14 = deleteRequest13.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel15 = deleteRequest13.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest9.consistencyLevel(writeConsistencyLevel15);
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest16.timeout();
        org.elasticsearch.common.unit.TimeValue timeValue18 = deleteRequest16.timeout();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "", deleteRequest16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[][hi!][]}" + "'", str14, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel15 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel15.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(timeValue18);
    }

    @Test
    public void test0087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0087");
        org.elasticsearch.index.shard.IndexShard indexShard0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str5 = deleteRequest4.toString();
        deleteRequest4.primaryTerm(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.routing("");
        org.elasticsearch.index.VersionType versionType14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest11.versionType(versionType14);
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = deleteRequest11.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy17 = deleteRequest11.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest4.setRefreshPolicy(refreshPolicy17);
        long long19 = deleteRequest18.version();
        long long20 = deleteRequest18.version();
        org.elasticsearch.index.translog.Translog.Location location21 = null;
        org.elasticsearch.action.support.replication.TransportWriteAction.RespondingWriteResult respondingWriteResult22 = null;
        org.elasticsearch.common.logging.ESLogger eSLogger23 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.postWriteActions(indexShard0, (org.elasticsearch.action.support.WriteRequest<org.elasticsearch.action.delete.DeleteRequest>) deleteRequest18, location21, respondingWriteResult22, eSLogger23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[][hi!][]}" + "'", str5, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(transportAddress16);
        org.junit.Assert.assertTrue("'" + refreshPolicy17 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy17.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-3L) + "'", long19 == (-3L));
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-3L) + "'", long20 == (-3L));
    }

    @Test
    public void test0088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0088");
        org.elasticsearch.action.support.replication.ReplicationTask replicationTask0 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.setPhase(replicationTask0, "delete {[hi!][null][null]}");
    }

    @Test
    public void test0089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0089");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.version((long) '4');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest14.routing("");
        long long19 = deleteRequest14.version();
        java.lang.Class<?> wildcardClass20 = deleteRequest14.getClass();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 52L + "'", long19 == 52L);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0090");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.index.VersionType versionType8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.versionType(versionType8);
        java.lang.String[] strArray10 = deleteRequest3.indices();
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest3.shardId();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNull(shardId11);
    }

    @Test
    public void test0091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0091");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.routing("");
        org.elasticsearch.index.VersionType versionType21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str27 = deleteRequest26.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest7.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest7.parent("hi!");
        org.elasticsearch.index.shard.IndexShard indexShard33 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult34 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest32, indexShard33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][hi!][]}" + "'", str27, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
    }

    @Test
    public void test0092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0092");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.version((long) '4');
        org.elasticsearch.index.VersionType versionType17 = deleteRequest14.versionType();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest14.setShardId(shardId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.version((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.index("");
        java.lang.String str32 = deleteRequest29.toString();
        org.elasticsearch.tasks.TaskId taskId33 = deleteRequest29.getParentTask();
        deleteRequest25.setParentTask(taskId33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.routing("");
        org.elasticsearch.index.VersionType versionType41 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest38.versionType(versionType41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str47 = deleteRequest46.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel48 = deleteRequest46.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest42.consistencyLevel(writeConsistencyLevel48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest25.consistencyLevel(writeConsistencyLevel48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest55.routing("");
        org.elasticsearch.index.VersionType versionType58 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest55.versionType(versionType58);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str64 = deleteRequest63.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel65 = deleteRequest63.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest59.consistencyLevel(writeConsistencyLevel65);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest70.routing("");
        org.elasticsearch.index.VersionType versionType73 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest70.versionType(versionType73);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str79 = deleteRequest78.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel80 = deleteRequest78.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = deleteRequest74.consistencyLevel(writeConsistencyLevel80);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest82 = deleteRequest59.consistencyLevel(writeConsistencyLevel80);
        org.elasticsearch.tasks.TaskId taskId83 = deleteRequest82.getParentTask();
        deleteRequest51.setParentTask(taskId83);
        deleteRequest50.setParentTask(taskId83);
        org.elasticsearch.index.VersionType versionType86 = deleteRequest50.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = deleteRequest19.versionType(versionType86);
        java.lang.Class<?> wildcardClass88 = deleteRequest87.getClass();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNull(versionType17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[][hi!][]}" + "'", str32, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(taskId33);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "delete {[][hi!][]}" + "'", str47, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel48 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel48.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "delete {[][hi!][]}" + "'", str64, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel65 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel65.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "delete {[][hi!][]}" + "'", str79, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel80 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel80.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest81);
        org.junit.Assert.assertNotNull(deleteRequest82);
        org.junit.Assert.assertNotNull(taskId83);
        org.junit.Assert.assertNotNull(versionType86);
        org.junit.Assert.assertNotNull(deleteRequest87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0093");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy2 = deleteRequest1.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.id("hi!");
        org.elasticsearch.index.shard.IndexShard indexShard7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete8 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest6, indexShard7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + refreshPolicy2 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy2.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
    }

    @Test
    public void test0094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0094");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str6 = deleteRequest5.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel7 = deleteRequest5.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest5.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.setRefreshPolicy("");
        java.lang.String[] strArray12 = deleteRequest9.indices();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "", deleteRequest9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][hi!][]}" + "'", str6, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel7 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel7.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test0095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0095");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest5.type("delete {[][hi!][]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "hi!", deleteRequest9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
    }

    @Test
    public void test0096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0096");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.setRefreshPolicy("");
        java.lang.String str8 = deleteRequest5.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.parent("");
        java.lang.String[] strArray11 = deleteRequest5.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest5.version((long) (byte) 0);
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = deleteRequest5.remoteAddress();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNull(transportAddress14);
    }

    @Test
    public void test0097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0097");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.index("");
        org.elasticsearch.common.unit.TimeValue timeValue6 = deleteRequest5.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.version((long) 0);
        org.elasticsearch.common.io.stream.StreamInput streamInput9 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest5.readFrom(streamInput9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest8);
    }

    @Test
    public void test0098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0098");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        long long4 = deleteRequest3.version();
        org.elasticsearch.index.shard.ShardId shardId5 = deleteRequest3.shardId();
        org.elasticsearch.index.shard.IndexShard indexShard6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult7 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest3, indexShard6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-3L) + "'", long4 == (-3L));
        org.junit.Assert.assertNull(shardId5);
    }

    @Test
    public void test0099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0099");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.version((long) '4');
        org.elasticsearch.index.VersionType versionType17 = deleteRequest14.versionType();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest14.setShardId(shardId18);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.setShardId(shardId20);
        java.lang.Class<?> wildcardClass22 = deleteRequest14.getClass();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNull(versionType17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0100");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest1.primaryTerm(10L);
        java.lang.String[] strArray4 = deleteRequest1.indices();
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = deleteRequest1.remoteAddress();
        java.lang.String str6 = deleteRequest1.id();
        org.elasticsearch.common.unit.TimeValue timeValue7 = deleteRequest1.timeout();
        java.lang.Class<?> wildcardClass8 = timeValue7.getClass();
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNull(transportAddress5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(timeValue7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0101");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str4 = deleteRequest3.id();
        long long5 = deleteRequest3.version();
        java.lang.Class<?> wildcardClass6 = deleteRequest3.getClass();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-3L) + "'", long5 == (-3L));
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0102");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str4 = deleteRequest3.toString();
        java.lang.String str5 = deleteRequest3.parent();
        java.lang.String str6 = deleteRequest3.index();
        deleteRequest3.setParentTask("delete {[][hi!][]}", (long) 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][hi!][]}" + "'", str4, "delete {[][hi!][]}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
    }

    @Test
    public void test0103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0103");
        org.elasticsearch.index.shard.IndexShard indexShard0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.routing("");
        org.elasticsearch.index.VersionType versionType7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest4.versionType(versionType7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str13 = deleteRequest12.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest8.consistencyLevel(writeConsistencyLevel14);
        java.lang.String str16 = deleteRequest15.index();
        java.lang.String str17 = deleteRequest15.id();
        org.elasticsearch.index.translog.Translog.Location location18 = null;
        org.elasticsearch.action.support.replication.TransportWriteAction.RespondingWriteResult respondingWriteResult19 = null;
        org.elasticsearch.common.logging.ESLogger eSLogger20 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.postWriteActions(indexShard0, (org.elasticsearch.action.support.WriteRequest<org.elasticsearch.action.delete.DeleteRequest>) deleteRequest15, location18, respondingWriteResult19, eSLogger20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[][hi!][]}" + "'", str13, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test0104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0104");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.shard.ShardId shardId1 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.setShardId(shardId1);
        org.elasticsearch.index.shard.IndexShard indexShard3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete4 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest0, indexShard3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest2);
    }

    @Test
    public void test0105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0105");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.index("");
        java.lang.String str10 = deleteRequest7.toString();
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest7.getParentTask();
        deleteRequest3.setParentTask(taskId11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.routing("");
        org.elasticsearch.index.VersionType versionType19 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest16.versionType(versionType19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str25 = deleteRequest24.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel26 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest20.consistencyLevel(writeConsistencyLevel26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest3.consistencyLevel(writeConsistencyLevel26);
        java.lang.Class<?> wildcardClass29 = deleteRequest28.getClass();
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][hi!][]}" + "'", str10, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[][hi!][]}" + "'", str25, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel26 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel26.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0106");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.index("");
        java.lang.String str10 = deleteRequest7.toString();
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest7.getParentTask();
        deleteRequest3.setParentTask(taskId11);
        java.lang.String[] strArray13 = deleteRequest3.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.routing("");
        org.elasticsearch.tasks.TaskId taskId20 = null;
        deleteRequest19.setParentTask(taskId20);
        java.lang.String str22 = deleteRequest19.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy25 = deleteRequest24.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest19.setRefreshPolicy(refreshPolicy25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest3.setRefreshPolicy(refreshPolicy25);
        java.lang.Class<?> wildcardClass28 = deleteRequest27.getClass();
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][hi!][]}" + "'", str10, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[][hi!][]}" + "'", str22, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + refreshPolicy25 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy25.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0107");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str4 = deleteRequest3.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.type("delete {[][null][null]}");
        java.lang.String str12 = deleteRequest9.routing();
        org.elasticsearch.index.shard.IndexShard indexShard13 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult14 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest9, indexShard13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][hi!][]}" + "'", str4, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test0108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0108");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest1.primaryTerm(10L);
        java.lang.String str4 = deleteRequest1.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest1.index("hi!");
        java.lang.String str7 = deleteRequest6.toString();
        long long8 = deleteRequest6.primaryTerm();
        java.lang.Class<?> wildcardClass9 = deleteRequest6.getClass();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][null][null]}" + "'", str4, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[hi!][null][null]}" + "'", str7, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10L + "'", long8 == 10L);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0109");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str4 = deleteRequest3.toString();
        deleteRequest3.primaryTerm(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.routing("");
        org.elasticsearch.index.VersionType versionType13 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.versionType(versionType13);
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = deleteRequest10.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy16 = deleteRequest10.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.setRefreshPolicy(refreshPolicy16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.index("");
        java.lang.String str28 = deleteRequest25.toString();
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest25.getParentTask();
        deleteRequest21.setParentTask(taskId29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest34.routing("");
        org.elasticsearch.index.VersionType versionType37 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest34.versionType(versionType37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str43 = deleteRequest42.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel44 = deleteRequest42.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest38.consistencyLevel(writeConsistencyLevel44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest21.consistencyLevel(writeConsistencyLevel44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest51.routing("");
        org.elasticsearch.index.VersionType versionType54 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest51.versionType(versionType54);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str60 = deleteRequest59.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel61 = deleteRequest59.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest55.consistencyLevel(writeConsistencyLevel61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest66.routing("");
        org.elasticsearch.index.VersionType versionType69 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest66.versionType(versionType69);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str75 = deleteRequest74.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel76 = deleteRequest74.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest70.consistencyLevel(writeConsistencyLevel76);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = deleteRequest55.consistencyLevel(writeConsistencyLevel76);
        org.elasticsearch.tasks.TaskId taskId79 = deleteRequest78.getParentTask();
        deleteRequest47.setParentTask(taskId79);
        deleteRequest46.setParentTask(taskId79);
        org.elasticsearch.index.VersionType versionType82 = deleteRequest46.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest83 = deleteRequest3.versionType(versionType82);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput84 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest83.writeTo(streamOutput84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][hi!][]}" + "'", str4, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(transportAddress15);
        org.junit.Assert.assertTrue("'" + refreshPolicy16 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy16.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "delete {[][hi!][]}" + "'", str28, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "delete {[][hi!][]}" + "'", str43, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel44 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel44.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "delete {[][hi!][]}" + "'", str60, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel61 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel61.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "delete {[][hi!][]}" + "'", str75, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel76 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel76.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertNotNull(deleteRequest78);
        org.junit.Assert.assertNotNull(taskId79);
        org.junit.Assert.assertNotNull(versionType82);
        org.junit.Assert.assertNotNull(deleteRequest83);
    }

    @Test
    public void test0110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0110");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy9 = deleteRequest3.getRefreshPolicy();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.timeout("delete {[hi!][null][null]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[hi!][null][null]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(transportAddress8);
        org.junit.Assert.assertTrue("'" + refreshPolicy9 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy9.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
    }

    @Test
    public void test0111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0111");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.index.VersionType versionType8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.versionType(versionType8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.parent("");
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest3.indicesOptions();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(indicesOptions12);
    }

    @Test
    public void test0112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0112");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy4 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.id("hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[][hi!][]}", deleteRequest6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + refreshPolicy4 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy4.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
    }

    @Test
    public void test0113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0113");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.version((long) '4');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest14.routing("");
        long long19 = deleteRequest14.version();
        org.elasticsearch.index.shard.IndexShard indexShard20 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete21 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest14, indexShard20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 52L + "'", long19 == 52L);
    }

    @Test
    public void test0114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0114");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.routing("");
        org.elasticsearch.index.VersionType versionType8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest5.versionType(versionType8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str14 = deleteRequest13.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel15 = deleteRequest13.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest9.consistencyLevel(writeConsistencyLevel15);
        java.lang.String str17 = deleteRequest16.index();
        java.lang.String[] strArray18 = deleteRequest16.indices();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "", deleteRequest16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[][hi!][]}" + "'", str14, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel15 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel15.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(strArray18);
    }

    @Test
    public void test0115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0115");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest1.primaryTerm(10L);
        java.lang.String[] strArray4 = deleteRequest1.indices();
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = deleteRequest1.remoteAddress();
        java.lang.String str6 = deleteRequest1.id();
        org.elasticsearch.index.shard.IndexShard indexShard7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete8 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest1, indexShard7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNull(transportAddress5);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test0116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0116");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.index.VersionType versionType8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.versionType(versionType8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.parent("");
        java.lang.String str12 = deleteRequest11.index();
        deleteRequest11.primaryTerm((long) (short) 100);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy15 = deleteRequest11.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest11.parent("delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard indexShard18 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult19 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest17, indexShard18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + refreshPolicy15 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy15.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest17);
    }

    @Test
    public void test0117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0117");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.setShardId(shardId2);
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setRefreshPolicy("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [hi!].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(shardId4);
    }

    @Test
    public void test0118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0118");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.index("");
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest3.remoteAddress(transportAddress6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.routing("");
        org.elasticsearch.index.VersionType versionType14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest11.versionType(versionType14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str20 = deleteRequest19.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel21 = deleteRequest19.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.consistencyLevel(writeConsistencyLevel21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.routing("");
        org.elasticsearch.index.VersionType versionType29 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest26.versionType(versionType29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str35 = deleteRequest34.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel36 = deleteRequest34.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest30.consistencyLevel(writeConsistencyLevel36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest15.consistencyLevel(writeConsistencyLevel36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest3.consistencyLevel(writeConsistencyLevel36);
        java.lang.String str40 = deleteRequest39.parent();
        java.lang.String str41 = deleteRequest39.routing();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest39.setRefreshPolicy("delete {[][delete {[][hi!][]}][]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[][delete {[][hi!][]}][]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[][hi!][]}" + "'", str20, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel21 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel21.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "delete {[][hi!][]}" + "'", str35, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel36 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel36.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str41);
    }

    @Test
    public void test0119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0119");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[][hi!][]}", deleteRequest2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0120");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.routing("");
        org.elasticsearch.index.VersionType versionType21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str27 = deleteRequest26.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest7.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.tasks.TaskId taskId31 = deleteRequest30.getParentTask();
        java.lang.String str32 = deleteRequest30.getDescription();
        org.elasticsearch.common.transport.TransportAddress transportAddress33 = null;
        deleteRequest30.remoteAddress(transportAddress33);
        long long35 = deleteRequest30.version();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException36 = deleteRequest30.validate();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][hi!][]}" + "'", str27, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(taskId31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[][hi!][]}" + "'", str32, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-3L) + "'", long35 == (-3L));
    }

    @Test
    public void test0121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0121");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str4 = deleteRequest3.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("");
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest7.getParentTask();
        java.lang.Class<?> wildcardClass9 = taskId8.getClass();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][hi!][]}" + "'", str4, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(taskId8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0122");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.setShardId(shardId2);
        java.lang.Class<?> wildcardClass4 = deleteRequest3.getClass();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0123");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        java.lang.String str2 = deleteRequest1.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.parent("delete {[][null][null]}");
        org.elasticsearch.index.shard.IndexShard indexShard5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult6 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest4, indexShard5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "delete {[][null][null]}" + "'", str2, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest4);
    }

    @Test
    public void test0124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0124");
        org.elasticsearch.index.shard.IndexShard indexShard0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.routing("");
        org.elasticsearch.index.VersionType versionType7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest4.versionType(versionType7);
        org.elasticsearch.index.VersionType versionType9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest4.versionType(versionType9);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest4.parent("");
        java.lang.String str13 = deleteRequest12.index();
        org.elasticsearch.index.VersionType versionType14 = deleteRequest12.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.routing("");
        org.elasticsearch.index.VersionType versionType21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str27 = deleteRequest26.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest33.routing("");
        org.elasticsearch.index.VersionType versionType36 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest33.versionType(versionType36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str42 = deleteRequest41.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel43 = deleteRequest41.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest37.consistencyLevel(writeConsistencyLevel43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest22.consistencyLevel(writeConsistencyLevel43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest45.type("delete {[][hi!][]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy48 = deleteRequest47.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest12.setRefreshPolicy(refreshPolicy48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest12.parent("");
        java.lang.String str52 = deleteRequest12.index();
        org.elasticsearch.index.translog.Translog.Location location53 = null;
        org.elasticsearch.action.support.replication.TransportWriteAction.RespondingWriteResult respondingWriteResult54 = null;
        org.elasticsearch.common.logging.ESLogger eSLogger55 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.postWriteActions(indexShard0, (org.elasticsearch.action.support.WriteRequest<org.elasticsearch.action.delete.DeleteRequest>) deleteRequest12, location53, respondingWriteResult54, eSLogger55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][hi!][]}" + "'", str27, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "delete {[][hi!][]}" + "'", str42, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel43 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel43.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertTrue("'" + refreshPolicy48 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy48.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
    }

    @Test
    public void test0125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0125");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.routing("");
        org.elasticsearch.index.VersionType versionType21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str27 = deleteRequest26.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest7.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.tasks.TaskId taskId31 = deleteRequest30.getParentTask();
        java.lang.String str32 = deleteRequest30.getDescription();
        org.elasticsearch.common.transport.TransportAddress transportAddress33 = null;
        deleteRequest30.remoteAddress(transportAddress33);
        long long35 = deleteRequest30.version();
        org.elasticsearch.common.io.stream.StreamInput streamInput36 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest30.readFrom(streamInput36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][hi!][]}" + "'", str27, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(taskId31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[][hi!][]}" + "'", str32, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-3L) + "'", long35 == (-3L));
    }

    @Test
    public void test0126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0126");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.index("");
        java.lang.String str8 = deleteRequest5.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy11 = deleteRequest10.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.id("hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = null;
        deleteRequest15.remoteAddress(transportAddress16);
        org.elasticsearch.index.VersionType versionType18 = deleteRequest15.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest5.versionType(versionType18);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[][delete {[][hi!][]}][]}", deleteRequest19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[][hi!][]}" + "'", str8, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + refreshPolicy11 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy11.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertNotNull(deleteRequest19);
    }

    @Test
    public void test0127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0127");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.routing("");
        org.elasticsearch.index.VersionType versionType21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str27 = deleteRequest26.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest7.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.type("delete {[][hi!][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.routing("delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest34.id("");
        org.elasticsearch.index.shard.IndexShard indexShard37 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete38 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest34, indexShard37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][hi!][]}" + "'", str27, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest36);
    }

    @Test
    public void test0128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0128");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput8 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest7.writeTo(streamOutput8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
    }

    @Test
    public void test0129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0129");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.index.VersionType versionType8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.versionType(versionType8);
        java.lang.String[] strArray10 = deleteRequest3.indices();
        org.elasticsearch.common.io.stream.StreamInput streamInput11 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.readFrom(streamInput11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(strArray10);
    }

    @Test
    public void test0130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0130");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        java.lang.String str8 = deleteRequest3.routing();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.timeout("delete {[][null][null]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[][null][null]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test0131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0131");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.setRefreshPolicy("");
        java.lang.String str8 = deleteRequest5.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest5.id("delete {[][hi!][]}");
        deleteRequest12.primaryTerm((long) (short) 100);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest12.timeout("delete {[hi!][null][null]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[hi!][null][null]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
    }

    @Test
    public void test0132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0132");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][null][null]}", "delete {[][null][null]}", "delete {[][null][null]}");
        long long6 = deleteRequest5.primaryTerm();
        java.lang.String[] strArray7 = deleteRequest5.indices();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[][null][null]}][delete {[][null][null]}][delete {[][null][null]}]}", deleteRequest5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(strArray7);
    }

    @Test
    public void test0133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0133");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.version((long) '4');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.routing("");
        org.elasticsearch.index.VersionType versionType26 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest23.versionType(versionType26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str32 = deleteRequest31.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel33 = deleteRequest31.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest27.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest41.routing("");
        org.elasticsearch.index.VersionType versionType44 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest41.versionType(versionType44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str50 = deleteRequest49.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel51 = deleteRequest49.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest45.consistencyLevel(writeConsistencyLevel51);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest56.routing("");
        org.elasticsearch.index.VersionType versionType59 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest56.versionType(versionType59);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str65 = deleteRequest64.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel66 = deleteRequest64.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest60.consistencyLevel(writeConsistencyLevel66);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest45.consistencyLevel(writeConsistencyLevel66);
        org.elasticsearch.tasks.TaskId taskId69 = deleteRequest68.getParentTask();
        org.elasticsearch.tasks.Task task70 = deleteRequest27.createTask((long) (-1), "delete {[][hi!][]}", "delete {[][hi!][]}", taskId69);
        org.elasticsearch.tasks.Task task71 = deleteRequest16.createTask((long) (short) 1, "", "delete {[][null][null]}", taskId69);
        org.elasticsearch.index.shard.IndexShard indexShard72 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult73 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest16, indexShard72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[][hi!][]}" + "'", str32, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel33 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel33.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "delete {[][hi!][]}" + "'", str50, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel51 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel51.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "delete {[][hi!][]}" + "'", str65, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel66 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel66.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertNotNull(taskId69);
        org.junit.Assert.assertNotNull(task70);
        org.junit.Assert.assertNotNull(task71);
    }

    @Test
    public void test0134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0134");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[][hi!][]}][]}", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.index("delete {[][hi!][]}");
        org.elasticsearch.index.shard.IndexShard indexShard6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult7 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest5, indexShard6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
    }

    @Test
    public void test0135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0135");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.routing("");
        org.elasticsearch.index.VersionType versionType21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str27 = deleteRequest26.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest7.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.type("delete {[][hi!][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.routing("delete {[][null][null]}");
        org.elasticsearch.tasks.TaskId taskId35 = deleteRequest32.getParentTask();
        org.elasticsearch.tasks.TaskId taskId36 = deleteRequest32.getParentTask();
        java.lang.Class<?> wildcardClass37 = taskId36.getClass();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][hi!][]}" + "'", str27, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(taskId35);
        org.junit.Assert.assertNotNull(taskId36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0136");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.common.transport.TransportAddress transportAddress1 = deleteRequest0.remoteAddress();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput2 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest0.writeTo(streamOutput2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(transportAddress1);
    }

    @Test
    public void test0137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0137");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.routing("");
        org.elasticsearch.tasks.TaskId taskId8 = null;
        deleteRequest7.setParentTask(taskId8);
        java.lang.String str10 = deleteRequest7.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("");
        java.lang.String str16 = deleteRequest15.toString();
        long long17 = deleteRequest15.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.index("");
        java.lang.String str28 = deleteRequest25.toString();
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest25.getParentTask();
        deleteRequest21.setParentTask(taskId29);
        deleteRequest15.setParentTask(taskId29);
        org.elasticsearch.tasks.Task task32 = deleteRequest7.createTask((long) (short) -1, "delete {[hi!][null][null]}", "delete {[][null][null]}", taskId29);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "", deleteRequest7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][hi!][]}" + "'", str10, "delete {[][hi!][]}");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[][null][null]}" + "'", str16, "delete {[][null][null]}");
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "delete {[][hi!][]}" + "'", str28, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(task32);
    }

    @Test
    public void test0138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0138");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.routing("");
        org.elasticsearch.index.VersionType versionType21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str27 = deleteRequest26.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest7.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.type("delete {[][hi!][]}");
        java.lang.String str33 = deleteRequest32.type();
        java.lang.Class<?> wildcardClass34 = deleteRequest32.getClass();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][hi!][]}" + "'", str27, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "delete {[][hi!][]}" + "'", str33, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0139");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("delete {[][delete {[][hi!][]}][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress7 = null;
        deleteRequest3.remoteAddress(transportAddress7);
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = null;
        deleteRequest3.remoteAddress(transportAddress9);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest3.timeout("hi!");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [hi!] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
    }

    @Test
    public void test0140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0140");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy9 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.index("");
        java.lang.String str20 = deleteRequest17.toString();
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest17.getParentTask();
        deleteRequest13.setParentTask(taskId21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.routing("");
        org.elasticsearch.index.VersionType versionType29 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest26.versionType(versionType29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str35 = deleteRequest34.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel36 = deleteRequest34.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest30.consistencyLevel(writeConsistencyLevel36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest13.consistencyLevel(writeConsistencyLevel36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest43.routing("");
        org.elasticsearch.index.VersionType versionType46 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest43.versionType(versionType46);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str52 = deleteRequest51.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel53 = deleteRequest51.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest47.consistencyLevel(writeConsistencyLevel53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest58.routing("");
        org.elasticsearch.index.VersionType versionType61 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest58.versionType(versionType61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str67 = deleteRequest66.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel68 = deleteRequest66.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest62.consistencyLevel(writeConsistencyLevel68);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest47.consistencyLevel(writeConsistencyLevel68);
        org.elasticsearch.tasks.TaskId taskId71 = deleteRequest70.getParentTask();
        deleteRequest39.setParentTask(taskId71);
        deleteRequest38.setParentTask(taskId71);
        org.elasticsearch.index.VersionType versionType74 = deleteRequest38.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest3.versionType(versionType74);
        org.elasticsearch.index.shard.IndexShard indexShard76 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult77 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest75, indexShard76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(transportAddress8);
        org.junit.Assert.assertTrue("'" + refreshPolicy9 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy9.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[][hi!][]}" + "'", str20, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "delete {[][hi!][]}" + "'", str35, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel36 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel36.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "delete {[][hi!][]}" + "'", str52, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel53 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel53.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "delete {[][hi!][]}" + "'", str67, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel68 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel68.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNotNull(taskId71);
        org.junit.Assert.assertNotNull(versionType74);
        org.junit.Assert.assertNotNull(deleteRequest75);
    }

    @Test
    public void test0141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0141");
        org.elasticsearch.index.shard.IndexShard indexShard0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.index.shard.ShardId shardId3 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.setShardId(shardId3);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest2.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest2.parent("delete {[null][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel9 = deleteRequest8.consistencyLevel();
        org.elasticsearch.index.translog.Translog.Location location10 = null;
        org.elasticsearch.action.support.replication.TransportWriteAction.RespondingWriteResult respondingWriteResult11 = null;
        org.elasticsearch.common.logging.ESLogger eSLogger12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.postWriteActions(indexShard0, (org.elasticsearch.action.support.WriteRequest<org.elasticsearch.action.delete.DeleteRequest>) deleteRequest8, location10, respondingWriteResult11, eSLogger12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel9 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel9.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test0142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0142");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.index.VersionType versionType8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.versionType(versionType8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.parent("");
        java.lang.String str12 = deleteRequest11.index();
        org.elasticsearch.index.VersionType versionType13 = deleteRequest11.versionType();
        java.lang.Class<?> wildcardClass14 = deleteRequest11.getClass();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(versionType13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0143");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.version((long) '4');
        org.elasticsearch.index.VersionType versionType17 = deleteRequest14.versionType();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest14.setShardId(shardId18);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.setShardId(shardId20);
        java.lang.String str22 = deleteRequest14.id();
        org.elasticsearch.index.shard.IndexShard indexShard23 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete24 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest14, indexShard23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNull(versionType17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
    }

    @Test
    public void test0144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0144");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.routing("");
        org.elasticsearch.index.VersionType versionType21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str27 = deleteRequest26.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest7.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.type("delete {[][hi!][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.routing("delete {[][null][null]}");
        org.elasticsearch.tasks.TaskId taskId35 = deleteRequest32.getParentTask();
        org.elasticsearch.tasks.TaskId taskId36 = deleteRequest32.getParentTask();
        org.elasticsearch.common.unit.TimeValue timeValue37 = deleteRequest32.timeout();
        java.lang.Class<?> wildcardClass38 = timeValue37.getClass();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][hi!][]}" + "'", str27, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(taskId35);
        org.junit.Assert.assertNotNull(taskId36);
        org.junit.Assert.assertNotNull(timeValue37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0145");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy2 = deleteRequest1.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.id("");
        deleteRequest4.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest4.index("delete {[][hi!][]}");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput9 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest8.writeTo(streamOutput9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + refreshPolicy2 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy2.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest8);
    }

    @Test
    public void test0146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0146");
        org.elasticsearch.index.shard.IndexShard indexShard0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        long long5 = deleteRequest4.version();
        boolean boolean6 = deleteRequest4.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest4.version((long) '#');
        org.elasticsearch.index.translog.Translog.Location location9 = null;
        org.elasticsearch.action.support.replication.TransportWriteAction.RespondingWriteResult respondingWriteResult10 = null;
        org.elasticsearch.common.logging.ESLogger eSLogger11 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.postWriteActions(indexShard0, (org.elasticsearch.action.support.WriteRequest<org.elasticsearch.action.delete.DeleteRequest>) deleteRequest4, location9, respondingWriteResult10, eSLogger11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-3L) + "'", long5 == (-3L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
    }

    @Test
    public void test0147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0147");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.setShardId(shardId2);
        java.lang.String str4 = deleteRequest3.index();
        deleteRequest3.primaryTerm(1L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
    }

    @Test
    public void test0148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0148");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str4 = deleteRequest3.toString();
        deleteRequest3.primaryTerm(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.routing("");
        org.elasticsearch.index.VersionType versionType13 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.versionType(versionType13);
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = deleteRequest10.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy16 = deleteRequest10.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.setRefreshPolicy(refreshPolicy16);
        long long18 = deleteRequest17.version();
        long long19 = deleteRequest17.version();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest17.setRefreshPolicy("delete {[null][null][null]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[null][null][null]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][hi!][]}" + "'", str4, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(transportAddress15);
        org.junit.Assert.assertTrue("'" + refreshPolicy16 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy16.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-3L) + "'", long18 == (-3L));
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-3L) + "'", long19 == (-3L));
    }

    @Test
    public void test0149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0149");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy4 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.id("hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[hi!][null][null]}", deleteRequest6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + refreshPolicy4 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy4.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
    }

    @Test
    public void test0150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0150");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.version((long) '4');
        org.elasticsearch.index.VersionType versionType17 = deleteRequest14.versionType();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest14.setShardId(shardId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.version((long) (short) 1);
        java.lang.String str22 = deleteRequest21.type();
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest21.setParentTask("", (long) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: 0 length nodeIds are reserved for EMPTY_TASK_ID and are otherwise invalid.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNull(versionType17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
    }

    @Test
    public void test0151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0151");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy2 = deleteRequest1.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.id("hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress7 = null;
        deleteRequest6.remoteAddress(transportAddress7);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest6.versionType();
        org.elasticsearch.index.shard.IndexShard indexShard10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult11 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest6, indexShard10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + refreshPolicy2 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy2.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(versionType9);
    }

    @Test
    public void test0152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0152");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str4 = deleteRequest3.toString();
        deleteRequest3.primaryTerm(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.routing("delete {[null][null][null]}");
        org.elasticsearch.index.shard.IndexShard indexShard9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete10 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest8, indexShard9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][hi!][]}" + "'", str4, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
    }

    @Test
    public void test0153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0153");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.routing("");
        org.elasticsearch.index.VersionType versionType21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str27 = deleteRequest26.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest7.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.type("delete {[][hi!][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.routing("delete {[][null][null]}");
        org.elasticsearch.tasks.TaskId taskId35 = deleteRequest32.getParentTask();
        org.elasticsearch.tasks.TaskId taskId36 = deleteRequest32.getParentTask();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest32.setRefreshPolicy("delete {[][null][null]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[][null][null]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][hi!][]}" + "'", str27, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(taskId35);
        org.junit.Assert.assertNotNull(taskId36);
    }

    @Test
    public void test0154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0154");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        long long4 = deleteRequest3.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.type("");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput9 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest6.writeTo(streamOutput9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-3L) + "'", long4 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
    }

    @Test
    public void test0155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0155");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.setRefreshPolicy("delete {[hi!][null][null]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[hi!][null][null]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
    }

    @Test
    public void test0156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0156");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.routing("");
        org.elasticsearch.index.VersionType versionType21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str27 = deleteRequest26.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest7.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.tasks.TaskId taskId31 = deleteRequest30.getParentTask();
        java.lang.String str32 = deleteRequest30.getDescription();
        org.elasticsearch.common.transport.TransportAddress transportAddress33 = null;
        deleteRequest30.remoteAddress(transportAddress33);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest30.setRefreshPolicy("delete {[][hi!][delete {[][hi!][]}]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[][hi!][delete {[][hi!][]}]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][hi!][]}" + "'", str27, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(taskId31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[][hi!][]}" + "'", str32, "delete {[][hi!][]}");
    }

    @Test
    public void test0157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0157");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str4 = deleteRequest3.toString();
        java.lang.String str5 = deleteRequest3.parent();
        java.lang.String str6 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.routing("");
        org.elasticsearch.index.VersionType versionType13 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.versionType(versionType13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str19 = deleteRequest18.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = deleteRequest18.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.consistencyLevel(writeConsistencyLevel20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.version((long) '4');
        org.elasticsearch.index.VersionType versionType24 = deleteRequest21.versionType();
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest21.setShardId(shardId25);
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.setShardId(shardId27);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = deleteRequest28.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest3.consistencyLevel(writeConsistencyLevel29);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest3.timeout("delete {[null][null][null]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[null][null][null]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][hi!][]}" + "'", str4, "delete {[][hi!][]}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[][hi!][]}" + "'", str19, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel20 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel20.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(versionType24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel29 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel29.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest30);
    }

    @Test
    public void test0158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0158");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.version((long) '4');
        java.lang.String str17 = deleteRequest16.getDescription();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException18 = deleteRequest16.validate();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[][hi!][]}" + "'", str17, "delete {[][hi!][]}");
    }

    @Test
    public void test0159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0159");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy9 = deleteRequest3.getRefreshPolicy();
        java.lang.Class<?> wildcardClass10 = deleteRequest3.getClass();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(transportAddress8);
        org.junit.Assert.assertTrue("'" + refreshPolicy9 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy9.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0160");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest1.primaryTerm(10L);
        java.lang.String str4 = deleteRequest1.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest1.index("hi!");
        java.lang.String str7 = deleteRequest6.getDescription();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.timeout("delete {[][null][null]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[][null][null]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][null][null]}" + "'", str4, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[hi!][null][null]}" + "'", str7, "delete {[hi!][null][null]}");
    }

    @Test
    public void test0161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0161");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str4 = deleteRequest3.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.routing("");
        org.elasticsearch.index.VersionType versionType16 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest13.versionType(versionType16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str22 = deleteRequest21.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest21.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest17.consistencyLevel(writeConsistencyLevel23);
        org.elasticsearch.common.unit.TimeValue timeValue25 = deleteRequest24.timeout();
        org.elasticsearch.common.unit.TimeValue timeValue26 = deleteRequest24.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest7.timeout(timeValue26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest7.version(0L);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest7.setRefreshPolicy("delete {[][hi!][delete {[][hi!][]}]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[][hi!][delete {[][hi!][]}]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][hi!][]}" + "'", str4, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[][hi!][]}" + "'", str22, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(timeValue25);
        org.junit.Assert.assertNotNull(timeValue26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
    }

    @Test
    public void test0162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0162");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.routing("");
        org.elasticsearch.index.VersionType versionType21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str27 = deleteRequest26.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest7.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.type("delete {[][hi!][]}");
        long long33 = deleteRequest30.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest37.routing("");
        org.elasticsearch.index.VersionType versionType40 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest37.versionType(versionType40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str46 = deleteRequest45.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel47 = deleteRequest45.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest41.consistencyLevel(writeConsistencyLevel47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest52.routing("");
        org.elasticsearch.index.VersionType versionType55 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest52.versionType(versionType55);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str61 = deleteRequest60.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel62 = deleteRequest60.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest56.consistencyLevel(writeConsistencyLevel62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest41.consistencyLevel(writeConsistencyLevel62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest30.consistencyLevel(writeConsistencyLevel62);
        org.elasticsearch.index.shard.IndexShard indexShard66 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete67 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest30, indexShard66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][hi!][]}" + "'", str27, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-3L) + "'", long33 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "delete {[][hi!][]}" + "'", str46, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel47 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel47.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "delete {[][hi!][]}" + "'", str61, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel62 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel62.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(deleteRequest65);
    }

    @Test
    public void test0163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0163");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy4 = deleteRequest3.getRefreshPolicy();
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.setParentTask("", (long) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: 0 length nodeIds are reserved for EMPTY_TASK_ID and are otherwise invalid.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + refreshPolicy4 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy4.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
    }

    @Test
    public void test0164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0164");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy2 = deleteRequest1.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.id("hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress7 = null;
        deleteRequest6.remoteAddress(transportAddress7);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest6.versionType();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput10 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest6.writeTo(streamOutput10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + refreshPolicy2 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy2.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(versionType9);
    }

    @Test
    public void test0165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0165");
        org.elasticsearch.action.support.replication.ReplicationTask replicationTask0 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.setPhase(replicationTask0, "delete {[][null][null]}");
    }

    @Test
    public void test0166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0166");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.version((long) '4');
        org.elasticsearch.index.VersionType versionType17 = deleteRequest14.versionType();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest14.setShardId(shardId18);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.setShardId(shardId20);
        org.elasticsearch.action.support.IndicesOptions indicesOptions22 = deleteRequest19.indicesOptions();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException23 = deleteRequest19.validate();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNull(versionType17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(indicesOptions22);
    }

    @Test
    public void test0167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0167");
        org.elasticsearch.index.shard.IndexShard indexShard0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.index.shard.ShardId shardId3 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.setShardId(shardId3);
        java.lang.String str5 = deleteRequest4.index();
        org.elasticsearch.index.translog.Translog.Location location6 = null;
        org.elasticsearch.action.support.replication.TransportWriteAction.RespondingWriteResult respondingWriteResult7 = null;
        org.elasticsearch.common.logging.ESLogger eSLogger8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.postWriteActions(indexShard0, (org.elasticsearch.action.support.WriteRequest<org.elasticsearch.action.delete.DeleteRequest>) deleteRequest4, location6, respondingWriteResult7, eSLogger8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
    }

    @Test
    public void test0168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0168");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.index.VersionType versionType8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.versionType(versionType8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.parent("");
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = deleteRequest3.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId13 = deleteRequest3.shardId();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException14 = deleteRequest3.validate();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(transportAddress12);
        org.junit.Assert.assertNull(shardId13);
    }

    @Test
    public void test0169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0169");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.tasks.TaskId taskId6 = null;
        deleteRequest5.setParentTask(taskId6);
        java.lang.String str8 = deleteRequest5.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy11 = deleteRequest10.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest5.setRefreshPolicy(refreshPolicy11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest5.version((long) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest5.timeout("hi!");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [hi!] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[][hi!][]}" + "'", str8, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + refreshPolicy11 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy11.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
    }

    @Test
    public void test0170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0170");
        org.elasticsearch.index.shard.IndexShard indexShard0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest2.primaryTerm(10L);
        java.lang.String str5 = deleteRequest2.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest2.index("hi!");
        org.elasticsearch.index.translog.Translog.Location location8 = null;
        org.elasticsearch.action.support.replication.TransportWriteAction.RespondingWriteResult respondingWriteResult9 = null;
        org.elasticsearch.common.logging.ESLogger eSLogger10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.postWriteActions(indexShard0, (org.elasticsearch.action.support.WriteRequest<org.elasticsearch.action.delete.DeleteRequest>) deleteRequest2, location8, respondingWriteResult9, eSLogger10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[][null][null]}" + "'", str5, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest7);
    }

    @Test
    public void test0171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0171");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.routing("");
        org.elasticsearch.index.VersionType versionType9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest6.versionType(versionType9);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str15 = deleteRequest14.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel16 = deleteRequest14.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest10.consistencyLevel(writeConsistencyLevel16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.routing("");
        org.elasticsearch.index.VersionType versionType24 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest21.versionType(versionType24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str30 = deleteRequest29.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel31 = deleteRequest29.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest25.consistencyLevel(writeConsistencyLevel31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest10.consistencyLevel(writeConsistencyLevel31);
        org.elasticsearch.tasks.TaskId taskId34 = deleteRequest33.getParentTask();
        deleteRequest2.setParentTask(taskId34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest39.index("");
        org.elasticsearch.common.unit.TimeValue timeValue42 = deleteRequest41.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest2.timeout(timeValue42);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException44 = deleteRequest43.validate();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[][hi!][]}", deleteRequest43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[][hi!][]}" + "'", str15, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel16 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel16.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "delete {[][hi!][]}" + "'", str30, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel31 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel31.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(taskId34);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(timeValue42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(actionRequestValidationException44);
    }

    @Test
    public void test0172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0172");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        java.lang.String str2 = deleteRequest1.getDescription();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.timeout("hi!");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [hi!] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "delete {[][null][null]}" + "'", str2, "delete {[][null][null]}");
    }

    @Test
    public void test0173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0173");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.index("");
        java.lang.String str10 = deleteRequest7.toString();
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest7.getParentTask();
        deleteRequest3.setParentTask(taskId11);
        java.lang.String[] strArray13 = deleteRequest3.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.id("");
        java.lang.String str18 = deleteRequest17.type();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput19 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest17.writeTo(streamOutput19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][hi!][]}" + "'", str10, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
    }

    @Test
    public void test0174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0174");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.index("");
        java.lang.String str6 = deleteRequest3.toString();
        org.elasticsearch.index.VersionType versionType7 = deleteRequest3.versionType();
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = deleteRequest3.remoteAddress();
        deleteRequest3.primaryTerm(10L);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest3.timeout("delete {[][hi!][]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[][hi!][]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][hi!][]}" + "'", str6, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(versionType7);
        org.junit.Assert.assertNull(transportAddress8);
    }

    @Test
    public void test0175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0175");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.routing("");
        org.elasticsearch.index.VersionType versionType8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest5.versionType(versionType8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str14 = deleteRequest13.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel15 = deleteRequest13.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest9.consistencyLevel(writeConsistencyLevel15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.routing("");
        org.elasticsearch.index.VersionType versionType23 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest20.versionType(versionType23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str29 = deleteRequest28.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel30 = deleteRequest28.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest24.consistencyLevel(writeConsistencyLevel30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest9.consistencyLevel(writeConsistencyLevel30);
        deleteRequest9.primaryTerm((long) (short) 1);
        org.elasticsearch.common.transport.TransportAddress transportAddress35 = null;
        deleteRequest9.remoteAddress(transportAddress35);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "hi!", deleteRequest9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[][hi!][]}" + "'", str14, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel15 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel15.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "delete {[][hi!][]}" + "'", str29, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel30 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel30.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest32);
    }

    @Test
    public void test0176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0176");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "delete {[][hi!][]}", "delete {[hi!][null][null]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[][delete {[][hi!][]}][]}", deleteRequest5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0177");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str4 = deleteRequest3.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.routing("");
        org.elasticsearch.index.VersionType versionType16 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest13.versionType(versionType16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str22 = deleteRequest21.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest21.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest17.consistencyLevel(writeConsistencyLevel23);
        org.elasticsearch.common.unit.TimeValue timeValue25 = deleteRequest24.timeout();
        org.elasticsearch.common.unit.TimeValue timeValue26 = deleteRequest24.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest7.timeout(timeValue26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest7.version(0L);
        org.elasticsearch.common.io.stream.StreamInput streamInput30 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest29.readFrom(streamInput30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][hi!][]}" + "'", str4, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[][hi!][]}" + "'", str22, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(timeValue25);
        org.junit.Assert.assertNotNull(timeValue26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
    }

    @Test
    public void test0178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0178");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy2 = deleteRequest1.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest4.type("hi!");
        org.elasticsearch.common.io.stream.StreamInput streamInput9 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest4.readFrom(streamInput9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + refreshPolicy2 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy2.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
    }

    @Test
    public void test0179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0179");
        org.elasticsearch.index.shard.IndexShard indexShard0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest2.primaryTerm(10L);
        java.lang.String str5 = deleteRequest2.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest2.index("hi!");
        long long8 = deleteRequest7.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy11 = deleteRequest10.getRefreshPolicy();
        java.lang.String str12 = deleteRequest10.type();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy13 = deleteRequest10.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.setRefreshPolicy(refreshPolicy13);
        org.elasticsearch.index.translog.Translog.Location location15 = null;
        org.elasticsearch.action.support.replication.TransportWriteAction.RespondingWriteResult respondingWriteResult16 = null;
        org.elasticsearch.common.logging.ESLogger eSLogger17 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.postWriteActions(indexShard0, (org.elasticsearch.action.support.WriteRequest<org.elasticsearch.action.delete.DeleteRequest>) deleteRequest7, location15, respondingWriteResult16, eSLogger17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[][null][null]}" + "'", str5, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-3L) + "'", long8 == (-3L));
        org.junit.Assert.assertTrue("'" + refreshPolicy11 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy11.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + refreshPolicy13 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy13.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest14);
    }

    @Test
    public void test0180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0180");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.version((long) '4');
        org.elasticsearch.index.VersionType versionType17 = deleteRequest14.versionType();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest14.setShardId(shardId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.version((long) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest19.setRefreshPolicy("delete {[null][null][null]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[null][null][null]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNull(versionType17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
    }

    @Test
    public void test0181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0181");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.version((long) '4');
        org.elasticsearch.index.VersionType versionType17 = deleteRequest14.versionType();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest14.setShardId(shardId18);
        java.lang.String str20 = deleteRequest14.getDescription();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest14.setRefreshPolicy("delete {[][hi!][]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[][hi!][]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNull(versionType17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[][hi!][]}" + "'", str20, "delete {[][hi!][]}");
    }

    @Test
    public void test0182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0182");
        org.elasticsearch.index.shard.IndexShard indexShard0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.routing("");
        org.elasticsearch.index.VersionType versionType7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest4.versionType(versionType7);
        org.elasticsearch.index.VersionType versionType9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest4.versionType(versionType9);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest4.parent("");
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = deleteRequest4.remoteAddress();
        java.lang.String str14 = deleteRequest4.routing();
        org.elasticsearch.index.translog.Translog.Location location15 = null;
        org.elasticsearch.action.support.replication.TransportWriteAction.RespondingWriteResult respondingWriteResult16 = null;
        org.elasticsearch.common.logging.ESLogger eSLogger17 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.postWriteActions(indexShard0, (org.elasticsearch.action.support.WriteRequest<org.elasticsearch.action.delete.DeleteRequest>) deleteRequest4, location15, respondingWriteResult16, eSLogger17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(transportAddress13);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test0183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0183");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long2 = deleteRequest1.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str7 = deleteRequest6.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel8 = deleteRequest6.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest1.consistencyLevel(writeConsistencyLevel8);
        org.elasticsearch.index.shard.IndexShard indexShard10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete11 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest1, indexShard10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-3L) + "'", long2 == (-3L));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[][hi!][]}" + "'", str7, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel8 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel8.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest9);
    }

    @Test
    public void test0184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0184");
        org.elasticsearch.index.shard.IndexShard indexShard0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.index.shard.ShardId shardId3 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.setShardId(shardId3);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.index("");
        java.lang.String str15 = deleteRequest12.toString();
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest12.getParentTask();
        deleteRequest8.setParentTask(taskId16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.routing("");
        org.elasticsearch.index.VersionType versionType24 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest21.versionType(versionType24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str30 = deleteRequest29.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel31 = deleteRequest29.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest25.consistencyLevel(writeConsistencyLevel31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest8.consistencyLevel(writeConsistencyLevel31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest37.routing("");
        org.elasticsearch.index.VersionType versionType40 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest37.versionType(versionType40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str46 = deleteRequest45.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel47 = deleteRequest45.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest41.consistencyLevel(writeConsistencyLevel47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest52.routing("");
        org.elasticsearch.index.VersionType versionType55 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest52.versionType(versionType55);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str61 = deleteRequest60.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel62 = deleteRequest60.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest56.consistencyLevel(writeConsistencyLevel62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest41.consistencyLevel(writeConsistencyLevel62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest33.consistencyLevel(writeConsistencyLevel62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest4.consistencyLevel(writeConsistencyLevel62);
        org.elasticsearch.index.translog.Translog.Location location67 = null;
        org.elasticsearch.action.support.replication.TransportWriteAction.RespondingWriteResult respondingWriteResult68 = null;
        org.elasticsearch.common.logging.ESLogger eSLogger69 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.postWriteActions(indexShard0, (org.elasticsearch.action.support.WriteRequest<org.elasticsearch.action.delete.DeleteRequest>) deleteRequest4, location67, respondingWriteResult68, eSLogger69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[][hi!][]}" + "'", str15, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "delete {[][hi!][]}" + "'", str30, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel31 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel31.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "delete {[][hi!][]}" + "'", str46, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel47 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel47.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "delete {[][hi!][]}" + "'", str61, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel62 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel62.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(deleteRequest66);
    }

    @Test
    public void test0185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0185");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.tasks.TaskId taskId15 = null;
        deleteRequest7.setParentTask(taskId15);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException17 = deleteRequest7.validate();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
    }

    @Test
    public void test0186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0186");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy4 = deleteRequest3.getRefreshPolicy();
        long long5 = deleteRequest3.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((long) (short) 100);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput8 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest7.writeTo(streamOutput8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + refreshPolicy4 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy4.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest7);
    }

    @Test
    public void test0187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0187");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy2 = deleteRequest1.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.id("hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress7 = deleteRequest4.remoteAddress();
        long long8 = deleteRequest4.primaryTerm();
        org.elasticsearch.index.shard.IndexShard indexShard9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete10 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest4, indexShard9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + refreshPolicy2 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy2.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNull(transportAddress7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
    }

    @Test
    public void test0188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0188");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy2 = deleteRequest1.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.id("hi!");
        java.lang.Class<?> wildcardClass7 = deleteRequest4.getClass();
        org.junit.Assert.assertTrue("'" + refreshPolicy2 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy2.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0189");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.setShardId(shardId2);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest1.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.parent("delete {[null][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel8 = deleteRequest7.consistencyLevel();
        java.lang.String str9 = deleteRequest7.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest7.id("delete {[][delete {[][hi!][]}][]}");
        long long12 = deleteRequest7.version();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel8 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel8.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[hi!][null][null]}" + "'", str9, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-3L) + "'", long12 == (-3L));
    }

    @Test
    public void test0190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0190");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.routing("");
        org.elasticsearch.index.VersionType versionType21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str27 = deleteRequest26.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest7.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.tasks.TaskId taskId31 = deleteRequest30.getParentTask();
        java.lang.String str32 = deleteRequest30.getDescription();
        org.elasticsearch.common.transport.TransportAddress transportAddress33 = null;
        deleteRequest30.remoteAddress(transportAddress33);
        long long35 = deleteRequest30.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest30.parent("delete {[][null][null]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest30.timeout("delete {[][hi!][]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[][hi!][]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][hi!][]}" + "'", str27, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(taskId31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[][hi!][]}" + "'", str32, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-3L) + "'", long35 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest37);
    }

    @Test
    public void test0191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0191");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.index("");
        java.lang.String str6 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.parent("");
        org.elasticsearch.index.shard.IndexShard indexShard9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete10 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest8, indexShard9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][hi!][]}" + "'", str6, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
    }

    @Test
    public void test0192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0192");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.index("");
        java.lang.String str6 = deleteRequest3.toString();
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest3.getParentTask();
        java.lang.String str8 = deleteRequest3.toString();
        org.elasticsearch.common.io.stream.StreamInput streamInput9 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.readFrom(streamInput9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][hi!][]}" + "'", str6, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[][hi!][]}" + "'", str8, "delete {[][hi!][]}");
    }

    @Test
    public void test0193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0193");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.routing("");
        org.elasticsearch.index.VersionType versionType21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str27 = deleteRequest26.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest7.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.tasks.TaskId taskId31 = deleteRequest30.getParentTask();
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest30.setShardId(shardId32);
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest33.setParentTask("", (-1L));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: 0 length nodeIds are reserved for EMPTY_TASK_ID and are otherwise invalid.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][hi!][]}" + "'", str27, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(taskId31);
        org.junit.Assert.assertNotNull(deleteRequest33);
    }

    @Test
    public void test0194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0194");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.routing("");
        org.elasticsearch.index.VersionType versionType8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest5.versionType(versionType8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str14 = deleteRequest13.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel15 = deleteRequest13.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest9.consistencyLevel(writeConsistencyLevel15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.version((long) '4');
        org.elasticsearch.index.VersionType versionType19 = deleteRequest16.versionType();
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest16.setShardId(shardId20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest16.type("delete {[][hi!][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest16.id("delete {[][null][null]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[][null][null]}][delete {[][null][null]}][delete {[][null][null]}]}", deleteRequest16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[][hi!][]}" + "'", str14, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel15 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel15.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNull(versionType19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
    }

    @Test
    public void test0195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0195");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str4 = deleteRequest3.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("");
        java.lang.String str8 = deleteRequest3.id();
        org.elasticsearch.action.support.IndicesOptions indicesOptions9 = deleteRequest3.indicesOptions();
        boolean boolean10 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.index.shard.IndexShard indexShard11 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult12 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest3, indexShard11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][hi!][]}" + "'", str4, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(indicesOptions9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0196");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy2 = deleteRequest1.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.id("");
        deleteRequest4.primaryTerm((long) 'a');
        org.elasticsearch.common.io.stream.StreamOutput streamOutput7 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest4.writeTo(streamOutput7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + refreshPolicy2 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy2.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest4);
    }

    @Test
    public void test0197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0197");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[][null][null]}][delete {[][null][null]}][delete {[][null][null]}]}", deleteRequest2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0198");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.index("");
        java.lang.String str10 = deleteRequest7.toString();
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest7.getParentTask();
        deleteRequest3.setParentTask(taskId11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.routing("");
        org.elasticsearch.index.VersionType versionType19 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest16.versionType(versionType19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str25 = deleteRequest24.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel26 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest20.consistencyLevel(writeConsistencyLevel26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest3.consistencyLevel(writeConsistencyLevel26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest33.routing("");
        org.elasticsearch.index.VersionType versionType36 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest33.versionType(versionType36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str42 = deleteRequest41.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel43 = deleteRequest41.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest37.consistencyLevel(writeConsistencyLevel43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest48.routing("");
        org.elasticsearch.index.VersionType versionType51 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest48.versionType(versionType51);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str57 = deleteRequest56.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel58 = deleteRequest56.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest52.consistencyLevel(writeConsistencyLevel58);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest37.consistencyLevel(writeConsistencyLevel58);
        org.elasticsearch.tasks.TaskId taskId61 = deleteRequest60.getParentTask();
        deleteRequest29.setParentTask(taskId61);
        deleteRequest28.setParentTask(taskId61);
        org.elasticsearch.index.VersionType versionType64 = deleteRequest28.versionType();
        org.elasticsearch.common.transport.TransportAddress transportAddress65 = null;
        deleteRequest28.remoteAddress(transportAddress65);
        long long67 = deleteRequest28.version();
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][hi!][]}" + "'", str10, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[][hi!][]}" + "'", str25, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel26 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel26.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "delete {[][hi!][]}" + "'", str42, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel43 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel43.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "delete {[][hi!][]}" + "'", str57, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel58 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel58.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(taskId61);
        org.junit.Assert.assertNotNull(versionType64);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + (-3L) + "'", long67 == (-3L));
    }

    @Test
    public void test0199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0199");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.index.IndexSettings indexSettings1 = null;
        org.elasticsearch.index.shard.ShardPath shardPath2 = null;
        org.elasticsearch.index.store.Store store3 = null;
        org.elasticsearch.index.cache.IndexCache indexCache4 = null;
        org.elasticsearch.index.mapper.MapperService mapperService5 = null;
        org.elasticsearch.index.similarity.SimilarityService similarityService6 = null;
        org.elasticsearch.index.fielddata.IndexFieldDataService indexFieldDataService7 = null;
        org.elasticsearch.index.engine.EngineFactory engineFactory8 = null;
        org.elasticsearch.index.shard.IndexEventListener indexEventListener9 = null;
        org.elasticsearch.index.shard.IndexSearcherWrapper indexSearcherWrapper10 = null;
        org.elasticsearch.threadpool.ThreadPool threadPool11 = null;
        org.elasticsearch.common.util.BigArrays bigArrays12 = null;
        org.elasticsearch.index.engine.Engine.Warmer warmer13 = null;
        java.util.List<org.elasticsearch.index.shard.SearchOperationListener> searchOperationListenerList14 = null;
        org.elasticsearch.index.shard.IndexingOperationListener[] indexingOperationListenerArray15 = new org.elasticsearch.index.shard.IndexingOperationListener[] {};
        java.util.ArrayList<org.elasticsearch.index.shard.IndexingOperationListener> indexingOperationListenerList16 = new java.util.ArrayList<org.elasticsearch.index.shard.IndexingOperationListener>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.elasticsearch.index.shard.IndexingOperationListener>) indexingOperationListenerList16, indexingOperationListenerArray15);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.shard.IndexShard indexShard18 = new org.elasticsearch.index.shard.IndexShard(shardRouting0, indexSettings1, shardPath2, store3, indexCache4, mapperService5, similarityService6, indexFieldDataService7, engineFactory8, indexEventListener9, indexSearcherWrapper10, threadPool11, bigArrays12, warmer13, searchOperationListenerList14, (java.util.List<org.elasticsearch.index.shard.IndexingOperationListener>) indexingOperationListenerList16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexingOperationListenerArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0200");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.routing("");
        org.elasticsearch.index.VersionType versionType21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str27 = deleteRequest26.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest7.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.tasks.TaskId taskId31 = deleteRequest30.getParentTask();
        org.elasticsearch.index.shard.IndexShard indexShard32 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult33 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest30, indexShard32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][hi!][]}" + "'", str27, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(taskId31);
    }

    @Test
    public void test0201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0201");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str4 = deleteRequest3.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest3.consistencyLevel();
        org.elasticsearch.common.io.stream.StreamInput streamInput6 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.readFrom(streamInput6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][hi!][]}" + "'", str4, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test0202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0202");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.version((long) '4');
        org.elasticsearch.index.VersionType versionType17 = deleteRequest14.versionType();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest14.setShardId(shardId18);
        deleteRequest19.primaryTerm((long) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest19.setParentTask("", 0L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: 0 length nodeIds are reserved for EMPTY_TASK_ID and are otherwise invalid.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNull(versionType17);
        org.junit.Assert.assertNotNull(deleteRequest19);
    }

    @Test
    public void test0203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0203");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy2 = deleteRequest1.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.routing("");
        org.elasticsearch.index.VersionType versionType11 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.versionType(versionType11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str17 = deleteRequest16.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel18 = deleteRequest16.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest12.consistencyLevel(writeConsistencyLevel18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest1.consistencyLevel(writeConsistencyLevel18);
        java.lang.String str21 = deleteRequest1.parent();
        org.elasticsearch.index.shard.IndexShard indexShard22 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete23 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest1, indexShard22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + refreshPolicy2 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy2.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[][hi!][]}" + "'", str17, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel18 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel18.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test0204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0204");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.version((long) '4');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.routing("");
        org.elasticsearch.index.VersionType versionType26 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest23.versionType(versionType26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str32 = deleteRequest31.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel33 = deleteRequest31.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest27.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest41.routing("");
        org.elasticsearch.index.VersionType versionType44 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest41.versionType(versionType44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str50 = deleteRequest49.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel51 = deleteRequest49.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest45.consistencyLevel(writeConsistencyLevel51);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest56.routing("");
        org.elasticsearch.index.VersionType versionType59 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest56.versionType(versionType59);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str65 = deleteRequest64.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel66 = deleteRequest64.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest60.consistencyLevel(writeConsistencyLevel66);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest45.consistencyLevel(writeConsistencyLevel66);
        org.elasticsearch.tasks.TaskId taskId69 = deleteRequest68.getParentTask();
        org.elasticsearch.tasks.Task task70 = deleteRequest27.createTask((long) (-1), "delete {[][hi!][]}", "delete {[][hi!][]}", taskId69);
        org.elasticsearch.tasks.Task task71 = deleteRequest16.createTask((long) (short) 1, "", "delete {[][null][null]}", taskId69);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest16.type("delete {[][delete {[][hi!][]}][]}");
        org.elasticsearch.index.shard.IndexShard indexShard74 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult75 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest73, indexShard74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[][hi!][]}" + "'", str32, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel33 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel33.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "delete {[][hi!][]}" + "'", str50, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel51 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel51.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "delete {[][hi!][]}" + "'", str65, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel66 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel66.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertNotNull(taskId69);
        org.junit.Assert.assertNotNull(task70);
        org.junit.Assert.assertNotNull(task71);
        org.junit.Assert.assertNotNull(deleteRequest73);
    }

    @Test
    public void test0205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0205");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.index("");
        java.lang.String str10 = deleteRequest7.toString();
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest7.getParentTask();
        deleteRequest3.setParentTask(taskId11);
        java.lang.String[] strArray13 = deleteRequest3.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.id("");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest15.timeout("delete {[hi!][hi!][]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[hi!][hi!][]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][hi!][]}" + "'", str10, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
    }

    @Test
    public void test0206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0206");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.index("");
        java.lang.String str10 = deleteRequest7.toString();
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest7.getParentTask();
        deleteRequest3.setParentTask(taskId11);
        java.lang.String[] strArray13 = deleteRequest3.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.id("");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput16 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest15.writeTo(streamOutput16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][hi!][]}" + "'", str10, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(deleteRequest15);
    }

    @Test
    public void test0207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0207");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy4 = deleteRequest3.getRefreshPolicy();
        long long5 = deleteRequest3.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((long) (short) 100);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.setRefreshPolicy("delete {[hi!][null][null]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[hi!][null][null]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + refreshPolicy4 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy4.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest7);
    }

    @Test
    public void test0208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0208");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy4 = deleteRequest3.getRefreshPolicy();
        long long5 = deleteRequest3.primaryTerm();
        org.elasticsearch.index.shard.IndexShard indexShard6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete7 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest3, indexShard6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + refreshPolicy4 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy4.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
    }

    @Test
    public void test0209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0209");
        org.elasticsearch.index.shard.IndexShard indexShard0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.routing("");
        org.elasticsearch.index.VersionType versionType7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest4.versionType(versionType7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str13 = deleteRequest12.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest8.consistencyLevel(writeConsistencyLevel14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.routing("");
        org.elasticsearch.index.VersionType versionType22 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest19.versionType(versionType22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str28 = deleteRequest27.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = deleteRequest27.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest23.consistencyLevel(writeConsistencyLevel29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest8.consistencyLevel(writeConsistencyLevel29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest31.type("delete {[][hi!][]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy34 = deleteRequest33.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest33.id("delete {[][delete {[][hi!][]}][]}");
        org.elasticsearch.index.translog.Translog.Location location37 = null;
        org.elasticsearch.action.support.replication.TransportWriteAction.RespondingWriteResult respondingWriteResult38 = null;
        org.elasticsearch.common.logging.ESLogger eSLogger39 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.postWriteActions(indexShard0, (org.elasticsearch.action.support.WriteRequest<org.elasticsearch.action.delete.DeleteRequest>) deleteRequest33, location37, respondingWriteResult38, eSLogger39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[][hi!][]}" + "'", str13, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "delete {[][hi!][]}" + "'", str28, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel29 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel29.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertTrue("'" + refreshPolicy34 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy34.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest36);
    }

    @Test
    public void test0210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0210");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][hi!][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str6 = deleteRequest5.toString();
        deleteRequest5.primaryTerm(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.routing("");
        org.elasticsearch.index.VersionType versionType15 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest12.versionType(versionType15);
        org.elasticsearch.common.transport.TransportAddress transportAddress17 = deleteRequest12.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy18 = deleteRequest12.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest5.setRefreshPolicy(refreshPolicy18);
        long long20 = deleteRequest19.version();
        long long21 = deleteRequest19.version();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy22 = deleteRequest19.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest1.setRefreshPolicy(refreshPolicy22);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.setRefreshPolicy("delete {[][null][null]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[][null][null]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][hi!][]}" + "'", str6, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNull(transportAddress17);
        org.junit.Assert.assertTrue("'" + refreshPolicy18 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy18.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-3L) + "'", long20 == (-3L));
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-3L) + "'", long21 == (-3L));
        org.junit.Assert.assertTrue("'" + refreshPolicy22 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy22.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest23);
    }

    @Test
    public void test0211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0211");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest1.primaryTerm(10L);
        java.lang.String str4 = deleteRequest1.getDescription();
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = null;
        deleteRequest1.remoteAddress(transportAddress5);
        org.elasticsearch.index.shard.IndexShard indexShard7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult8 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest1, indexShard7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][null][null]}" + "'", str4, "delete {[][null][null]}");
    }

    @Test
    public void test0212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0212");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.routing("");
        org.elasticsearch.index.VersionType versionType21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str27 = deleteRequest26.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest7.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.tasks.TaskId taskId31 = deleteRequest30.getParentTask();
        java.lang.String str32 = deleteRequest30.getDescription();
        java.lang.String str33 = deleteRequest30.routing();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException34 = deleteRequest30.validate();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][hi!][]}" + "'", str27, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(taskId31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[][hi!][]}" + "'", str32, "delete {[][hi!][]}");
        org.junit.Assert.assertNull(str33);
    }

    @Test
    public void test0213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0213");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy2 = deleteRequest1.getRefreshPolicy();
        java.lang.String str3 = deleteRequest1.id();
        org.junit.Assert.assertTrue("'" + refreshPolicy2 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy2.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test0214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0214");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.id("delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.index("");
        java.lang.String str18 = deleteRequest15.toString();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest15.getParentTask();
        deleteRequest11.setParentTask(taskId19);
        java.lang.String[] strArray21 = deleteRequest11.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.routing("");
        org.elasticsearch.tasks.TaskId taskId28 = null;
        deleteRequest27.setParentTask(taskId28);
        java.lang.String str30 = deleteRequest27.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy33 = deleteRequest32.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest27.setRefreshPolicy(refreshPolicy33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest11.setRefreshPolicy(refreshPolicy33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest5.setRefreshPolicy(refreshPolicy33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest40.index("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy43 = deleteRequest42.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy45 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest44.setRefreshPolicy(refreshPolicy45);
        org.elasticsearch.common.transport.TransportAddress transportAddress47 = deleteRequest44.remoteAddress();
        org.elasticsearch.index.VersionType versionType48 = deleteRequest44.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest42.versionType(versionType48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest36.versionType(versionType48);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest36.timeout("hi!");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [hi!] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[][hi!][]}" + "'", str18, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "delete {[][hi!][]}" + "'", str30, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + refreshPolicy33 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy33.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertTrue("'" + refreshPolicy43 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy43.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNull(transportAddress47);
        org.junit.Assert.assertNotNull(versionType48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest50);
    }

    @Test
    public void test0215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0215");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.routing("");
        org.elasticsearch.index.VersionType versionType7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest4.versionType(versionType7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str13 = deleteRequest12.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest8.consistencyLevel(writeConsistencyLevel14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.routing("");
        org.elasticsearch.index.VersionType versionType22 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest19.versionType(versionType22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str28 = deleteRequest27.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = deleteRequest27.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest23.consistencyLevel(writeConsistencyLevel29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest8.consistencyLevel(writeConsistencyLevel29);
        org.elasticsearch.tasks.TaskId taskId32 = deleteRequest31.getParentTask();
        deleteRequest0.setParentTask(taskId32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest37.index("");
        org.elasticsearch.common.unit.TimeValue timeValue40 = deleteRequest39.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest0.timeout(timeValue40);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException42 = deleteRequest41.validate();
        java.lang.String str43 = deleteRequest41.type();
        org.elasticsearch.common.transport.TransportAddress transportAddress44 = null;
        deleteRequest41.remoteAddress(transportAddress44);
        org.elasticsearch.index.shard.IndexShard indexShard46 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete47 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest41, indexShard46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[][hi!][]}" + "'", str13, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "delete {[][hi!][]}" + "'", str28, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel29 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel29.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(taskId32);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(timeValue40);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(actionRequestValidationException42);
        org.junit.Assert.assertNull(str43);
    }

    @Test
    public void test0216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0216");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest1.primaryTerm(10L);
        org.elasticsearch.index.shard.IndexShard indexShard4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult5 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest1, indexShard4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0217");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.index("");
        java.lang.String str10 = deleteRequest7.toString();
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest7.getParentTask();
        deleteRequest3.setParentTask(taskId11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.routing("");
        org.elasticsearch.index.VersionType versionType19 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest16.versionType(versionType19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str25 = deleteRequest24.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel26 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest20.consistencyLevel(writeConsistencyLevel26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest3.consistencyLevel(writeConsistencyLevel26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.routing("");
        org.elasticsearch.index.VersionType versionType35 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest32.versionType(versionType35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str41 = deleteRequest40.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel42 = deleteRequest40.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest36.consistencyLevel(writeConsistencyLevel42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest47.routing("");
        org.elasticsearch.index.VersionType versionType50 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest47.versionType(versionType50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str56 = deleteRequest55.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel57 = deleteRequest55.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest51.consistencyLevel(writeConsistencyLevel57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest36.consistencyLevel(writeConsistencyLevel57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest28.consistencyLevel(writeConsistencyLevel57);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException61 = deleteRequest28.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long64 = deleteRequest63.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str69 = deleteRequest68.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel70 = deleteRequest68.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest63.consistencyLevel(writeConsistencyLevel70);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest28.consistencyLevel(writeConsistencyLevel70);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest28.timeout("delete {[][hi!][]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[][hi!][]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][hi!][]}" + "'", str10, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[][hi!][]}" + "'", str25, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel26 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel26.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "delete {[][hi!][]}" + "'", str41, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel42 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel42.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "delete {[][hi!][]}" + "'", str56, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel57 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel57.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNull(actionRequestValidationException61);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + (-3L) + "'", long64 == (-3L));
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "delete {[][hi!][]}" + "'", str69, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel70 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel70.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(deleteRequest72);
    }

    @Test
    public void test0218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0218");
        org.elasticsearch.index.shard.IndexShard indexShard0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.routing("");
        org.elasticsearch.index.VersionType versionType7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest4.versionType(versionType7);
        org.elasticsearch.index.VersionType versionType9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest4.versionType(versionType9);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest4.parent("");
        java.lang.String str13 = deleteRequest12.index();
        deleteRequest12.primaryTerm((long) (short) 100);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy16 = deleteRequest12.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest12.parent("delete {[hi!][null][null]}");
        org.elasticsearch.index.translog.Translog.Location location19 = null;
        org.elasticsearch.action.support.replication.TransportWriteAction.RespondingWriteResult respondingWriteResult20 = null;
        org.elasticsearch.common.logging.ESLogger eSLogger21 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.postWriteActions(indexShard0, (org.elasticsearch.action.support.WriteRequest<org.elasticsearch.action.delete.DeleteRequest>) deleteRequest18, location19, respondingWriteResult20, eSLogger21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + refreshPolicy16 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy16.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest18);
    }

    @Test
    public void test0219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0219");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.index.VersionType versionType8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.versionType(versionType8);
        java.lang.String[] strArray10 = deleteRequest3.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy13 = deleteRequest12.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.setRefreshPolicy(refreshPolicy13);
        java.lang.Class<?> wildcardClass15 = deleteRequest3.getClass();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + refreshPolicy13 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy13.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0220");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.index("");
        java.lang.String str10 = deleteRequest7.toString();
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest7.getParentTask();
        deleteRequest3.setParentTask(taskId11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.routing("");
        org.elasticsearch.index.VersionType versionType19 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest16.versionType(versionType19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str25 = deleteRequest24.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel26 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest20.consistencyLevel(writeConsistencyLevel26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest3.consistencyLevel(writeConsistencyLevel26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.routing("");
        org.elasticsearch.index.VersionType versionType35 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest32.versionType(versionType35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str41 = deleteRequest40.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel42 = deleteRequest40.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest36.consistencyLevel(writeConsistencyLevel42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest47.routing("");
        org.elasticsearch.index.VersionType versionType50 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest47.versionType(versionType50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str56 = deleteRequest55.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel57 = deleteRequest55.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest51.consistencyLevel(writeConsistencyLevel57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest36.consistencyLevel(writeConsistencyLevel57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest28.consistencyLevel(writeConsistencyLevel57);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException61 = deleteRequest28.validate();
        org.elasticsearch.common.unit.TimeValue timeValue62 = deleteRequest28.timeout();
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][hi!][]}" + "'", str10, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[][hi!][]}" + "'", str25, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel26 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel26.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "delete {[][hi!][]}" + "'", str41, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel42 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel42.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "delete {[][hi!][]}" + "'", str56, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel57 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel57.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNull(actionRequestValidationException61);
        org.junit.Assert.assertNotNull(timeValue62);
    }

    @Test
    public void test0221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0221");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][null][null]}][delete {[][null][null]}][delete {[][null][null]}]}");
        java.lang.String str2 = deleteRequest1.index();
        deleteRequest1.setParentTask("delete {[null][null][null]}", (long) (short) 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "delete {[delete {[][null][null]}][delete {[][null][null]}][delete {[][null][null]}]}" + "'", str2, "delete {[delete {[][null][null]}][delete {[][null][null]}][delete {[][null][null]}]}");
    }

    @Test
    public void test0222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0222");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.routing("");
        org.elasticsearch.index.VersionType versionType7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest4.versionType(versionType7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str13 = deleteRequest12.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest8.consistencyLevel(writeConsistencyLevel14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.routing("");
        org.elasticsearch.index.VersionType versionType22 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest19.versionType(versionType22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str28 = deleteRequest27.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = deleteRequest27.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest23.consistencyLevel(writeConsistencyLevel29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest8.consistencyLevel(writeConsistencyLevel29);
        org.elasticsearch.tasks.TaskId taskId32 = deleteRequest31.getParentTask();
        deleteRequest0.setParentTask(taskId32);
        long long34 = deleteRequest0.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest0.routing("");
        java.lang.Class<?> wildcardClass37 = deleteRequest36.getClass();
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[][hi!][]}" + "'", str13, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "delete {[][hi!][]}" + "'", str28, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel29 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel29.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(taskId32);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-3L) + "'", long34 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0223");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        long long4 = deleteRequest3.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.type("");
        org.elasticsearch.common.io.stream.StreamInput streamInput9 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest6.readFrom(streamInput9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-3L) + "'", long4 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
    }

    @Test
    public void test0224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0224");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy2 = deleteRequest1.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.id("");
        deleteRequest4.setParentTask("delete {[null][null][null]}", 0L);
        org.junit.Assert.assertTrue("'" + refreshPolicy2 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy2.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest4);
    }

    @Test
    public void test0225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0225");
        org.elasticsearch.index.shard.IndexShard indexShard0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.routing("");
        org.elasticsearch.index.VersionType versionType8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest5.versionType(versionType8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str14 = deleteRequest13.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel15 = deleteRequest13.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest9.consistencyLevel(writeConsistencyLevel15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.routing("");
        org.elasticsearch.index.VersionType versionType23 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest20.versionType(versionType23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str29 = deleteRequest28.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel30 = deleteRequest28.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest24.consistencyLevel(writeConsistencyLevel30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest9.consistencyLevel(writeConsistencyLevel30);
        org.elasticsearch.tasks.TaskId taskId33 = deleteRequest32.getParentTask();
        deleteRequest1.setParentTask(taskId33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.index("");
        org.elasticsearch.common.unit.TimeValue timeValue41 = deleteRequest40.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest1.timeout(timeValue41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest42.setRefreshPolicy("");
        java.lang.String str45 = deleteRequest42.parent();
        org.elasticsearch.index.translog.Translog.Location location46 = null;
        org.elasticsearch.action.support.replication.TransportWriteAction.RespondingWriteResult respondingWriteResult47 = null;
        org.elasticsearch.common.logging.ESLogger eSLogger48 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.postWriteActions(indexShard0, (org.elasticsearch.action.support.WriteRequest<org.elasticsearch.action.delete.DeleteRequest>) deleteRequest42, location46, respondingWriteResult47, eSLogger48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[][hi!][]}" + "'", str14, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel15 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel15.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "delete {[][hi!][]}" + "'", str29, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel30 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel30.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(taskId33);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(timeValue41);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNull(str45);
    }

    @Test
    public void test0226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0226");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.tasks.TaskId taskId6 = null;
        deleteRequest5.setParentTask(taskId6);
        java.lang.String str8 = deleteRequest5.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy11 = deleteRequest10.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest5.setRefreshPolicy(refreshPolicy11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy15 = deleteRequest14.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.id("hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress20 = null;
        deleteRequest19.remoteAddress(transportAddress20);
        org.elasticsearch.index.VersionType versionType22 = deleteRequest19.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest5.versionType(versionType22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest5.version(0L);
        java.lang.String str26 = deleteRequest5.getDescription();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[][hi!][]}" + "'", str8, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + refreshPolicy11 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy11.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + refreshPolicy15 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy15.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "delete {[][hi!][]}" + "'", str26, "delete {[][hi!][]}");
    }

    @Test
    public void test0227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0227");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[][hi!][]}][]}", "delete {[][null][null]}", "");
        boolean boolean4 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.index("");
        java.lang.String str18 = deleteRequest15.toString();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest15.getParentTask();
        deleteRequest11.setParentTask(taskId19);
        org.elasticsearch.tasks.Task task21 = deleteRequest3.createTask((long) ' ', "", "delete {[hi!][null][null]}", taskId19);
        java.lang.Class<?> wildcardClass22 = deleteRequest3.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[][hi!][]}" + "'", str18, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0228");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str4 = deleteRequest3.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.setRefreshPolicy("");
        java.lang.String[] strArray10 = deleteRequest7.indices();
        java.lang.String str11 = deleteRequest7.parent();
        deleteRequest7.setParentTask("delete {[delete {[][null][null]}][delete {[][null][null]}][delete {[][null][null]}]}", (long) (short) -1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][hi!][]}" + "'", str4, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test0229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0229");
        org.elasticsearch.action.support.replication.ReplicationTask replicationTask0 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.setPhase(replicationTask0, "delete {[delete {[][null][null]}][delete {[][null][null]}][delete {[][null][null]}]}");
    }

    @Test
    public void test0230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0230");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.routing("");
        org.elasticsearch.index.VersionType versionType21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str27 = deleteRequest26.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest7.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.tasks.TaskId taskId31 = deleteRequest30.getParentTask();
        java.lang.String str32 = deleteRequest30.getDescription();
        org.elasticsearch.common.transport.TransportAddress transportAddress33 = null;
        deleteRequest30.remoteAddress(transportAddress33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest30.routing("delete {[][delete {[][hi!][]}][]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest30.timeout("delete {[][hi!][]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[][hi!][]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][hi!][]}" + "'", str27, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(taskId31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[][hi!][]}" + "'", str32, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(deleteRequest36);
    }

    @Test
    public void test0231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0231");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", throwable2, "delete {[][hi!][]}");
        java.lang.Throwable throwable5 = shardFailure4.cause;
        java.lang.String str6 = shardFailure4.reason;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting7 = shardFailure4.routing;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = shardFailure4.routing;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting9 = shardFailure4.routing;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = shardFailure4.routing;
        org.junit.Assert.assertNull(throwable5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(shardRouting7);
        org.junit.Assert.assertNull(shardRouting8);
        org.junit.Assert.assertNull(shardRouting9);
        org.junit.Assert.assertNull(shardRouting10);
    }

    @Test
    public void test0232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0232");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.version((long) '4');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest14.routing("");
        long long19 = deleteRequest14.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.index("delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.type("delete {[][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel24 = deleteRequest23.consistencyLevel();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput25 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest23.writeTo(streamOutput25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 52L + "'", long19 == 52L);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel24 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel24.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test0233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0233");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.index.VersionType versionType8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.versionType(versionType8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.parent("");
        java.lang.String str12 = deleteRequest11.type();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.timeout("delete {[][hi!][delete {[][hi!][]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[][hi!][delete {[][hi!][]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
    }

    @Test
    public void test0234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0234");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy2 = deleteRequest1.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.id("hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.timeout("delete {[hi!][hi!][]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[hi!][hi!][]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + refreshPolicy2 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy2.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
    }

    @Test
    public void test0235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0235");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.index.VersionType versionType8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.versionType(versionType8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.parent("");
        java.lang.String str12 = deleteRequest11.index();
        deleteRequest11.primaryTerm((long) (short) 100);
        org.elasticsearch.index.shard.IndexShard indexShard15 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete16 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest11, indexShard15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test0236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0236");
        org.elasticsearch.index.shard.IndexShard indexShard0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.routing("");
        org.elasticsearch.index.VersionType versionType7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest4.versionType(versionType7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str13 = deleteRequest12.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest8.consistencyLevel(writeConsistencyLevel14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.version((long) '4');
        org.elasticsearch.index.VersionType versionType18 = deleteRequest15.versionType();
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest15.setShardId(shardId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.version((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.parent("delete {[][delete {[][hi!][]}][]}");
        org.elasticsearch.index.translog.Translog.Location location25 = null;
        org.elasticsearch.action.support.replication.TransportWriteAction.RespondingWriteResult respondingWriteResult26 = null;
        org.elasticsearch.common.logging.ESLogger eSLogger27 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.postWriteActions(indexShard0, (org.elasticsearch.action.support.WriteRequest<org.elasticsearch.action.delete.DeleteRequest>) deleteRequest22, location25, respondingWriteResult26, eSLogger27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[][hi!][]}" + "'", str13, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(versionType18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
    }

    @Test
    public void test0237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0237");
        org.elasticsearch.index.shard.IndexShard indexShard0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest2.primaryTerm(10L);
        java.lang.String str5 = deleteRequest2.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest2.index("hi!");
        java.lang.String str8 = deleteRequest7.toString();
        org.elasticsearch.index.translog.Translog.Location location9 = null;
        org.elasticsearch.action.support.replication.TransportWriteAction.RespondingWriteResult respondingWriteResult10 = null;
        org.elasticsearch.common.logging.ESLogger eSLogger11 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.postWriteActions(indexShard0, (org.elasticsearch.action.support.WriteRequest<org.elasticsearch.action.delete.DeleteRequest>) deleteRequest7, location9, respondingWriteResult10, eSLogger11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[][null][null]}" + "'", str5, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[hi!][null][null]}" + "'", str8, "delete {[hi!][null][null]}");
    }

    @Test
    public void test0238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0238");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy2 = deleteRequest1.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.id("hi!");
        long long7 = deleteRequest4.primaryTerm();
        deleteRequest4.setParentTask("delete {[][null][null]}", 100L);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest4.timeout("hi!");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [hi!] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + refreshPolicy2 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy2.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
    }

    @Test
    public void test0239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0239");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.routing("");
        org.elasticsearch.index.VersionType versionType21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str27 = deleteRequest26.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest7.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.type("delete {[][hi!][]}");
        long long33 = deleteRequest30.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest37.index("");
        org.elasticsearch.common.unit.TimeValue timeValue40 = deleteRequest39.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest30.timeout(timeValue40);
        org.elasticsearch.index.VersionType versionType42 = deleteRequest30.versionType();
        org.elasticsearch.index.shard.IndexShard indexShard43 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult44 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest30, indexShard43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][hi!][]}" + "'", str27, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-3L) + "'", long33 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(timeValue40);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNull(versionType42);
    }

    @Test
    public void test0240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0240");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str4 = deleteRequest3.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.setRefreshPolicy("");
        java.lang.String[] strArray10 = deleteRequest7.indices();
        java.lang.String str11 = deleteRequest7.parent();
        org.elasticsearch.common.io.stream.StreamInput streamInput12 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest7.readFrom(streamInput12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][hi!][]}" + "'", str4, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test0241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0241");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.tasks.TaskId taskId4 = null;
        deleteRequest3.setParentTask(taskId4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.routing("");
        org.elasticsearch.index.VersionType versionType12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest9.versionType(versionType12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str18 = deleteRequest17.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel19 = deleteRequest17.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest13.consistencyLevel(writeConsistencyLevel19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.version((long) '4');
        org.elasticsearch.index.VersionType versionType23 = deleteRequest20.versionType();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest20.setShardId(shardId24);
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.setShardId(shardId26);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest27.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.index.shard.IndexShard indexShard30 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult31 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest29, indexShard30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[][hi!][]}" + "'", str18, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel19 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel19.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNull(versionType23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
    }

    @Test
    public void test0242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0242");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.index("");
        java.lang.String str10 = deleteRequest7.toString();
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest7.getParentTask();
        deleteRequest3.setParentTask(taskId11);
        java.lang.String[] strArray13 = deleteRequest3.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.routing("");
        org.elasticsearch.tasks.TaskId taskId20 = null;
        deleteRequest19.setParentTask(taskId20);
        java.lang.String str22 = deleteRequest19.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy25 = deleteRequest24.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest19.setRefreshPolicy(refreshPolicy25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest3.setRefreshPolicy(refreshPolicy25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest3.routing("");
        java.lang.String str32 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest3.type("delete {[hi!][null][null]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest34.setRefreshPolicy("delete {[null][null][null]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[null][null][null]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][hi!][]}" + "'", str10, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[][hi!][]}" + "'", str22, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + refreshPolicy25 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy25.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[][hi!][]}" + "'", str32, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(deleteRequest34);
    }

    @Test
    public void test0243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0243");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.routing("");
        org.elasticsearch.index.VersionType versionType7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest4.versionType(versionType7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str13 = deleteRequest12.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest8.consistencyLevel(writeConsistencyLevel14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.routing("");
        org.elasticsearch.index.VersionType versionType22 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest19.versionType(versionType22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str28 = deleteRequest27.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = deleteRequest27.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest23.consistencyLevel(writeConsistencyLevel29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest8.consistencyLevel(writeConsistencyLevel29);
        org.elasticsearch.tasks.TaskId taskId32 = deleteRequest31.getParentTask();
        deleteRequest0.setParentTask(taskId32);
        long long34 = deleteRequest0.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest0.routing("");
        org.elasticsearch.common.unit.TimeValue timeValue37 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest0.timeout(timeValue37);
        org.elasticsearch.common.io.stream.StreamInput streamInput39 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest0.readFrom(streamInput39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[][hi!][]}" + "'", str13, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "delete {[][hi!][]}" + "'", str28, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel29 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel29.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(taskId32);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-3L) + "'", long34 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
    }

    @Test
    public void test0244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0244");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[hi!][null][null]}", "delete {[][null][null]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.setRefreshPolicy("delete {[][null][null]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[][null][null]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0245");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.setRefreshPolicy("");
        java.lang.String str8 = deleteRequest5.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest5.version((long) (short) 10);
        java.lang.String str13 = deleteRequest5.routing();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest5.timeout("delete {[][delete {[][hi!][]}][delete {[][hi!][]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[][delete {[][hi!][]}][delete {[][hi!][]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test0246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0246");
        org.elasticsearch.index.shard.IndexShard indexShard0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        long long5 = deleteRequest4.version();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy6 = deleteRequest4.getRefreshPolicy();
        org.elasticsearch.index.translog.Translog.Location location7 = null;
        org.elasticsearch.action.support.replication.TransportWriteAction.RespondingWriteResult respondingWriteResult8 = null;
        org.elasticsearch.common.logging.ESLogger eSLogger9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.postWriteActions(indexShard0, (org.elasticsearch.action.support.WriteRequest<org.elasticsearch.action.delete.DeleteRequest>) deleteRequest4, location7, respondingWriteResult8, eSLogger9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-3L) + "'", long5 == (-3L));
        org.junit.Assert.assertTrue("'" + refreshPolicy6 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy6.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
    }

    @Test
    public void test0247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0247");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.routing("");
        org.elasticsearch.index.VersionType versionType11 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.versionType(versionType11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str17 = deleteRequest16.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel18 = deleteRequest16.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest12.consistencyLevel(writeConsistencyLevel18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.routing("");
        org.elasticsearch.index.VersionType versionType26 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest23.versionType(versionType26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str32 = deleteRequest31.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel33 = deleteRequest31.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest27.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest12.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.tasks.TaskId taskId36 = deleteRequest35.getParentTask();
        deleteRequest4.setParentTask(taskId36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest41.index("");
        org.elasticsearch.common.unit.TimeValue timeValue44 = deleteRequest43.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest4.timeout(timeValue44);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException46 = deleteRequest45.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][null][null]}", (java.lang.Throwable) actionRequestValidationException46, "delete {[][hi!][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][hi!][]}", (java.lang.Throwable) actionRequestValidationException46, "delete {[][delete {[][hi!][]}][]}");
        java.lang.Class<?> wildcardClass51 = shardFailure50.getClass();
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[][hi!][]}" + "'", str17, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel18 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel18.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[][hi!][]}" + "'", str32, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel33 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel33.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(taskId36);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(timeValue44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(actionRequestValidationException46);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test0248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0248");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.version((long) '4');
        org.elasticsearch.index.VersionType versionType17 = deleteRequest14.versionType();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest14.setShardId(shardId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.version((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.index("");
        java.lang.String str32 = deleteRequest29.toString();
        org.elasticsearch.tasks.TaskId taskId33 = deleteRequest29.getParentTask();
        deleteRequest25.setParentTask(taskId33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.routing("");
        org.elasticsearch.index.VersionType versionType41 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest38.versionType(versionType41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str47 = deleteRequest46.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel48 = deleteRequest46.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest42.consistencyLevel(writeConsistencyLevel48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest25.consistencyLevel(writeConsistencyLevel48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest55.routing("");
        org.elasticsearch.index.VersionType versionType58 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest55.versionType(versionType58);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str64 = deleteRequest63.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel65 = deleteRequest63.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest59.consistencyLevel(writeConsistencyLevel65);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest70.routing("");
        org.elasticsearch.index.VersionType versionType73 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest70.versionType(versionType73);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str79 = deleteRequest78.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel80 = deleteRequest78.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = deleteRequest74.consistencyLevel(writeConsistencyLevel80);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest82 = deleteRequest59.consistencyLevel(writeConsistencyLevel80);
        org.elasticsearch.tasks.TaskId taskId83 = deleteRequest82.getParentTask();
        deleteRequest51.setParentTask(taskId83);
        deleteRequest50.setParentTask(taskId83);
        org.elasticsearch.index.VersionType versionType86 = deleteRequest50.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = deleteRequest19.versionType(versionType86);
        org.elasticsearch.index.shard.IndexShard indexShard88 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult89 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest87, indexShard88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNull(versionType17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[][hi!][]}" + "'", str32, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(taskId33);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "delete {[][hi!][]}" + "'", str47, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel48 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel48.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "delete {[][hi!][]}" + "'", str64, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel65 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel65.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "delete {[][hi!][]}" + "'", str79, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel80 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel80.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest81);
        org.junit.Assert.assertNotNull(deleteRequest82);
        org.junit.Assert.assertNotNull(taskId83);
        org.junit.Assert.assertNotNull(versionType86);
        org.junit.Assert.assertNotNull(deleteRequest87);
    }

    @Test
    public void test0249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0249");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.setShardId(shardId4);
        java.lang.String str6 = deleteRequest5.index();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[hi!][null][null]}", deleteRequest5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
    }

    @Test
    public void test0250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0250");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.version((long) '4');
        org.elasticsearch.index.VersionType versionType17 = deleteRequest14.versionType();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest14.setShardId(shardId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.type("delete {[][hi!][]}");
        java.lang.String[] strArray22 = deleteRequest21.indices();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNull(versionType17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(strArray22);
    }

    @Test
    public void test0251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0251");
        org.elasticsearch.index.shard.IndexShard indexShard0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.index("");
        java.lang.String str7 = deleteRequest4.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest4.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.version((long) (byte) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest9.parent("delete {[][null][null]}");
        org.elasticsearch.index.translog.Translog.Location location14 = null;
        org.elasticsearch.action.support.replication.TransportWriteAction.RespondingWriteResult respondingWriteResult15 = null;
        org.elasticsearch.common.logging.ESLogger eSLogger16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.postWriteActions(indexShard0, (org.elasticsearch.action.support.WriteRequest<org.elasticsearch.action.delete.DeleteRequest>) deleteRequest9, location14, respondingWriteResult15, eSLogger16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[][hi!][]}" + "'", str7, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
    }

    @Test
    public void test0252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0252");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.common.transport.TransportAddress transportAddress1 = deleteRequest0.remoteAddress();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.timeout("delete {[][delete {[null][null][null]}][]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[][delete {[null][null][null]}][]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(transportAddress1);
    }

    @Test
    public void test0253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0253");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.routing("");
        org.elasticsearch.index.VersionType versionType7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest4.versionType(versionType7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str13 = deleteRequest12.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest8.consistencyLevel(writeConsistencyLevel14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.routing("");
        org.elasticsearch.index.VersionType versionType22 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest19.versionType(versionType22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str28 = deleteRequest27.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = deleteRequest27.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest23.consistencyLevel(writeConsistencyLevel29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest8.consistencyLevel(writeConsistencyLevel29);
        org.elasticsearch.tasks.TaskId taskId32 = deleteRequest31.getParentTask();
        deleteRequest0.setParentTask(taskId32);
        long long34 = deleteRequest0.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest0.routing("");
        org.elasticsearch.common.unit.TimeValue timeValue37 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest0.timeout(timeValue37);
        java.lang.String str39 = deleteRequest0.type();
        long long40 = deleteRequest0.version();
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[][hi!][]}" + "'", str13, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "delete {[][hi!][]}" + "'", str28, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel29 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel29.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(taskId32);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-3L) + "'", long34 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-3L) + "'", long40 == (-3L));
    }

    @Test
    public void test0254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0254");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        java.lang.String str15 = deleteRequest14.index();
        org.elasticsearch.index.shard.IndexShard indexShard16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete17 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest14, indexShard16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test0255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0255");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str4 = deleteRequest3.toString();
        java.lang.String str5 = deleteRequest3.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.timeout("delete {[][delete {[null][null][null]}][]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[][delete {[null][null][null]}][]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][hi!][]}" + "'", str4, "delete {[][hi!][]}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[][hi!][]}" + "'", str5, "delete {[][hi!][]}");
    }

    @Test
    public void test0256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0256");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str4 = deleteRequest3.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.type("delete {[][null][null]}");
        java.lang.String str12 = deleteRequest9.routing();
        deleteRequest9.primaryTerm((long) 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][hi!][]}" + "'", str4, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test0257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0257");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.version((long) '4');
        org.elasticsearch.index.VersionType versionType17 = deleteRequest14.versionType();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest14.setShardId(shardId18);
        long long20 = deleteRequest14.primaryTerm();
        org.elasticsearch.index.shard.IndexShard indexShard21 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult22 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest14, indexShard21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNull(versionType17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
    }

    @Test
    public void test0258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0258");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", throwable2, "delete {[][hi!][]}");
        java.lang.Throwable throwable5 = shardFailure4.cause;
        java.lang.Throwable throwable6 = shardFailure4.cause;
        java.lang.Throwable throwable7 = shardFailure4.cause;
        java.lang.String str8 = shardFailure4.reason;
        java.lang.String str9 = shardFailure4.reason;
        org.junit.Assert.assertNull(throwable5);
        org.junit.Assert.assertNull(throwable6);
        org.junit.Assert.assertNull(throwable7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test0259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0259");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.version((long) '4');
        org.elasticsearch.index.VersionType versionType17 = deleteRequest14.versionType();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest14.setShardId(shardId18);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.setShardId(shardId20);
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.setShardId(shardId22);
        org.elasticsearch.index.shard.IndexShard indexShard24 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete25 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest23, indexShard24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNull(versionType17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
    }

    @Test
    public void test0260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0260");
        org.elasticsearch.action.support.replication.ReplicationTask replicationTask0 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.setPhase(replicationTask0, "delete {[hi!][hi!][]}");
    }

    @Test
    public void test0261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0261");
        org.elasticsearch.index.shard.IndexShard indexShard0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.routing("");
        org.elasticsearch.index.VersionType versionType7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest4.versionType(versionType7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str13 = deleteRequest12.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest8.consistencyLevel(writeConsistencyLevel14);
        long long16 = deleteRequest15.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.index("hi!");
        org.elasticsearch.index.translog.Translog.Location location19 = null;
        org.elasticsearch.action.support.replication.TransportWriteAction.RespondingWriteResult respondingWriteResult20 = null;
        org.elasticsearch.common.logging.ESLogger eSLogger21 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.postWriteActions(indexShard0, (org.elasticsearch.action.support.WriteRequest<org.elasticsearch.action.delete.DeleteRequest>) deleteRequest15, location19, respondingWriteResult20, eSLogger21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[][hi!][]}" + "'", str13, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest18);
    }

    @Test
    public void test0262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0262");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.support.IndicesOptions indicesOptions5 = deleteRequest3.indicesOptions();
        org.elasticsearch.common.io.stream.StreamInput streamInput6 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.readFrom(streamInput6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(indicesOptions5);
    }

    @Test
    public void test0263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0263");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy4 = deleteRequest3.getRefreshPolicy();
        long long5 = deleteRequest3.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((long) (short) 100);
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.setParentTask("", (-3L));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: 0 length nodeIds are reserved for EMPTY_TASK_ID and are otherwise invalid.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + refreshPolicy4 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy4.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest7);
    }

    @Test
    public void test0264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0264");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest1.primaryTerm(10L);
        java.lang.String[] strArray4 = deleteRequest1.indices();
        org.elasticsearch.common.unit.TimeValue timeValue5 = deleteRequest1.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.setShardId(shardId8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.index("");
        java.lang.String str20 = deleteRequest17.toString();
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest17.getParentTask();
        deleteRequest13.setParentTask(taskId21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.routing("");
        org.elasticsearch.index.VersionType versionType29 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest26.versionType(versionType29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str35 = deleteRequest34.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel36 = deleteRequest34.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest30.consistencyLevel(writeConsistencyLevel36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest13.consistencyLevel(writeConsistencyLevel36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest42.routing("");
        org.elasticsearch.index.VersionType versionType45 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest42.versionType(versionType45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str51 = deleteRequest50.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel52 = deleteRequest50.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest46.consistencyLevel(writeConsistencyLevel52);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest57.routing("");
        org.elasticsearch.index.VersionType versionType60 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest57.versionType(versionType60);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str66 = deleteRequest65.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel67 = deleteRequest65.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest61.consistencyLevel(writeConsistencyLevel67);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest46.consistencyLevel(writeConsistencyLevel67);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest38.consistencyLevel(writeConsistencyLevel67);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest9.consistencyLevel(writeConsistencyLevel67);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest1.consistencyLevel(writeConsistencyLevel67);
        java.lang.Class<?> wildcardClass73 = writeConsistencyLevel67.getClass();
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[][hi!][]}" + "'", str20, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "delete {[][hi!][]}" + "'", str35, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel36 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel36.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "delete {[][hi!][]}" + "'", str51, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel52 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel52.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "delete {[][hi!][]}" + "'", str66, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel67 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel67.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0265");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.routing("");
        org.elasticsearch.index.VersionType versionType21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str27 = deleteRequest26.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest7.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.type("delete {[][hi!][]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy33 = deleteRequest32.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest32.id("delete {[][delete {[][hi!][]}][]}");
        org.elasticsearch.common.unit.TimeValue timeValue36 = deleteRequest32.timeout();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException37 = deleteRequest32.validate();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][hi!][]}" + "'", str27, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + refreshPolicy33 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy33.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(timeValue36);
    }

    @Test
    public void test0266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0266");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.version((long) '4');
        org.elasticsearch.index.VersionType versionType17 = deleteRequest14.versionType();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest14.setShardId(shardId18);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.setShardId(shardId20);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel22 = deleteRequest21.consistencyLevel();
        java.lang.Class<?> wildcardClass23 = deleteRequest21.getClass();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNull(versionType17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel22 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel22.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0267");
        org.elasticsearch.index.shard.IndexShard indexShard0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str5 = deleteRequest4.toString();
        java.lang.String str6 = deleteRequest4.parent();
        java.lang.String str7 = deleteRequest4.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.routing("");
        org.elasticsearch.index.VersionType versionType14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest11.versionType(versionType14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str20 = deleteRequest19.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel21 = deleteRequest19.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.consistencyLevel(writeConsistencyLevel21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.version((long) '4');
        org.elasticsearch.index.VersionType versionType25 = deleteRequest22.versionType();
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest22.setShardId(shardId26);
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.setShardId(shardId28);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel30 = deleteRequest29.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest4.consistencyLevel(writeConsistencyLevel30);
        org.elasticsearch.index.translog.Translog.Location location32 = null;
        org.elasticsearch.action.support.replication.TransportWriteAction.RespondingWriteResult respondingWriteResult33 = null;
        org.elasticsearch.common.logging.ESLogger eSLogger34 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.postWriteActions(indexShard0, (org.elasticsearch.action.support.WriteRequest<org.elasticsearch.action.delete.DeleteRequest>) deleteRequest31, location32, respondingWriteResult33, eSLogger34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[][hi!][]}" + "'", str5, "delete {[][hi!][]}");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[][hi!][]}" + "'", str20, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel21 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel21.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNull(versionType25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel30 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel30.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest31);
    }

    @Test
    public void test0268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0268");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.routing("");
        org.elasticsearch.index.VersionType versionType11 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.versionType(versionType11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str17 = deleteRequest16.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel18 = deleteRequest16.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest12.consistencyLevel(writeConsistencyLevel18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.routing("");
        org.elasticsearch.index.VersionType versionType26 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest23.versionType(versionType26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str32 = deleteRequest31.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel33 = deleteRequest31.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest27.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest12.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.tasks.TaskId taskId36 = deleteRequest35.getParentTask();
        deleteRequest4.setParentTask(taskId36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest41.index("");
        org.elasticsearch.common.unit.TimeValue timeValue44 = deleteRequest43.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest4.timeout(timeValue44);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException46 = deleteRequest45.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][null][null]}", (java.lang.Throwable) actionRequestValidationException46, "delete {[][hi!][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][delete {[][hi!][]}][]}", (java.lang.Throwable) actionRequestValidationException46, "");
        java.lang.String str51 = shardFailure50.indexUUID;
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[][hi!][]}" + "'", str17, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel18 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel18.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[][hi!][]}" + "'", str32, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel33 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel33.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(taskId36);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(timeValue44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(actionRequestValidationException46);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
    }

    @Test
    public void test0269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0269");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.version((long) '4');
        java.lang.String str17 = deleteRequest16.getDescription();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest16.timeout("");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[][hi!][]}" + "'", str17, "delete {[][hi!][]}");
    }

    @Test
    public void test0270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0270");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest3.primaryTerm(10L);
        java.lang.String[] strArray6 = deleteRequest3.indices();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[][delete {[][hi!][]}][]}", deleteRequest3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray6);
    }

    @Test
    public void test0271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0271");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.tasks.TaskId taskId6 = null;
        deleteRequest5.setParentTask(taskId6);
        java.lang.String str8 = deleteRequest5.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy11 = deleteRequest10.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest5.setRefreshPolicy(refreshPolicy11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy15 = deleteRequest14.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.id("hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress20 = null;
        deleteRequest19.remoteAddress(transportAddress20);
        org.elasticsearch.index.VersionType versionType22 = deleteRequest19.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest5.versionType(versionType22);
        org.elasticsearch.index.VersionType versionType24 = deleteRequest5.versionType();
        org.elasticsearch.index.shard.IndexShard indexShard25 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete26 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest5, indexShard25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[][hi!][]}" + "'", str8, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + refreshPolicy11 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy11.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + refreshPolicy15 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy15.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(versionType24);
    }

    @Test
    public void test0272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0272");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][delete {[][hi!][]}][]}");
        org.elasticsearch.common.io.stream.StreamInput streamInput4 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.readFrom(streamInput4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0273");
        org.elasticsearch.index.shard.IndexShard indexShard0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        long long5 = deleteRequest4.version();
        boolean boolean6 = deleteRequest4.getShouldPersistResult();
        long long7 = deleteRequest4.version();
        org.elasticsearch.index.VersionType versionType8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest4.versionType(versionType8);
        java.lang.String str10 = deleteRequest9.routing();
        org.elasticsearch.common.unit.TimeValue timeValue11 = deleteRequest9.timeout();
        org.elasticsearch.index.translog.Translog.Location location12 = null;
        org.elasticsearch.action.support.replication.TransportWriteAction.RespondingWriteResult respondingWriteResult13 = null;
        org.elasticsearch.common.logging.ESLogger eSLogger14 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.postWriteActions(indexShard0, (org.elasticsearch.action.support.WriteRequest<org.elasticsearch.action.delete.DeleteRequest>) deleteRequest9, location12, respondingWriteResult13, eSLogger14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-3L) + "'", long5 == (-3L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-3L) + "'", long7 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(timeValue11);
    }

    @Test
    public void test0274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0274");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.setRefreshPolicy("");
        java.lang.String str8 = deleteRequest5.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.parent("");
        java.lang.String[] strArray11 = deleteRequest5.indices();
        java.lang.String str12 = deleteRequest5.routing();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test0275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0275");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.version((long) '4');
        java.lang.String str17 = deleteRequest16.getDescription();
        org.elasticsearch.common.transport.TransportAddress transportAddress18 = deleteRequest16.remoteAddress();
        org.elasticsearch.index.shard.IndexShard indexShard19 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete20 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest16, indexShard19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[][hi!][]}" + "'", str17, "delete {[][hi!][]}");
        org.junit.Assert.assertNull(transportAddress18);
    }

    @Test
    public void test0276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0276");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str4 = deleteRequest3.toString();
        deleteRequest3.primaryTerm(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.routing("");
        org.elasticsearch.index.VersionType versionType13 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.versionType(versionType13);
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = deleteRequest10.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy16 = deleteRequest10.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.setRefreshPolicy(refreshPolicy16);
        long long18 = deleteRequest17.version();
        long long19 = deleteRequest17.version();
        org.elasticsearch.action.support.IndicesOptions indicesOptions20 = deleteRequest17.indicesOptions();
        java.lang.String str21 = deleteRequest17.type();
        java.lang.String str22 = deleteRequest17.toString();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][hi!][]}" + "'", str4, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(transportAddress15);
        org.junit.Assert.assertTrue("'" + refreshPolicy16 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy16.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-3L) + "'", long18 == (-3L));
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-3L) + "'", long19 == (-3L));
        org.junit.Assert.assertNotNull(indicesOptions20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[][hi!][]}" + "'", str22, "delete {[][hi!][]}");
    }

    @Test
    public void test0277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0277");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.routing("");
        org.elasticsearch.index.VersionType versionType21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str27 = deleteRequest26.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest7.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.type("delete {[][hi!][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.routing("delete {[][null][null]}");
        deleteRequest34.primaryTerm((long) '#');
        org.elasticsearch.index.shard.ShardId shardId37 = deleteRequest34.shardId();
        org.elasticsearch.action.support.IndicesOptions indicesOptions38 = deleteRequest34.indicesOptions();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy39 = deleteRequest34.getRefreshPolicy();
        java.lang.Class<?> wildcardClass40 = deleteRequest34.getClass();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][hi!][]}" + "'", str27, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNull(shardId37);
        org.junit.Assert.assertNotNull(indicesOptions38);
        org.junit.Assert.assertTrue("'" + refreshPolicy39 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy39.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0278");
        org.elasticsearch.action.support.replication.ReplicationTask replicationTask0 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.setPhase(replicationTask0, "delete {[null][null][null]}");
    }

    @Test
    public void test0279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0279");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.index("");
        java.lang.String str10 = deleteRequest7.toString();
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest7.getParentTask();
        deleteRequest3.setParentTask(taskId11);
        java.lang.String[] strArray13 = deleteRequest3.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.routing("");
        org.elasticsearch.tasks.TaskId taskId20 = null;
        deleteRequest19.setParentTask(taskId20);
        java.lang.String str22 = deleteRequest19.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy25 = deleteRequest24.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest19.setRefreshPolicy(refreshPolicy25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest3.setRefreshPolicy(refreshPolicy25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest3.routing("");
        java.lang.String str32 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest3.type("delete {[hi!][null][null]}");
        java.lang.String str35 = deleteRequest3.parent();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest3.setRefreshPolicy("delete {[][hi!][delete {[][hi!][]}]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[][hi!][delete {[][hi!][]}]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][hi!][]}" + "'", str10, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[][hi!][]}" + "'", str22, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + refreshPolicy25 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy25.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[][hi!][]}" + "'", str32, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNull(str35);
    }

    @Test
    public void test0280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0280");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.setShardId(shardId2);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy6 = deleteRequest5.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.setRefreshPolicy(refreshPolicy6);
        org.elasticsearch.index.VersionType versionType8 = deleteRequest1.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest1.type("");
        org.elasticsearch.common.io.stream.StreamInput streamInput11 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest10.readFrom(streamInput11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertTrue("'" + refreshPolicy6 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy6.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(versionType8);
        org.junit.Assert.assertNotNull(deleteRequest10);
    }

    @Test
    public void test0281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0281");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = deleteRequest3.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId9 = null;
        deleteRequest3.setParentTask(taskId9);
        java.lang.String str11 = deleteRequest3.routing();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput12 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.writeTo(streamOutput12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(transportAddress8);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test0282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0282");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.index("");
        java.lang.String str6 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.parent("");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput9 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.writeTo(streamOutput9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][hi!][]}" + "'", str6, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
    }

    @Test
    public void test0283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0283");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", throwable2, "delete {[][hi!][]}");
        java.lang.Throwable throwable5 = shardFailure4.cause;
        java.lang.Throwable throwable6 = shardFailure4.cause;
        java.lang.Throwable throwable7 = shardFailure4.cause;
        java.lang.String str8 = shardFailure4.indexUUID;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting9 = shardFailure4.routing;
        java.lang.String str10 = shardFailure4.reason;
        org.junit.Assert.assertNull(throwable5);
        org.junit.Assert.assertNull(throwable6);
        org.junit.Assert.assertNull(throwable7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[][hi!][]}" + "'", str8, "delete {[][hi!][]}");
        org.junit.Assert.assertNull(shardRouting9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test0284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0284");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        java.lang.String str2 = deleteRequest1.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.parent("delete {[][null][null]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest1.validate();
        java.lang.String[] strArray6 = deleteRequest1.indices();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest1.timeout("delete {[][delete {[][hi!][]}][]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[][delete {[][hi!][]}][]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "delete {[][null][null]}" + "'", str2, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertNotNull(strArray6);
    }

    @Test
    public void test0285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0285");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.index("");
        java.lang.String str10 = deleteRequest7.toString();
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest7.getParentTask();
        deleteRequest3.setParentTask(taskId11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.routing("");
        org.elasticsearch.index.VersionType versionType19 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest16.versionType(versionType19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str25 = deleteRequest24.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel26 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest20.consistencyLevel(writeConsistencyLevel26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest3.consistencyLevel(writeConsistencyLevel26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest33.routing("");
        org.elasticsearch.index.VersionType versionType36 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest33.versionType(versionType36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str42 = deleteRequest41.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel43 = deleteRequest41.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest37.consistencyLevel(writeConsistencyLevel43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest48.routing("");
        org.elasticsearch.index.VersionType versionType51 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest48.versionType(versionType51);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str57 = deleteRequest56.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel58 = deleteRequest56.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest52.consistencyLevel(writeConsistencyLevel58);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest37.consistencyLevel(writeConsistencyLevel58);
        org.elasticsearch.tasks.TaskId taskId61 = deleteRequest60.getParentTask();
        deleteRequest29.setParentTask(taskId61);
        deleteRequest28.setParentTask(taskId61);
        boolean boolean64 = deleteRequest28.getShouldPersistResult();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest28.timeout("delete {[hi!][null][null]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[hi!][null][null]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][hi!][]}" + "'", str10, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[][hi!][]}" + "'", str25, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel26 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel26.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "delete {[][hi!][]}" + "'", str42, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel43 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel43.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "delete {[][hi!][]}" + "'", str57, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel58 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel58.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(taskId61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test0286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0286");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.id("delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest5.index("delete {[][delete {[][hi!][]}][]}");
        org.elasticsearch.index.shard.IndexShard indexShard10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult11 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest9, indexShard10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
    }

    @Test
    public void test0287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0287");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("delete {[][delete {[][hi!][]}][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress7 = null;
        deleteRequest3.remoteAddress(transportAddress7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.routing("");
        org.elasticsearch.index.VersionType versionType15 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest12.versionType(versionType15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str21 = deleteRequest20.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel22 = deleteRequest20.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest16.consistencyLevel(writeConsistencyLevel22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest3.consistencyLevel(writeConsistencyLevel22);
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest24.setParentTask("", (long) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: 0 length nodeIds are reserved for EMPTY_TASK_ID and are otherwise invalid.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[][hi!][]}" + "'", str21, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel22 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel22.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest24);
    }

    @Test
    public void test0288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0288");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.index("");
        java.lang.String str10 = deleteRequest7.toString();
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest7.getParentTask();
        deleteRequest3.setParentTask(taskId11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.routing("");
        org.elasticsearch.index.VersionType versionType19 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest16.versionType(versionType19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str25 = deleteRequest24.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel26 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest20.consistencyLevel(writeConsistencyLevel26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest3.consistencyLevel(writeConsistencyLevel26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest33.routing("");
        org.elasticsearch.index.VersionType versionType36 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest33.versionType(versionType36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str42 = deleteRequest41.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel43 = deleteRequest41.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest37.consistencyLevel(writeConsistencyLevel43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest48.routing("");
        org.elasticsearch.index.VersionType versionType51 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest48.versionType(versionType51);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str57 = deleteRequest56.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel58 = deleteRequest56.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest52.consistencyLevel(writeConsistencyLevel58);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest37.consistencyLevel(writeConsistencyLevel58);
        org.elasticsearch.tasks.TaskId taskId61 = deleteRequest60.getParentTask();
        deleteRequest29.setParentTask(taskId61);
        deleteRequest28.setParentTask(taskId61);
        org.elasticsearch.index.VersionType versionType64 = deleteRequest28.versionType();
        java.lang.Class<?> wildcardClass65 = deleteRequest28.getClass();
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][hi!][]}" + "'", str10, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[][hi!][]}" + "'", str25, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel26 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel26.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "delete {[][hi!][]}" + "'", str42, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel43 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel43.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "delete {[][hi!][]}" + "'", str57, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel58 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel58.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(taskId61);
        org.junit.Assert.assertNotNull(versionType64);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0289");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy2 = deleteRequest1.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.routing("");
        org.elasticsearch.index.VersionType versionType9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest6.versionType(versionType9);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str15 = deleteRequest14.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel16 = deleteRequest14.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest10.consistencyLevel(writeConsistencyLevel16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.version((long) '4');
        org.elasticsearch.index.VersionType versionType20 = deleteRequest17.versionType();
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest17.setShardId(shardId21);
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.setShardId(shardId23);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest1.consistencyLevel(writeConsistencyLevel25);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.setRefreshPolicy("delete {[hi!][hi!][]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[hi!][hi!][]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + refreshPolicy2 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy2.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[][hi!][]}" + "'", str15, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel16 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel16.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNull(versionType20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest26);
    }

    @Test
    public void test0290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0290");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest1.primaryTerm(10L);
        java.lang.String[] strArray4 = deleteRequest1.indices();
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = deleteRequest1.remoteAddress();
        java.lang.String str6 = deleteRequest1.id();
        org.elasticsearch.common.unit.TimeValue timeValue7 = deleteRequest1.timeout();
        java.lang.String str8 = deleteRequest1.index();
        org.elasticsearch.common.io.stream.StreamInput streamInput9 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest1.readFrom(streamInput9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNull(transportAddress5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(timeValue7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }

    @Test
    public void test0291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0291");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.routing("");
        org.elasticsearch.index.VersionType versionType21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str27 = deleteRequest26.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest7.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.type("delete {[][hi!][]}");
        long long33 = deleteRequest30.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest37.index("");
        org.elasticsearch.common.unit.TimeValue timeValue40 = deleteRequest39.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest30.timeout(timeValue40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest30.version((long) (short) 0);
        java.lang.String str44 = deleteRequest30.toString();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][hi!][]}" + "'", str27, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-3L) + "'", long33 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(timeValue40);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "delete {[][delete {[][hi!][]}][]}" + "'", str44, "delete {[][delete {[][hi!][]}][]}");
    }

    @Test
    public void test0292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0292");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str4 = deleteRequest3.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.setRefreshPolicy("");
        java.lang.String[] strArray10 = deleteRequest7.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.id("delete {[delete {[][null][null]}][delete {[][null][null]}][delete {[][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.type("delete {[][hi!][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.id("delete {[][null][null]}");
        deleteRequest22.primaryTerm((long) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest26.primaryTerm(10L);
        java.lang.String str29 = deleteRequest26.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest26.index("hi!");
        java.lang.String str32 = deleteRequest31.toString();
        long long33 = deleteRequest31.primaryTerm();
        org.elasticsearch.index.VersionType versionType34 = deleteRequest31.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest22.versionType(versionType34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest14.versionType(versionType34);
        java.lang.Class<?> wildcardClass37 = deleteRequest36.getClass();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][hi!][]}" + "'", str4, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "delete {[][null][null]}" + "'", str29, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[hi!][null][null]}" + "'", str32, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 10L + "'", long33 == 10L);
        org.junit.Assert.assertNotNull(versionType34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0293");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.version((long) '4');
        org.elasticsearch.index.VersionType versionType17 = deleteRequest14.versionType();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest14.setShardId(shardId18);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.setShardId(shardId20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.index("");
        java.lang.String str32 = deleteRequest29.toString();
        org.elasticsearch.tasks.TaskId taskId33 = deleteRequest29.getParentTask();
        deleteRequest25.setParentTask(taskId33);
        deleteRequest21.setParentTask(taskId33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest21.routing("delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest37.index("delete {[][delete {[][hi!][]}][delete {[][hi!][]}]}");
        java.lang.String str40 = deleteRequest39.parent();
        java.lang.String str41 = deleteRequest39.type();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNull(versionType17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[][hi!][]}" + "'", str32, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(taskId33);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
    }

    @Test
    public void test0294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0294");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy9 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.index("");
        java.lang.String str20 = deleteRequest17.toString();
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest17.getParentTask();
        deleteRequest13.setParentTask(taskId21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.routing("");
        org.elasticsearch.index.VersionType versionType29 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest26.versionType(versionType29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str35 = deleteRequest34.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel36 = deleteRequest34.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest30.consistencyLevel(writeConsistencyLevel36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest13.consistencyLevel(writeConsistencyLevel36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest43.routing("");
        org.elasticsearch.index.VersionType versionType46 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest43.versionType(versionType46);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str52 = deleteRequest51.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel53 = deleteRequest51.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest47.consistencyLevel(writeConsistencyLevel53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest58.routing("");
        org.elasticsearch.index.VersionType versionType61 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest58.versionType(versionType61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str67 = deleteRequest66.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel68 = deleteRequest66.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest62.consistencyLevel(writeConsistencyLevel68);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest47.consistencyLevel(writeConsistencyLevel68);
        org.elasticsearch.tasks.TaskId taskId71 = deleteRequest70.getParentTask();
        deleteRequest39.setParentTask(taskId71);
        deleteRequest38.setParentTask(taskId71);
        org.elasticsearch.index.VersionType versionType74 = deleteRequest38.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest3.versionType(versionType74);
        org.elasticsearch.common.unit.TimeValue timeValue76 = deleteRequest75.timeout();
        long long77 = deleteRequest75.primaryTerm();
        org.elasticsearch.index.shard.IndexShard indexShard78 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete79 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest75, indexShard78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(transportAddress8);
        org.junit.Assert.assertTrue("'" + refreshPolicy9 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy9.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[][hi!][]}" + "'", str20, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "delete {[][hi!][]}" + "'", str35, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel36 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel36.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "delete {[][hi!][]}" + "'", str52, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel53 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel53.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "delete {[][hi!][]}" + "'", str67, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel68 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel68.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNotNull(taskId71);
        org.junit.Assert.assertNotNull(versionType74);
        org.junit.Assert.assertNotNull(deleteRequest75);
        org.junit.Assert.assertNotNull(timeValue76);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 0L + "'", long77 == 0L);
    }

    @Test
    public void test0295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0295");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.routing("");
        org.elasticsearch.index.VersionType versionType21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str27 = deleteRequest26.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest7.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.type("delete {[][hi!][]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy33 = deleteRequest32.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest32.id("delete {[][delete {[][hi!][]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest32.version((long) ' ');
        java.lang.String str38 = deleteRequest37.type();
        org.elasticsearch.index.shard.IndexShard indexShard39 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult40 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest37, indexShard39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][hi!][]}" + "'", str27, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + refreshPolicy33 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy33.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "delete {[][hi!][]}" + "'", str38, "delete {[][hi!][]}");
    }

    @Test
    public void test0296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0296");
        org.elasticsearch.index.shard.IndexShard indexShard0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.routing("");
        org.elasticsearch.index.VersionType versionType7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest4.versionType(versionType7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str13 = deleteRequest12.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest8.consistencyLevel(writeConsistencyLevel14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.routing("");
        org.elasticsearch.index.VersionType versionType22 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest19.versionType(versionType22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str28 = deleteRequest27.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = deleteRequest27.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest23.consistencyLevel(writeConsistencyLevel29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest8.consistencyLevel(writeConsistencyLevel29);
        org.elasticsearch.tasks.TaskId taskId32 = deleteRequest31.getParentTask();
        java.lang.String str33 = deleteRequest31.getDescription();
        org.elasticsearch.common.transport.TransportAddress transportAddress34 = null;
        deleteRequest31.remoteAddress(transportAddress34);
        org.elasticsearch.common.transport.TransportAddress transportAddress36 = deleteRequest31.remoteAddress();
        java.lang.String str37 = deleteRequest31.index();
        java.lang.String str38 = deleteRequest31.id();
        org.elasticsearch.index.translog.Translog.Location location39 = null;
        org.elasticsearch.action.support.replication.TransportWriteAction.RespondingWriteResult respondingWriteResult40 = null;
        org.elasticsearch.common.logging.ESLogger eSLogger41 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.postWriteActions(indexShard0, (org.elasticsearch.action.support.WriteRequest<org.elasticsearch.action.delete.DeleteRequest>) deleteRequest31, location39, respondingWriteResult40, eSLogger41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[][hi!][]}" + "'", str13, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "delete {[][hi!][]}" + "'", str28, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel29 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel29.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(taskId32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "delete {[][hi!][]}" + "'", str33, "delete {[][hi!][]}");
        org.junit.Assert.assertNull(transportAddress36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
    }

    @Test
    public void test0297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0297");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.routing("");
        org.elasticsearch.index.VersionType versionType21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str27 = deleteRequest26.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest7.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.type("delete {[][hi!][]}");
        long long33 = deleteRequest30.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest37.index("");
        org.elasticsearch.common.unit.TimeValue timeValue40 = deleteRequest39.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest30.timeout(timeValue40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest30.version((long) (short) 0);
        org.elasticsearch.common.transport.TransportAddress transportAddress44 = null;
        deleteRequest43.remoteAddress(transportAddress44);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][hi!][]}" + "'", str27, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-3L) + "'", long33 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(timeValue40);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest43);
    }

    @Test
    public void test0298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0298");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.tasks.TaskId taskId6 = null;
        deleteRequest5.setParentTask(taskId6);
        java.lang.String str8 = deleteRequest5.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy11 = deleteRequest10.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest5.setRefreshPolicy(refreshPolicy11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest5.version((long) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest5.setRefreshPolicy("delete {[][hi!][delete {[][hi!][]}]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[][hi!][delete {[][hi!][]}]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[][hi!][]}" + "'", str8, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + refreshPolicy11 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy11.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
    }

    @Test
    public void test0299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0299");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.routing("");
        org.elasticsearch.index.VersionType versionType8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest5.versionType(versionType8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str14 = deleteRequest13.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel15 = deleteRequest13.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest9.consistencyLevel(writeConsistencyLevel15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.version((long) '4');
        org.elasticsearch.index.VersionType versionType19 = deleteRequest16.versionType();
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest16.setShardId(shardId20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.version((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.parent("delete {[][delete {[][hi!][]}][]}");
        java.lang.String str26 = deleteRequest25.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[null][null][null]}", deleteRequest25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[][hi!][]}" + "'", str14, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel15 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel15.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNull(versionType19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "delete {[][hi!][]}" + "'", str26, "delete {[][hi!][]}");
    }

    @Test
    public void test0300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0300");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str4 = deleteRequest3.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.setRefreshPolicy("");
        java.lang.String[] strArray10 = deleteRequest7.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.id("delete {[delete {[][null][null]}][delete {[][null][null]}][delete {[][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.type("delete {[][hi!][]}");
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest12.timeout();
        java.lang.Class<?> wildcardClass16 = timeValue15.getClass();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][hi!][]}" + "'", str4, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0301");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.routing("");
        org.elasticsearch.index.VersionType versionType21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str27 = deleteRequest26.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest7.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.type("delete {[][hi!][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.routing("delete {[][null][null]}");
        deleteRequest34.primaryTerm((long) '#');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest34.routing("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.id("delete {[][hi!][]}");
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest38.setParentTask("", (-3L));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: 0 length nodeIds are reserved for EMPTY_TASK_ID and are otherwise invalid.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][hi!][]}" + "'", str27, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest40);
    }

    @Test
    public void test0302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0302");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.index("");
        java.lang.String str10 = deleteRequest7.toString();
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest7.getParentTask();
        deleteRequest3.setParentTask(taskId11);
        java.lang.String[] strArray13 = deleteRequest3.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.routing("");
        org.elasticsearch.tasks.TaskId taskId20 = null;
        deleteRequest19.setParentTask(taskId20);
        java.lang.String str22 = deleteRequest19.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy25 = deleteRequest24.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest19.setRefreshPolicy(refreshPolicy25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest3.setRefreshPolicy(refreshPolicy25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.type("hi!");
        org.elasticsearch.tasks.TaskId taskId30 = deleteRequest29.getParentTask();
        org.elasticsearch.common.io.stream.StreamInput streamInput31 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest29.readFrom(streamInput31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][hi!][]}" + "'", str10, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[][hi!][]}" + "'", str22, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + refreshPolicy25 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy25.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(taskId30);
    }

    @Test
    public void test0303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0303");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.index.VersionType versionType8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.versionType(versionType8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.parent("");
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = deleteRequest3.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId13 = deleteRequest3.shardId();
        org.elasticsearch.index.shard.IndexShard indexShard14 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult15 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest3, indexShard14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(transportAddress12);
        org.junit.Assert.assertNull(shardId13);
    }

    @Test
    public void test0304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0304");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.id("delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest7.index("delete {[][delete {[][hi!][]}][]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[][null][hi!]}", deleteRequest11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
    }

    @Test
    public void test0305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0305");
        org.elasticsearch.index.shard.IndexShard indexShard0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][hi!][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.version(0L);
        org.elasticsearch.index.translog.Translog.Location location5 = null;
        org.elasticsearch.action.support.replication.TransportWriteAction.RespondingWriteResult respondingWriteResult6 = null;
        org.elasticsearch.common.logging.ESLogger eSLogger7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.postWriteActions(indexShard0, (org.elasticsearch.action.support.WriteRequest<org.elasticsearch.action.delete.DeleteRequest>) deleteRequest2, location5, respondingWriteResult6, eSLogger7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest4);
    }

    @Test
    public void test0306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0306");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.index("");
        java.lang.String str10 = deleteRequest7.toString();
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest7.getParentTask();
        deleteRequest3.setParentTask(taskId11);
        java.lang.String[] strArray13 = deleteRequest3.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.routing("");
        org.elasticsearch.tasks.TaskId taskId20 = null;
        deleteRequest19.setParentTask(taskId20);
        java.lang.String str22 = deleteRequest19.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy25 = deleteRequest24.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest19.setRefreshPolicy(refreshPolicy25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest3.setRefreshPolicy(refreshPolicy25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest3.routing("");
        java.lang.String str32 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest3.type("delete {[hi!][null][null]}");
        java.lang.String str35 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest3.id("delete {[hi!][hi!][]}");
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][hi!][]}" + "'", str10, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[][hi!][]}" + "'", str22, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + refreshPolicy25 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy25.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[][hi!][]}" + "'", str32, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(deleteRequest37);
    }

    @Test
    public void test0307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0307");
        org.elasticsearch.index.shard.IndexShard indexShard0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.routing("");
        org.elasticsearch.index.VersionType versionType7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest4.versionType(versionType7);
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = deleteRequest4.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy10 = deleteRequest4.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.index("");
        java.lang.String str21 = deleteRequest18.toString();
        org.elasticsearch.tasks.TaskId taskId22 = deleteRequest18.getParentTask();
        deleteRequest14.setParentTask(taskId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.routing("");
        org.elasticsearch.index.VersionType versionType30 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest27.versionType(versionType30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str36 = deleteRequest35.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel37 = deleteRequest35.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest31.consistencyLevel(writeConsistencyLevel37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest14.consistencyLevel(writeConsistencyLevel37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest44.routing("");
        org.elasticsearch.index.VersionType versionType47 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest44.versionType(versionType47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str53 = deleteRequest52.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel54 = deleteRequest52.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest48.consistencyLevel(writeConsistencyLevel54);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest59.routing("");
        org.elasticsearch.index.VersionType versionType62 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest59.versionType(versionType62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str68 = deleteRequest67.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel69 = deleteRequest67.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest63.consistencyLevel(writeConsistencyLevel69);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest48.consistencyLevel(writeConsistencyLevel69);
        org.elasticsearch.tasks.TaskId taskId72 = deleteRequest71.getParentTask();
        deleteRequest40.setParentTask(taskId72);
        deleteRequest39.setParentTask(taskId72);
        org.elasticsearch.index.VersionType versionType75 = deleteRequest39.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest4.versionType(versionType75);
        org.elasticsearch.common.unit.TimeValue timeValue77 = deleteRequest76.timeout();
        long long78 = deleteRequest76.primaryTerm();
        org.elasticsearch.index.translog.Translog.Location location79 = null;
        org.elasticsearch.action.support.replication.TransportWriteAction.RespondingWriteResult respondingWriteResult80 = null;
        org.elasticsearch.common.logging.ESLogger eSLogger81 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.postWriteActions(indexShard0, (org.elasticsearch.action.support.WriteRequest<org.elasticsearch.action.delete.DeleteRequest>) deleteRequest76, location79, respondingWriteResult80, eSLogger81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(transportAddress9);
        org.junit.Assert.assertTrue("'" + refreshPolicy10 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy10.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[][hi!][]}" + "'", str21, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(taskId22);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "delete {[][hi!][]}" + "'", str36, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel37 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel37.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "delete {[][hi!][]}" + "'", str53, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel54 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel54.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "delete {[][hi!][]}" + "'", str68, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel69 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel69.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(taskId72);
        org.junit.Assert.assertNotNull(versionType75);
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertNotNull(timeValue77);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 0L + "'", long78 == 0L);
    }

    @Test
    public void test0308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0308");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[][hi!][]}][]}", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.index("delete {[][hi!][]}");
        long long6 = deleteRequest5.version();
        boolean boolean7 = deleteRequest5.getShouldPersistResult();
        org.elasticsearch.action.support.IndicesOptions indicesOptions8 = deleteRequest5.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.routing("");
        org.elasticsearch.index.VersionType versionType15 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest12.versionType(versionType15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str21 = deleteRequest20.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel22 = deleteRequest20.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest16.consistencyLevel(writeConsistencyLevel22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.version((long) '4');
        org.elasticsearch.index.VersionType versionType26 = deleteRequest23.versionType();
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest23.setShardId(shardId27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.version((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.index("");
        java.lang.String str41 = deleteRequest38.toString();
        org.elasticsearch.tasks.TaskId taskId42 = deleteRequest38.getParentTask();
        deleteRequest34.setParentTask(taskId42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest47.routing("");
        org.elasticsearch.index.VersionType versionType50 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest47.versionType(versionType50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str56 = deleteRequest55.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel57 = deleteRequest55.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest51.consistencyLevel(writeConsistencyLevel57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest34.consistencyLevel(writeConsistencyLevel57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest64.routing("");
        org.elasticsearch.index.VersionType versionType67 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest64.versionType(versionType67);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str73 = deleteRequest72.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel74 = deleteRequest72.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest68.consistencyLevel(writeConsistencyLevel74);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = deleteRequest79.routing("");
        org.elasticsearch.index.VersionType versionType82 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest83 = deleteRequest79.versionType(versionType82);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str88 = deleteRequest87.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel89 = deleteRequest87.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest90 = deleteRequest83.consistencyLevel(writeConsistencyLevel89);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest91 = deleteRequest68.consistencyLevel(writeConsistencyLevel89);
        org.elasticsearch.tasks.TaskId taskId92 = deleteRequest91.getParentTask();
        deleteRequest60.setParentTask(taskId92);
        deleteRequest59.setParentTask(taskId92);
        org.elasticsearch.index.VersionType versionType95 = deleteRequest59.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest96 = deleteRequest28.versionType(versionType95);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest97 = deleteRequest5.versionType(versionType95);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest99 = deleteRequest5.routing("delete {[][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-3L) + "'", long6 == (-3L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(indicesOptions8);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[][hi!][]}" + "'", str21, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel22 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel22.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNull(versionType26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "delete {[][hi!][]}" + "'", str41, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(taskId42);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "delete {[][hi!][]}" + "'", str56, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel57 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel57.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "delete {[][hi!][]}" + "'", str73, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel74 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel74.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest75);
        org.junit.Assert.assertNotNull(deleteRequest81);
        org.junit.Assert.assertNotNull(deleteRequest83);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "delete {[][hi!][]}" + "'", str88, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel89 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel89.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest90);
        org.junit.Assert.assertNotNull(deleteRequest91);
        org.junit.Assert.assertNotNull(taskId92);
        org.junit.Assert.assertNotNull(versionType95);
        org.junit.Assert.assertNotNull(deleteRequest96);
        org.junit.Assert.assertNotNull(deleteRequest97);
        org.junit.Assert.assertNotNull(deleteRequest99);
    }

    @Test
    public void test0309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0309");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.version((long) '4');
        java.lang.String str17 = deleteRequest16.getDescription();
        org.elasticsearch.common.io.stream.StreamInput streamInput18 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest16.readFrom(streamInput18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[][hi!][]}" + "'", str17, "delete {[][hi!][]}");
    }

    @Test
    public void test0310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0310");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str4 = deleteRequest3.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest7.parent("delete {[][hi!][]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.setRefreshPolicy("delete {[hi!][null][null]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[hi!][null][null]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][hi!][]}" + "'", str4, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
    }

    @Test
    public void test0311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0311");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest1.primaryTerm(10L);
        java.lang.String str4 = deleteRequest1.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest1.index("hi!");
        long long7 = deleteRequest6.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy10 = deleteRequest9.getRefreshPolicy();
        java.lang.String str11 = deleteRequest9.type();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy12 = deleteRequest9.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest6.setRefreshPolicy(refreshPolicy12);
        org.elasticsearch.index.shard.IndexShard indexShard14 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult15 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest6, indexShard14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][null][null]}" + "'", str4, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-3L) + "'", long7 == (-3L));
        org.junit.Assert.assertTrue("'" + refreshPolicy10 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy10.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + refreshPolicy12 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy12.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest13);
    }

    @Test
    public void test0312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0312");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[][hi!][]}][]}", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.routing("");
        org.elasticsearch.tasks.TaskId taskId10 = null;
        deleteRequest9.setParentTask(taskId10);
        java.lang.String str12 = deleteRequest9.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("");
        java.lang.String str18 = deleteRequest17.toString();
        long long19 = deleteRequest17.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.index("");
        java.lang.String str30 = deleteRequest27.toString();
        org.elasticsearch.tasks.TaskId taskId31 = deleteRequest27.getParentTask();
        deleteRequest23.setParentTask(taskId31);
        deleteRequest17.setParentTask(taskId31);
        org.elasticsearch.tasks.Task task34 = deleteRequest9.createTask((long) (short) -1, "delete {[hi!][null][null]}", "delete {[][null][null]}", taskId31);
        deleteRequest3.setParentTask(taskId31);
        java.lang.String str36 = deleteRequest3.getDescription();
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[][null][null]}" + "'", str18, "delete {[][null][null]}");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "delete {[][hi!][]}" + "'", str30, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(taskId31);
        org.junit.Assert.assertNotNull(task34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "delete {[delete {[][delete {[][hi!][]}][]}][hi!][]}" + "'", str36, "delete {[delete {[][delete {[][hi!][]}][]}][hi!][]}");
    }

    @Test
    public void test0313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0313");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.tasks.TaskId taskId15 = null;
        deleteRequest7.setParentTask(taskId15);
        java.lang.Class<?> wildcardClass17 = deleteRequest7.getClass();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0314");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.index("");
        java.lang.String str10 = deleteRequest7.toString();
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest7.getParentTask();
        deleteRequest3.setParentTask(taskId11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.routing("");
        org.elasticsearch.index.VersionType versionType19 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest16.versionType(versionType19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str25 = deleteRequest24.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel26 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest20.consistencyLevel(writeConsistencyLevel26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest3.consistencyLevel(writeConsistencyLevel26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.routing("");
        org.elasticsearch.index.VersionType versionType35 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest32.versionType(versionType35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str41 = deleteRequest40.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel42 = deleteRequest40.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest36.consistencyLevel(writeConsistencyLevel42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest47.routing("");
        org.elasticsearch.index.VersionType versionType50 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest47.versionType(versionType50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str56 = deleteRequest55.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel57 = deleteRequest55.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest51.consistencyLevel(writeConsistencyLevel57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest36.consistencyLevel(writeConsistencyLevel57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest28.consistencyLevel(writeConsistencyLevel57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest60.parent("delete {[][hi!][]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest60.timeout("delete {[delete {[][null][null]}][delete {[][null][null]}][delete {[][null][null]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[][null][null]}][delete {[][null][null]}][delete {[][null][null]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][hi!][]}" + "'", str10, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[][hi!][]}" + "'", str25, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel26 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel26.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "delete {[][hi!][]}" + "'", str41, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel42 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel42.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "delete {[][hi!][]}" + "'", str56, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel57 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel57.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(deleteRequest62);
    }

    @Test
    public void test0315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0315");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        java.lang.String str2 = deleteRequest1.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.index("");
        java.lang.String str9 = deleteRequest6.toString();
        org.elasticsearch.index.VersionType versionType10 = deleteRequest6.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest1.versionType(versionType10);
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest1.indicesOptions();
        java.lang.Class<?> wildcardClass13 = deleteRequest1.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "delete {[][null][null]}" + "'", str2, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[][hi!][]}" + "'", str9, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(versionType10);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(indicesOptions12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0316");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.index("");
        java.lang.String str14 = deleteRequest11.toString();
        org.elasticsearch.tasks.TaskId taskId15 = deleteRequest11.getParentTask();
        deleteRequest7.setParentTask(taskId15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.routing("");
        org.elasticsearch.index.VersionType versionType23 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest20.versionType(versionType23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str29 = deleteRequest28.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel30 = deleteRequest28.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest24.consistencyLevel(writeConsistencyLevel30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest7.consistencyLevel(writeConsistencyLevel30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest36.routing("");
        org.elasticsearch.index.VersionType versionType39 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest36.versionType(versionType39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str45 = deleteRequest44.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel46 = deleteRequest44.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest40.consistencyLevel(writeConsistencyLevel46);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest51.routing("");
        org.elasticsearch.index.VersionType versionType54 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest51.versionType(versionType54);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str60 = deleteRequest59.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel61 = deleteRequest59.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest55.consistencyLevel(writeConsistencyLevel61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest40.consistencyLevel(writeConsistencyLevel61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest32.consistencyLevel(writeConsistencyLevel61);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException65 = deleteRequest32.validate();
        org.elasticsearch.tasks.TaskId taskId66 = deleteRequest32.getParentTask();
        org.elasticsearch.tasks.Task task67 = deleteRequest0.createTask((long) (byte) 1, "delete {[][delete {[null][null][null]}][]}", "delete {[delete {[][null][null]}][delete {[][null][null]}][delete {[][null][null]}]}", taskId66);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest71.routing("");
        org.elasticsearch.tasks.TaskId taskId74 = null;
        deleteRequest73.setParentTask(taskId74);
        java.lang.String str76 = deleteRequest73.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = new org.elasticsearch.action.delete.DeleteRequest("");
        java.lang.String str82 = deleteRequest81.toString();
        long long83 = deleteRequest81.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest91 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest93 = deleteRequest91.index("");
        java.lang.String str94 = deleteRequest91.toString();
        org.elasticsearch.tasks.TaskId taskId95 = deleteRequest91.getParentTask();
        deleteRequest87.setParentTask(taskId95);
        deleteRequest81.setParentTask(taskId95);
        org.elasticsearch.tasks.Task task98 = deleteRequest73.createTask((long) (short) -1, "delete {[hi!][null][null]}", "delete {[][null][null]}", taskId95);
        deleteRequest0.setParentTask(taskId95);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[][hi!][]}" + "'", str14, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(taskId15);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "delete {[][hi!][]}" + "'", str29, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel30 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel30.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "delete {[][hi!][]}" + "'", str45, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel46 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel46.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "delete {[][hi!][]}" + "'", str60, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel61 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel61.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNull(actionRequestValidationException65);
        org.junit.Assert.assertNotNull(taskId66);
        org.junit.Assert.assertNotNull(task67);
        org.junit.Assert.assertNotNull(deleteRequest73);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "delete {[][hi!][]}" + "'", str76, "delete {[][hi!][]}");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "delete {[][null][null]}" + "'", str82, "delete {[][null][null]}");
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 0L + "'", long83 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest93);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "delete {[][hi!][]}" + "'", str94, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(taskId95);
        org.junit.Assert.assertNotNull(task98);
    }

    @Test
    public void test0317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0317");
        org.elasticsearch.index.shard.IndexShard indexShard0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.index("");
        java.lang.String str7 = deleteRequest4.toString();
        org.elasticsearch.index.VersionType versionType8 = deleteRequest4.versionType();
        org.elasticsearch.action.support.IndicesOptions indicesOptions9 = deleteRequest4.indicesOptions();
        org.elasticsearch.index.translog.Translog.Location location10 = null;
        org.elasticsearch.action.support.replication.TransportWriteAction.RespondingWriteResult respondingWriteResult11 = null;
        org.elasticsearch.common.logging.ESLogger eSLogger12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.postWriteActions(indexShard0, (org.elasticsearch.action.support.WriteRequest<org.elasticsearch.action.delete.DeleteRequest>) deleteRequest4, location10, respondingWriteResult11, eSLogger12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[][hi!][]}" + "'", str7, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(versionType8);
        org.junit.Assert.assertNotNull(indicesOptions9);
    }

    @Test
    public void test0318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0318");
        org.elasticsearch.action.support.replication.ReplicationTask replicationTask0 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.setPhase(replicationTask0, "delete {[][delete {[null][null][null]}][]}");
    }

    @Test
    public void test0319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0319");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[][hi!][]}][]}", "delete {[][hi!][delete {[][hi!][]}]}", "delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("delete {[][delete {[][hi!][]}][]}");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput6 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.writeTo(streamOutput6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
    }

    @Test
    public void test0320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0320");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str4 = deleteRequest3.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.routing("");
        org.elasticsearch.index.VersionType versionType14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest11.versionType(versionType14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str20 = deleteRequest19.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel21 = deleteRequest19.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.consistencyLevel(writeConsistencyLevel21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.version((long) '4');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.index("");
        java.lang.String str35 = deleteRequest32.toString();
        org.elasticsearch.tasks.TaskId taskId36 = deleteRequest32.getParentTask();
        deleteRequest28.setParentTask(taskId36);
        deleteRequest24.setParentTask(taskId36);
        deleteRequest7.setParentTask(taskId36);
        org.elasticsearch.common.io.stream.StreamInput streamInput40 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest7.readFrom(streamInput40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][hi!][]}" + "'", str4, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[][hi!][]}" + "'", str20, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel21 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel21.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "delete {[][hi!][]}" + "'", str35, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(taskId36);
    }

    @Test
    public void test0321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0321");
        org.elasticsearch.index.shard.IndexShard indexShard0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[][hi!][]}][]}", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.index("delete {[][hi!][]}");
        long long7 = deleteRequest6.version();
        boolean boolean8 = deleteRequest6.getShouldPersistResult();
        org.elasticsearch.action.support.IndicesOptions indicesOptions9 = deleteRequest6.indicesOptions();
        org.elasticsearch.index.translog.Translog.Location location10 = null;
        org.elasticsearch.action.support.replication.TransportWriteAction.RespondingWriteResult respondingWriteResult11 = null;
        org.elasticsearch.common.logging.ESLogger eSLogger12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.postWriteActions(indexShard0, (org.elasticsearch.action.support.WriteRequest<org.elasticsearch.action.delete.DeleteRequest>) deleteRequest6, location10, respondingWriteResult11, eSLogger12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-3L) + "'", long7 == (-3L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(indicesOptions9);
    }

    @Test
    public void test0322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0322");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.routing("");
        org.elasticsearch.index.VersionType versionType7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest4.versionType(versionType7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str13 = deleteRequest12.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest8.consistencyLevel(writeConsistencyLevel14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.routing("");
        org.elasticsearch.index.VersionType versionType22 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest19.versionType(versionType22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str28 = deleteRequest27.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = deleteRequest27.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest23.consistencyLevel(writeConsistencyLevel29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest8.consistencyLevel(writeConsistencyLevel29);
        org.elasticsearch.tasks.TaskId taskId32 = deleteRequest31.getParentTask();
        deleteRequest0.setParentTask(taskId32);
        long long34 = deleteRequest0.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest0.routing("");
        org.elasticsearch.index.shard.ShardId shardId37 = deleteRequest36.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest42.routing("");
        org.elasticsearch.index.VersionType versionType45 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest42.versionType(versionType45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str51 = deleteRequest50.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel52 = deleteRequest50.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest46.consistencyLevel(writeConsistencyLevel52);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest57.routing("");
        org.elasticsearch.index.VersionType versionType60 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest57.versionType(versionType60);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str66 = deleteRequest65.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel67 = deleteRequest65.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest61.consistencyLevel(writeConsistencyLevel67);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest46.consistencyLevel(writeConsistencyLevel67);
        org.elasticsearch.tasks.TaskId taskId70 = deleteRequest69.getParentTask();
        deleteRequest38.setParentTask(taskId70);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest75.index("");
        org.elasticsearch.common.unit.TimeValue timeValue78 = deleteRequest77.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = deleteRequest38.timeout(timeValue78);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = deleteRequest79.setRefreshPolicy("");
        java.lang.String str82 = deleteRequest79.parent();
        org.elasticsearch.common.unit.TimeValue timeValue83 = deleteRequest79.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = deleteRequest36.timeout(timeValue83);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput85 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest36.writeTo(streamOutput85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[][hi!][]}" + "'", str13, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "delete {[][hi!][]}" + "'", str28, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel29 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel29.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(taskId32);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-3L) + "'", long34 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNull(shardId37);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "delete {[][hi!][]}" + "'", str51, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel52 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel52.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "delete {[][hi!][]}" + "'", str66, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel67 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel67.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(taskId70);
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertNotNull(timeValue78);
        org.junit.Assert.assertNotNull(deleteRequest79);
        org.junit.Assert.assertNotNull(deleteRequest81);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNotNull(timeValue83);
        org.junit.Assert.assertNotNull(deleteRequest84);
    }

    @Test
    public void test0323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0323");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy9 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.index("");
        java.lang.String str20 = deleteRequest17.toString();
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest17.getParentTask();
        deleteRequest13.setParentTask(taskId21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.routing("");
        org.elasticsearch.index.VersionType versionType29 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest26.versionType(versionType29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str35 = deleteRequest34.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel36 = deleteRequest34.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest30.consistencyLevel(writeConsistencyLevel36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest13.consistencyLevel(writeConsistencyLevel36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest43.routing("");
        org.elasticsearch.index.VersionType versionType46 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest43.versionType(versionType46);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str52 = deleteRequest51.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel53 = deleteRequest51.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest47.consistencyLevel(writeConsistencyLevel53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest58.routing("");
        org.elasticsearch.index.VersionType versionType61 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest58.versionType(versionType61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str67 = deleteRequest66.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel68 = deleteRequest66.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest62.consistencyLevel(writeConsistencyLevel68);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest47.consistencyLevel(writeConsistencyLevel68);
        org.elasticsearch.tasks.TaskId taskId71 = deleteRequest70.getParentTask();
        deleteRequest39.setParentTask(taskId71);
        deleteRequest38.setParentTask(taskId71);
        org.elasticsearch.index.VersionType versionType74 = deleteRequest38.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest3.versionType(versionType74);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest75.type("delete {[null][null][null]}");
        java.lang.String str78 = deleteRequest75.routing();
        org.elasticsearch.common.transport.TransportAddress transportAddress79 = null;
        deleteRequest75.remoteAddress(transportAddress79);
        org.elasticsearch.index.shard.IndexShard indexShard81 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete82 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest75, indexShard81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(transportAddress8);
        org.junit.Assert.assertTrue("'" + refreshPolicy9 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy9.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[][hi!][]}" + "'", str20, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "delete {[][hi!][]}" + "'", str35, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel36 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel36.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "delete {[][hi!][]}" + "'", str52, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel53 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel53.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "delete {[][hi!][]}" + "'", str67, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel68 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel68.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNotNull(taskId71);
        org.junit.Assert.assertNotNull(versionType74);
        org.junit.Assert.assertNotNull(deleteRequest75);
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertNull(str78);
    }

    @Test
    public void test0324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0324");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.routing("");
        org.elasticsearch.index.VersionType versionType8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest5.versionType(versionType8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str14 = deleteRequest13.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel15 = deleteRequest13.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest9.consistencyLevel(writeConsistencyLevel15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.version((long) '4');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest16.routing("");
        long long21 = deleteRequest16.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest16.index("delete {[][null][null]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[][null][hi!]}", deleteRequest16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[][hi!][]}" + "'", str14, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel15 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel15.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 52L + "'", long21 == 52L);
        org.junit.Assert.assertNotNull(deleteRequest23);
    }

    @Test
    public void test0325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0325");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.version((long) '4');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.index("");
        java.lang.String str27 = deleteRequest24.toString();
        org.elasticsearch.tasks.TaskId taskId28 = deleteRequest24.getParentTask();
        deleteRequest20.setParentTask(taskId28);
        deleteRequest16.setParentTask(taskId28);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy31 = deleteRequest16.getRefreshPolicy();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput32 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest16.writeTo(streamOutput32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][hi!][]}" + "'", str27, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(taskId28);
        org.junit.Assert.assertTrue("'" + refreshPolicy31 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy31.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
    }

    @Test
    public void test0326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0326");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.routing("");
        org.elasticsearch.index.VersionType versionType21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str27 = deleteRequest26.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest7.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.type("delete {[][hi!][]}");
        long long33 = deleteRequest30.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest37.routing("");
        org.elasticsearch.index.VersionType versionType40 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest37.versionType(versionType40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str46 = deleteRequest45.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel47 = deleteRequest45.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest41.consistencyLevel(writeConsistencyLevel47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest52.routing("");
        org.elasticsearch.index.VersionType versionType55 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest52.versionType(versionType55);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str61 = deleteRequest60.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel62 = deleteRequest60.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest56.consistencyLevel(writeConsistencyLevel62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest41.consistencyLevel(writeConsistencyLevel62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest30.consistencyLevel(writeConsistencyLevel62);
        long long66 = deleteRequest30.primaryTerm();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput67 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest30.writeTo(streamOutput67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][hi!][]}" + "'", str27, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-3L) + "'", long33 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "delete {[][hi!][]}" + "'", str46, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel47 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel47.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "delete {[][hi!][]}" + "'", str61, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel62 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel62.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 0L + "'", long66 == 0L);
    }

    @Test
    public void test0327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0327");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        java.lang.String str2 = deleteRequest1.toString();
        long long3 = deleteRequest1.primaryTerm();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException4 = deleteRequest1.validate();
        java.lang.Class<?> wildcardClass5 = actionRequestValidationException4.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "delete {[][null][null]}" + "'", str2, "delete {[][null][null]}");
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(actionRequestValidationException4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0328");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.version((long) '4');
        org.elasticsearch.index.VersionType versionType17 = deleteRequest14.versionType();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest14.setShardId(shardId18);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.setShardId(shardId20);
        java.lang.String str22 = deleteRequest14.id();
        java.lang.String str23 = deleteRequest14.toString();
        java.lang.Class<?> wildcardClass24 = deleteRequest14.getClass();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNull(versionType17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[][hi!][]}" + "'", str23, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0329");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("delete {[][delete {[][hi!][]}][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress7 = null;
        deleteRequest3.remoteAddress(transportAddress7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.routing("");
        org.elasticsearch.index.VersionType versionType15 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest12.versionType(versionType15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str21 = deleteRequest20.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel22 = deleteRequest20.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest16.consistencyLevel(writeConsistencyLevel22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest3.consistencyLevel(writeConsistencyLevel22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest24.parent("delete {[][delete {[][hi!][]}][delete {[][hi!][]}]}");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput29 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest28.writeTo(streamOutput29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[][hi!][]}" + "'", str21, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel22 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel22.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
    }

    @Test
    public void test0330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0330");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str4 = deleteRequest3.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.setRefreshPolicy("");
        java.lang.String[] strArray10 = deleteRequest7.indices();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.setRefreshPolicy("delete {[][hi!][delete {[][hi!][]}]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[][hi!][delete {[][hi!][]}]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][hi!][]}" + "'", str4, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(strArray10);
    }

    @Test
    public void test0331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0331");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.version((long) '4');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest14.routing("");
        long long19 = deleteRequest14.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.index("delete {[][null][null]}");
        java.lang.String[] strArray22 = deleteRequest21.indices();
        java.lang.Class<?> wildcardClass23 = strArray22.getClass();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 52L + "'", long19 == 52L);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0332");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy1 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.setRefreshPolicy(refreshPolicy1);
        org.elasticsearch.common.transport.TransportAddress transportAddress3 = deleteRequest0.remoteAddress();
        org.elasticsearch.index.VersionType versionType4 = deleteRequest0.versionType();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput5 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest0.writeTo(streamOutput5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(transportAddress3);
        org.junit.Assert.assertNotNull(versionType4);
    }

    @Test
    public void test0333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0333");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[hi!][null][null]}", "delete {[][null][null]}");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput4 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.writeTo(streamOutput4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0334");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.setShardId(shardId2);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy6 = deleteRequest5.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.setRefreshPolicy(refreshPolicy6);
        org.elasticsearch.index.VersionType versionType8 = deleteRequest1.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest1.type("");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.setRefreshPolicy("delete {[delete {[][delete {[][hi!][]}][]}][hi!][]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[delete {[][delete {[][hi!][]}][]}][hi!][]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertTrue("'" + refreshPolicy6 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy6.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(versionType8);
        org.junit.Assert.assertNotNull(deleteRequest10);
    }

    @Test
    public void test0335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0335");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[][hi!][]}][]}", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.index("delete {[][hi!][]}");
        long long6 = deleteRequest5.version();
        org.elasticsearch.index.VersionType versionType7 = deleteRequest5.versionType();
        boolean boolean8 = deleteRequest5.getShouldPersistResult();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput9 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest5.writeTo(streamOutput9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-3L) + "'", long6 == (-3L));
        org.junit.Assert.assertNotNull(versionType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0336");
        org.elasticsearch.index.shard.IndexShard indexShard0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest2.primaryTerm(10L);
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest2.getParentTask();
        org.elasticsearch.index.translog.Translog.Location location6 = null;
        org.elasticsearch.action.support.replication.TransportWriteAction.RespondingWriteResult respondingWriteResult7 = null;
        org.elasticsearch.common.logging.ESLogger eSLogger8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.postWriteActions(indexShard0, (org.elasticsearch.action.support.WriteRequest<org.elasticsearch.action.delete.DeleteRequest>) deleteRequest2, location6, respondingWriteResult7, eSLogger8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(taskId5);
    }

    @Test
    public void test0337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0337");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.tasks.TaskId taskId6 = null;
        deleteRequest5.setParentTask(taskId6);
        java.lang.String str8 = deleteRequest5.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy11 = deleteRequest10.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest5.setRefreshPolicy(refreshPolicy11);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException13 = deleteRequest5.validate();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest5.setRefreshPolicy("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [hi!].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[][hi!][]}" + "'", str8, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + refreshPolicy11 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy11.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(actionRequestValidationException13);
    }

    @Test
    public void test0338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0338");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest1.primaryTerm(10L);
        java.lang.String[] strArray4 = deleteRequest1.indices();
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = deleteRequest1.remoteAddress();
        java.lang.String str6 = deleteRequest1.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest1.routing("delete {[][hi!][]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel9 = deleteRequest8.consistencyLevel();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest8.timeout("delete {[][null][null]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[][null][null]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNull(transportAddress5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel9 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel9.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test0339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0339");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.index("");
        org.elasticsearch.common.unit.TimeValue timeValue6 = deleteRequest5.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.version((long) 0);
        org.elasticsearch.index.shard.IndexShard indexShard9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete10 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest5, indexShard9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest8);
    }

    @Test
    public void test0340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0340");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.setRefreshPolicy("");
        long long8 = deleteRequest7.primaryTerm();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.setRefreshPolicy("delete {[delete {[][delete {[][hi!][]}][]}][hi!][]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[delete {[][delete {[][hi!][]}][]}][hi!][]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
    }

    @Test
    public void test0341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0341");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy9 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.index("");
        java.lang.String str20 = deleteRequest17.toString();
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest17.getParentTask();
        deleteRequest13.setParentTask(taskId21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.routing("");
        org.elasticsearch.index.VersionType versionType29 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest26.versionType(versionType29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str35 = deleteRequest34.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel36 = deleteRequest34.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest30.consistencyLevel(writeConsistencyLevel36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest13.consistencyLevel(writeConsistencyLevel36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest43.routing("");
        org.elasticsearch.index.VersionType versionType46 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest43.versionType(versionType46);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str52 = deleteRequest51.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel53 = deleteRequest51.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest47.consistencyLevel(writeConsistencyLevel53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest58.routing("");
        org.elasticsearch.index.VersionType versionType61 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest58.versionType(versionType61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str67 = deleteRequest66.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel68 = deleteRequest66.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest62.consistencyLevel(writeConsistencyLevel68);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest47.consistencyLevel(writeConsistencyLevel68);
        org.elasticsearch.tasks.TaskId taskId71 = deleteRequest70.getParentTask();
        deleteRequest39.setParentTask(taskId71);
        deleteRequest38.setParentTask(taskId71);
        org.elasticsearch.index.VersionType versionType74 = deleteRequest38.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest3.versionType(versionType74);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest75.type("delete {[null][null][null]}");
        java.lang.String str78 = deleteRequest75.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = deleteRequest75.parent("delete {[null][null][null]}");
        java.lang.Class<?> wildcardClass81 = deleteRequest75.getClass();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(transportAddress8);
        org.junit.Assert.assertTrue("'" + refreshPolicy9 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy9.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[][hi!][]}" + "'", str20, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "delete {[][hi!][]}" + "'", str35, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel36 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel36.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "delete {[][hi!][]}" + "'", str52, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel53 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel53.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "delete {[][hi!][]}" + "'", str67, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel68 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel68.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNotNull(taskId71);
        org.junit.Assert.assertNotNull(versionType74);
        org.junit.Assert.assertNotNull(deleteRequest75);
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNotNull(deleteRequest80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0342");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str4 = deleteRequest3.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("");
        deleteRequest7.setParentTask("delete {[][null][null]}", 0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.routing("delete {[][delete {[][hi!][]}][delete {[][hi!][]}]}");
        org.elasticsearch.index.shard.IndexShard indexShard13 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult14 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest12, indexShard13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][hi!][]}" + "'", str4, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest12);
    }

    @Test
    public void test0343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0343");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy9 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.index("");
        java.lang.String str20 = deleteRequest17.toString();
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest17.getParentTask();
        deleteRequest13.setParentTask(taskId21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.routing("");
        org.elasticsearch.index.VersionType versionType29 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest26.versionType(versionType29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str35 = deleteRequest34.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel36 = deleteRequest34.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest30.consistencyLevel(writeConsistencyLevel36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest13.consistencyLevel(writeConsistencyLevel36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest43.routing("");
        org.elasticsearch.index.VersionType versionType46 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest43.versionType(versionType46);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str52 = deleteRequest51.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel53 = deleteRequest51.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest47.consistencyLevel(writeConsistencyLevel53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest58.routing("");
        org.elasticsearch.index.VersionType versionType61 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest58.versionType(versionType61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str67 = deleteRequest66.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel68 = deleteRequest66.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest62.consistencyLevel(writeConsistencyLevel68);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest47.consistencyLevel(writeConsistencyLevel68);
        org.elasticsearch.tasks.TaskId taskId71 = deleteRequest70.getParentTask();
        deleteRequest39.setParentTask(taskId71);
        deleteRequest38.setParentTask(taskId71);
        org.elasticsearch.index.VersionType versionType74 = deleteRequest38.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest3.versionType(versionType74);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest75.type("delete {[null][null][null]}");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput78 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest77.writeTo(streamOutput78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(transportAddress8);
        org.junit.Assert.assertTrue("'" + refreshPolicy9 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy9.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[][hi!][]}" + "'", str20, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "delete {[][hi!][]}" + "'", str35, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel36 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel36.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "delete {[][hi!][]}" + "'", str52, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel53 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel53.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "delete {[][hi!][]}" + "'", str67, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel68 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel68.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNotNull(taskId71);
        org.junit.Assert.assertNotNull(versionType74);
        org.junit.Assert.assertNotNull(deleteRequest75);
        org.junit.Assert.assertNotNull(deleteRequest77);
    }

    @Test
    public void test0344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0344");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str4 = deleteRequest3.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.type("delete {[][null][null]}");
        org.elasticsearch.tasks.TaskId taskId15 = null;
        org.elasticsearch.tasks.Task task16 = deleteRequest11.createTask((long) (-1), "delete {[hi!][hi!][]}", "delete {[][hi!][delete {[][hi!][]}]}", taskId15);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest11.timeout("");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][hi!][]}" + "'", str4, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(task16);
    }

    @Test
    public void test0345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0345");
        org.elasticsearch.index.shard.IndexShard indexShard0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str5 = deleteRequest4.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = deleteRequest4.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest4.id("");
        java.lang.String str9 = deleteRequest4.id();
        org.elasticsearch.action.support.IndicesOptions indicesOptions10 = deleteRequest4.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.routing("");
        org.elasticsearch.index.VersionType versionType17 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest14.versionType(versionType17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str23 = deleteRequest22.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel24 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest18.consistencyLevel(writeConsistencyLevel24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.routing("");
        org.elasticsearch.index.VersionType versionType32 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest29.versionType(versionType32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str38 = deleteRequest37.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel39 = deleteRequest37.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest33.consistencyLevel(writeConsistencyLevel39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest18.consistencyLevel(writeConsistencyLevel39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest41.type("delete {[][hi!][]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy44 = deleteRequest43.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        long long49 = deleteRequest48.version();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy50 = deleteRequest48.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest43.setRefreshPolicy(refreshPolicy50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest4.setRefreshPolicy(refreshPolicy50);
        org.elasticsearch.index.translog.Translog.Location location53 = null;
        org.elasticsearch.action.support.replication.TransportWriteAction.RespondingWriteResult respondingWriteResult54 = null;
        org.elasticsearch.common.logging.ESLogger eSLogger55 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.postWriteActions(indexShard0, (org.elasticsearch.action.support.WriteRequest<org.elasticsearch.action.delete.DeleteRequest>) deleteRequest4, location53, respondingWriteResult54, eSLogger55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[][hi!][]}" + "'", str5, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel6 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel6.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(indicesOptions10);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[][hi!][]}" + "'", str23, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel24 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel24.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "delete {[][hi!][]}" + "'", str38, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel39 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel39.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertTrue("'" + refreshPolicy44 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy44.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-3L) + "'", long49 == (-3L));
        org.junit.Assert.assertTrue("'" + refreshPolicy50 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy50.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest52);
    }

    @Test
    public void test0346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0346");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.id("delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.index("");
        java.lang.String str18 = deleteRequest15.toString();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest15.getParentTask();
        deleteRequest11.setParentTask(taskId19);
        java.lang.String[] strArray21 = deleteRequest11.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.routing("");
        org.elasticsearch.tasks.TaskId taskId28 = null;
        deleteRequest27.setParentTask(taskId28);
        java.lang.String str30 = deleteRequest27.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy33 = deleteRequest32.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest27.setRefreshPolicy(refreshPolicy33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest11.setRefreshPolicy(refreshPolicy33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest5.setRefreshPolicy(refreshPolicy33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest40.index("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy43 = deleteRequest42.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy45 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest44.setRefreshPolicy(refreshPolicy45);
        org.elasticsearch.common.transport.TransportAddress transportAddress47 = deleteRequest44.remoteAddress();
        org.elasticsearch.index.VersionType versionType48 = deleteRequest44.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest42.versionType(versionType48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest36.versionType(versionType48);
        org.elasticsearch.common.io.stream.StreamInput streamInput51 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest36.readFrom(streamInput51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[][hi!][]}" + "'", str18, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "delete {[][hi!][]}" + "'", str30, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + refreshPolicy33 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy33.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertTrue("'" + refreshPolicy43 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy43.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNull(transportAddress47);
        org.junit.Assert.assertNotNull(versionType48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest50);
    }

    @Test
    public void test0347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0347");
        org.elasticsearch.index.shard.IndexShard indexShard0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.routing("");
        org.elasticsearch.index.VersionType versionType7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest4.versionType(versionType7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str13 = deleteRequest12.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest8.consistencyLevel(writeConsistencyLevel14);
        org.elasticsearch.common.unit.TimeValue timeValue16 = deleteRequest15.timeout();
        org.elasticsearch.index.VersionType versionType17 = deleteRequest15.versionType();
        org.elasticsearch.index.translog.Translog.Location location18 = null;
        org.elasticsearch.action.support.replication.TransportWriteAction.RespondingWriteResult respondingWriteResult19 = null;
        org.elasticsearch.common.logging.ESLogger eSLogger20 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.postWriteActions(indexShard0, (org.elasticsearch.action.support.WriteRequest<org.elasticsearch.action.delete.DeleteRequest>) deleteRequest15, location18, respondingWriteResult19, eSLogger20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[][hi!][]}" + "'", str13, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNull(versionType17);
    }

    @Test
    public void test0348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0348");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.routing("");
        org.elasticsearch.index.VersionType versionType21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str27 = deleteRequest26.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest7.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.tasks.TaskId taskId31 = deleteRequest30.getParentTask();
        java.lang.String str32 = deleteRequest30.getDescription();
        org.elasticsearch.common.transport.TransportAddress transportAddress33 = null;
        deleteRequest30.remoteAddress(transportAddress33);
        long long35 = deleteRequest30.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str40 = deleteRequest39.toString();
        deleteRequest39.primaryTerm(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest46.routing("");
        org.elasticsearch.index.VersionType versionType49 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest46.versionType(versionType49);
        org.elasticsearch.common.transport.TransportAddress transportAddress51 = deleteRequest46.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy52 = deleteRequest46.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest39.setRefreshPolicy(refreshPolicy52);
        long long54 = deleteRequest53.version();
        long long55 = deleteRequest53.version();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy56 = deleteRequest53.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest30.setRefreshPolicy(refreshPolicy56);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest57.version(52L);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException60 = deleteRequest59.validate();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][hi!][]}" + "'", str27, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(taskId31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[][hi!][]}" + "'", str32, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-3L) + "'", long35 == (-3L));
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "delete {[][hi!][]}" + "'", str40, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNull(transportAddress51);
        org.junit.Assert.assertTrue("'" + refreshPolicy52 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy52.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + (-3L) + "'", long54 == (-3L));
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + (-3L) + "'", long55 == (-3L));
        org.junit.Assert.assertTrue("'" + refreshPolicy56 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy56.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(deleteRequest59);
    }

    @Test
    public void test0349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0349");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][delete {[][hi!][]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.index("delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard indexShard6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult7 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest5, indexShard6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
    }

    @Test
    public void test0350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0350");
        org.elasticsearch.action.support.replication.ReplicationTask replicationTask0 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.setPhase(replicationTask0, "delete {[][hi!][delete {[][hi!][]}]}");
    }

    @Test
    public void test0351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0351");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[][hi!][]}][]}", "delete {[null][null][null]}", "delete {[null][null][null]}");
        org.elasticsearch.tasks.TaskId taskId4 = deleteRequest3.getParentTask();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.timeout("delete {[delete {[][null][null]}][delete {[][null][null]}][delete {[][null][null]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[][null][null]}][delete {[][null][null]}][delete {[][null][null]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(taskId4);
    }

    @Test
    public void test0352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0352");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str4 = deleteRequest3.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("");
        deleteRequest7.setParentTask("delete {[][null][null]}", 0L);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput11 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest7.writeTo(streamOutput11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][hi!][]}" + "'", str4, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest7);
    }

    @Test
    public void test0353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0353");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[][hi!][]}][]}", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.index("delete {[][hi!][]}");
        long long6 = deleteRequest5.version();
        boolean boolean7 = deleteRequest5.getShouldPersistResult();
        org.elasticsearch.action.support.IndicesOptions indicesOptions8 = deleteRequest5.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.routing("");
        org.elasticsearch.index.VersionType versionType15 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest12.versionType(versionType15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str21 = deleteRequest20.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel22 = deleteRequest20.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest16.consistencyLevel(writeConsistencyLevel22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.version((long) '4');
        org.elasticsearch.index.VersionType versionType26 = deleteRequest23.versionType();
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest23.setShardId(shardId27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.version((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.index("");
        java.lang.String str41 = deleteRequest38.toString();
        org.elasticsearch.tasks.TaskId taskId42 = deleteRequest38.getParentTask();
        deleteRequest34.setParentTask(taskId42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest47.routing("");
        org.elasticsearch.index.VersionType versionType50 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest47.versionType(versionType50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str56 = deleteRequest55.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel57 = deleteRequest55.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest51.consistencyLevel(writeConsistencyLevel57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest34.consistencyLevel(writeConsistencyLevel57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest64.routing("");
        org.elasticsearch.index.VersionType versionType67 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest64.versionType(versionType67);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str73 = deleteRequest72.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel74 = deleteRequest72.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest68.consistencyLevel(writeConsistencyLevel74);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = deleteRequest79.routing("");
        org.elasticsearch.index.VersionType versionType82 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest83 = deleteRequest79.versionType(versionType82);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str88 = deleteRequest87.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel89 = deleteRequest87.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest90 = deleteRequest83.consistencyLevel(writeConsistencyLevel89);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest91 = deleteRequest68.consistencyLevel(writeConsistencyLevel89);
        org.elasticsearch.tasks.TaskId taskId92 = deleteRequest91.getParentTask();
        deleteRequest60.setParentTask(taskId92);
        deleteRequest59.setParentTask(taskId92);
        org.elasticsearch.index.VersionType versionType95 = deleteRequest59.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest96 = deleteRequest28.versionType(versionType95);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest97 = deleteRequest5.versionType(versionType95);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest99 = deleteRequest97.timeout("delete {[][hi!][]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[][hi!][]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-3L) + "'", long6 == (-3L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(indicesOptions8);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[][hi!][]}" + "'", str21, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel22 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel22.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNull(versionType26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "delete {[][hi!][]}" + "'", str41, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(taskId42);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "delete {[][hi!][]}" + "'", str56, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel57 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel57.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "delete {[][hi!][]}" + "'", str73, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel74 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel74.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest75);
        org.junit.Assert.assertNotNull(deleteRequest81);
        org.junit.Assert.assertNotNull(deleteRequest83);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "delete {[][hi!][]}" + "'", str88, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel89 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel89.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest90);
        org.junit.Assert.assertNotNull(deleteRequest91);
        org.junit.Assert.assertNotNull(taskId92);
        org.junit.Assert.assertNotNull(versionType95);
        org.junit.Assert.assertNotNull(deleteRequest96);
        org.junit.Assert.assertNotNull(deleteRequest97);
    }

    @Test
    public void test0354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0354");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str4 = deleteRequest3.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.setRefreshPolicy("");
        java.lang.String[] strArray10 = deleteRequest7.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.id("delete {[delete {[][null][null]}][delete {[][null][null]}][delete {[][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.type("delete {[][hi!][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.routing("");
        org.elasticsearch.index.VersionType versionType21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.versionType(versionType21);
        org.elasticsearch.common.transport.TransportAddress transportAddress23 = deleteRequest18.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy24 = deleteRequest18.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.index("");
        java.lang.String str35 = deleteRequest32.toString();
        org.elasticsearch.tasks.TaskId taskId36 = deleteRequest32.getParentTask();
        deleteRequest28.setParentTask(taskId36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest41.routing("");
        org.elasticsearch.index.VersionType versionType44 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest41.versionType(versionType44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str50 = deleteRequest49.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel51 = deleteRequest49.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest45.consistencyLevel(writeConsistencyLevel51);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest28.consistencyLevel(writeConsistencyLevel51);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest58.routing("");
        org.elasticsearch.index.VersionType versionType61 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest58.versionType(versionType61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str67 = deleteRequest66.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel68 = deleteRequest66.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest62.consistencyLevel(writeConsistencyLevel68);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest73.routing("");
        org.elasticsearch.index.VersionType versionType76 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest73.versionType(versionType76);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str82 = deleteRequest81.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel83 = deleteRequest81.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = deleteRequest77.consistencyLevel(writeConsistencyLevel83);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest85 = deleteRequest62.consistencyLevel(writeConsistencyLevel83);
        org.elasticsearch.tasks.TaskId taskId86 = deleteRequest85.getParentTask();
        deleteRequest54.setParentTask(taskId86);
        deleteRequest53.setParentTask(taskId86);
        org.elasticsearch.index.VersionType versionType89 = deleteRequest53.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest90 = deleteRequest18.versionType(versionType89);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest92 = deleteRequest90.type("delete {[null][null][null]}");
        java.lang.String str93 = deleteRequest92.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel94 = deleteRequest92.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest95 = deleteRequest12.consistencyLevel(writeConsistencyLevel94);
        long long96 = deleteRequest95.version();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][hi!][]}" + "'", str4, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNull(transportAddress23);
        org.junit.Assert.assertTrue("'" + refreshPolicy24 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy24.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "delete {[][hi!][]}" + "'", str35, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(taskId36);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "delete {[][hi!][]}" + "'", str50, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel51 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel51.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "delete {[][hi!][]}" + "'", str67, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel68 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel68.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(deleteRequest75);
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "delete {[][hi!][]}" + "'", str82, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel83 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel83.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest84);
        org.junit.Assert.assertNotNull(deleteRequest85);
        org.junit.Assert.assertNotNull(taskId86);
        org.junit.Assert.assertNotNull(versionType89);
        org.junit.Assert.assertNotNull(deleteRequest90);
        org.junit.Assert.assertNotNull(deleteRequest92);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "delete {[][delete {[null][null][null]}][]}" + "'", str93, "delete {[][delete {[null][null][null]}][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel94 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel94.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest95);
        org.junit.Assert.assertTrue("'" + long96 + "' != '" + (-3L) + "'", long96 == (-3L));
    }

    @Test
    public void test0355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0355");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.routing("");
        org.elasticsearch.index.VersionType versionType21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str27 = deleteRequest26.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest7.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.tasks.TaskId taskId31 = deleteRequest30.getParentTask();
        java.lang.String str32 = deleteRequest30.getDescription();
        java.lang.String str33 = deleteRequest30.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest30.version((long) (byte) 10);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput36 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest30.writeTo(streamOutput36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][hi!][]}" + "'", str27, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(taskId31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[][hi!][]}" + "'", str32, "delete {[][hi!][]}");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(deleteRequest35);
    }

    @Test
    public void test0356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0356");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.setRefreshPolicy("");
        java.lang.String str8 = deleteRequest5.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.parent("");
        java.lang.String[] strArray11 = deleteRequest5.indices();
        long long12 = deleteRequest5.primaryTerm();
        long long13 = deleteRequest5.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest5.type("delete {[hi!][hi!][]}");
        boolean boolean16 = deleteRequest5.getShouldPersistResult();
        org.elasticsearch.index.shard.IndexShard indexShard17 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult18 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest5, indexShard17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-3L) + "'", long13 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test0357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0357");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.index("");
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest3.remoteAddress(transportAddress6);
        org.elasticsearch.index.VersionType versionType8 = deleteRequest3.versionType();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput9 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.writeTo(streamOutput9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(versionType8);
    }

    @Test
    public void test0358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0358");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest3.primaryTerm(10L);
        java.lang.String[] strArray6 = deleteRequest3.indices();
        org.elasticsearch.common.transport.TransportAddress transportAddress7 = deleteRequest3.remoteAddress();
        java.lang.String str8 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.routing("delete {[][hi!][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.parent("delete {[][hi!][]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "", deleteRequest10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNull(transportAddress7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
    }

    @Test
    public void test0359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0359");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.routing("");
        org.elasticsearch.index.VersionType versionType24 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest21.versionType(versionType24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str30 = deleteRequest29.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel31 = deleteRequest29.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest25.consistencyLevel(writeConsistencyLevel31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest36.routing("");
        org.elasticsearch.index.VersionType versionType39 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest36.versionType(versionType39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str45 = deleteRequest44.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel46 = deleteRequest44.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest40.consistencyLevel(writeConsistencyLevel46);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest25.consistencyLevel(writeConsistencyLevel46);
        org.elasticsearch.tasks.TaskId taskId49 = deleteRequest48.getParentTask();
        org.elasticsearch.tasks.Task task50 = deleteRequest7.createTask((long) (-1), "delete {[][hi!][]}", "delete {[][hi!][]}", taskId49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest7.index("delete {[][hi!][delete {[][hi!][]}]}");
        org.elasticsearch.tasks.TaskId taskId53 = deleteRequest7.getParentTask();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel54 = deleteRequest7.consistencyLevel();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "delete {[][hi!][]}" + "'", str30, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel31 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel31.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "delete {[][hi!][]}" + "'", str45, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel46 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel46.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(taskId49);
        org.junit.Assert.assertNotNull(task50);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(taskId53);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel54 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel54.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test0360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0360");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        java.lang.String str2 = deleteRequest1.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.parent("delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest1.version((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.parent("delete {[][null][null]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.setRefreshPolicy("delete {[delete {[][null][null]}][delete {[][null][null]}][delete {[][null][null]}]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[delete {[][null][null]}][delete {[][null][null]}][delete {[][null][null]}]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "delete {[][null][null]}" + "'", str2, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
    }

    @Test
    public void test0361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0361");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "delete {[][hi!][]}", "delete {[][null][hi!]}");
    }

    @Test
    public void test0362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0362");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str4 = deleteRequest3.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.setRefreshPolicy("");
        boolean boolean10 = deleteRequest9.getShouldPersistResult();
        java.lang.String str11 = deleteRequest9.routing();
        org.elasticsearch.index.shard.ShardId shardId12 = deleteRequest9.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.common.transport.TransportAddress transportAddress17 = deleteRequest16.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.routing("");
        org.elasticsearch.index.VersionType versionType24 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest21.versionType(versionType24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str30 = deleteRequest29.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel31 = deleteRequest29.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest25.consistencyLevel(writeConsistencyLevel31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest36.routing("");
        org.elasticsearch.index.VersionType versionType39 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest36.versionType(versionType39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str45 = deleteRequest44.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel46 = deleteRequest44.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest40.consistencyLevel(writeConsistencyLevel46);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest25.consistencyLevel(writeConsistencyLevel46);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest48.type("delete {[][hi!][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest50.routing("delete {[][null][null]}");
        org.elasticsearch.tasks.TaskId taskId53 = deleteRequest50.getParentTask();
        deleteRequest16.setParentTask(taskId53);
        org.elasticsearch.tasks.Task task55 = deleteRequest9.createTask((-3L), "delete {[][delete {[][hi!][]}][]}", "hi!", taskId53);
        java.lang.String str56 = deleteRequest9.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest63.routing("");
        org.elasticsearch.index.VersionType versionType66 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest63.versionType(versionType66);
        org.elasticsearch.index.VersionType versionType68 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest63.versionType(versionType68);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest63.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str76 = deleteRequest75.toString();
        deleteRequest75.primaryTerm(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest82 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = deleteRequest82.routing("");
        org.elasticsearch.index.VersionType versionType85 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest86 = deleteRequest82.versionType(versionType85);
        org.elasticsearch.common.transport.TransportAddress transportAddress87 = deleteRequest82.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy88 = deleteRequest82.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest89 = deleteRequest75.setRefreshPolicy(refreshPolicy88);
        org.elasticsearch.tasks.TaskId taskId90 = deleteRequest89.getParentTask();
        deleteRequest63.setParentTask(taskId90);
        org.elasticsearch.tasks.Task task92 = deleteRequest9.createTask(0L, "delete {[][delete {[][hi!][]}][]}", "delete {[][delete {[][hi!][]}][delete {[][hi!][]}]}", taskId90);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][hi!][]}" + "'", str4, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(shardId12);
        org.junit.Assert.assertNull(transportAddress17);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "delete {[][hi!][]}" + "'", str30, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel31 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel31.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "delete {[][hi!][]}" + "'", str45, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel46 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel46.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(taskId53);
        org.junit.Assert.assertNotNull(task55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "delete {[][hi!][]}" + "'", str76, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(deleteRequest84);
        org.junit.Assert.assertNotNull(deleteRequest86);
        org.junit.Assert.assertNull(transportAddress87);
        org.junit.Assert.assertTrue("'" + refreshPolicy88 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy88.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest89);
        org.junit.Assert.assertNotNull(taskId90);
        org.junit.Assert.assertNotNull(task92);
    }

    @Test
    public void test0363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0363");
        org.elasticsearch.index.shard.IndexShard indexShard0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.routing("");
        org.elasticsearch.index.VersionType versionType7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest4.versionType(versionType7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str13 = deleteRequest12.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest8.consistencyLevel(writeConsistencyLevel14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.version((long) '4');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest15.routing("");
        long long20 = deleteRequest15.version();
        org.elasticsearch.index.translog.Translog.Location location21 = null;
        org.elasticsearch.action.support.replication.TransportWriteAction.RespondingWriteResult respondingWriteResult22 = null;
        org.elasticsearch.common.logging.ESLogger eSLogger23 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.postWriteActions(indexShard0, (org.elasticsearch.action.support.WriteRequest<org.elasticsearch.action.delete.DeleteRequest>) deleteRequest15, location21, respondingWriteResult22, eSLogger23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[][hi!][]}" + "'", str13, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 52L + "'", long20 == 52L);
    }

    @Test
    public void test0364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0364");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.setShardId(shardId2);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest1.index("hi!");
        java.lang.String str6 = deleteRequest1.toString();
        org.elasticsearch.action.support.IndicesOptions indicesOptions7 = deleteRequest1.indicesOptions();
        java.lang.String str8 = deleteRequest1.routing();
        org.elasticsearch.index.shard.IndexShard indexShard9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete10 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest1, indexShard9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[hi!][null][null]}" + "'", str6, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(indicesOptions7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test0365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0365");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest5.version((long) (-1));
        org.elasticsearch.common.io.stream.StreamInput streamInput10 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest5.readFrom(streamInput10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
    }

    @Test
    public void test0366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0366");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][delete {[][hi!][]}][delete {[][hi!][]}]}][hi!][]}");
        java.lang.String str2 = deleteRequest1.index();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "delete {[delete {[][delete {[][hi!][]}][delete {[][hi!][]}]}][hi!][]}" + "'", str2, "delete {[delete {[][delete {[][hi!][]}][delete {[][hi!][]}]}][hi!][]}");
    }

    @Test
    public void test0367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0367");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        java.lang.String str15 = deleteRequest7.getDescription();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput16 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest7.writeTo(streamOutput16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[][hi!][]}" + "'", str15, "delete {[][hi!][]}");
    }

    @Test
    public void test0368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0368");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        java.lang.String str2 = deleteRequest1.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.index("");
        java.lang.String str9 = deleteRequest6.toString();
        org.elasticsearch.index.VersionType versionType10 = deleteRequest6.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest1.versionType(versionType10);
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest1.indicesOptions();
        java.lang.Class<?> wildcardClass13 = indicesOptions12.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "delete {[][null][null]}" + "'", str2, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[][hi!][]}" + "'", str9, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(versionType10);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(indicesOptions12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0369");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.setShardId(shardId2);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest1.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.parent("delete {[null][null][null]}");
        java.lang.String[] strArray8 = deleteRequest1.indices();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput9 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest1.writeTo(streamOutput9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(strArray8);
    }

    @Test
    public void test0370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0370");
        org.elasticsearch.index.shard.IndexShard indexShard0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][null][null]}", "delete {[][null][null]}", "delete {[][null][null]}");
        long long5 = deleteRequest4.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest4.type("delete {[null][null][null]}");
        org.elasticsearch.index.translog.Translog.Location location8 = null;
        org.elasticsearch.action.support.replication.TransportWriteAction.RespondingWriteResult respondingWriteResult9 = null;
        org.elasticsearch.common.logging.ESLogger eSLogger10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.postWriteActions(indexShard0, (org.elasticsearch.action.support.WriteRequest<org.elasticsearch.action.delete.DeleteRequest>) deleteRequest7, location8, respondingWriteResult9, eSLogger10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest7);
    }

    @Test
    public void test0371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0371");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.index("");
        org.elasticsearch.common.unit.TimeValue timeValue6 = deleteRequest5.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.version((long) 0);
        java.lang.Class<?> wildcardClass9 = deleteRequest5.getClass();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0372");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][hi!][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str6 = deleteRequest5.toString();
        deleteRequest5.primaryTerm(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.routing("");
        org.elasticsearch.index.VersionType versionType15 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest12.versionType(versionType15);
        org.elasticsearch.common.transport.TransportAddress transportAddress17 = deleteRequest12.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy18 = deleteRequest12.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest5.setRefreshPolicy(refreshPolicy18);
        long long20 = deleteRequest19.version();
        long long21 = deleteRequest19.version();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy22 = deleteRequest19.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest1.setRefreshPolicy(refreshPolicy22);
        org.elasticsearch.index.shard.IndexShard indexShard24 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult25 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest23, indexShard24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][hi!][]}" + "'", str6, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNull(transportAddress17);
        org.junit.Assert.assertTrue("'" + refreshPolicy18 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy18.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-3L) + "'", long20 == (-3L));
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-3L) + "'", long21 == (-3L));
        org.junit.Assert.assertTrue("'" + refreshPolicy22 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy22.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest23);
    }

    @Test
    public void test0373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0373");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str4 = deleteRequest3.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest7.parent("delete {[][hi!][]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest7.indicesOptions();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.setRefreshPolicy("delete {[][delete {[][hi!][]}][delete {[][hi!][]}]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[][delete {[][hi!][]}][delete {[][hi!][]}]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][hi!][]}" + "'", str4, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(indicesOptions12);
    }

    @Test
    public void test0374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0374");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        java.lang.String str15 = deleteRequest14.index();
        deleteRequest14.primaryTerm((long) (short) 0);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput18 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest14.writeTo(streamOutput18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test0375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0375");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest1.primaryTerm(10L);
        java.lang.String[] strArray4 = deleteRequest1.indices();
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = deleteRequest1.remoteAddress();
        java.lang.String str6 = deleteRequest1.id();
        org.elasticsearch.common.unit.TimeValue timeValue7 = deleteRequest1.timeout();
        java.lang.String str8 = deleteRequest1.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.index("");
        org.elasticsearch.common.transport.TransportAddress transportAddress18 = null;
        deleteRequest15.remoteAddress(transportAddress18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.routing("");
        org.elasticsearch.index.VersionType versionType26 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest23.versionType(versionType26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str32 = deleteRequest31.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel33 = deleteRequest31.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest27.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.routing("");
        org.elasticsearch.index.VersionType versionType41 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest38.versionType(versionType41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str47 = deleteRequest46.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel48 = deleteRequest46.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest42.consistencyLevel(writeConsistencyLevel48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest27.consistencyLevel(writeConsistencyLevel48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest15.consistencyLevel(writeConsistencyLevel48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest51.type("delete {[][hi!][]}");
        org.elasticsearch.tasks.TaskId taskId54 = deleteRequest51.getParentTask();
        org.elasticsearch.tasks.Task task55 = deleteRequest1.createTask((long) (short) 0, "delete {[delete {[][delete {[][hi!][]}][delete {[][hi!][]}]}][hi!][]}", "", taskId54);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNull(transportAddress5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(timeValue7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[][hi!][]}" + "'", str32, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel33 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel33.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "delete {[][hi!][]}" + "'", str47, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel48 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel48.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(taskId54);
        org.junit.Assert.assertNotNull(task55);
    }

    @Test
    public void test0376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0376");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][delete {[][hi!][]}][]}][hi!][]}", "", "delete {[delete {[][null][null]}][delete {[][null][null]}][delete {[][null][null]}]}");
    }

    @Test
    public void test0377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0377");
        org.elasticsearch.index.shard.IndexShard indexShard0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][null][hi!]}");
        org.elasticsearch.index.translog.Translog.Location location3 = null;
        org.elasticsearch.action.support.replication.TransportWriteAction.RespondingWriteResult respondingWriteResult4 = null;
        org.elasticsearch.common.logging.ESLogger eSLogger5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.postWriteActions(indexShard0, (org.elasticsearch.action.support.WriteRequest<org.elasticsearch.action.delete.DeleteRequest>) deleteRequest2, location3, respondingWriteResult4, eSLogger5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0378");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.routing("");
        org.elasticsearch.index.VersionType versionType21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str27 = deleteRequest26.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest7.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.tasks.TaskId taskId31 = deleteRequest30.getParentTask();
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest30.setShardId(shardId32);
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest30.setShardId(shardId34);
        java.lang.String str36 = deleteRequest30.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest43.routing("");
        org.elasticsearch.index.VersionType versionType46 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest43.versionType(versionType46);
        org.elasticsearch.index.VersionType versionType48 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest43.versionType(versionType48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest43.parent("");
        java.lang.String str52 = deleteRequest51.index();
        org.elasticsearch.index.VersionType versionType53 = deleteRequest51.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest57.routing("");
        org.elasticsearch.index.VersionType versionType60 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest57.versionType(versionType60);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str66 = deleteRequest65.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel67 = deleteRequest65.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest61.consistencyLevel(writeConsistencyLevel67);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest72.routing("");
        org.elasticsearch.index.VersionType versionType75 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest72.versionType(versionType75);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str81 = deleteRequest80.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel82 = deleteRequest80.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest83 = deleteRequest76.consistencyLevel(writeConsistencyLevel82);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = deleteRequest61.consistencyLevel(writeConsistencyLevel82);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest86 = deleteRequest84.type("delete {[][hi!][]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy87 = deleteRequest86.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest88 = deleteRequest51.setRefreshPolicy(refreshPolicy87);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest90 = deleteRequest88.id("delete {[][hi!][delete {[][hi!][]}]}");
        org.elasticsearch.tasks.TaskId taskId91 = deleteRequest88.getParentTask();
        org.elasticsearch.tasks.Task task92 = deleteRequest30.createTask(100L, "delete {[delete {[][delete {[][hi!][]}][]}][hi!][]}", "delete {[][hi!][delete {[][null][null]}]}", taskId91);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][hi!][]}" + "'", str27, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(taskId31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNull(versionType53);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "delete {[][hi!][]}" + "'", str66, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel67 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel67.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "delete {[][hi!][]}" + "'", str81, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel82 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel82.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest83);
        org.junit.Assert.assertNotNull(deleteRequest84);
        org.junit.Assert.assertNotNull(deleteRequest86);
        org.junit.Assert.assertTrue("'" + refreshPolicy87 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy87.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest88);
        org.junit.Assert.assertNotNull(deleteRequest90);
        org.junit.Assert.assertNotNull(taskId91);
        org.junit.Assert.assertNotNull(task92);
    }

    @Test
    public void test0379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0379");
        org.elasticsearch.index.shard.IndexShard indexShard0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.setRefreshPolicy("");
        java.lang.String str9 = deleteRequest6.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.routing("");
        org.elasticsearch.index.VersionType versionType20 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest17.versionType(versionType20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str26 = deleteRequest25.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest25.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest21.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.routing("");
        org.elasticsearch.index.VersionType versionType35 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest32.versionType(versionType35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str41 = deleteRequest40.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel42 = deleteRequest40.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest36.consistencyLevel(writeConsistencyLevel42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest21.consistencyLevel(writeConsistencyLevel42);
        org.elasticsearch.tasks.TaskId taskId45 = deleteRequest44.getParentTask();
        deleteRequest13.setParentTask(taskId45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest50.index("");
        org.elasticsearch.common.unit.TimeValue timeValue53 = deleteRequest52.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest13.timeout(timeValue53);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException55 = deleteRequest54.validate();
        java.lang.String str56 = deleteRequest54.type();
        org.elasticsearch.tasks.TaskId taskId57 = deleteRequest54.getParentTask();
        org.elasticsearch.tasks.Task task58 = deleteRequest6.createTask(0L, "delete {[hi!][hi!][]}", "", taskId57);
        org.elasticsearch.index.translog.Translog.Location location59 = null;
        org.elasticsearch.action.support.replication.TransportWriteAction.RespondingWriteResult respondingWriteResult60 = null;
        org.elasticsearch.common.logging.ESLogger eSLogger61 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.postWriteActions(indexShard0, (org.elasticsearch.action.support.WriteRequest<org.elasticsearch.action.delete.DeleteRequest>) deleteRequest6, location59, respondingWriteResult60, eSLogger61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "delete {[][hi!][]}" + "'", str26, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "delete {[][hi!][]}" + "'", str41, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel42 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel42.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(taskId45);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(timeValue53);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(actionRequestValidationException55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(taskId57);
        org.junit.Assert.assertNotNull(task58);
    }

    @Test
    public void test0380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0380");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.routing("");
        org.elasticsearch.index.VersionType versionType21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str27 = deleteRequest26.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest7.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.type("delete {[][hi!][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.parent("delete {[hi!][null][null]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest32.setRefreshPolicy("delete {[][delete {[null][null][null]}][]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[][delete {[null][null][null]}][]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][hi!][]}" + "'", str27, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
    }

    @Test
    public void test0381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0381");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str4 = deleteRequest3.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.setRefreshPolicy("");
        java.lang.String[] strArray10 = deleteRequest7.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.id("delete {[delete {[][null][null]}][delete {[][null][null]}][delete {[][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.type("delete {[][hi!][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.routing("");
        org.elasticsearch.index.VersionType versionType21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.versionType(versionType21);
        org.elasticsearch.common.transport.TransportAddress transportAddress23 = deleteRequest18.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy24 = deleteRequest18.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.index("");
        java.lang.String str35 = deleteRequest32.toString();
        org.elasticsearch.tasks.TaskId taskId36 = deleteRequest32.getParentTask();
        deleteRequest28.setParentTask(taskId36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest41.routing("");
        org.elasticsearch.index.VersionType versionType44 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest41.versionType(versionType44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str50 = deleteRequest49.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel51 = deleteRequest49.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest45.consistencyLevel(writeConsistencyLevel51);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest28.consistencyLevel(writeConsistencyLevel51);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest58.routing("");
        org.elasticsearch.index.VersionType versionType61 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest58.versionType(versionType61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str67 = deleteRequest66.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel68 = deleteRequest66.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest62.consistencyLevel(writeConsistencyLevel68);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest73.routing("");
        org.elasticsearch.index.VersionType versionType76 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest73.versionType(versionType76);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str82 = deleteRequest81.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel83 = deleteRequest81.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = deleteRequest77.consistencyLevel(writeConsistencyLevel83);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest85 = deleteRequest62.consistencyLevel(writeConsistencyLevel83);
        org.elasticsearch.tasks.TaskId taskId86 = deleteRequest85.getParentTask();
        deleteRequest54.setParentTask(taskId86);
        deleteRequest53.setParentTask(taskId86);
        org.elasticsearch.index.VersionType versionType89 = deleteRequest53.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest90 = deleteRequest18.versionType(versionType89);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest92 = deleteRequest90.type("delete {[null][null][null]}");
        java.lang.String str93 = deleteRequest92.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel94 = deleteRequest92.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest95 = deleteRequest12.consistencyLevel(writeConsistencyLevel94);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest97 = deleteRequest95.setRefreshPolicy("delete {[delete {[][delete {[][hi!][]}][]}][hi!][]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[delete {[][delete {[][hi!][]}][]}][hi!][]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][hi!][]}" + "'", str4, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNull(transportAddress23);
        org.junit.Assert.assertTrue("'" + refreshPolicy24 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy24.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "delete {[][hi!][]}" + "'", str35, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(taskId36);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "delete {[][hi!][]}" + "'", str50, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel51 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel51.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "delete {[][hi!][]}" + "'", str67, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel68 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel68.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(deleteRequest75);
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "delete {[][hi!][]}" + "'", str82, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel83 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel83.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest84);
        org.junit.Assert.assertNotNull(deleteRequest85);
        org.junit.Assert.assertNotNull(taskId86);
        org.junit.Assert.assertNotNull(versionType89);
        org.junit.Assert.assertNotNull(deleteRequest90);
        org.junit.Assert.assertNotNull(deleteRequest92);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "delete {[][delete {[null][null][null]}][]}" + "'", str93, "delete {[][delete {[null][null][null]}][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel94 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel94.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest95);
    }

    @Test
    public void test0382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0382");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][delete {[][hi!][]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.index("delete {[hi!][null][null]}");
        long long6 = deleteRequest3.primaryTerm();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
    }

    @Test
    public void test0383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0383");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "");
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.setShardId(shardId4);
        java.lang.Class<?> wildcardClass6 = deleteRequest5.getClass();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0384");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.setRefreshPolicy("");
        java.lang.String str8 = deleteRequest5.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.routing("");
        org.elasticsearch.index.VersionType versionType19 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest16.versionType(versionType19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str25 = deleteRequest24.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel26 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest20.consistencyLevel(writeConsistencyLevel26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest31.routing("");
        org.elasticsearch.index.VersionType versionType34 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest31.versionType(versionType34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str40 = deleteRequest39.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel41 = deleteRequest39.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest35.consistencyLevel(writeConsistencyLevel41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest20.consistencyLevel(writeConsistencyLevel41);
        org.elasticsearch.tasks.TaskId taskId44 = deleteRequest43.getParentTask();
        deleteRequest12.setParentTask(taskId44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest49.index("");
        org.elasticsearch.common.unit.TimeValue timeValue52 = deleteRequest51.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest12.timeout(timeValue52);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException54 = deleteRequest53.validate();
        java.lang.String str55 = deleteRequest53.type();
        org.elasticsearch.tasks.TaskId taskId56 = deleteRequest53.getParentTask();
        org.elasticsearch.tasks.Task task57 = deleteRequest5.createTask(0L, "delete {[hi!][hi!][]}", "", taskId56);
        org.elasticsearch.index.shard.ShardId shardId58 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest5.setShardId(shardId58);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[][hi!][]}" + "'", str25, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel26 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel26.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "delete {[][hi!][]}" + "'", str40, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel41 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel41.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(taskId44);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(timeValue52);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(actionRequestValidationException54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(taskId56);
        org.junit.Assert.assertNotNull(task57);
        org.junit.Assert.assertNotNull(deleteRequest59);
    }

    @Test
    public void test0385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0385");
        org.elasticsearch.index.shard.IndexShard indexShard0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.routing("");
        org.elasticsearch.index.VersionType versionType7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest4.versionType(versionType7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str13 = deleteRequest12.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest8.consistencyLevel(writeConsistencyLevel14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.version((long) '4');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest15.routing("");
        org.elasticsearch.index.translog.Translog.Location location20 = null;
        org.elasticsearch.action.support.replication.TransportWriteAction.RespondingWriteResult respondingWriteResult21 = null;
        org.elasticsearch.common.logging.ESLogger eSLogger22 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.postWriteActions(indexShard0, (org.elasticsearch.action.support.WriteRequest<org.elasticsearch.action.delete.DeleteRequest>) deleteRequest19, location20, respondingWriteResult21, eSLogger22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[][hi!][]}" + "'", str13, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
    }

    @Test
    public void test0386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0386");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.index.VersionType versionType8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.versionType(versionType8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.parent("");
        java.lang.String str12 = deleteRequest11.index();
        deleteRequest11.primaryTerm((long) (short) 100);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy15 = deleteRequest11.getRefreshPolicy();
        deleteRequest11.setParentTask("delete {[][null][null]}", 52L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest11.version(0L);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException21 = deleteRequest20.validate();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + refreshPolicy15 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy15.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest20);
    }

    @Test
    public void test0387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0387");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.version((long) '4');
        org.elasticsearch.index.VersionType versionType17 = deleteRequest14.versionType();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest14.setShardId(shardId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.type("delete {[][hi!][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.routing("");
        org.elasticsearch.index.VersionType versionType28 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest25.versionType(versionType28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str34 = deleteRequest33.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel35 = deleteRequest33.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest29.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest40.routing("");
        org.elasticsearch.index.VersionType versionType43 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest40.versionType(versionType43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str49 = deleteRequest48.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel50 = deleteRequest48.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest44.consistencyLevel(writeConsistencyLevel50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest29.consistencyLevel(writeConsistencyLevel50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest52.type("delete {[][hi!][]}");
        long long55 = deleteRequest52.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest59.routing("");
        org.elasticsearch.index.VersionType versionType62 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest59.versionType(versionType62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str68 = deleteRequest67.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel69 = deleteRequest67.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest63.consistencyLevel(writeConsistencyLevel69);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest74.routing("");
        org.elasticsearch.index.VersionType versionType77 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = deleteRequest74.versionType(versionType77);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest82 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str83 = deleteRequest82.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel84 = deleteRequest82.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest85 = deleteRequest78.consistencyLevel(writeConsistencyLevel84);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest86 = deleteRequest63.consistencyLevel(writeConsistencyLevel84);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = deleteRequest52.consistencyLevel(writeConsistencyLevel84);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest88 = deleteRequest21.consistencyLevel(writeConsistencyLevel84);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException89 = deleteRequest21.validate();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNull(versionType17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "delete {[][hi!][]}" + "'", str34, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel35 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel35.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "delete {[][hi!][]}" + "'", str49, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel50 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel50.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + (-3L) + "'", long55 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "delete {[][hi!][]}" + "'", str68, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel69 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel69.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertNotNull(deleteRequest78);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "delete {[][hi!][]}" + "'", str83, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel84 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel84.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest85);
        org.junit.Assert.assertNotNull(deleteRequest86);
        org.junit.Assert.assertNotNull(deleteRequest87);
        org.junit.Assert.assertNotNull(deleteRequest88);
    }

    @Test
    public void test0388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0388");
        org.elasticsearch.index.shard.IndexShard indexShard0 = null;
        org.elasticsearch.action.support.WriteRequest<org.elasticsearch.action.delete.DeleteRequest> deleteRequestWriteRequest1 = null;
        org.elasticsearch.index.translog.Translog.Location location2 = null;
        org.elasticsearch.action.support.replication.TransportWriteAction.RespondingWriteResult respondingWriteResult3 = null;
        org.elasticsearch.common.logging.ESLogger eSLogger4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.postWriteActions(indexShard0, deleteRequestWriteRequest1, location2, respondingWriteResult3, eSLogger4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0389");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        long long4 = deleteRequest3.version();
        boolean boolean5 = deleteRequest3.getShouldPersistResult();
        long long6 = deleteRequest3.version();
        org.elasticsearch.index.VersionType versionType7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.versionType(versionType7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.id("delete {[delete {[][null][null]}][delete {[][null][null]}][delete {[][null][null]}]}");
        org.elasticsearch.common.io.stream.StreamInput streamInput11 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest10.readFrom(streamInput11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-3L) + "'", long4 == (-3L));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-3L) + "'", long6 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
    }

    @Test
    public void test0390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0390");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.routing("");
        org.elasticsearch.index.VersionType versionType7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest4.versionType(versionType7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str13 = deleteRequest12.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest8.consistencyLevel(writeConsistencyLevel14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.routing("");
        org.elasticsearch.index.VersionType versionType22 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest19.versionType(versionType22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str28 = deleteRequest27.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = deleteRequest27.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest23.consistencyLevel(writeConsistencyLevel29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest8.consistencyLevel(writeConsistencyLevel29);
        org.elasticsearch.tasks.TaskId taskId32 = deleteRequest31.getParentTask();
        deleteRequest0.setParentTask(taskId32);
        java.lang.String str34 = deleteRequest0.index();
        org.elasticsearch.index.shard.IndexShard indexShard35 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete36 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest0, indexShard35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[][hi!][]}" + "'", str13, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "delete {[][hi!][]}" + "'", str28, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel29 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel29.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(taskId32);
        org.junit.Assert.assertNull(str34);
    }

    @Test
    public void test0391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0391");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[][hi!][]}][]}", "delete {[][null][null]}", "");
        boolean boolean4 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = deleteRequest3.remoteAddress();
        org.elasticsearch.index.shard.IndexShard indexShard6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult7 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest3, indexShard6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(transportAddress5);
    }

    @Test
    public void test0392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0392");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.setRefreshPolicy("");
        java.lang.String str8 = deleteRequest5.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.id("delete {[][delete {[][hi!][]}][]}");
        deleteRequest10.primaryTerm((long) (short) 1);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(deleteRequest10);
    }

    @Test
    public void test0393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0393");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str4 = deleteRequest3.toString();
        deleteRequest3.primaryTerm(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.routing("");
        org.elasticsearch.index.VersionType versionType13 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.versionType(versionType13);
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = deleteRequest10.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy16 = deleteRequest10.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.setRefreshPolicy(refreshPolicy16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.index("");
        java.lang.String str28 = deleteRequest25.toString();
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest25.getParentTask();
        deleteRequest21.setParentTask(taskId29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest34.routing("");
        org.elasticsearch.index.VersionType versionType37 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest34.versionType(versionType37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str43 = deleteRequest42.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel44 = deleteRequest42.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest38.consistencyLevel(writeConsistencyLevel44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest21.consistencyLevel(writeConsistencyLevel44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest51.routing("");
        org.elasticsearch.index.VersionType versionType54 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest51.versionType(versionType54);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str60 = deleteRequest59.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel61 = deleteRequest59.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest55.consistencyLevel(writeConsistencyLevel61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest66.routing("");
        org.elasticsearch.index.VersionType versionType69 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest66.versionType(versionType69);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str75 = deleteRequest74.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel76 = deleteRequest74.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest70.consistencyLevel(writeConsistencyLevel76);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = deleteRequest55.consistencyLevel(writeConsistencyLevel76);
        org.elasticsearch.tasks.TaskId taskId79 = deleteRequest78.getParentTask();
        deleteRequest47.setParentTask(taskId79);
        deleteRequest46.setParentTask(taskId79);
        org.elasticsearch.index.VersionType versionType82 = deleteRequest46.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest83 = deleteRequest3.versionType(versionType82);
        java.lang.Class<?> wildcardClass84 = deleteRequest3.getClass();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][hi!][]}" + "'", str4, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(transportAddress15);
        org.junit.Assert.assertTrue("'" + refreshPolicy16 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy16.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "delete {[][hi!][]}" + "'", str28, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "delete {[][hi!][]}" + "'", str43, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel44 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel44.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "delete {[][hi!][]}" + "'", str60, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel61 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel61.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "delete {[][hi!][]}" + "'", str75, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel76 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel76.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertNotNull(deleteRequest78);
        org.junit.Assert.assertNotNull(taskId79);
        org.junit.Assert.assertNotNull(versionType82);
        org.junit.Assert.assertNotNull(deleteRequest83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0394");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.routing("");
        org.elasticsearch.index.VersionType versionType21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str27 = deleteRequest26.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest7.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.type("delete {[][hi!][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.routing("delete {[][null][null]}");
        org.elasticsearch.tasks.TaskId taskId35 = deleteRequest32.getParentTask();
        org.elasticsearch.tasks.TaskId taskId36 = deleteRequest32.getParentTask();
        org.elasticsearch.common.unit.TimeValue timeValue37 = deleteRequest32.timeout();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput38 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest32.writeTo(streamOutput38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][hi!][]}" + "'", str27, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(taskId35);
        org.junit.Assert.assertNotNull(taskId36);
        org.junit.Assert.assertNotNull(timeValue37);
    }

    @Test
    public void test0395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0395");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.index.VersionType versionType2 = deleteRequest1.versionType();
        java.lang.String str3 = deleteRequest1.type();
        org.junit.Assert.assertNotNull(versionType2);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test0396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0396");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.routing("");
        org.elasticsearch.index.VersionType versionType8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest5.versionType(versionType8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str14 = deleteRequest13.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel15 = deleteRequest13.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest9.consistencyLevel(writeConsistencyLevel15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.routing("");
        org.elasticsearch.index.VersionType versionType23 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest20.versionType(versionType23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str29 = deleteRequest28.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel30 = deleteRequest28.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest24.consistencyLevel(writeConsistencyLevel30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest9.consistencyLevel(writeConsistencyLevel30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.type("delete {[][hi!][]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy35 = deleteRequest34.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest34.id("delete {[][hi!][]}");
        boolean boolean38 = deleteRequest34.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str43 = deleteRequest42.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel44 = deleteRequest42.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest34.consistencyLevel(writeConsistencyLevel44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest45.index("delete {[][delete {[][hi!][]}][]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[][delete {[][hi!][]}][delete {[][hi!][]}]}", deleteRequest47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[][hi!][]}" + "'", str14, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel15 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel15.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "delete {[][hi!][]}" + "'", str29, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel30 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel30.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + refreshPolicy35 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy35.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "delete {[][hi!][]}" + "'", str43, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel44 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel44.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest47);
    }

    @Test
    public void test0397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0397");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.tasks.TaskId taskId6 = null;
        deleteRequest5.setParentTask(taskId6);
        java.lang.String str8 = deleteRequest5.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy11 = deleteRequest10.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest5.setRefreshPolicy(refreshPolicy11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest5.version((long) (byte) 100);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput15 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest14.writeTo(streamOutput15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[][hi!][]}" + "'", str8, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + refreshPolicy11 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy11.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
    }

    @Test
    public void test0398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0398");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.index("");
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest3.remoteAddress(transportAddress6);
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest3.getParentTask();
        org.elasticsearch.common.unit.TimeValue timeValue9 = deleteRequest3.timeout();
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest3.getParentTask();
        org.elasticsearch.index.shard.IndexShard indexShard11 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult12 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest3, indexShard11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(taskId8);
        org.junit.Assert.assertNotNull(timeValue9);
        org.junit.Assert.assertNotNull(taskId10);
    }

    @Test
    public void test0399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0399");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[][hi!][]}][]}", "delete {[][null][null]}", "");
        boolean boolean4 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.routing("");
        org.elasticsearch.index.VersionType versionType12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest9.versionType(versionType12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str18 = deleteRequest17.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel19 = deleteRequest17.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest13.consistencyLevel(writeConsistencyLevel19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.routing("");
        org.elasticsearch.index.VersionType versionType30 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest27.versionType(versionType30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str36 = deleteRequest35.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel37 = deleteRequest35.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest31.consistencyLevel(writeConsistencyLevel37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest42.routing("");
        org.elasticsearch.index.VersionType versionType45 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest42.versionType(versionType45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str51 = deleteRequest50.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel52 = deleteRequest50.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest46.consistencyLevel(writeConsistencyLevel52);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest31.consistencyLevel(writeConsistencyLevel52);
        org.elasticsearch.tasks.TaskId taskId55 = deleteRequest54.getParentTask();
        org.elasticsearch.tasks.Task task56 = deleteRequest13.createTask((long) (-1), "delete {[][hi!][]}", "delete {[][hi!][]}", taskId55);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy57 = deleteRequest13.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest3.setRefreshPolicy(refreshPolicy57);
        org.elasticsearch.common.transport.TransportAddress transportAddress59 = null;
        deleteRequest58.remoteAddress(transportAddress59);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(transportAddress5);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[][hi!][]}" + "'", str18, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel19 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel19.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "delete {[][hi!][]}" + "'", str36, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel37 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel37.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "delete {[][hi!][]}" + "'", str51, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel52 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel52.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(taskId55);
        org.junit.Assert.assertNotNull(task56);
        org.junit.Assert.assertTrue("'" + refreshPolicy57 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy57.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest58);
    }

    @Test
    public void test0400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0400");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.routing("");
        org.elasticsearch.index.VersionType versionType8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest5.versionType(versionType8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str14 = deleteRequest13.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel15 = deleteRequest13.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest9.consistencyLevel(writeConsistencyLevel15);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[][hi!][delete {[][null][null]}]}", deleteRequest9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[][hi!][]}" + "'", str14, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel15 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel15.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest16);
    }

    @Test
    public void test0401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0401");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.routing("");
        org.elasticsearch.index.VersionType versionType11 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.versionType(versionType11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str17 = deleteRequest16.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel18 = deleteRequest16.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest12.consistencyLevel(writeConsistencyLevel18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.routing("");
        org.elasticsearch.index.VersionType versionType26 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest23.versionType(versionType26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str32 = deleteRequest31.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel33 = deleteRequest31.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest27.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest12.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.tasks.TaskId taskId36 = deleteRequest35.getParentTask();
        deleteRequest4.setParentTask(taskId36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest41.index("");
        org.elasticsearch.common.unit.TimeValue timeValue44 = deleteRequest43.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest4.timeout(timeValue44);
        java.lang.String str46 = deleteRequest45.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException47 = deleteRequest45.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure49 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][delete {[][hi!][]}][]}", (java.lang.Throwable) actionRequestValidationException47, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure51 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][null][null]}", (java.lang.Throwable) actionRequestValidationException47, "delete {[][hi!][]}");
        java.lang.String str52 = shardFailure51.reason;
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[][hi!][]}" + "'", str17, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel18 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel18.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[][hi!][]}" + "'", str32, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel33 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel33.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(taskId36);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(timeValue44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "delete {[null][null][null]}" + "'", str46, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException47);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "delete {[null][null][null]}" + "'", str52, "delete {[null][null][null]}");
    }

    @Test
    public void test0402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0402");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str6 = deleteRequest5.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel7 = deleteRequest5.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest5.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.setRefreshPolicy("");
        java.lang.String[] strArray12 = deleteRequest9.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest9.id("delete {[delete {[][null][null]}][delete {[][null][null]}][delete {[][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.type("delete {[][hi!][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.routing("");
        org.elasticsearch.index.VersionType versionType23 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest20.versionType(versionType23);
        org.elasticsearch.common.transport.TransportAddress transportAddress25 = deleteRequest20.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy26 = deleteRequest20.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest34.index("");
        java.lang.String str37 = deleteRequest34.toString();
        org.elasticsearch.tasks.TaskId taskId38 = deleteRequest34.getParentTask();
        deleteRequest30.setParentTask(taskId38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest43.routing("");
        org.elasticsearch.index.VersionType versionType46 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest43.versionType(versionType46);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str52 = deleteRequest51.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel53 = deleteRequest51.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest47.consistencyLevel(writeConsistencyLevel53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest30.consistencyLevel(writeConsistencyLevel53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest60.routing("");
        org.elasticsearch.index.VersionType versionType63 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest60.versionType(versionType63);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str69 = deleteRequest68.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel70 = deleteRequest68.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest64.consistencyLevel(writeConsistencyLevel70);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest75.routing("");
        org.elasticsearch.index.VersionType versionType78 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = deleteRequest75.versionType(versionType78);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest83 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str84 = deleteRequest83.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel85 = deleteRequest83.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest86 = deleteRequest79.consistencyLevel(writeConsistencyLevel85);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = deleteRequest64.consistencyLevel(writeConsistencyLevel85);
        org.elasticsearch.tasks.TaskId taskId88 = deleteRequest87.getParentTask();
        deleteRequest56.setParentTask(taskId88);
        deleteRequest55.setParentTask(taskId88);
        org.elasticsearch.index.VersionType versionType91 = deleteRequest55.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest92 = deleteRequest20.versionType(versionType91);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest94 = deleteRequest92.type("delete {[null][null][null]}");
        java.lang.String str95 = deleteRequest94.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel96 = deleteRequest94.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest97 = deleteRequest14.consistencyLevel(writeConsistencyLevel96);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[][hi!][delete {[][hi!][]}]}", deleteRequest97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][hi!][]}" + "'", str6, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel7 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel7.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNull(transportAddress25);
        org.junit.Assert.assertTrue("'" + refreshPolicy26 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy26.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "delete {[][hi!][]}" + "'", str37, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(taskId38);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "delete {[][hi!][]}" + "'", str52, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel53 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel53.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "delete {[][hi!][]}" + "'", str69, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel70 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel70.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertNotNull(deleteRequest79);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "delete {[][hi!][]}" + "'", str84, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel85 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel85.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest86);
        org.junit.Assert.assertNotNull(deleteRequest87);
        org.junit.Assert.assertNotNull(taskId88);
        org.junit.Assert.assertNotNull(versionType91);
        org.junit.Assert.assertNotNull(deleteRequest92);
        org.junit.Assert.assertNotNull(deleteRequest94);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "delete {[][delete {[null][null][null]}][]}" + "'", str95, "delete {[][delete {[null][null][null]}][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel96 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel96.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest97);
    }

    @Test
    public void test0403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0403");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy2 = deleteRequest1.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.routing("");
        org.elasticsearch.index.VersionType versionType9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest6.versionType(versionType9);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str15 = deleteRequest14.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel16 = deleteRequest14.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest10.consistencyLevel(writeConsistencyLevel16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.routing("");
        org.elasticsearch.index.VersionType versionType24 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest21.versionType(versionType24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str30 = deleteRequest29.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel31 = deleteRequest29.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest25.consistencyLevel(writeConsistencyLevel31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest10.consistencyLevel(writeConsistencyLevel31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest33.type("delete {[][hi!][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest35.routing("delete {[][null][null]}");
        deleteRequest37.primaryTerm((long) '4');
        org.elasticsearch.common.unit.TimeValue timeValue40 = deleteRequest37.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest1.timeout(timeValue40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest41.routing("delete {[][null][hi!]}");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput44 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest43.writeTo(streamOutput44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + refreshPolicy2 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy2.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[][hi!][]}" + "'", str15, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel16 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel16.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "delete {[][hi!][]}" + "'", str30, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel31 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel31.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(timeValue40);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest43);
    }

    @Test
    public void test0404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0404");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str4 = deleteRequest3.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("");
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest7.getParentTask();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput9 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest7.writeTo(streamOutput9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][hi!][]}" + "'", str4, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(taskId8);
    }

    @Test
    public void test0405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0405");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.index("");
        java.lang.String str10 = deleteRequest7.toString();
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest7.getParentTask();
        deleteRequest3.setParentTask(taskId11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.routing("");
        org.elasticsearch.index.VersionType versionType19 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest16.versionType(versionType19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str25 = deleteRequest24.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel26 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest20.consistencyLevel(writeConsistencyLevel26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest3.consistencyLevel(writeConsistencyLevel26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.routing("");
        org.elasticsearch.index.VersionType versionType35 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest32.versionType(versionType35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str41 = deleteRequest40.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel42 = deleteRequest40.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest36.consistencyLevel(writeConsistencyLevel42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest47.routing("");
        org.elasticsearch.index.VersionType versionType50 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest47.versionType(versionType50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str56 = deleteRequest55.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel57 = deleteRequest55.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest51.consistencyLevel(writeConsistencyLevel57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest36.consistencyLevel(writeConsistencyLevel57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest28.consistencyLevel(writeConsistencyLevel57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest60.parent("delete {[][hi!][]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel63 = deleteRequest62.consistencyLevel();
        java.lang.Class<?> wildcardClass64 = writeConsistencyLevel63.getClass();
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][hi!][]}" + "'", str10, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[][hi!][]}" + "'", str25, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel26 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel26.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "delete {[][hi!][]}" + "'", str41, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel42 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel42.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "delete {[][hi!][]}" + "'", str56, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel57 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel57.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel63 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel63.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0406");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str4 = deleteRequest3.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("");
        java.lang.String str8 = deleteRequest3.id();
        java.lang.String[] strArray9 = deleteRequest3.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.index.VersionType versionType12 = deleteRequest11.versionType();
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest11.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.timeout(timeValue13);
        org.elasticsearch.index.shard.IndexShard indexShard15 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete16 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest14, indexShard15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][hi!][]}" + "'", str4, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(deleteRequest14);
    }

    @Test
    public void test0407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0407");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str4 = deleteRequest3.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("");
        java.lang.String str8 = deleteRequest3.id();
        org.elasticsearch.index.shard.IndexShard indexShard9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult10 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest3, indexShard9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][hi!][]}" + "'", str4, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }

    @Test
    public void test0408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0408");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.routing("");
        org.elasticsearch.index.VersionType versionType15 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest12.versionType(versionType15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str21 = deleteRequest20.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel22 = deleteRequest20.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest16.consistencyLevel(writeConsistencyLevel22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.routing("");
        org.elasticsearch.index.VersionType versionType30 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest27.versionType(versionType30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str36 = deleteRequest35.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel37 = deleteRequest35.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest31.consistencyLevel(writeConsistencyLevel37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest16.consistencyLevel(writeConsistencyLevel37);
        org.elasticsearch.tasks.TaskId taskId40 = deleteRequest39.getParentTask();
        deleteRequest8.setParentTask(taskId40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest45.index("");
        org.elasticsearch.common.unit.TimeValue timeValue48 = deleteRequest47.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest8.timeout(timeValue48);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException50 = deleteRequest49.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure52 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[][null][null]}", (java.lang.Throwable) actionRequestValidationException50, "delete {[][hi!][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure54 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[][delete {[][hi!][]}][]}", (java.lang.Throwable) actionRequestValidationException50, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure56 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", (java.lang.Throwable) actionRequestValidationException50, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure58 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][null][null]}", (java.lang.Throwable) actionRequestValidationException50, "");
        java.lang.String str59 = shardFailure58.reason;
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[][hi!][]}" + "'", str21, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel22 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel22.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "delete {[][hi!][]}" + "'", str36, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel37 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel37.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(taskId40);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(timeValue48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(actionRequestValidationException50);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "delete {[null][null][null]}" + "'", str59, "delete {[null][null][null]}");
    }

    @Test
    public void test0409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0409");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][null][null]}", "delete {[][null][null]}", "delete {[][null][null]}");
        long long4 = deleteRequest3.primaryTerm();
        java.lang.String[] strArray5 = deleteRequest3.indices();
        java.lang.String str6 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.index("");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.timeout("delete {[][hi!][delete {[][null][null]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[][hi!][delete {[][null][null]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[delete {[][null][null]}][delete {[][null][null]}][delete {[][null][null]}]}" + "'", str6, "delete {[delete {[][null][null]}][delete {[][null][null]}][delete {[][null][null]}]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
    }

    @Test
    public void test0410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0410");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.setRefreshPolicy("");
        java.lang.String str10 = deleteRequest7.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.setRefreshPolicy("");
        java.lang.String str13 = deleteRequest12.type();
        org.elasticsearch.action.support.IndicesOptions indicesOptions14 = deleteRequest12.indicesOptions();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[][delete {[null][null][null]}][]}", deleteRequest12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(indicesOptions14);
    }

    @Test
    public void test0411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0411");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.version((long) '4');
        org.elasticsearch.index.VersionType versionType17 = deleteRequest14.versionType();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest14.setShardId(shardId18);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.setShardId(shardId20);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.timeout("delete {[][null][hi!]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[][null][hi!]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNull(versionType17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
    }

    @Test
    public void test0412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0412");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        java.lang.String str15 = deleteRequest7.type();
        java.lang.String str16 = deleteRequest7.parent();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest7.timeout("delete {[delete {[][null][null]}][delete {[][null][null]}][delete {[][null][null]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[][null][null]}][delete {[][null][null]}][delete {[][null][null]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test0413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0413");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.routing("");
        org.elasticsearch.index.VersionType versionType21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str27 = deleteRequest26.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest7.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.type("delete {[][hi!][]}");
        java.lang.String str33 = deleteRequest32.type();
        java.lang.String str34 = deleteRequest32.getDescription();
        org.elasticsearch.index.shard.IndexShard indexShard35 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete36 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest32, indexShard35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][hi!][]}" + "'", str27, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "delete {[][hi!][]}" + "'", str33, "delete {[][hi!][]}");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "delete {[][delete {[][hi!][]}][]}" + "'", str34, "delete {[][delete {[][hi!][]}][]}");
    }

    @Test
    public void test0414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0414");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.routing("");
        org.elasticsearch.index.VersionType versionType21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str27 = deleteRequest26.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest7.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.type("delete {[][hi!][]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy33 = deleteRequest32.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest32.id("delete {[][delete {[][hi!][]}][]}");
        org.elasticsearch.index.shard.IndexShard indexShard36 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete37 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest35, indexShard36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][hi!][]}" + "'", str27, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + refreshPolicy33 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy33.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest35);
    }

    @Test
    public void test0415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0415");
        org.elasticsearch.index.shard.IndexShard indexShard0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][hi!][]}");
        boolean boolean3 = deleteRequest2.getShouldPersistResult();
        org.elasticsearch.index.translog.Translog.Location location4 = null;
        org.elasticsearch.action.support.replication.TransportWriteAction.RespondingWriteResult respondingWriteResult5 = null;
        org.elasticsearch.common.logging.ESLogger eSLogger6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.postWriteActions(indexShard0, (org.elasticsearch.action.support.WriteRequest<org.elasticsearch.action.delete.DeleteRequest>) deleteRequest2, location4, respondingWriteResult5, eSLogger6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test0416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0416");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "delete {[][delete {[][hi!][]}][]}", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.routing("");
        org.elasticsearch.index.VersionType versionType13 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.versionType(versionType13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str19 = deleteRequest18.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = deleteRequest18.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.consistencyLevel(writeConsistencyLevel20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.routing("");
        org.elasticsearch.index.VersionType versionType28 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest25.versionType(versionType28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str34 = deleteRequest33.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel35 = deleteRequest33.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest29.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest14.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.tasks.TaskId taskId38 = deleteRequest37.getParentTask();
        deleteRequest6.setParentTask(taskId38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest43.index("");
        org.elasticsearch.common.unit.TimeValue timeValue46 = deleteRequest45.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest6.timeout(timeValue46);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest47.setRefreshPolicy("");
        java.lang.String str50 = deleteRequest47.parent();
        org.elasticsearch.common.unit.TimeValue timeValue51 = deleteRequest47.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest5.timeout(timeValue51);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[null][null][null]}", deleteRequest52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[][hi!][]}" + "'", str19, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel20 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel20.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "delete {[][hi!][]}" + "'", str34, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel35 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel35.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(taskId38);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(timeValue46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(timeValue51);
        org.junit.Assert.assertNotNull(deleteRequest52);
    }

    @Test
    public void test0417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0417");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[][null][hi!]}", deleteRequest2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0418");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.index("");
        java.lang.String str6 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.version((long) (byte) 100);
        long long11 = deleteRequest8.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str16 = deleteRequest15.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel17 = deleteRequest15.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest15.id("");
        org.elasticsearch.tasks.TaskId taskId20 = deleteRequest19.getParentTask();
        deleteRequest8.setParentTask(taskId20);
        org.elasticsearch.common.io.stream.StreamInput streamInput22 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest8.readFrom(streamInput22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][hi!][]}" + "'", str6, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[][hi!][]}" + "'", str16, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel17 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel17.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(taskId20);
    }

    @Test
    public void test0419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0419");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy1 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.setRefreshPolicy(refreshPolicy1);
        org.elasticsearch.common.transport.TransportAddress transportAddress3 = deleteRequest0.remoteAddress();
        org.elasticsearch.index.VersionType versionType4 = deleteRequest0.versionType();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.timeout("delete {[][delete {[][hi!][]}][delete {[][hi!][]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[][delete {[][hi!][]}][delete {[][hi!][]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(transportAddress3);
        org.junit.Assert.assertNotNull(versionType4);
    }

    @Test
    public void test0420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0420");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        long long4 = deleteRequest3.version();
        boolean boolean5 = deleteRequest3.getShouldPersistResult();
        long long6 = deleteRequest3.version();
        org.elasticsearch.index.VersionType versionType7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.versionType(versionType7);
        org.elasticsearch.common.io.stream.StreamInput streamInput9 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest8.readFrom(streamInput9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-3L) + "'", long4 == (-3L));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-3L) + "'", long6 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest8);
    }

    @Test
    public void test0421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0421");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.index("");
        java.lang.String str10 = deleteRequest7.toString();
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest7.getParentTask();
        deleteRequest3.setParentTask(taskId11);
        java.lang.String[] strArray13 = deleteRequest3.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.routing("");
        org.elasticsearch.tasks.TaskId taskId20 = null;
        deleteRequest19.setParentTask(taskId20);
        java.lang.String str22 = deleteRequest19.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy25 = deleteRequest24.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest19.setRefreshPolicy(refreshPolicy25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest3.setRefreshPolicy(refreshPolicy25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest3.routing("");
        java.lang.String str32 = deleteRequest3.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest3.timeout("delete {[delete {[][delete {[][hi!][]}][]}][hi!][]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[][delete {[][hi!][]}][]}][hi!][]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][hi!][]}" + "'", str10, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[][hi!][]}" + "'", str22, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + refreshPolicy25 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy25.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[][hi!][]}" + "'", str32, "delete {[][hi!][]}");
    }

    @Test
    public void test0422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0422");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.tasks.TaskId taskId4 = null;
        deleteRequest3.setParentTask(taskId4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.routing("delete {[][hi!][delete {[][hi!][]}]}");
        java.lang.Class<?> wildcardClass8 = deleteRequest7.getClass();
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0423");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][null][hi!]}", "delete {[][hi!][delete {[][hi!][]}]}", "delete {[][hi!][delete {[][hi!][]}]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[][hi!][delete {[][hi!][]}]}", deleteRequest5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0424");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str4 = deleteRequest3.toString();
        deleteRequest3.primaryTerm(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.routing("");
        org.elasticsearch.index.VersionType versionType13 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.versionType(versionType13);
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = deleteRequest10.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy16 = deleteRequest10.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.setRefreshPolicy(refreshPolicy16);
        long long18 = deleteRequest17.version();
        long long19 = deleteRequest17.version();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy20 = deleteRequest17.getRefreshPolicy();
        java.lang.String str21 = deleteRequest17.getDescription();
        java.lang.Class<?> wildcardClass22 = deleteRequest17.getClass();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][hi!][]}" + "'", str4, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(transportAddress15);
        org.junit.Assert.assertTrue("'" + refreshPolicy16 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy16.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-3L) + "'", long18 == (-3L));
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-3L) + "'", long19 == (-3L));
        org.junit.Assert.assertTrue("'" + refreshPolicy20 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy20.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[][hi!][]}" + "'", str21, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0425");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[][hi!][]}][]}", "delete {[][null][null]}", "");
        boolean boolean4 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.routing("");
        org.elasticsearch.index.VersionType versionType12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest9.versionType(versionType12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str18 = deleteRequest17.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel19 = deleteRequest17.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest13.consistencyLevel(writeConsistencyLevel19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.routing("");
        org.elasticsearch.index.VersionType versionType30 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest27.versionType(versionType30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str36 = deleteRequest35.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel37 = deleteRequest35.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest31.consistencyLevel(writeConsistencyLevel37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest42.routing("");
        org.elasticsearch.index.VersionType versionType45 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest42.versionType(versionType45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str51 = deleteRequest50.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel52 = deleteRequest50.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest46.consistencyLevel(writeConsistencyLevel52);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest31.consistencyLevel(writeConsistencyLevel52);
        org.elasticsearch.tasks.TaskId taskId55 = deleteRequest54.getParentTask();
        org.elasticsearch.tasks.Task task56 = deleteRequest13.createTask((long) (-1), "delete {[][hi!][]}", "delete {[][hi!][]}", taskId55);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy57 = deleteRequest13.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest3.setRefreshPolicy(refreshPolicy57);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest58.timeout("delete {[][null][hi!]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[][null][hi!]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(transportAddress5);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[][hi!][]}" + "'", str18, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel19 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel19.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "delete {[][hi!][]}" + "'", str36, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel37 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel37.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "delete {[][hi!][]}" + "'", str51, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel52 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel52.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(taskId55);
        org.junit.Assert.assertNotNull(task56);
        org.junit.Assert.assertTrue("'" + refreshPolicy57 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy57.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest58);
    }

    @Test
    public void test0426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0426");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str4 = deleteRequest3.toString();
        deleteRequest3.primaryTerm(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.routing("");
        org.elasticsearch.index.VersionType versionType13 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.versionType(versionType13);
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = deleteRequest10.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy16 = deleteRequest10.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.setRefreshPolicy(refreshPolicy16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.index("");
        java.lang.String str28 = deleteRequest25.toString();
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest25.getParentTask();
        deleteRequest21.setParentTask(taskId29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest34.routing("");
        org.elasticsearch.index.VersionType versionType37 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest34.versionType(versionType37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str43 = deleteRequest42.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel44 = deleteRequest42.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest38.consistencyLevel(writeConsistencyLevel44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest21.consistencyLevel(writeConsistencyLevel44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest51.routing("");
        org.elasticsearch.index.VersionType versionType54 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest51.versionType(versionType54);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str60 = deleteRequest59.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel61 = deleteRequest59.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest55.consistencyLevel(writeConsistencyLevel61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest66.routing("");
        org.elasticsearch.index.VersionType versionType69 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest66.versionType(versionType69);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str75 = deleteRequest74.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel76 = deleteRequest74.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest70.consistencyLevel(writeConsistencyLevel76);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = deleteRequest55.consistencyLevel(writeConsistencyLevel76);
        org.elasticsearch.tasks.TaskId taskId79 = deleteRequest78.getParentTask();
        deleteRequest47.setParentTask(taskId79);
        deleteRequest46.setParentTask(taskId79);
        org.elasticsearch.index.VersionType versionType82 = deleteRequest46.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest83 = deleteRequest3.versionType(versionType82);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest85 = deleteRequest3.setRefreshPolicy("delete {[hi!][null][null]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[hi!][null][null]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][hi!][]}" + "'", str4, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(transportAddress15);
        org.junit.Assert.assertTrue("'" + refreshPolicy16 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy16.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "delete {[][hi!][]}" + "'", str28, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "delete {[][hi!][]}" + "'", str43, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel44 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel44.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "delete {[][hi!][]}" + "'", str60, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel61 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel61.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "delete {[][hi!][]}" + "'", str75, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel76 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel76.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertNotNull(deleteRequest78);
        org.junit.Assert.assertNotNull(taskId79);
        org.junit.Assert.assertNotNull(versionType82);
        org.junit.Assert.assertNotNull(deleteRequest83);
    }

    @Test
    public void test0427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0427");
        org.elasticsearch.index.shard.IndexShard indexShard0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.routing("");
        org.elasticsearch.index.VersionType versionType7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest4.versionType(versionType7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str13 = deleteRequest12.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest8.consistencyLevel(writeConsistencyLevel14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.version((long) '4');
        org.elasticsearch.index.VersionType versionType18 = deleteRequest15.versionType();
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest15.setShardId(shardId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.type("delete {[][hi!][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest15.id("delete {[][null][null]}");
        org.elasticsearch.index.translog.Translog.Location location25 = null;
        org.elasticsearch.action.support.replication.TransportWriteAction.RespondingWriteResult respondingWriteResult26 = null;
        org.elasticsearch.common.logging.ESLogger eSLogger27 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.postWriteActions(indexShard0, (org.elasticsearch.action.support.WriteRequest<org.elasticsearch.action.delete.DeleteRequest>) deleteRequest15, location25, respondingWriteResult26, eSLogger27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[][hi!][]}" + "'", str13, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(versionType18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
    }

    @Test
    public void test0428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0428");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.index.VersionType versionType8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.versionType(versionType8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.parent("");
        java.lang.String str12 = deleteRequest11.index();
        deleteRequest11.primaryTerm((long) (short) 100);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy15 = deleteRequest11.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest11.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.routing("delete {[][delete {[null][null][null]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest17.id("delete {[][delete {[][hi!][]}][]}");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput22 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest21.writeTo(streamOutput22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + refreshPolicy15 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy15.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
    }

    @Test
    public void test0429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0429");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.tasks.TaskId taskId4 = null;
        deleteRequest3.setParentTask(taskId4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.routing("delete {[][hi!][delete {[][hi!][]}]}");
        org.elasticsearch.index.shard.IndexShard indexShard8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult9 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest7, indexShard8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest7);
    }

    @Test
    public void test0430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0430");
        org.elasticsearch.index.shard.IndexShard indexShard0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][null][null]}", "delete {[][null][null]}", "delete {[][null][null]}");
        long long5 = deleteRequest4.primaryTerm();
        org.elasticsearch.index.translog.Translog.Location location6 = null;
        org.elasticsearch.action.support.replication.TransportWriteAction.RespondingWriteResult respondingWriteResult7 = null;
        org.elasticsearch.common.logging.ESLogger eSLogger8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.postWriteActions(indexShard0, (org.elasticsearch.action.support.WriteRequest<org.elasticsearch.action.delete.DeleteRequest>) deleteRequest4, location6, respondingWriteResult7, eSLogger8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
    }

    @Test
    public void test0431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0431");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.routing("");
        org.elasticsearch.index.VersionType versionType7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest4.versionType(versionType7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str13 = deleteRequest12.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest8.consistencyLevel(writeConsistencyLevel14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.routing("");
        org.elasticsearch.index.VersionType versionType22 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest19.versionType(versionType22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str28 = deleteRequest27.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = deleteRequest27.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest23.consistencyLevel(writeConsistencyLevel29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest8.consistencyLevel(writeConsistencyLevel29);
        org.elasticsearch.tasks.TaskId taskId32 = deleteRequest31.getParentTask();
        deleteRequest0.setParentTask(taskId32);
        long long34 = deleteRequest0.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest0.routing("");
        org.elasticsearch.index.shard.ShardId shardId37 = deleteRequest36.shardId();
        java.lang.String str38 = deleteRequest36.index();
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[][hi!][]}" + "'", str13, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "delete {[][hi!][]}" + "'", str28, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel29 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel29.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(taskId32);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-3L) + "'", long34 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNull(shardId37);
        org.junit.Assert.assertNull(str38);
    }

    @Test
    public void test0432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0432");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.routing("");
        org.elasticsearch.index.VersionType versionType21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str27 = deleteRequest26.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest7.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.type("delete {[][hi!][]}");
        long long33 = deleteRequest30.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest37.index("");
        org.elasticsearch.common.unit.TimeValue timeValue40 = deleteRequest39.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest30.timeout(timeValue40);
        org.elasticsearch.index.VersionType versionType42 = deleteRequest30.versionType();
        org.elasticsearch.action.support.IndicesOptions indicesOptions43 = deleteRequest30.indicesOptions();
        org.elasticsearch.common.transport.TransportAddress transportAddress44 = null;
        deleteRequest30.remoteAddress(transportAddress44);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][hi!][]}" + "'", str27, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-3L) + "'", long33 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(timeValue40);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNull(versionType42);
        org.junit.Assert.assertNotNull(indicesOptions43);
    }

    @Test
    public void test0433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0433");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy1 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.setRefreshPolicy(refreshPolicy1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.type("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][hi!][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str14 = deleteRequest13.toString();
        deleteRequest13.primaryTerm(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.routing("");
        org.elasticsearch.index.VersionType versionType23 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest20.versionType(versionType23);
        org.elasticsearch.common.transport.TransportAddress transportAddress25 = deleteRequest20.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy26 = deleteRequest20.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest13.setRefreshPolicy(refreshPolicy26);
        long long28 = deleteRequest27.version();
        long long29 = deleteRequest27.version();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy30 = deleteRequest27.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest9.setRefreshPolicy(refreshPolicy30);
        org.elasticsearch.tasks.TaskId taskId32 = deleteRequest31.getParentTask();
        org.elasticsearch.tasks.Task task33 = deleteRequest0.createTask((long) (short) 1, "delete {[hi!][hi!][]}", "", taskId32);
        java.lang.String str34 = deleteRequest0.id();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[][hi!][]}" + "'", str14, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNull(transportAddress25);
        org.junit.Assert.assertTrue("'" + refreshPolicy26 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy26.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-3L) + "'", long28 == (-3L));
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-3L) + "'", long29 == (-3L));
        org.junit.Assert.assertTrue("'" + refreshPolicy30 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy30.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(taskId32);
        org.junit.Assert.assertNotNull(task33);
        org.junit.Assert.assertNull(str34);
    }

    @Test
    public void test0434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0434");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy9 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.index("");
        java.lang.String str20 = deleteRequest17.toString();
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest17.getParentTask();
        deleteRequest13.setParentTask(taskId21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.routing("");
        org.elasticsearch.index.VersionType versionType29 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest26.versionType(versionType29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str35 = deleteRequest34.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel36 = deleteRequest34.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest30.consistencyLevel(writeConsistencyLevel36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest13.consistencyLevel(writeConsistencyLevel36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest43.routing("");
        org.elasticsearch.index.VersionType versionType46 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest43.versionType(versionType46);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str52 = deleteRequest51.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel53 = deleteRequest51.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest47.consistencyLevel(writeConsistencyLevel53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest58.routing("");
        org.elasticsearch.index.VersionType versionType61 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest58.versionType(versionType61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str67 = deleteRequest66.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel68 = deleteRequest66.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest62.consistencyLevel(writeConsistencyLevel68);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest47.consistencyLevel(writeConsistencyLevel68);
        org.elasticsearch.tasks.TaskId taskId71 = deleteRequest70.getParentTask();
        deleteRequest39.setParentTask(taskId71);
        deleteRequest38.setParentTask(taskId71);
        org.elasticsearch.index.VersionType versionType74 = deleteRequest38.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest3.versionType(versionType74);
        java.lang.String str76 = deleteRequest75.type();
        deleteRequest75.setParentTask("delete {[][null][null]}", 0L);
        org.elasticsearch.common.transport.TransportAddress transportAddress80 = deleteRequest75.remoteAddress();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(transportAddress8);
        org.junit.Assert.assertTrue("'" + refreshPolicy9 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy9.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[][hi!][]}" + "'", str20, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "delete {[][hi!][]}" + "'", str35, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel36 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel36.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "delete {[][hi!][]}" + "'", str52, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel53 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel53.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "delete {[][hi!][]}" + "'", str67, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel68 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel68.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNotNull(taskId71);
        org.junit.Assert.assertNotNull(versionType74);
        org.junit.Assert.assertNotNull(deleteRequest75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertNull(transportAddress80);
    }

    @Test
    public void test0435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0435");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str4 = deleteRequest3.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.setRefreshPolicy("");
        java.lang.String[] strArray10 = deleteRequest7.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.id("delete {[delete {[][null][null]}][delete {[][null][null]}][delete {[][null][null]}]}");
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest7.timeout();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest7.timeout("delete {[][delete {[][hi!][]}][delete {[][null][null]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[][delete {[][hi!][]}][delete {[][null][null]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][hi!][]}" + "'", str4, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(timeValue13);
    }

    @Test
    public void test0436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0436");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.routing("");
        org.elasticsearch.index.VersionType versionType11 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.versionType(versionType11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str17 = deleteRequest16.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel18 = deleteRequest16.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest12.consistencyLevel(writeConsistencyLevel18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.routing("");
        org.elasticsearch.index.VersionType versionType26 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest23.versionType(versionType26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str32 = deleteRequest31.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel33 = deleteRequest31.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest27.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest12.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.tasks.TaskId taskId36 = deleteRequest35.getParentTask();
        deleteRequest4.setParentTask(taskId36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest41.index("");
        org.elasticsearch.common.unit.TimeValue timeValue44 = deleteRequest43.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest4.timeout(timeValue44);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException46 = deleteRequest45.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][null][null]}", (java.lang.Throwable) actionRequestValidationException46, "delete {[][hi!][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][delete {[][hi!][]}][]}", (java.lang.Throwable) actionRequestValidationException46, "");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting51 = shardFailure50.routing;
        java.lang.String str52 = shardFailure50.indexUUID;
        java.lang.String str53 = shardFailure50.indexUUID;
        java.lang.String str54 = shardFailure50.reason;
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[][hi!][]}" + "'", str17, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel18 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel18.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[][hi!][]}" + "'", str32, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel33 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel33.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(taskId36);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(timeValue44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(actionRequestValidationException46);
        org.junit.Assert.assertNull(shardRouting51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "delete {[][delete {[][hi!][]}][]}" + "'", str54, "delete {[][delete {[][hi!][]}][]}");
    }

    @Test
    public void test0437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0437");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", throwable2, "delete {[][hi!][]}");
        java.lang.Throwable throwable5 = shardFailure4.cause;
        java.lang.String str6 = shardFailure4.reason;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting7 = shardFailure4.routing;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = shardFailure4.routing;
        java.lang.String str9 = shardFailure4.reason;
        java.lang.Throwable throwable10 = shardFailure4.cause;
        java.lang.String str11 = shardFailure4.reason;
        org.junit.Assert.assertNull(throwable5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(shardRouting7);
        org.junit.Assert.assertNull(shardRouting8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(throwable10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test0438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0438");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.routing("");
        org.elasticsearch.index.VersionType versionType11 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.versionType(versionType11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str17 = deleteRequest16.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel18 = deleteRequest16.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest12.consistencyLevel(writeConsistencyLevel18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.routing("");
        org.elasticsearch.index.VersionType versionType26 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest23.versionType(versionType26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str32 = deleteRequest31.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel33 = deleteRequest31.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest27.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest12.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.tasks.TaskId taskId36 = deleteRequest35.getParentTask();
        deleteRequest4.setParentTask(taskId36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest41.index("");
        org.elasticsearch.common.unit.TimeValue timeValue44 = deleteRequest43.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest4.timeout(timeValue44);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException46 = deleteRequest45.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][null][null]}", (java.lang.Throwable) actionRequestValidationException46, "delete {[][hi!][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][delete {[][hi!][]}][]}", (java.lang.Throwable) actionRequestValidationException46, "");
        java.lang.Throwable throwable51 = shardFailure50.cause;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting52 = shardFailure50.routing;
        java.lang.String str53 = shardFailure50.indexUUID;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting54 = shardFailure50.routing;
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[][hi!][]}" + "'", str17, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel18 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel18.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[][hi!][]}" + "'", str32, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel33 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel33.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(taskId36);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(timeValue44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(actionRequestValidationException46);
        org.junit.Assert.assertNotNull(throwable51);
        org.junit.Assert.assertEquals(throwable51.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable51.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable51.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNull(shardRouting52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNull(shardRouting54);
    }

    @Test
    public void test0439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0439");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.id("delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.index("");
        java.lang.String str18 = deleteRequest15.toString();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest15.getParentTask();
        deleteRequest11.setParentTask(taskId19);
        java.lang.String[] strArray21 = deleteRequest11.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.routing("");
        org.elasticsearch.tasks.TaskId taskId28 = null;
        deleteRequest27.setParentTask(taskId28);
        java.lang.String str30 = deleteRequest27.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy33 = deleteRequest32.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest27.setRefreshPolicy(refreshPolicy33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest11.setRefreshPolicy(refreshPolicy33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest5.setRefreshPolicy(refreshPolicy33);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest5.timeout("delete {[][null][hi!]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[][null][hi!]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[][hi!][]}" + "'", str18, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "delete {[][hi!][]}" + "'", str30, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + refreshPolicy33 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy33.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest36);
    }

    @Test
    public void test0440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0440");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.routing("");
        org.elasticsearch.index.VersionType versionType7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest4.versionType(versionType7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str13 = deleteRequest12.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest8.consistencyLevel(writeConsistencyLevel14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.routing("");
        org.elasticsearch.index.VersionType versionType22 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest19.versionType(versionType22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str28 = deleteRequest27.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = deleteRequest27.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest23.consistencyLevel(writeConsistencyLevel29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest8.consistencyLevel(writeConsistencyLevel29);
        org.elasticsearch.tasks.TaskId taskId32 = deleteRequest31.getParentTask();
        deleteRequest0.setParentTask(taskId32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest37.index("");
        org.elasticsearch.common.unit.TimeValue timeValue40 = deleteRequest39.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest0.timeout(timeValue40);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException42 = deleteRequest41.validate();
        deleteRequest41.primaryTerm((long) (byte) 10);
        org.elasticsearch.common.transport.TransportAddress transportAddress45 = null;
        deleteRequest41.remoteAddress(transportAddress45);
        org.elasticsearch.index.shard.ShardId shardId47 = deleteRequest41.shardId();
        org.elasticsearch.index.shard.IndexShard indexShard48 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult49 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest41, indexShard48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[][hi!][]}" + "'", str13, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "delete {[][hi!][]}" + "'", str28, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel29 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel29.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(taskId32);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(timeValue40);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(actionRequestValidationException42);
        org.junit.Assert.assertNull(shardId47);
    }

    @Test
    public void test0441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0441");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.tasks.TaskId taskId4 = null;
        deleteRequest3.setParentTask(taskId4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.routing("delete {[][hi!][delete {[][hi!][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.routing("");
        org.elasticsearch.index.VersionType versionType16 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest13.versionType(versionType16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str22 = deleteRequest21.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest21.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest17.consistencyLevel(writeConsistencyLevel23);
        org.elasticsearch.common.unit.TimeValue timeValue25 = deleteRequest24.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest9.timeout(timeValue25);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException27 = deleteRequest9.validate();
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[][hi!][]}" + "'", str22, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(timeValue25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(actionRequestValidationException27);
    }

    @Test
    public void test0442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0442");
        org.elasticsearch.index.shard.IndexShard indexShard0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.setRefreshPolicy("");
        java.lang.String str9 = deleteRequest6.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest6.parent("");
        java.lang.String[] strArray12 = deleteRequest6.indices();
        long long13 = deleteRequest6.primaryTerm();
        java.lang.String str14 = deleteRequest6.id();
        boolean boolean15 = deleteRequest6.getShouldPersistResult();
        org.elasticsearch.index.translog.Translog.Location location16 = null;
        org.elasticsearch.action.support.replication.TransportWriteAction.RespondingWriteResult respondingWriteResult17 = null;
        org.elasticsearch.common.logging.ESLogger eSLogger18 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.postWriteActions(indexShard0, (org.elasticsearch.action.support.WriteRequest<org.elasticsearch.action.delete.DeleteRequest>) deleteRequest6, location16, respondingWriteResult17, eSLogger18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test0443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0443");
        org.elasticsearch.index.shard.IndexShard indexShard0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.routing("");
        org.elasticsearch.index.VersionType versionType7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest4.versionType(versionType7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str13 = deleteRequest12.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest8.consistencyLevel(writeConsistencyLevel14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.routing("");
        org.elasticsearch.index.VersionType versionType22 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest19.versionType(versionType22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str28 = deleteRequest27.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = deleteRequest27.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest23.consistencyLevel(writeConsistencyLevel29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest8.consistencyLevel(writeConsistencyLevel29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest31.type("delete {[][hi!][]}");
        org.elasticsearch.index.translog.Translog.Location location34 = null;
        org.elasticsearch.action.support.replication.TransportWriteAction.RespondingWriteResult respondingWriteResult35 = null;
        org.elasticsearch.common.logging.ESLogger eSLogger36 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.postWriteActions(indexShard0, (org.elasticsearch.action.support.WriteRequest<org.elasticsearch.action.delete.DeleteRequest>) deleteRequest33, location34, respondingWriteResult35, eSLogger36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[][hi!][]}" + "'", str13, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "delete {[][hi!][]}" + "'", str28, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel29 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel29.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest33);
    }

    @Test
    public void test0444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0444");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.routing("");
        org.elasticsearch.index.VersionType versionType21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str27 = deleteRequest26.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest7.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.type("delete {[][hi!][]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy33 = deleteRequest32.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest32.id("delete {[][hi!][]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest32.setRefreshPolicy("delete {[][delete {[null][null][null]}][]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[][delete {[null][null][null]}][]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][hi!][]}" + "'", str27, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + refreshPolicy33 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy33.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest35);
    }

    @Test
    public void test0445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0445");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str4 = deleteRequest3.toString();
        deleteRequest3.primaryTerm(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.routing("");
        org.elasticsearch.index.VersionType versionType13 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.versionType(versionType13);
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = deleteRequest10.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy16 = deleteRequest10.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.setRefreshPolicy(refreshPolicy16);
        long long18 = deleteRequest3.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.routing("");
        org.elasticsearch.index.VersionType versionType25 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest22.versionType(versionType25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str31 = deleteRequest30.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel32 = deleteRequest30.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest26.consistencyLevel(writeConsistencyLevel32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest33.version((long) '4');
        org.elasticsearch.index.VersionType versionType36 = deleteRequest33.versionType();
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest33.setShardId(shardId37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.version((long) (short) 1);
        java.lang.String[] strArray41 = deleteRequest40.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy46 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest45.setRefreshPolicy(refreshPolicy46);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest45.type("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("");
        java.lang.String str52 = deleteRequest51.toString();
        long long53 = deleteRequest51.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest61.index("");
        java.lang.String str64 = deleteRequest61.toString();
        org.elasticsearch.tasks.TaskId taskId65 = deleteRequest61.getParentTask();
        deleteRequest57.setParentTask(taskId65);
        deleteRequest51.setParentTask(taskId65);
        deleteRequest49.setParentTask(taskId65);
        org.elasticsearch.tasks.Task task69 = deleteRequest40.createTask(1L, "", "delete {[][delete {[][hi!][]}][delete {[][null][null]}]}", taskId65);
        deleteRequest3.setParentTask(taskId65);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][hi!][]}" + "'", str4, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(transportAddress15);
        org.junit.Assert.assertTrue("'" + refreshPolicy16 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy16.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-3L) + "'", long18 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "delete {[][hi!][]}" + "'", str31, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel32 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel32.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNull(versionType36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "delete {[][null][null]}" + "'", str52, "delete {[][null][null]}");
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 0L + "'", long53 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "delete {[][hi!][]}" + "'", str64, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(taskId65);
        org.junit.Assert.assertNotNull(task69);
    }

    @Test
    public void test0446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0446");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str6 = deleteRequest5.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.id("delete {[][delete {[][hi!][]}][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = null;
        deleteRequest5.remoteAddress(transportAddress9);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.routing("");
        org.elasticsearch.index.VersionType versionType17 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest14.versionType(versionType17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str23 = deleteRequest22.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel24 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest18.consistencyLevel(writeConsistencyLevel24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest5.consistencyLevel(writeConsistencyLevel24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.id("hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[][hi!][]}", deleteRequest26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[][hi!][]}" + "'", str23, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel24 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel24.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
    }

    @Test
    public void test0447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0447");
        org.elasticsearch.action.support.replication.ReplicationTask replicationTask0 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.setPhase(replicationTask0, "delete {[][delete {[][hi!][]}][delete {[][hi!][]}]}");
    }

    @Test
    public void test0448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0448");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        java.lang.String str6 = deleteRequest3.toString();
        org.elasticsearch.index.shard.IndexShard indexShard7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete8 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest3, indexShard7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][hi!][]}" + "'", str6, "delete {[][hi!][]}");
    }

    @Test
    public void test0449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0449");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.index("");
        java.lang.String str12 = deleteRequest9.toString();
        org.elasticsearch.tasks.TaskId taskId13 = deleteRequest9.getParentTask();
        deleteRequest5.setParentTask(taskId13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.routing("");
        org.elasticsearch.index.VersionType versionType21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str27 = deleteRequest26.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest5.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest34.routing("");
        org.elasticsearch.index.VersionType versionType37 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest34.versionType(versionType37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str43 = deleteRequest42.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel44 = deleteRequest42.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest38.consistencyLevel(writeConsistencyLevel44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest49.routing("");
        org.elasticsearch.index.VersionType versionType52 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest49.versionType(versionType52);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str58 = deleteRequest57.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel59 = deleteRequest57.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest53.consistencyLevel(writeConsistencyLevel59);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest38.consistencyLevel(writeConsistencyLevel59);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest30.consistencyLevel(writeConsistencyLevel59);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException63 = deleteRequest30.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long66 = deleteRequest65.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str71 = deleteRequest70.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel72 = deleteRequest70.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest65.consistencyLevel(writeConsistencyLevel72);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest30.consistencyLevel(writeConsistencyLevel72);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[][hi!][delete {[][hi!][]}]}", deleteRequest30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(taskId13);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][hi!][]}" + "'", str27, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "delete {[][hi!][]}" + "'", str43, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel44 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel44.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "delete {[][hi!][]}" + "'", str58, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel59 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel59.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNull(actionRequestValidationException63);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + (-3L) + "'", long66 == (-3L));
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "delete {[][hi!][]}" + "'", str71, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel72 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel72.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest73);
        org.junit.Assert.assertNotNull(deleteRequest74);
    }

    @Test
    public void test0450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0450");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "");
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.setShardId(shardId4);
        java.lang.Class<?> wildcardClass6 = deleteRequest3.getClass();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0451");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        long long4 = deleteRequest3.version();
        boolean boolean5 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((long) '#');
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.setShardId(shardId8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest7.routing("delete {[delete {[][delete {[][hi!][]}][]}][hi!][]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.setRefreshPolicy("delete {[][delete {[][hi!][]}][delete {[][hi!][]}]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[][delete {[][hi!][]}][delete {[][hi!][]}]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-3L) + "'", long4 == (-3L));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
    }

    @Test
    public void test0452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0452");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.version((long) '4');
        org.elasticsearch.index.VersionType versionType17 = deleteRequest14.versionType();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest14.setShardId(shardId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.version((long) (short) 1);
        java.lang.String[] strArray22 = deleteRequest21.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy27 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.setRefreshPolicy(refreshPolicy27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest26.type("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("");
        java.lang.String str33 = deleteRequest32.toString();
        long long34 = deleteRequest32.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest42.index("");
        java.lang.String str45 = deleteRequest42.toString();
        org.elasticsearch.tasks.TaskId taskId46 = deleteRequest42.getParentTask();
        deleteRequest38.setParentTask(taskId46);
        deleteRequest32.setParentTask(taskId46);
        deleteRequest30.setParentTask(taskId46);
        org.elasticsearch.tasks.Task task50 = deleteRequest21.createTask(1L, "", "delete {[][delete {[][hi!][]}][delete {[][null][null]}]}", taskId46);
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest21.setShardId(shardId51);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException53 = deleteRequest21.validate();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNull(versionType17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "delete {[][null][null]}" + "'", str33, "delete {[][null][null]}");
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "delete {[][hi!][]}" + "'", str45, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(taskId46);
        org.junit.Assert.assertNotNull(task50);
        org.junit.Assert.assertNotNull(deleteRequest52);
    }

    @Test
    public void test0453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0453");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy9 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.index.shard.ShardId shardId10 = deleteRequest3.shardId();
        java.lang.String str11 = deleteRequest3.type();
        org.elasticsearch.index.shard.ShardId shardId12 = deleteRequest3.shardId();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(transportAddress8);
        org.junit.Assert.assertTrue("'" + refreshPolicy9 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy9.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNull(shardId10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNull(shardId12);
    }

    @Test
    public void test0454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0454");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.type("delete {[][hi!][]}");
        java.lang.String str8 = deleteRequest3.toString();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setShardId(shardId9);
        java.lang.String str11 = deleteRequest3.routing();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[][delete {[][hi!][]}][]}" + "'", str8, "delete {[][delete {[][hi!][]}][]}");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test0455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0455");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.index("");
        java.lang.String str8 = deleteRequest5.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy11 = deleteRequest10.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.id("hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = null;
        deleteRequest15.remoteAddress(transportAddress16);
        org.elasticsearch.index.VersionType versionType18 = deleteRequest15.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest5.versionType(versionType18);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[][hi!][]}][hi!][]}", deleteRequest19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[][hi!][]}" + "'", str8, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + refreshPolicy11 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy11.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertNotNull(deleteRequest19);
    }

    @Test
    public void test0456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0456");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[][hi!][]}][]}", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("delete {[hi!][hi!][]}");
        java.lang.String str6 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][null][null]}", "delete {[][null][null]}", "delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.type("delete {[][delete {[][hi!][]}][]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.consistencyLevel(writeConsistencyLevel13);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest3.timeout("delete {[][null][null]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[][null][null]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[delete {[][delete {[][hi!][]}][]}][hi!][]}" + "'", str6, "delete {[delete {[][delete {[][hi!][]}][]}][hi!][]}");
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
    }

    @Test
    public void test0457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0457");
        org.elasticsearch.index.shard.IndexShard indexShard0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy3 = deleteRequest2.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest2.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.id("hi!");
        org.elasticsearch.index.translog.Translog.Location location8 = null;
        org.elasticsearch.action.support.replication.TransportWriteAction.RespondingWriteResult respondingWriteResult9 = null;
        org.elasticsearch.common.logging.ESLogger eSLogger10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.postWriteActions(indexShard0, (org.elasticsearch.action.support.WriteRequest<org.elasticsearch.action.delete.DeleteRequest>) deleteRequest5, location8, respondingWriteResult9, eSLogger10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + refreshPolicy3 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy3.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
    }

    @Test
    public void test0458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0458");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        long long15 = deleteRequest14.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.index("hi!");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel18 = deleteRequest17.consistencyLevel();
        java.lang.String str19 = deleteRequest17.getDescription();
        org.elasticsearch.common.transport.TransportAddress transportAddress20 = deleteRequest17.remoteAddress();
        org.elasticsearch.index.shard.IndexShard indexShard21 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult22 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest17, indexShard21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel18 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel18.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[hi!][hi!][]}" + "'", str19, "delete {[hi!][hi!][]}");
        org.junit.Assert.assertNull(transportAddress20);
    }

    @Test
    public void test0459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0459");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.version((long) '4');
        org.elasticsearch.index.VersionType versionType17 = deleteRequest14.versionType();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest14.setShardId(shardId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.version((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.index("");
        java.lang.String str32 = deleteRequest29.toString();
        org.elasticsearch.tasks.TaskId taskId33 = deleteRequest29.getParentTask();
        deleteRequest25.setParentTask(taskId33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.routing("");
        org.elasticsearch.index.VersionType versionType41 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest38.versionType(versionType41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str47 = deleteRequest46.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel48 = deleteRequest46.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest42.consistencyLevel(writeConsistencyLevel48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest25.consistencyLevel(writeConsistencyLevel48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest55.routing("");
        org.elasticsearch.index.VersionType versionType58 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest55.versionType(versionType58);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str64 = deleteRequest63.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel65 = deleteRequest63.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest59.consistencyLevel(writeConsistencyLevel65);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest70.routing("");
        org.elasticsearch.index.VersionType versionType73 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest70.versionType(versionType73);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str79 = deleteRequest78.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel80 = deleteRequest78.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = deleteRequest74.consistencyLevel(writeConsistencyLevel80);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest82 = deleteRequest59.consistencyLevel(writeConsistencyLevel80);
        org.elasticsearch.tasks.TaskId taskId83 = deleteRequest82.getParentTask();
        deleteRequest51.setParentTask(taskId83);
        deleteRequest50.setParentTask(taskId83);
        org.elasticsearch.index.VersionType versionType86 = deleteRequest50.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = deleteRequest19.versionType(versionType86);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest89 = deleteRequest87.setRefreshPolicy("delete {[][hi!][]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[][hi!][]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNull(versionType17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[][hi!][]}" + "'", str32, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(taskId33);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "delete {[][hi!][]}" + "'", str47, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel48 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel48.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "delete {[][hi!][]}" + "'", str64, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel65 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel65.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "delete {[][hi!][]}" + "'", str79, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel80 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel80.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest81);
        org.junit.Assert.assertNotNull(deleteRequest82);
        org.junit.Assert.assertNotNull(taskId83);
        org.junit.Assert.assertNotNull(versionType86);
        org.junit.Assert.assertNotNull(deleteRequest87);
    }

    @Test
    public void test0460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0460");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.routing("");
        org.elasticsearch.index.VersionType versionType8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest5.versionType(versionType8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str14 = deleteRequest13.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel15 = deleteRequest13.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest9.consistencyLevel(writeConsistencyLevel15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.routing("");
        org.elasticsearch.index.VersionType versionType23 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest20.versionType(versionType23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str29 = deleteRequest28.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel30 = deleteRequest28.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest24.consistencyLevel(writeConsistencyLevel30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest9.consistencyLevel(writeConsistencyLevel30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.type("delete {[][hi!][]}");
        long long35 = deleteRequest32.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest39.index("");
        org.elasticsearch.common.unit.TimeValue timeValue42 = deleteRequest41.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest32.timeout(timeValue42);
        org.elasticsearch.index.VersionType versionType44 = deleteRequest32.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest32.routing("delete {[delete {[][delete {[][hi!][]}][]}][hi!][]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "hi!", deleteRequest46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[][hi!][]}" + "'", str14, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel15 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel15.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "delete {[][hi!][]}" + "'", str29, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel30 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel30.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-3L) + "'", long35 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(timeValue42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNull(versionType44);
        org.junit.Assert.assertNotNull(deleteRequest46);
    }

    @Test
    public void test0461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0461");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest3.primaryTerm(10L);
        java.lang.String[] strArray6 = deleteRequest3.indices();
        org.elasticsearch.common.transport.TransportAddress transportAddress7 = deleteRequest3.remoteAddress();
        java.lang.String str8 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.routing("delete {[][hi!][]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[][null][hi!]}", deleteRequest3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNull(transportAddress7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest10);
    }

    @Test
    public void test0462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0462");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.routing("");
        org.elasticsearch.index.VersionType versionType11 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.versionType(versionType11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str17 = deleteRequest16.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel18 = deleteRequest16.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest12.consistencyLevel(writeConsistencyLevel18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.routing("");
        org.elasticsearch.index.VersionType versionType26 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest23.versionType(versionType26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str32 = deleteRequest31.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel33 = deleteRequest31.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest27.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest12.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.tasks.TaskId taskId36 = deleteRequest35.getParentTask();
        deleteRequest4.setParentTask(taskId36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest41.index("");
        org.elasticsearch.common.unit.TimeValue timeValue44 = deleteRequest43.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest4.timeout(timeValue44);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException46 = deleteRequest45.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][delete {[][hi!][]}][]}", (java.lang.Throwable) actionRequestValidationException46, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][hi!][]}", (java.lang.Throwable) actionRequestValidationException46, "delete {[hi!][null][null]}");
        java.lang.String str51 = shardFailure50.indexUUID;
        java.lang.String str52 = shardFailure50.indexUUID;
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[][hi!][]}" + "'", str17, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel18 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel18.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[][hi!][]}" + "'", str32, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel33 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel33.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(taskId36);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(timeValue44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(actionRequestValidationException46);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "delete {[hi!][null][null]}" + "'", str51, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "delete {[hi!][null][null]}" + "'", str52, "delete {[hi!][null][null]}");
    }

    @Test
    public void test0463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0463");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str4 = deleteRequest3.toString();
        deleteRequest3.primaryTerm(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.routing("");
        org.elasticsearch.index.VersionType versionType13 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.versionType(versionType13);
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = deleteRequest10.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy16 = deleteRequest10.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.setRefreshPolicy(refreshPolicy16);
        long long18 = deleteRequest17.version();
        deleteRequest17.setParentTask("delete {[hi!][null][null]}", (long) (byte) 100);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][hi!][]}" + "'", str4, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(transportAddress15);
        org.junit.Assert.assertTrue("'" + refreshPolicy16 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy16.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-3L) + "'", long18 == (-3L));
    }

    @Test
    public void test0464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0464");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[][hi!][]}][]}", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.index("delete {[][hi!][]}");
        long long6 = deleteRequest5.version();
        boolean boolean7 = deleteRequest5.getShouldPersistResult();
        org.elasticsearch.action.support.IndicesOptions indicesOptions8 = deleteRequest5.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.id("delete {[][delete {[][hi!][]}][]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest5.setRefreshPolicy("delete {[][hi!][delete {[][null][null]}]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[][hi!][delete {[][null][null]}]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-3L) + "'", long6 == (-3L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(indicesOptions8);
        org.junit.Assert.assertNotNull(deleteRequest10);
    }

    @Test
    public void test0465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0465");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.routing("");
        org.elasticsearch.index.VersionType versionType8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest5.versionType(versionType8);
        org.elasticsearch.common.transport.TransportAddress transportAddress10 = deleteRequest5.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy11 = deleteRequest5.getRefreshPolicy();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest5.setShardId(shardId12);
        org.elasticsearch.index.shard.ShardId shardId14 = deleteRequest13.shardId();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "", deleteRequest13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNull(transportAddress10);
        org.junit.Assert.assertTrue("'" + refreshPolicy11 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy11.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNull(shardId14);
    }

    @Test
    public void test0466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0466");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.routing("");
        org.elasticsearch.index.VersionType versionType21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str27 = deleteRequest26.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest7.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.type("delete {[][hi!][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.routing("delete {[][null][null]}");
        deleteRequest34.primaryTerm((long) '4');
        org.elasticsearch.common.unit.TimeValue timeValue37 = deleteRequest34.timeout();
        boolean boolean38 = deleteRequest34.getShouldPersistResult();
        java.lang.String str39 = deleteRequest34.getDescription();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][hi!][]}" + "'", str27, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(timeValue37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "delete {[][delete {[][hi!][]}][]}" + "'", str39, "delete {[][delete {[][hi!][]}][]}");
    }

    @Test
    public void test0467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0467");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str4 = deleteRequest3.toString();
        deleteRequest3.primaryTerm(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.routing("");
        org.elasticsearch.index.VersionType versionType13 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.versionType(versionType13);
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = deleteRequest10.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy16 = deleteRequest10.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.setRefreshPolicy(refreshPolicy16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.index("");
        java.lang.String str28 = deleteRequest25.toString();
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest25.getParentTask();
        deleteRequest21.setParentTask(taskId29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest34.routing("");
        org.elasticsearch.index.VersionType versionType37 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest34.versionType(versionType37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str43 = deleteRequest42.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel44 = deleteRequest42.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest38.consistencyLevel(writeConsistencyLevel44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest21.consistencyLevel(writeConsistencyLevel44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest51.routing("");
        org.elasticsearch.index.VersionType versionType54 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest51.versionType(versionType54);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str60 = deleteRequest59.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel61 = deleteRequest59.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest55.consistencyLevel(writeConsistencyLevel61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest66.routing("");
        org.elasticsearch.index.VersionType versionType69 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest66.versionType(versionType69);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str75 = deleteRequest74.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel76 = deleteRequest74.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest70.consistencyLevel(writeConsistencyLevel76);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = deleteRequest55.consistencyLevel(writeConsistencyLevel76);
        org.elasticsearch.tasks.TaskId taskId79 = deleteRequest78.getParentTask();
        deleteRequest47.setParentTask(taskId79);
        deleteRequest46.setParentTask(taskId79);
        org.elasticsearch.index.VersionType versionType82 = deleteRequest46.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest83 = deleteRequest3.versionType(versionType82);
        deleteRequest3.primaryTerm((long) (short) -1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][hi!][]}" + "'", str4, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(transportAddress15);
        org.junit.Assert.assertTrue("'" + refreshPolicy16 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy16.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "delete {[][hi!][]}" + "'", str28, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "delete {[][hi!][]}" + "'", str43, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel44 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel44.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "delete {[][hi!][]}" + "'", str60, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel61 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel61.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "delete {[][hi!][]}" + "'", str75, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel76 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel76.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertNotNull(deleteRequest78);
        org.junit.Assert.assertNotNull(taskId79);
        org.junit.Assert.assertNotNull(versionType82);
        org.junit.Assert.assertNotNull(deleteRequest83);
    }

    @Test
    public void test0468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0468");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str4 = deleteRequest3.toString();
        java.lang.String str5 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.type("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.parent("delete {[][hi!][]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions10 = deleteRequest7.indicesOptions();
        org.elasticsearch.index.shard.IndexShard indexShard11 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete12 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest7, indexShard11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][hi!][]}" + "'", str4, "delete {[][hi!][]}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(indicesOptions10);
    }

    @Test
    public void test0469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0469");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy2 = deleteRequest1.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.id("hi!");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.setRefreshPolicy(refreshPolicy7);
        org.elasticsearch.index.shard.IndexShard indexShard9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete10 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest8, indexShard9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + refreshPolicy2 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy2.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
    }

    @Test
    public void test0470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0470");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[hi!][hi!][]}", deleteRequest2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0471");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.index("");
        java.lang.String str10 = deleteRequest7.toString();
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest7.getParentTask();
        deleteRequest3.setParentTask(taskId11);
        java.lang.String[] strArray13 = deleteRequest3.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.routing("");
        org.elasticsearch.tasks.TaskId taskId20 = null;
        deleteRequest19.setParentTask(taskId20);
        java.lang.String str22 = deleteRequest19.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy25 = deleteRequest24.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest19.setRefreshPolicy(refreshPolicy25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest3.setRefreshPolicy(refreshPolicy25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest3.routing("");
        java.lang.String str32 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest3.type("delete {[hi!][null][null]}");
        long long35 = deleteRequest3.primaryTerm();
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][hi!][]}" + "'", str10, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[][hi!][]}" + "'", str22, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + refreshPolicy25 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy25.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[][hi!][]}" + "'", str32, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
    }

    @Test
    public void test0472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0472");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.version((long) '4');
        org.elasticsearch.index.VersionType versionType17 = deleteRequest14.versionType();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest14.setShardId(shardId18);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.setShardId(shardId20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.index("");
        java.lang.String str32 = deleteRequest29.toString();
        org.elasticsearch.tasks.TaskId taskId33 = deleteRequest29.getParentTask();
        deleteRequest25.setParentTask(taskId33);
        deleteRequest21.setParentTask(taskId33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest21.routing("delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest37.index("delete {[][delete {[][hi!][]}][delete {[][hi!][]}]}");
        java.lang.String str40 = deleteRequest37.getDescription();
        org.elasticsearch.index.shard.IndexShard indexShard41 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete42 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest37, indexShard41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNull(versionType17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[][hi!][]}" + "'", str32, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(taskId33);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "delete {[delete {[][delete {[][hi!][]}][delete {[][hi!][]}]}][hi!][]}" + "'", str40, "delete {[delete {[][delete {[][hi!][]}][delete {[][hi!][]}]}][hi!][]}");
    }

    @Test
    public void test0473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0473");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.routing("");
        org.elasticsearch.index.VersionType versionType21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str27 = deleteRequest26.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest7.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.tasks.TaskId taskId31 = deleteRequest30.getParentTask();
        java.lang.String str32 = deleteRequest30.getDescription();
        org.elasticsearch.common.transport.TransportAddress transportAddress33 = null;
        deleteRequest30.remoteAddress(transportAddress33);
        org.elasticsearch.common.transport.TransportAddress transportAddress35 = deleteRequest30.remoteAddress();
        java.lang.String str36 = deleteRequest30.index();
        java.lang.String str37 = deleteRequest30.id();
        org.elasticsearch.index.VersionType versionType38 = deleteRequest30.versionType();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][hi!][]}" + "'", str27, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(taskId31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[][hi!][]}" + "'", str32, "delete {[][hi!][]}");
        org.junit.Assert.assertNull(transportAddress35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(versionType38);
    }

    @Test
    public void test0474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0474");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy1 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.setRefreshPolicy(refreshPolicy1);
        org.elasticsearch.common.io.stream.StreamInput streamInput3 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest0.readFrom(streamInput3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest2);
    }

    @Test
    public void test0475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0475");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.routing("");
        org.elasticsearch.index.VersionType versionType21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str27 = deleteRequest26.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest7.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.type("delete {[][hi!][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.routing("delete {[][null][null]}");
        deleteRequest34.primaryTerm((long) '#');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest34.routing("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest34.parent("delete {[null][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress41 = null;
        deleteRequest40.remoteAddress(transportAddress41);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][hi!][]}" + "'", str27, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest40);
    }

    @Test
    public void test0476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0476");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[][hi!][]}][]}", "hi!", "");
        java.lang.Class<?> wildcardClass4 = deleteRequest3.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0477");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.routing("");
        org.elasticsearch.index.VersionType versionType11 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.versionType(versionType11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str17 = deleteRequest16.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel18 = deleteRequest16.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest12.consistencyLevel(writeConsistencyLevel18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.routing("");
        org.elasticsearch.index.VersionType versionType26 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest23.versionType(versionType26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str32 = deleteRequest31.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel33 = deleteRequest31.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest27.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest12.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.tasks.TaskId taskId36 = deleteRequest35.getParentTask();
        deleteRequest4.setParentTask(taskId36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest41.index("");
        org.elasticsearch.common.unit.TimeValue timeValue44 = deleteRequest43.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest4.timeout(timeValue44);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException46 = deleteRequest45.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][null][null]}", (java.lang.Throwable) actionRequestValidationException46, "delete {[][hi!][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][delete {[][hi!][]}][]}", (java.lang.Throwable) actionRequestValidationException46, "");
        java.lang.Throwable throwable51 = shardFailure50.cause;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting52 = shardFailure50.routing;
        java.lang.String str53 = shardFailure50.indexUUID;
        java.lang.String str54 = shardFailure50.reason;
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[][hi!][]}" + "'", str17, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel18 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel18.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[][hi!][]}" + "'", str32, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel33 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel33.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(taskId36);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(timeValue44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(actionRequestValidationException46);
        org.junit.Assert.assertNotNull(throwable51);
        org.junit.Assert.assertEquals(throwable51.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable51.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable51.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNull(shardRouting52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "delete {[][delete {[][hi!][]}][]}" + "'", str54, "delete {[][delete {[][hi!][]}][]}");
    }

    @Test
    public void test0478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0478");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str6 = deleteRequest5.toString();
        java.lang.String str7 = deleteRequest5.parent();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[][null][hi!]}", deleteRequest5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][hi!][]}" + "'", str6, "delete {[][hi!][]}");
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test0479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0479");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[][delete {[][hi!][]}][delete {[][null][null]}]}");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput9 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.writeTo(streamOutput9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
    }

    @Test
    public void test0480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0480");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.routing("");
        org.elasticsearch.index.VersionType versionType21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str27 = deleteRequest26.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest7.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.type("delete {[][hi!][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.routing("delete {[][null][null]}");
        deleteRequest34.primaryTerm((long) '#');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest34.routing("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.id("delete {[][hi!][]}");
        org.elasticsearch.common.io.stream.StreamInput streamInput41 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest38.readFrom(streamInput41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][hi!][]}" + "'", str27, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest40);
    }

    @Test
    public void test0481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0481");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.setRefreshPolicy("");
        java.lang.String str8 = deleteRequest5.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.parent("");
        java.lang.String[] strArray11 = deleteRequest5.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest5.version((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest5.routing("delete {[delete {[][null][null]}][delete {[][null][null]}][delete {[][null][null]}]}");
        java.lang.Class<?> wildcardClass16 = deleteRequest5.getClass();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0482");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][null][hi!]}", "delete {[][hi!][]}", "delete {[][hi!][delete {[][hi!][]}]}");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.junit.Assert.assertNull(shardId4);
    }

    @Test
    public void test0483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0483");
        org.elasticsearch.action.support.replication.ReplicationTask replicationTask0 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.setPhase(replicationTask0, "delete {[delete {[][delete {[][hi!][]}][]}][hi!][]}");
    }

    @Test
    public void test0484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0484");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.index("");
        java.lang.String str8 = deleteRequest5.toString();
        org.elasticsearch.index.VersionType versionType9 = deleteRequest5.versionType();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[][delete {[][hi!][]}][]}", deleteRequest5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[][hi!][]}" + "'", str8, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(versionType9);
    }

    @Test
    public void test0485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0485");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.index("");
        java.lang.String str10 = deleteRequest7.toString();
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest7.getParentTask();
        deleteRequest3.setParentTask(taskId11);
        java.lang.String[] strArray13 = deleteRequest3.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.routing("");
        org.elasticsearch.tasks.TaskId taskId20 = null;
        deleteRequest19.setParentTask(taskId20);
        java.lang.String str22 = deleteRequest19.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy25 = deleteRequest24.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest19.setRefreshPolicy(refreshPolicy25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest3.setRefreshPolicy(refreshPolicy25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest3.routing("");
        deleteRequest3.setParentTask("delete {[][hi!][delete {[][hi!][]}]}", (long) (short) -1);
        org.elasticsearch.index.shard.IndexShard indexShard35 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete36 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest3, indexShard35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][hi!][]}" + "'", str10, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[][hi!][]}" + "'", str22, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + refreshPolicy25 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy25.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
    }

    @Test
    public void test0486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0486");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "");
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.setShardId(shardId4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.index("delete {[][null][null]}");
        java.lang.Class<?> wildcardClass8 = deleteRequest7.getClass();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0487");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        long long4 = deleteRequest3.version();
        boolean boolean5 = deleteRequest3.getShouldPersistResult();
        long long6 = deleteRequest3.version();
        org.elasticsearch.index.VersionType versionType7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.versionType(versionType7);
        deleteRequest8.primaryTerm((long) 'a');
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-3L) + "'", long4 == (-3L));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-3L) + "'", long6 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest8);
    }

    @Test
    public void test0488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0488");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.routing("");
        org.elasticsearch.index.VersionType versionType11 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.versionType(versionType11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str17 = deleteRequest16.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel18 = deleteRequest16.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest12.consistencyLevel(writeConsistencyLevel18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.routing("");
        org.elasticsearch.index.VersionType versionType26 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest23.versionType(versionType26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str32 = deleteRequest31.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel33 = deleteRequest31.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest27.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest12.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.tasks.TaskId taskId36 = deleteRequest35.getParentTask();
        deleteRequest4.setParentTask(taskId36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest41.index("");
        org.elasticsearch.common.unit.TimeValue timeValue44 = deleteRequest43.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest4.timeout(timeValue44);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException46 = deleteRequest45.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][delete {[][hi!][]}][]}", (java.lang.Throwable) actionRequestValidationException46, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][hi!][]}", (java.lang.Throwable) actionRequestValidationException46, "delete {[hi!][null][null]}");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting51 = shardFailure50.routing;
        java.lang.Throwable throwable52 = shardFailure50.cause;
        java.lang.String str53 = shardFailure50.reason;
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[][hi!][]}" + "'", str17, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel18 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel18.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[][hi!][]}" + "'", str32, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel33 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel33.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(taskId36);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(timeValue44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(actionRequestValidationException46);
        org.junit.Assert.assertNull(shardRouting51);
        org.junit.Assert.assertNotNull(throwable52);
        org.junit.Assert.assertEquals(throwable52.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable52.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable52.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "delete {[][hi!][]}" + "'", str53, "delete {[][hi!][]}");
    }

    @Test
    public void test0489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0489");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[][delete {[][hi!][]}][]}][null]}", "delete {[hi!][hi!][]}", "delete {[hi!][hi!][]}");
    }

    @Test
    public void test0490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0490");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.tasks.TaskId taskId4 = null;
        deleteRequest3.setParentTask(taskId4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.routing("delete {[][hi!][delete {[][hi!][]}]}");
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.routing("");
        org.elasticsearch.index.VersionType versionType16 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest13.versionType(versionType16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str22 = deleteRequest21.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest21.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest17.consistencyLevel(writeConsistencyLevel23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.routing("");
        org.elasticsearch.index.VersionType versionType31 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest28.versionType(versionType31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str37 = deleteRequest36.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = deleteRequest36.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest32.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest17.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.tasks.TaskId taskId41 = deleteRequest40.getParentTask();
        deleteRequest9.setParentTask(taskId41);
        long long43 = deleteRequest9.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest9.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest47.primaryTerm(10L);
        java.lang.String str50 = deleteRequest47.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest47.index("hi!");
        long long53 = deleteRequest52.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy56 = deleteRequest55.getRefreshPolicy();
        java.lang.String str57 = deleteRequest55.type();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy58 = deleteRequest55.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest52.setRefreshPolicy(refreshPolicy58);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest9.setRefreshPolicy(refreshPolicy58);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest3.setRefreshPolicy(refreshPolicy58);
        org.elasticsearch.common.io.stream.StreamInput streamInput62 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest61.readFrom(streamInput62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(taskId8);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[][hi!][]}" + "'", str22, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "delete {[][hi!][]}" + "'", str37, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel38 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel38.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(taskId41);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-3L) + "'", long43 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "delete {[][null][null]}" + "'", str50, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + (-3L) + "'", long53 == (-3L));
        org.junit.Assert.assertTrue("'" + refreshPolicy56 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy56.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertTrue("'" + refreshPolicy58 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy58.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(deleteRequest61);
    }

    @Test
    public void test0491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0491");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy4 = deleteRequest3.getRefreshPolicy();
        long long5 = deleteRequest3.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.routing("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.routing("delete {[delete {[][hi!][]}][hi!][]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.setRefreshPolicy("delete {[hi!][null][null]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[hi!][null][null]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + refreshPolicy4 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy4.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
    }

    @Test
    public void test0492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0492");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.version((long) '4');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.index("");
        java.lang.String str27 = deleteRequest24.toString();
        org.elasticsearch.tasks.TaskId taskId28 = deleteRequest24.getParentTask();
        deleteRequest20.setParentTask(taskId28);
        deleteRequest16.setParentTask(taskId28);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy31 = deleteRequest16.getRefreshPolicy();
        java.lang.String str32 = deleteRequest16.index();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][]}" + "'", str12, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][hi!][]}" + "'", str27, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(taskId28);
        org.junit.Assert.assertTrue("'" + refreshPolicy31 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy31.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
    }

    @Test
    public void test0493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0493");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str4 = deleteRequest3.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("");
        java.lang.String str8 = deleteRequest3.id();
        org.elasticsearch.action.support.IndicesOptions indicesOptions9 = deleteRequest3.indicesOptions();
        boolean boolean10 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput11 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.writeTo(streamOutput11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][hi!][]}" + "'", str4, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(indicesOptions9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0494");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest1.primaryTerm(10L);
        java.lang.String str4 = deleteRequest1.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest1.index("hi!");
        java.lang.String str7 = deleteRequest6.toString();
        long long8 = deleteRequest6.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.routing("");
        org.elasticsearch.index.VersionType versionType15 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest12.versionType(versionType15);
        org.elasticsearch.index.VersionType versionType17 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest12.versionType(versionType17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest12.parent("");
        java.lang.String str21 = deleteRequest20.index();
        deleteRequest20.primaryTerm((long) (short) 100);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy24 = deleteRequest20.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest6.setRefreshPolicy(refreshPolicy24);
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.setShardId(shardId26);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest25.setRefreshPolicy("delete {[hi!][null][null]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[hi!][null][null]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][null][null]}" + "'", str4, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[hi!][null][null]}" + "'", str7, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10L + "'", long8 == 10L);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + refreshPolicy24 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy24.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
    }

    @Test
    public void test0495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0495");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.id("delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.index("");
        java.lang.String str18 = deleteRequest15.toString();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest15.getParentTask();
        deleteRequest11.setParentTask(taskId19);
        java.lang.String[] strArray21 = deleteRequest11.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.routing("");
        org.elasticsearch.tasks.TaskId taskId28 = null;
        deleteRequest27.setParentTask(taskId28);
        java.lang.String str30 = deleteRequest27.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy33 = deleteRequest32.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest27.setRefreshPolicy(refreshPolicy33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest11.setRefreshPolicy(refreshPolicy33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest5.setRefreshPolicy(refreshPolicy33);
        org.elasticsearch.common.transport.TransportAddress transportAddress37 = null;
        deleteRequest36.remoteAddress(transportAddress37);
        org.elasticsearch.common.unit.TimeValue timeValue39 = deleteRequest36.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest36.routing("");
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[][hi!][]}" + "'", str18, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "delete {[][hi!][]}" + "'", str30, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + refreshPolicy33 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy33.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(timeValue39);
        org.junit.Assert.assertNotNull(deleteRequest41);
    }

    @Test
    public void test0496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0496");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", throwable2, "delete {[][hi!][]}");
        java.lang.Throwable throwable5 = shardFailure4.cause;
        java.lang.String str6 = shardFailure4.reason;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting7 = shardFailure4.routing;
        java.lang.String str8 = shardFailure4.reason;
        java.lang.String str9 = shardFailure4.reason;
        java.lang.String str10 = shardFailure4.reason;
        org.junit.Assert.assertNull(throwable5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(shardRouting7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test0497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0497");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.index("");
        java.lang.String str6 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.version((long) (byte) 100);
        long long11 = deleteRequest8.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str16 = deleteRequest15.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel17 = deleteRequest15.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest15.id("");
        org.elasticsearch.tasks.TaskId taskId20 = deleteRequest19.getParentTask();
        deleteRequest8.setParentTask(taskId20);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput22 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest8.writeTo(streamOutput22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][hi!][]}" + "'", str6, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[][hi!][]}" + "'", str16, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel17 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel17.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(taskId20);
    }

    @Test
    public void test0498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0498");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][hi!][delete {[][hi!][]}]}", throwable2, "delete {[hi!][hi!][]}");
        java.lang.String str5 = shardFailure4.reason;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[][hi!][delete {[][hi!][]}]}" + "'", str5, "delete {[][hi!][delete {[][hi!][]}]}");
    }

    @Test
    public void test0499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0499");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.index("");
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest3.remoteAddress(transportAddress6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.routing("");
        org.elasticsearch.index.VersionType versionType14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest11.versionType(versionType14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str20 = deleteRequest19.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel21 = deleteRequest19.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.consistencyLevel(writeConsistencyLevel21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.routing("");
        org.elasticsearch.index.VersionType versionType29 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest26.versionType(versionType29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str35 = deleteRequest34.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel36 = deleteRequest34.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest30.consistencyLevel(writeConsistencyLevel36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest15.consistencyLevel(writeConsistencyLevel36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest3.consistencyLevel(writeConsistencyLevel36);
        org.elasticsearch.index.shard.IndexShard indexShard40 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete41 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest39, indexShard40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[][hi!][]}" + "'", str20, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel21 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel21.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "delete {[][hi!][]}" + "'", str35, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel36 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel36.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest39);
    }

    @Test
    public void test0500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0500");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.routing("");
        org.elasticsearch.index.VersionType versionType7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest4.versionType(versionType7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str13 = deleteRequest12.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest8.consistencyLevel(writeConsistencyLevel14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.routing("");
        org.elasticsearch.index.VersionType versionType22 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest19.versionType(versionType22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        java.lang.String str28 = deleteRequest27.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = deleteRequest27.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest23.consistencyLevel(writeConsistencyLevel29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest8.consistencyLevel(writeConsistencyLevel29);
        org.elasticsearch.tasks.TaskId taskId32 = deleteRequest31.getParentTask();
        deleteRequest0.setParentTask(taskId32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest37.index("");
        org.elasticsearch.common.unit.TimeValue timeValue40 = deleteRequest39.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest0.timeout(timeValue40);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException42 = deleteRequest41.validate();
        deleteRequest41.primaryTerm((long) (byte) 10);
        org.elasticsearch.common.transport.TransportAddress transportAddress45 = null;
        deleteRequest41.remoteAddress(transportAddress45);
        org.elasticsearch.index.shard.ShardId shardId47 = deleteRequest41.shardId();
        long long48 = deleteRequest41.primaryTerm();
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[][hi!][]}" + "'", str13, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "delete {[][hi!][]}" + "'", str28, "delete {[][hi!][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel29 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel29.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(taskId32);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(timeValue40);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(actionRequestValidationException42);
        org.junit.Assert.assertNull(shardId47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 10L + "'", long48 == 10L);
    }
}

