import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest15 {

    public static boolean debug = false;

    @Test
    public void test7501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7501");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId14 = null;
        org.elasticsearch.tasks.Task task15 = deleteRequest10.createTask(0L, "", "", taskId14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest10.setRefreshPolicy("");
        java.lang.String str18 = deleteRequest17.toString();
        java.lang.String[] strArray19 = deleteRequest17.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest17.index("");
        org.elasticsearch.common.unit.TimeValue timeValue22 = deleteRequest21.timeout();
        org.elasticsearch.index.VersionType versionType23 = deleteRequest21.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest3.versionType(versionType23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest3.index("delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.routing("delete {[][delete {[delete {[][][hi!]}][null][null]}][]}");
        org.elasticsearch.common.unit.TimeValue timeValue29 = deleteRequest28.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str37 = deleteRequest36.id();
        java.lang.String str38 = deleteRequest36.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest36.type("delete {[][][]}");
        java.lang.String str41 = deleteRequest40.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest40.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest47.type("delete {[][][]}");
        java.lang.String str50 = deleteRequest47.id();
        org.elasticsearch.tasks.TaskId taskId51 = deleteRequest47.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest55.index("delete {[][][hi!]}");
        java.lang.String str58 = deleteRequest57.parent();
        java.lang.String str59 = deleteRequest57.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest57.parent("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest57.parent("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest63.routing("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str67 = deleteRequest66.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest66.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest69.routing("delete {[][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress72 = deleteRequest71.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str77 = deleteRequest76.id();
        java.lang.String str78 = deleteRequest76.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str80 = deleteRequest79.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest82 = deleteRequest79.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId83 = deleteRequest79.getParentTask();
        deleteRequest76.setParentTask(taskId83);
        deleteRequest71.setParentTask(taskId83);
        deleteRequest63.setParentTask(taskId83);
        org.elasticsearch.tasks.Task task87 = deleteRequest47.createTask(10L, "delete {[][hi!][delete {[null][null][null]}]}", "delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}", taskId83);
        deleteRequest40.setParentTask(taskId83);
        org.elasticsearch.tasks.Task task89 = deleteRequest28.createTask(10L, "delete {[delete {[][][hi!]}][null][delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}]}", "delete {[][][delete {[][][hi!]}]}", taskId83);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(task15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[][][]}" + "'", str18, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(timeValue22);
        org.junit.Assert.assertNotNull(versionType23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(timeValue29);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "delete {[][][]}" + "'", str41, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "delete {[][][]}" + "'", str50, "delete {[][][]}");
        org.junit.Assert.assertNotNull(taskId51);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str59, "delete {[delete {[][][hi!]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNull(transportAddress72);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNotNull(deleteRequest82);
        org.junit.Assert.assertNotNull(taskId83);
        org.junit.Assert.assertNotNull(task87);
        org.junit.Assert.assertNotNull(task89);
    }

    @Test
    public void test7502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7502");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}", "delete {[][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}][]}", "delete {[][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId11 = null;
        org.elasticsearch.tasks.Task task12 = deleteRequest7.createTask(0L, "", "", taskId11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.setRefreshPolicy("");
        java.lang.String[] strArray15 = deleteRequest14.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId23 = null;
        org.elasticsearch.tasks.Task task24 = deleteRequest19.createTask(0L, "", "", taskId23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest19.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest14.consistencyLevel(writeConsistencyLevel27);
        java.lang.String str29 = deleteRequest28.getDescription();
        long long30 = deleteRequest28.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}", "delete {[][null][null]}", "delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId42 = null;
        org.elasticsearch.tasks.Task task43 = deleteRequest38.createTask(0L, "", "", taskId42);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy44 = deleteRequest38.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest34.setRefreshPolicy(refreshPolicy44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest28.setRefreshPolicy(refreshPolicy44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest3.setRefreshPolicy(refreshPolicy44);
        java.lang.String str48 = deleteRequest47.type();
        org.elasticsearch.common.io.stream.StreamInput streamInput49 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest47.readFrom(streamInput49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(task24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "delete {[][][]}" + "'", str29, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertNotNull(task43);
        org.junit.Assert.assertTrue("'" + refreshPolicy44 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy44.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "delete {[][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}][]}" + "'", str48, "delete {[][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}][]}");
    }

    @Test
    public void test7503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7503");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str7 = deleteRequest6.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest6.getParentTask();
        deleteRequest3.setParentTask(taskId10);
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.version(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest3.routing("delete {[][][hi!]}");
        java.lang.String str17 = deleteRequest16.index();
        long long18 = deleteRequest16.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str20 = deleteRequest19.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue23 = deleteRequest22.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest19.timeout(timeValue23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest26.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest26.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.index("delete {[][][hi!]}");
        java.lang.String str32 = deleteRequest31.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest31.routing("delete {[delete {[hi!][null][null]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str39 = deleteRequest38.id();
        java.lang.String str40 = deleteRequest38.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str42 = deleteRequest41.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest41.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId45 = deleteRequest41.getParentTask();
        deleteRequest38.setParentTask(taskId45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel48 = deleteRequest47.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel49 = deleteRequest47.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest38.consistencyLevel(writeConsistencyLevel49);
        org.elasticsearch.tasks.TaskId taskId51 = deleteRequest50.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.index.VersionType versionType56 = deleteRequest55.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest50.versionType(versionType56);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str62 = deleteRequest61.getDescription();
        java.lang.String str63 = deleteRequest61.routing();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel64 = deleteRequest61.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest50.consistencyLevel(writeConsistencyLevel64);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest34.consistencyLevel(writeConsistencyLevel64);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest16.consistencyLevel(writeConsistencyLevel64);
        deleteRequest16.setParentTask("delete {[null][delete {[][delete {[hi!][null][null]}][hi!]}][delete {[][][hi!]}]}", (long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest16.routing("delete {[hi!][delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[hi!][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest16.parent("delete {[][delete {[][][hi!]}][delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[][][]}]}]}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(timeValue23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(taskId27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(taskId45);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel48 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel48.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel49 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel49.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(taskId51);
        org.junit.Assert.assertNotNull(versionType56);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "delete {[][][]}" + "'", str62, "delete {[][][]}");
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel64 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel64.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertNotNull(deleteRequest74);
    }

    @Test
    public void test7504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7504");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest1.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue6 = deleteRequest5.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.timeout(timeValue6);
        java.lang.String str8 = deleteRequest1.index();
        java.lang.String str9 = deleteRequest1.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest1.type("delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}");
        long long12 = deleteRequest11.primaryTerm();
        java.lang.String str13 = deleteRequest11.index();
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test7505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7505");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.setShardId(shardId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.type("delete {[hi!][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel19 = deleteRequest16.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest13.consistencyLevel(writeConsistencyLevel19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long23 = deleteRequest22.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str25 = deleteRequest24.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue28 = deleteRequest27.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest24.timeout(timeValue28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId32 = deleteRequest31.getParentTask();
        deleteRequest22.setParentTask(taskId32);
        deleteRequest20.setParentTask(taskId32);
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel19 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel19.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(timeValue28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(taskId32);
    }

    @Test
    public void test7506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7506");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("delete {[][][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = deleteRequest5.consistencyLevel();
        java.lang.String str7 = deleteRequest5.index();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel6 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel6.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test7507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7507");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue2 = deleteRequest1.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress3 = null;
        deleteRequest1.remoteAddress(transportAddress3);
        java.lang.String str5 = deleteRequest1.index();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException6 = deleteRequest1.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str11 = deleteRequest10.id();
        java.lang.String str12 = deleteRequest10.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.type("delete {[][][]}");
        java.lang.String str15 = deleteRequest14.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel18 = deleteRequest17.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest1.consistencyLevel(writeConsistencyLevel18);
        org.elasticsearch.index.shard.ShardId shardId20 = deleteRequest1.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.index("delete {[][][hi!]}");
        java.lang.String str24 = deleteRequest23.parent();
        java.lang.String str25 = deleteRequest23.type();
        long long26 = deleteRequest23.primaryTerm();
        long long27 = deleteRequest23.version();
        java.lang.String str28 = deleteRequest23.type();
        deleteRequest23.primaryTerm(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest23.index("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        java.lang.String str33 = deleteRequest32.toString();
        java.lang.String str34 = deleteRequest32.getDescription();
        long long35 = deleteRequest32.version();
        org.elasticsearch.common.unit.TimeValue timeValue36 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest32.timeout(timeValue36);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = deleteRequest37.consistencyLevel();
        org.elasticsearch.common.transport.TransportAddress transportAddress39 = deleteRequest37.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId40 = deleteRequest37.getParentTask();
        deleteRequest1.setParentTask(taskId40);
        org.elasticsearch.tasks.TaskId taskId42 = deleteRequest1.getParentTask();
        org.junit.Assert.assertNotNull(timeValue2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[null][null][null]}" + "'", str5, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[][][]}" + "'", str15, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel18 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel18.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNull(shardId20);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-3L) + "'", long27 == (-3L));
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}" + "'", str33, "delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}" + "'", str34, "delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}");
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-3L) + "'", long35 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel38 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel38.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(transportAddress39);
        org.junit.Assert.assertNotNull(taskId40);
        org.junit.Assert.assertNotNull(taskId42);
    }

    @Test
    public void test7508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7508");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][null][null]}");
        java.lang.String str2 = deleteRequest1.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.setShardId(shardId5);
        deleteRequest4.primaryTerm((long) 1);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy9 = deleteRequest4.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest1.setRefreshPolicy(refreshPolicy9);
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest10.getParentTask();
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = null;
        deleteRequest10.remoteAddress(transportAddress12);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "delete {[delete {[][null][null]}][null][null]}" + "'", str2, "delete {[delete {[][null][null]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + refreshPolicy9 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy9.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(taskId11);
    }

    @Test
    public void test7509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7509");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest2.indicesOptions();
        org.elasticsearch.index.shard.ShardId shardId5 = deleteRequest2.shardId();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest2.setRefreshPolicy(refreshPolicy6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str12 = deleteRequest11.id();
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = deleteRequest11.remoteAddress();
        org.elasticsearch.index.VersionType versionType14 = deleteRequest11.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str19 = deleteRequest18.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest18.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.routing("delete {[][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress24 = deleteRequest23.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str29 = deleteRequest28.id();
        java.lang.String str30 = deleteRequest28.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str32 = deleteRequest31.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest31.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId35 = deleteRequest31.getParentTask();
        deleteRequest28.setParentTask(taskId35);
        deleteRequest23.setParentTask(taskId35);
        org.elasticsearch.tasks.Task task38 = deleteRequest11.createTask((long) 0, "delete {[null][null][null]}", "delete {[delete {[delete {[][][hi!]}][null][null]}][null][null]}", taskId35);
        deleteRequest2.setParentTask(taskId35);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertNull(shardId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(transportAddress13);
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(transportAddress24);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(taskId35);
        org.junit.Assert.assertNotNull(task38);
    }

    @Test
    public void test7510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7510");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.setRefreshPolicy("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy10 = deleteRequest6.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId18 = null;
        org.elasticsearch.tasks.Task task19 = deleteRequest14.createTask(0L, "", "", taskId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType22 = deleteRequest14.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest14.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest6.consistencyLevel(writeConsistencyLevel23);
        boolean boolean25 = deleteRequest6.getShouldPersistResult();
        java.lang.String[] strArray26 = deleteRequest6.indices();
        org.elasticsearch.common.unit.TimeValue timeValue27 = deleteRequest6.timeout();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + refreshPolicy10 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy10.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(task19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(timeValue27);
    }

    @Test
    public void test7511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7511");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[hi!][null][null]}]}", "", "delete {[][delete {[][][hi!]}][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}]}");
    }

    @Test
    public void test7512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7512");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue2 = deleteRequest1.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress3 = null;
        deleteRequest1.remoteAddress(transportAddress3);
        org.elasticsearch.common.unit.TimeValue timeValue5 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest1.timeout(timeValue5);
        java.lang.String str7 = deleteRequest1.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest1.routing("delete {[][delete {[][][]}][delete {[][][]}]}");
        java.lang.String str10 = deleteRequest1.parent();
        long long11 = deleteRequest1.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = null;
        deleteRequest1.remoteAddress(transportAddress12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest1.parent("delete {[][delete {[][delete {[null][null][null]}][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][delete {[][][hi!]}]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel18 = deleteRequest17.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest1.consistencyLevel(writeConsistencyLevel18);
        org.junit.Assert.assertNotNull(timeValue2);
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-3L) + "'", long11 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel18 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel18.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest19);
    }

    @Test
    public void test7513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7513");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[delete {[][][hi!]}][null][null]}][null]}", "delete {[][][delete {[delete {[][null][null]}][][]}]}", "delete {[][delete {[][][hi!]}][delete {[][][]}]}");
    }

    @Test
    public void test7514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7514");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.type("delete {[][][hi!]}");
        java.lang.String str5 = deleteRequest4.id();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException6 = deleteRequest4.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest4.version((long) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest4.setShardId(shardId9);
        java.lang.String str11 = deleteRequest4.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.parent("delete {[][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest13.setShardId(shardId16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.id("delete {[][delete {[null][null][null]}][]}");
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest17.setShardId(shardId20);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy22 = deleteRequest21.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest4.setRefreshPolicy(refreshPolicy22);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(actionRequestValidationException6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][hi!]}" + "'", str11, "delete {[][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + refreshPolicy22 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy22.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest23);
    }

    @Test
    public void test7515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7515");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.consistencyLevel(writeConsistencyLevel23);
        java.lang.String str25 = deleteRequest24.getDescription();
        java.lang.String str26 = deleteRequest24.toString();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[][][]}" + "'", str25, "delete {[][][]}");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "delete {[][][]}" + "'", str26, "delete {[][][]}");
    }

    @Test
    public void test7516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7516");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue2 = deleteRequest1.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress3 = null;
        deleteRequest1.remoteAddress(transportAddress3);
        org.elasticsearch.common.unit.TimeValue timeValue5 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest1.timeout(timeValue5);
        java.lang.String str7 = deleteRequest1.type();
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest1.setShardId(shardId8);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy10 = deleteRequest1.getRefreshPolicy();
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest1.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest1.id("delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}");
        long long14 = deleteRequest13.version();
        org.elasticsearch.tasks.TaskId taskId15 = deleteRequest13.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest13.index("delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.parent("delete {[delete {[null][delete {[null][null][null]}][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[hi!][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel24 = deleteRequest23.consistencyLevel();
        java.lang.String str25 = deleteRequest23.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str33 = deleteRequest32.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest32.id("hi!");
        java.lang.String str36 = deleteRequest35.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str44 = deleteRequest43.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest43.id("hi!");
        org.elasticsearch.tasks.TaskId taskId47 = deleteRequest46.getParentTask();
        org.elasticsearch.tasks.TaskId taskId48 = deleteRequest46.getParentTask();
        org.elasticsearch.tasks.Task task49 = deleteRequest35.createTask((long) '4', "", "delete {[][][]}", taskId48);
        org.elasticsearch.tasks.Task task50 = deleteRequest23.createTask((long) (byte) 10, "delete {[][null][null]}", "", taskId48);
        org.elasticsearch.tasks.Task task51 = deleteRequest17.createTask(0L, "delete {[][delete {[delete {[][null][null]}][][]}][delete {[null][delete {[null][null][null]}][null]}]}", "delete {[delete {[][delete {[][][]}][delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}]}][delete {[delete {[delete {[][null][null]}][][delete {[][][hi!]}]}][delete {[][null][null]}][delete {[null][null][delete {[][][hi!]}]}]}][delete {[delete {[][][hi!]}][null][null]}]}", taskId48);
        org.junit.Assert.assertNotNull(timeValue2);
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + refreshPolicy10 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy10.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-3L) + "'", long14 == (-3L));
        org.junit.Assert.assertNotNull(taskId15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel24 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel24.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "delete {[][][hi!]}" + "'", str36, "delete {[][][hi!]}");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(taskId47);
        org.junit.Assert.assertNotNull(taskId48);
        org.junit.Assert.assertNotNull(task49);
        org.junit.Assert.assertNotNull(task50);
        org.junit.Assert.assertNotNull(task51);
    }

    @Test
    public void test7517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7517");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest10.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId13 = null;
        deleteRequest10.setParentTask(taskId13);
        deleteRequest10.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest10.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        java.lang.String str19 = deleteRequest18.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest18.type("hi!");
        java.lang.String str22 = deleteRequest21.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId30 = null;
        org.elasticsearch.tasks.Task task31 = deleteRequest26.createTask(0L, "", "", taskId30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest26.setRefreshPolicy("");
        deleteRequest33.primaryTerm(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest33.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel39 = deleteRequest38.consistencyLevel();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy40 = deleteRequest38.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest37.setRefreshPolicy(refreshPolicy40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest21.setRefreshPolicy(refreshPolicy40);
        org.elasticsearch.index.shard.ShardId shardId43 = deleteRequest42.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest42.parent("delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str47 = deleteRequest46.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress48 = deleteRequest46.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId49 = deleteRequest46.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId57 = null;
        org.elasticsearch.tasks.Task task58 = deleteRequest53.createTask(0L, "", "", taskId57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest53.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel61 = deleteRequest60.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest60.routing("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest63.version((long) (short) -1);
        org.elasticsearch.common.transport.TransportAddress transportAddress66 = deleteRequest63.remoteAddress();
        org.elasticsearch.common.unit.TimeValue timeValue67 = deleteRequest63.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest46.timeout(timeValue67);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest45.timeout(timeValue67);
        java.lang.String str70 = deleteRequest69.parent();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions12);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(task31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel39 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel39.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + refreshPolicy40 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy40.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNull(shardId43);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(transportAddress48);
        org.junit.Assert.assertNotNull(taskId49);
        org.junit.Assert.assertNotNull(task58);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel61 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel61.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNull(transportAddress66);
        org.junit.Assert.assertNotNull(timeValue67);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}" + "'", str70, "delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}");
    }

    @Test
    public void test7518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7518");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest1.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue6 = deleteRequest5.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.timeout(timeValue6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str9 = deleteRequest8.parent();
        org.elasticsearch.index.VersionType versionType10 = deleteRequest8.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest1.versionType(versionType10);
        long long12 = deleteRequest11.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.type("");
        java.lang.String str15 = deleteRequest14.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException16 = deleteRequest14.validate();
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(versionType10);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[][][null]}" + "'", str15, "delete {[][][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException16);
    }

    @Test
    public void test7519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7519");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.consistencyLevel(writeConsistencyLevel23);
        deleteRequest24.setParentTask("hi!", (long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest24.routing("hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress30 = deleteRequest29.remoteAddress();
        deleteRequest29.primaryTerm(0L);
        java.lang.String str33 = deleteRequest29.parent();
        org.elasticsearch.index.shard.ShardId shardId34 = deleteRequest29.shardId();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest29.setRefreshPolicy("delete {[delete {[][null][null]}][][]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[delete {[][null][null]}][][]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNull(transportAddress30);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(shardId34);
    }

    @Test
    public void test7520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7520");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy9 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId17 = null;
        org.elasticsearch.tasks.Task task18 = deleteRequest13.createTask(0L, "", "", taskId17);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy19 = deleteRequest13.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest3.setRefreshPolicy(refreshPolicy19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId28 = null;
        org.elasticsearch.tasks.Task task29 = deleteRequest24.createTask(0L, "", "", taskId28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest24.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType32 = deleteRequest24.versionType();
        java.lang.String str33 = deleteRequest24.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId41 = null;
        org.elasticsearch.tasks.Task task42 = deleteRequest37.createTask(0L, "", "", taskId41);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy43 = deleteRequest37.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest24.setRefreshPolicy(refreshPolicy43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest3.setRefreshPolicy(refreshPolicy43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest3.id("delete {[delete {[hi!][][delete {[][][]}]}][delete {[][delete {[hi!][null][null]}][hi!]}][delete {[][][delete {[][delete {[][][hi!]}][delete {[][][]}]}]}]}");
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertTrue("'" + refreshPolicy9 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy9.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertTrue("'" + refreshPolicy19 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy19.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(task29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(versionType32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "delete {[][][]}" + "'", str33, "delete {[][][]}");
        org.junit.Assert.assertNotNull(task42);
        org.junit.Assert.assertTrue("'" + refreshPolicy43 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy43.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest47);
    }

    @Test
    public void test7521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7521");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][hi!]}", "delete {[null][null][null]}", "");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy4 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}][]}");
        deleteRequest6.primaryTerm(52L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}", "delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.index("delete {[][][hi!]}");
        java.lang.String str16 = deleteRequest15.parent();
        java.lang.String str17 = deleteRequest15.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest15.version((long) (short) 100);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = deleteRequest19.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId28 = null;
        org.elasticsearch.tasks.Task task29 = deleteRequest24.createTask(0L, "", "", taskId28);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy30 = deleteRequest24.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest19.setRefreshPolicy(refreshPolicy30);
        org.elasticsearch.common.unit.TimeValue timeValue32 = deleteRequest19.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest12.timeout(timeValue32);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy34 = deleteRequest12.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest6.setRefreshPolicy(refreshPolicy34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest3.setRefreshPolicy(refreshPolicy34);
        org.junit.Assert.assertTrue("'" + refreshPolicy4 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy4.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel20 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel20.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(task29);
        org.junit.Assert.assertTrue("'" + refreshPolicy30 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy30.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(timeValue32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertTrue("'" + refreshPolicy34 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy34.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest36);
    }

    @Test
    public void test7522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7522");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType6 = deleteRequest5.versionType();
        deleteRequest5.primaryTerm((-1L));
        java.lang.String str9 = deleteRequest5.id();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[][][]}" + "'", str9, "delete {[][][]}");
    }

    @Test
    public void test7523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7523");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        java.lang.String str4 = deleteRequest2.type();
        long long5 = deleteRequest2.primaryTerm();
        long long6 = deleteRequest2.version();
        java.lang.String str7 = deleteRequest2.type();
        java.lang.String str8 = deleteRequest2.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest2.version((long) 10);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-3L) + "'", long6 == (-3L));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest10);
    }

    @Test
    public void test7524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7524");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        java.lang.String str4 = deleteRequest2.type();
        long long5 = deleteRequest2.primaryTerm();
        long long6 = deleteRequest2.version();
        java.lang.String str7 = deleteRequest2.parent();
        org.elasticsearch.index.VersionType versionType8 = deleteRequest2.versionType();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest2.setRefreshPolicy("delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[][][]}]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[][][]}]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-3L) + "'", long6 == (-3L));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(versionType8);
    }

    @Test
    public void test7525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7525");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.parent("hi!");
        java.lang.String[] strArray10 = deleteRequest9.indices();
        deleteRequest9.setParentTask("delete {[][][]}", (long) ' ');
        java.lang.String[] strArray14 = deleteRequest9.indices();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test7526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7526");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.tasks.TaskId taskId6 = deleteRequest3.getParentTask();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest3.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = null;
        deleteRequest9.remoteAddress(transportAddress11);
        org.elasticsearch.common.unit.TimeValue timeValue13 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest9.timeout(timeValue13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.timeout(timeValue13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.type("delete {[][][]}");
        java.lang.String str25 = deleteRequest22.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest22.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId35 = null;
        org.elasticsearch.tasks.Task task36 = deleteRequest31.createTask(0L, "", "", taskId35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest31.setRefreshPolicy("");
        java.lang.String str39 = deleteRequest38.toString();
        java.lang.String[] strArray40 = deleteRequest38.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest38.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str51 = deleteRequest50.id();
        java.lang.String str52 = deleteRequest50.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str54 = deleteRequest53.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest53.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId57 = deleteRequest53.getParentTask();
        deleteRequest50.setParentTask(taskId57);
        deleteRequest46.setParentTask(taskId57);
        deleteRequest42.setParentTask(taskId57);
        deleteRequest27.setParentTask(taskId57);
        org.elasticsearch.tasks.Task task62 = deleteRequest3.createTask((-3L), "delete {[][delete {[][][]}][delete {[][][]}]}", "delete {[null][null][null]}", taskId57);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException63 = deleteRequest3.validate();
        org.elasticsearch.common.transport.TransportAddress transportAddress64 = null;
        deleteRequest3.remoteAddress(transportAddress64);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest3.setRefreshPolicy("delete {[null][delete {[][delete {[hi!][null][null]}][hi!]}][delete {[][][hi!]}]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[null][delete {[][delete {[hi!][null][null]}][hi!]}][delete {[][][hi!]}]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(taskId6);
        org.junit.Assert.assertNull(actionRequestValidationException7);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[][][]}" + "'", str25, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(task36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "delete {[][][]}" + "'", str39, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(taskId57);
        org.junit.Assert.assertNotNull(task62);
        org.junit.Assert.assertNull(actionRequestValidationException63);
    }

    @Test
    public void test7527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7527");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}", "delete {[null][delete {[null][null][delete {[][][hi!]}]}][]}", "delete {[delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}][delete {[][null][null]}][delete {[][hi!][delete {[null][null][null]}]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}", "delete {[hi!][null][null]}", "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.routing("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId17 = null;
        org.elasticsearch.tasks.Task task18 = deleteRequest13.createTask(0L, "", "", taskId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest13.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel21 = deleteRequest20.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions22 = deleteRequest20.indicesOptions();
        java.lang.String str23 = deleteRequest20.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str25 = deleteRequest24.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest24.version((long) (short) 100);
        deleteRequest24.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str31 = deleteRequest30.parent();
        org.elasticsearch.index.VersionType versionType32 = deleteRequest30.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest24.versionType(versionType32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest20.versionType(versionType32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest34.id("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        java.lang.String str37 = deleteRequest34.parent();
        long long38 = deleteRequest34.primaryTerm();
        java.lang.String str39 = deleteRequest34.id();
        org.elasticsearch.common.unit.TimeValue timeValue40 = deleteRequest34.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest7.timeout(timeValue40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest3.timeout(timeValue40);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel21 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel21.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[][][]}" + "'", str23, "delete {[][][]}");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(versionType32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}" + "'", str39, "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.junit.Assert.assertNotNull(timeValue40);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest42);
    }

    @Test
    public void test7528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7528");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][delete {[][null][null]}]}", "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}", "delete {[hi!][][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str8 = deleteRequest7.id();
        java.lang.String str9 = deleteRequest7.index();
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest7.getParentTask();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest7.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue14 = deleteRequest13.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = null;
        deleteRequest13.remoteAddress(transportAddress15);
        org.elasticsearch.common.unit.TimeValue timeValue17 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest13.timeout(timeValue17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest7.timeout(timeValue17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest7.version((long) ' ');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.parent("hi!");
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest21.setShardId(shardId24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.type("delete {[delete {[][null][null]}][][]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException28 = deleteRequest25.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long31 = deleteRequest30.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest30.index("");
        boolean boolean34 = deleteRequest30.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest30.version((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue37 = deleteRequest30.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str42 = deleteRequest41.id();
        java.lang.String str43 = deleteRequest41.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str45 = deleteRequest44.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest44.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId48 = deleteRequest44.getParentTask();
        deleteRequest41.setParentTask(taskId48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel51 = deleteRequest50.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel52 = deleteRequest50.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest41.consistencyLevel(writeConsistencyLevel52);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest41.type("delete {[delete {[][][hi!]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest55.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest55.routing("delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy60 = deleteRequest55.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest30.setRefreshPolicy(refreshPolicy60);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId69 = null;
        org.elasticsearch.tasks.Task task70 = deleteRequest65.createTask(0L, "", "", taskId69);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy71 = deleteRequest65.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest61.setRefreshPolicy(refreshPolicy71);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest25.setRefreshPolicy(refreshPolicy71);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest3.setRefreshPolicy(refreshPolicy71);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertNull(actionRequestValidationException11);
        org.junit.Assert.assertNotNull(timeValue14);
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNull(actionRequestValidationException28);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(timeValue37);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(taskId48);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel51 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel51.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel52 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel52.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertTrue("'" + refreshPolicy60 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy60.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(task70);
        org.junit.Assert.assertTrue("'" + refreshPolicy71 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy71.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertNotNull(deleteRequest73);
        org.junit.Assert.assertNotNull(deleteRequest74);
    }

    @Test
    public void test7529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7529");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest0.remoteAddress(transportAddress6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType14 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress19 = deleteRequest18.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId27 = null;
        org.elasticsearch.tasks.Task task28 = deleteRequest23.createTask(0L, "", "", taskId27);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy29 = deleteRequest23.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest18.setRefreshPolicy(refreshPolicy29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest13.setRefreshPolicy(refreshPolicy29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel33 = deleteRequest32.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel34 = deleteRequest32.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest13.consistencyLevel(writeConsistencyLevel34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest0.consistencyLevel(writeConsistencyLevel34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str41 = deleteRequest40.id();
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest40.setShardId(shardId42);
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest40.setShardId(shardId44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest46.parent("delete {[][][]}");
        org.elasticsearch.index.VersionType versionType49 = deleteRequest48.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest45.versionType(versionType49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str55 = deleteRequest54.id();
        org.elasticsearch.common.transport.TransportAddress transportAddress56 = deleteRequest54.remoteAddress();
        org.elasticsearch.index.VersionType versionType57 = deleteRequest54.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel58 = deleteRequest54.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest50.consistencyLevel(writeConsistencyLevel58);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest0.consistencyLevel(writeConsistencyLevel58);
        java.lang.String str61 = deleteRequest0.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest65.type("delete {[][][]}");
        java.lang.String str68 = deleteRequest65.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest65.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest70.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = deleteRequest76.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType79 = deleteRequest78.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = deleteRequest70.versionType(versionType79);
        java.lang.String str81 = deleteRequest70.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest83 = deleteRequest70.version((long) (byte) -1);
        org.elasticsearch.common.unit.TimeValue timeValue84 = deleteRequest83.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest85 = deleteRequest0.timeout(timeValue84);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNull(transportAddress19);
        org.junit.Assert.assertNotNull(task28);
        org.junit.Assert.assertTrue("'" + refreshPolicy29 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy29.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel33 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel33.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel34 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel34.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(versionType49);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNull(transportAddress56);
        org.junit.Assert.assertNotNull(versionType57);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel58 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel58.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "delete {[null][null][null]}" + "'", str61, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "delete {[][][]}" + "'", str68, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertNotNull(deleteRequest78);
        org.junit.Assert.assertNotNull(versionType79);
        org.junit.Assert.assertNotNull(deleteRequest80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "delete {[][delete {[][][]}][delete {[][][]}]}" + "'", str81, "delete {[][delete {[][][]}][delete {[][][]}]}");
        org.junit.Assert.assertNotNull(deleteRequest83);
        org.junit.Assert.assertNotNull(timeValue84);
        org.junit.Assert.assertNotNull(deleteRequest85);
    }

    @Test
    public void test7530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7530");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.type("delete {[null][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = deleteRequest3.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.version((long) '4');
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy9 = deleteRequest6.getRefreshPolicy();
        java.lang.String str10 = deleteRequest6.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId18 = null;
        org.elasticsearch.tasks.Task task19 = deleteRequest14.createTask(0L, "", "", taskId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType22 = deleteRequest14.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str30 = deleteRequest29.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest29.id("hi!");
        org.elasticsearch.tasks.TaskId taskId33 = deleteRequest32.getParentTask();
        org.elasticsearch.tasks.Task task34 = deleteRequest14.createTask(10L, "delete {[hi!][null][null]}", "delete {[delete {[][][hi!]}][null][null]}", taskId33);
        org.elasticsearch.tasks.TaskId taskId35 = deleteRequest14.getParentTask();
        deleteRequest6.setParentTask(taskId35);
        org.elasticsearch.common.transport.TransportAddress transportAddress37 = null;
        deleteRequest6.remoteAddress(transportAddress37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest6.version((long) ' ');
        java.lang.String str41 = deleteRequest6.toString();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(transportAddress4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + refreshPolicy9 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy9.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][delete {[null][null][null]}][null]}" + "'", str10, "delete {[][delete {[null][null][null]}][null]}");
        org.junit.Assert.assertNotNull(task19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(taskId33);
        org.junit.Assert.assertNotNull(task34);
        org.junit.Assert.assertNotNull(taskId35);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "delete {[][delete {[null][null][null]}][null]}" + "'", str41, "delete {[][delete {[null][null][null]}][null]}");
    }

    @Test
    public void test7531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7531");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel9 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = deleteRequest13.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId22 = null;
        org.elasticsearch.tasks.Task task23 = deleteRequest18.createTask(0L, "", "", taskId22);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy24 = deleteRequest18.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest13.setRefreshPolicy(refreshPolicy24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest3.setRefreshPolicy(refreshPolicy24);
        java.lang.String str27 = deleteRequest26.parent();
        java.lang.String[] strArray28 = deleteRequest26.indices();
        deleteRequest26.setParentTask("delete {[delete {[][null][null]}][][]}", 1L);
        java.lang.String str32 = deleteRequest26.getDescription();
        java.lang.String str33 = deleteRequest26.id();
        java.lang.Class<?> wildcardClass34 = deleteRequest26.getClass();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel9 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel9.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(transportAddress14);
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertTrue("'" + refreshPolicy24 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy24.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[][][]}" + "'", str32, "delete {[][][]}");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test7532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7532");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId9 = null;
        org.elasticsearch.tasks.Task task10 = deleteRequest5.createTask(0L, "", "", taskId9);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest5.setRefreshPolicy("");
        java.lang.String[] strArray13 = deleteRequest12.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId21 = null;
        org.elasticsearch.tasks.Task task22 = deleteRequest17.createTask(0L, "", "", taskId21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest17.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest12.consistencyLevel(writeConsistencyLevel25);
        deleteRequest26.setParentTask("hi!", (long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest26.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest26.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId41 = null;
        org.elasticsearch.tasks.Task task42 = deleteRequest37.createTask(0L, "", "", taskId41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest37.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel45 = deleteRequest44.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions46 = deleteRequest44.indicesOptions();
        java.lang.String str47 = deleteRequest44.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str49 = deleteRequest48.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest48.version((long) (short) 100);
        deleteRequest48.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str55 = deleteRequest54.parent();
        org.elasticsearch.index.VersionType versionType56 = deleteRequest54.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest48.versionType(versionType56);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest44.versionType(versionType56);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest33.versionType(versionType56);
        deleteRequest59.primaryTerm(0L);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[][][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}]}", deleteRequest59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(task42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel45 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel45.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "delete {[][][]}" + "'", str47, "delete {[][][]}");
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(versionType56);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest59);
    }

    @Test
    public void test7533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7533");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest10.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId13 = null;
        deleteRequest10.setParentTask(taskId13);
        deleteRequest10.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest10.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        java.lang.String str19 = deleteRequest18.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest18.type("hi!");
        java.lang.String str22 = deleteRequest21.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId30 = null;
        org.elasticsearch.tasks.Task task31 = deleteRequest26.createTask(0L, "", "", taskId30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest26.setRefreshPolicy("");
        deleteRequest33.primaryTerm(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest33.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel39 = deleteRequest38.consistencyLevel();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy40 = deleteRequest38.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest37.setRefreshPolicy(refreshPolicy40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest21.setRefreshPolicy(refreshPolicy40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest21.type("delete {[hi!][null][null]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest44.timeout("delete {[hi!][][delete {[][][]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[hi!][][delete {[][][]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions12);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(task31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel39 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel39.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + refreshPolicy40 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy40.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest44);
    }

    @Test
    public void test7534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7534");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.index("delete {[][][hi!]}");
        java.lang.String str5 = deleteRequest4.parent();
        java.lang.String str6 = deleteRequest4.type();
        long long7 = deleteRequest4.primaryTerm();
        long long8 = deleteRequest4.version();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest4.setShardId(shardId9);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest10.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str16 = deleteRequest15.id();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.setShardId(shardId17);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest15.setShardId(shardId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.setRefreshPolicy("");
        org.elasticsearch.common.transport.TransportAddress transportAddress23 = null;
        deleteRequest22.remoteAddress(transportAddress23);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest22.consistencyLevel();
        org.elasticsearch.index.shard.ShardId shardId26 = deleteRequest22.shardId();
        boolean boolean27 = deleteRequest22.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.type("delete {[null][null][null]}");
        java.lang.String str32 = deleteRequest29.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest29.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest29.parent("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str41 = deleteRequest40.id();
        java.lang.String str42 = deleteRequest40.index();
        org.elasticsearch.tasks.TaskId taskId43 = deleteRequest40.getParentTask();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException44 = deleteRequest40.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue47 = deleteRequest46.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress48 = null;
        deleteRequest46.remoteAddress(transportAddress48);
        org.elasticsearch.common.unit.TimeValue timeValue50 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest46.timeout(timeValue50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest40.timeout(timeValue50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest40.version((long) ' ');
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy55 = deleteRequest40.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest36.setRefreshPolicy(refreshPolicy55);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest22.setRefreshPolicy(refreshPolicy55);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest10.setRefreshPolicy(refreshPolicy55);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[][delete {[null][null][null]}][delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}]}][delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}][]}", deleteRequest58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-3L) + "'", long8 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(actionRequestValidationException11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(shardId26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(taskId43);
        org.junit.Assert.assertNull(actionRequestValidationException44);
        org.junit.Assert.assertNotNull(timeValue47);
        org.junit.Assert.assertNotNull(timeValue50);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertTrue("'" + refreshPolicy55 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy55.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(deleteRequest58);
    }

    @Test
    public void test7535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7535");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.index("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        deleteRequest10.setParentTask("delete {[null][null][null]}", (long) (short) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest10.index("delete {[hi!][][delete {[][][]}]}");
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest15.getParentTask();
        java.lang.String str17 = deleteRequest15.type();
        org.elasticsearch.index.shard.IndexShard indexShard18 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult19 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest15, indexShard18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[][][]}" + "'", str17, "delete {[][][]}");
    }

    @Test
    public void test7536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7536");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.type("delete {[null][null][null]}");
        java.lang.String str4 = deleteRequest1.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest1.index("");
        java.lang.String str7 = deleteRequest6.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.routing("delete {[][delete {[null][null][null]}][null]}");
        org.elasticsearch.index.shard.ShardId shardId10 = deleteRequest6.shardId();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[][delete {[null][null][null]}][null]}" + "'", str7, "delete {[][delete {[null][null][null]}][null]}");
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNull(shardId10);
    }

    @Test
    public void test7537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7537");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.type("delete {[][][hi!]}");
        java.lang.String str8 = deleteRequest5.getDescription();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}", deleteRequest5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[][delete {[][][hi!]}][delete {[][][]}]}" + "'", str8, "delete {[][delete {[][][hi!]}][delete {[][][]}]}");
    }

    @Test
    public void test7538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7538");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}][null][null]}", "delete {[delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][delete {[hi!][null][null]}][hi!]}]}", "delete {[delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.setShardId(shardId4);
        java.lang.String str6 = deleteRequest3.type();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput7 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.writeTo(streamOutput7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][delete {[hi!][null][null]}][hi!]}]}" + "'", str6, "delete {[delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][delete {[hi!][null][null]}][hi!]}]}");
    }

    @Test
    public void test7539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7539");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}", "delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}", "delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.common.unit.TimeValue timeValue5 = deleteRequest3.timeout();
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(timeValue5);
    }

    @Test
    public void test7540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7540");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest7.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.id("delete {[][][hi!]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy13 = deleteRequest10.getRefreshPolicy();
        java.lang.String str14 = deleteRequest10.routing();
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest10.timeout();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(taskId8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + refreshPolicy13 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy13.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(timeValue15);
    }

    @Test
    public void test7541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7541");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[hi!][null][null]}", "delete {[delete {[][][hi!]}][null][null]}");
        java.lang.String str4 = deleteRequest3.getDescription();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput5 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.writeTo(streamOutput5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}" + "'", str4, "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
    }

    @Test
    public void test7542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7542");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version((long) (short) 100);
        java.lang.String str4 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.common.io.stream.StreamInput streamInput7 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest6.readFrom(streamInput7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
    }

    @Test
    public void test7543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7543");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][null][null]}", throwable2, "delete {[][][]}");
        java.lang.String str5 = shardFailure4.reason;
        java.lang.Throwable throwable6 = shardFailure4.cause;
        java.lang.String str7 = shardFailure4.indexUUID;
        java.lang.Throwable throwable8 = shardFailure4.cause;
        java.lang.String str9 = shardFailure4.reason;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[null][null][null]}" + "'", str5, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(throwable6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[][][]}" + "'", str7, "delete {[][][]}");
        org.junit.Assert.assertNull(throwable8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[null][null][null]}" + "'", str9, "delete {[null][null][null]}");
    }

    @Test
    public void test7544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7544");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.parent("delete {[][][]}");
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest10.getParentTask();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.setShardId(shardId12);
        java.lang.String str14 = deleteRequest13.id();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[][][]}" + "'", str14, "delete {[][][]}");
    }

    @Test
    public void test7545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7545");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        deleteRequest10.primaryTerm(1L);
        deleteRequest10.primaryTerm((long) 0);
        java.lang.String str15 = deleteRequest10.type();
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest10.setShardId(shardId16);
        java.lang.String str18 = deleteRequest10.index();
        java.lang.String str19 = deleteRequest10.id();
        java.lang.String str20 = deleteRequest10.toString();
        deleteRequest10.setParentTask("delete {[][delete {[][][]}][delete {[][][]}]}", 35L);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest10.timeout("delete {[][delete {[][][]}][delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[][delete {[][][]}][delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[][][]}" + "'", str20, "delete {[][][]}");
    }

    @Test
    public void test7546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7546");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[null][null][null]}][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.type("delete {[delete {[delete {[][][hi!]}][null][null]}][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        boolean boolean5 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("");
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(deleteRequest7);
    }

    @Test
    public void test7547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7547");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][delete {[][][hi!]}]}", "delete {[][delete {[][][]}][delete {[][delete {[][][hi!]}][delete {[][][]}]}]}", "delete {[delete {[][delete {[][][]}][delete {[][][]}]}][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[null][null][null]}]}");
    }

    @Test
    public void test7548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7548");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}", "delete {[][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}][]}", "delete {[][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId11 = null;
        org.elasticsearch.tasks.Task task12 = deleteRequest7.createTask(0L, "", "", taskId11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.setRefreshPolicy("");
        java.lang.String[] strArray15 = deleteRequest14.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId23 = null;
        org.elasticsearch.tasks.Task task24 = deleteRequest19.createTask(0L, "", "", taskId23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest19.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest14.consistencyLevel(writeConsistencyLevel27);
        java.lang.String str29 = deleteRequest28.getDescription();
        long long30 = deleteRequest28.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}", "delete {[][null][null]}", "delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId42 = null;
        org.elasticsearch.tasks.Task task43 = deleteRequest38.createTask(0L, "", "", taskId42);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy44 = deleteRequest38.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest34.setRefreshPolicy(refreshPolicy44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest28.setRefreshPolicy(refreshPolicy44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest3.setRefreshPolicy(refreshPolicy44);
        org.elasticsearch.index.VersionType versionType48 = deleteRequest47.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel49 = deleteRequest47.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest47.type("delete {[delete {[][][hi!]}][delete {[null][null][null]}][]}");
        deleteRequest51.setParentTask("delete {[][delete {[][][hi!]}][delete {[][][]}]}", (long) (short) 10);
        org.junit.Assert.assertNotNull(task12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(task24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "delete {[][][]}" + "'", str29, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertNotNull(task43);
        org.junit.Assert.assertTrue("'" + refreshPolicy44 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy44.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(versionType48);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel49 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel49.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest51);
    }

    @Test
    public void test7549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7549");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest3.index();
        java.lang.String str12 = deleteRequest3.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest14.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue19 = deleteRequest18.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest14.timeout(timeValue19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.timeout(timeValue19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.version(10L);
        org.elasticsearch.action.support.IndicesOptions indicesOptions24 = deleteRequest23.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest23.version((long) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.routing("delete {[delete {[][delete {[][][]}][delete {[][][]}]}][delete {[][delete {[null][null][null]}][]}][null]}");
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(indicesOptions24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
    }

    @Test
    public void test7550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7550");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version((long) (short) 100);
        java.lang.String str4 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long9 = deleteRequest8.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str11 = deleteRequest10.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue14 = deleteRequest13.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest10.timeout(timeValue14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest17.getParentTask();
        deleteRequest8.setParentTask(taskId18);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = deleteRequest8.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.consistencyLevel(writeConsistencyLevel20);
        java.lang.String[] strArray22 = deleteRequest21.indices();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy23 = deleteRequest21.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest21.id("delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest21.version((long) (byte) 10);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(timeValue14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel20 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel20.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + refreshPolicy23 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy23.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
    }

    @Test
    public void test7551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7551");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel1 = deleteRequest0.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel2 = deleteRequest0.consistencyLevel();
        deleteRequest0.primaryTerm((long) (short) 10);
        long long5 = deleteRequest0.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId16 = null;
        org.elasticsearch.tasks.Task task17 = deleteRequest12.createTask(0L, "", "", taskId16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest12.setRefreshPolicy("");
        java.lang.String str20 = deleteRequest19.toString();
        java.lang.String[] strArray21 = deleteRequest19.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest19.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str32 = deleteRequest31.id();
        java.lang.String str33 = deleteRequest31.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str35 = deleteRequest34.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest34.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId38 = deleteRequest34.getParentTask();
        deleteRequest31.setParentTask(taskId38);
        deleteRequest27.setParentTask(taskId38);
        deleteRequest23.setParentTask(taskId38);
        org.elasticsearch.tasks.Task task42 = deleteRequest0.createTask((-1L), "delete {[][delete {[][][]}][delete {[][][]}]}", "delete {[][][hi!]}", taskId38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str44 = deleteRequest43.parent();
        org.elasticsearch.index.VersionType versionType45 = deleteRequest43.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest49.type("delete {[][][hi!]}");
        org.elasticsearch.common.unit.TimeValue timeValue52 = deleteRequest51.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest43.timeout(timeValue52);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest0.timeout(timeValue52);
        java.lang.String str55 = deleteRequest54.routing();
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel1 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel1.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel2 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel2.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-3L) + "'", long5 == (-3L));
        org.junit.Assert.assertNotNull(task17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[][][]}" + "'", str20, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(taskId38);
        org.junit.Assert.assertNotNull(task42);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(versionType45);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(timeValue52);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNull(str55);
    }

    @Test
    public void test7552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7552");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[][][]}][delete {[][delete {[][][hi!]}][delete {[][][]}]}]}");
    }

    @Test
    public void test7553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7553");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}", "hi!", "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.index("hi!");
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.setShardId(shardId8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest7.parent("delete {[][][hi!]}");
        java.lang.String str12 = deleteRequest7.getDescription();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[hi!][hi!][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}]}" + "'", str12, "delete {[hi!][hi!][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}]}");
    }

    @Test
    public void test7554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7554");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "hi!", throwable2, "delete {[null][null][null]}");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting5 = shardFailure4.routing;
        java.lang.String str6 = shardFailure4.indexUUID;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting7 = shardFailure4.routing;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = shardFailure4.routing;
        org.junit.Assert.assertNull(shardRouting5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[null][null][null]}" + "'", str6, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(shardRouting7);
        org.junit.Assert.assertNull(shardRouting8);
    }

    @Test
    public void test7555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7555");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId9 = null;
        org.elasticsearch.tasks.Task task10 = deleteRequest5.createTask(0L, "", "", taskId9);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest5.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType13 = deleteRequest5.versionType();
        java.lang.String str14 = deleteRequest5.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = deleteRequest5.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy16 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest5.setRefreshPolicy(refreshPolicy16);
        long long18 = deleteRequest5.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue19 = deleteRequest5.timeout();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy20 = deleteRequest5.getRefreshPolicy();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][delete {[delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}][null][null]}]}", deleteRequest5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(versionType13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(transportAddress15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertNull(refreshPolicy20);
    }

    @Test
    public void test7556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7556");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][null][null]}", "delete {[hi!][null][null]}", "delete {[hi!][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel4 = deleteRequest3.consistencyLevel();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput5 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.writeTo(streamOutput5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel4 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel4.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test7557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7557");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.parent("delete {[][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest1.setShardId(shardId4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.id("delete {[][delete {[null][null][null]}][]}");
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest5.setShardId(shardId8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str17 = deleteRequest16.id();
        org.elasticsearch.common.transport.TransportAddress transportAddress18 = deleteRequest16.remoteAddress();
        org.elasticsearch.index.VersionType versionType19 = deleteRequest16.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str24 = deleteRequest23.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest23.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.routing("delete {[][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress29 = deleteRequest28.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str34 = deleteRequest33.id();
        java.lang.String str35 = deleteRequest33.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str37 = deleteRequest36.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest36.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId40 = deleteRequest36.getParentTask();
        deleteRequest33.setParentTask(taskId40);
        deleteRequest28.setParentTask(taskId40);
        org.elasticsearch.tasks.Task task43 = deleteRequest16.createTask((long) 0, "delete {[null][null][null]}", "delete {[delete {[delete {[][][hi!]}][null][null]}][null][null]}", taskId40);
        org.elasticsearch.tasks.Task task44 = deleteRequest5.createTask(32L, "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][null][null]}", "delete {[delete {[null][null][null]}][null][null]}", taskId40);
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest5.setShardId(shardId45);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(transportAddress18);
        org.junit.Assert.assertNotNull(versionType19);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNull(transportAddress29);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(taskId40);
        org.junit.Assert.assertNotNull(task43);
        org.junit.Assert.assertNotNull(task44);
        org.junit.Assert.assertNotNull(deleteRequest46);
    }

    @Test
    public void test7558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7558");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.routing("delete {[][][]}");
        java.lang.String str9 = deleteRequest8.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId17 = null;
        org.elasticsearch.tasks.Task task18 = deleteRequest13.createTask(0L, "", "", taskId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest13.setRefreshPolicy("");
        java.lang.String str21 = deleteRequest20.toString();
        java.lang.String[] strArray22 = deleteRequest20.indices();
        deleteRequest20.primaryTerm(0L);
        org.elasticsearch.common.unit.TimeValue timeValue25 = deleteRequest20.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest8.timeout(timeValue25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest8.version(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest8.index("delete {[][delete {[delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[delete {[][][hi!]}][null][delete {[][][]}]}][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}]}][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress31 = deleteRequest30.remoteAddress();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[][][]}" + "'", str21, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(timeValue25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNull(transportAddress31);
    }

    @Test
    public void test7559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7559");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.tasks.TaskId taskId6 = deleteRequest3.getParentTask();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest3.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = null;
        deleteRequest9.remoteAddress(transportAddress11);
        org.elasticsearch.common.unit.TimeValue timeValue13 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest9.timeout(timeValue13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.timeout(timeValue13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.version((long) ' ');
        long long18 = deleteRequest17.primaryTerm();
        java.lang.String str19 = deleteRequest17.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest17.id("delete {[delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[hi!][][delete {[][][]}]}][null]}");
        long long22 = deleteRequest21.primaryTerm();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(taskId6);
        org.junit.Assert.assertNull(actionRequestValidationException7);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
    }

    @Test
    public void test7560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7560");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("delete {[][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = deleteRequest5.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.index("delete {[][][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.setShardId(shardId9);
        java.lang.String[] strArray11 = deleteRequest5.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[hi!][null][null]}", "delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.type("delete {[][][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel21 = deleteRequest20.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.consistencyLevel(writeConsistencyLevel21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest5.consistencyLevel(writeConsistencyLevel21);
        java.lang.Class<?> wildcardClass24 = writeConsistencyLevel21.getClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(transportAddress6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel21 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel21.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test7561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7561");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[][][]}");
        org.elasticsearch.index.VersionType versionType3 = deleteRequest2.versionType();
        java.lang.String str4 = deleteRequest2.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str9 = deleteRequest8.id();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest8.setShardId(shardId10);
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest8.setShardId(shardId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.parent("delete {[][][]}");
        org.elasticsearch.index.VersionType versionType17 = deleteRequest16.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest13.versionType(versionType17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest2.versionType(versionType17);
        long long20 = deleteRequest19.primaryTerm();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[null][null][null]}" + "'", str4, "delete {[null][null][null]}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(versionType17);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
    }

    @Test
    public void test7562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7562");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][]}", "delete {[null][null][null]}", "delete {[null][null][null]}");
        java.lang.String str4 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId12 = null;
        org.elasticsearch.tasks.Task task13 = deleteRequest8.createTask(0L, "", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest8.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel16 = deleteRequest15.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions17 = deleteRequest15.indicesOptions();
        java.lang.String str18 = deleteRequest15.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str20 = deleteRequest19.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest19.version((long) (short) 100);
        deleteRequest19.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str26 = deleteRequest25.parent();
        org.elasticsearch.index.VersionType versionType27 = deleteRequest25.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest19.versionType(versionType27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest15.versionType(versionType27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest3.versionType(versionType27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str35 = deleteRequest34.id();
        java.lang.String str36 = deleteRequest34.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str38 = deleteRequest37.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest37.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId41 = deleteRequest37.getParentTask();
        deleteRequest34.setParentTask(taskId41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str44 = deleteRequest43.parent();
        deleteRequest43.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest43.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest48.type("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest50.version((long) '#');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel54 = deleteRequest53.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel55 = deleteRequest53.consistencyLevel();
        deleteRequest53.setParentTask("delete {[delete {[][][hi!]}][null][null]}", (long) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId66 = null;
        org.elasticsearch.tasks.Task task67 = deleteRequest62.createTask(0L, "", "", taskId66);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest62.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType70 = deleteRequest62.versionType();
        java.lang.String str71 = deleteRequest62.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress72 = deleteRequest62.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy73 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest62.setRefreshPolicy(refreshPolicy73);
        long long75 = deleteRequest62.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue76 = deleteRequest62.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest53.timeout(timeValue76);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = deleteRequest52.timeout(timeValue76);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = deleteRequest34.timeout(timeValue76);
        org.elasticsearch.index.VersionType versionType80 = deleteRequest34.versionType();
        org.elasticsearch.index.VersionType versionType81 = deleteRequest34.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest83 = deleteRequest34.parent("delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.common.unit.TimeValue timeValue84 = deleteRequest34.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest85 = deleteRequest3.timeout(timeValue84);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[delete {[][][]}][delete {[null][null][null]}][delete {[null][null][null]}]}" + "'", str4, "delete {[delete {[][][]}][delete {[null][null][null]}][delete {[null][null][null]}]}");
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel16 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel16.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[][][]}" + "'", str18, "delete {[][][]}");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(versionType27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(taskId41);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel54 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel54.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel55 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel55.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(task67);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(versionType70);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNull(transportAddress72);
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 0L + "'", long75 == 0L);
        org.junit.Assert.assertNotNull(timeValue76);
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertNotNull(deleteRequest78);
        org.junit.Assert.assertNotNull(deleteRequest79);
        org.junit.Assert.assertNotNull(versionType80);
        org.junit.Assert.assertNotNull(versionType81);
        org.junit.Assert.assertNotNull(deleteRequest83);
        org.junit.Assert.assertNotNull(timeValue84);
        org.junit.Assert.assertNotNull(deleteRequest85);
    }

    @Test
    public void test7563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7563");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        java.lang.String str4 = deleteRequest2.type();
        long long5 = deleteRequest2.primaryTerm();
        org.elasticsearch.index.VersionType versionType6 = deleteRequest2.versionType();
        java.lang.String[] strArray7 = deleteRequest2.indices();
        long long8 = deleteRequest2.version();
        deleteRequest2.setParentTask("delete {[delete {[][null][null]}][][delete {[][][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}]}]}", 10L);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-3L) + "'", long8 == (-3L));
    }

    @Test
    public void test7564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7564");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}][delete {[hi!][null][null]}][hi!]}");
        java.lang.String str2 = deleteRequest1.index();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "delete {[delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}][delete {[hi!][null][null]}][hi!]}" + "'", str2, "delete {[delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}][delete {[hi!][null][null]}][hi!]}");
    }

    @Test
    public void test7565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7565");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}", "delete {[][null][null]}", "delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId11 = null;
        org.elasticsearch.tasks.Task task12 = deleteRequest7.createTask(0L, "", "", taskId11);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy13 = deleteRequest7.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.setRefreshPolicy(refreshPolicy13);
        org.elasticsearch.tasks.TaskId taskId15 = deleteRequest14.getParentTask();
        java.lang.String[] strArray16 = deleteRequest14.indices();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest14.timeout("delete {[delete {[hi!][null][null]}][null][null]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[hi!][null][null]}][null][null]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task12);
        org.junit.Assert.assertTrue("'" + refreshPolicy13 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy13.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(taskId15);
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test7566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7566");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "hi!", throwable2, "delete {[null][null][null]}");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting5 = shardFailure4.routing;
        java.lang.String str6 = shardFailure4.indexUUID;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting7 = shardFailure4.routing;
        java.lang.String str8 = shardFailure4.reason;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting9 = shardFailure4.routing;
        java.lang.String str10 = shardFailure4.indexUUID;
        java.lang.String str11 = shardFailure4.indexUUID;
        java.lang.String str12 = shardFailure4.reason;
        java.lang.Throwable throwable13 = shardFailure4.cause;
        org.junit.Assert.assertNull(shardRouting5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[null][null][null]}" + "'", str6, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(shardRouting7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNull(shardRouting9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[null][null][null]}" + "'", str10, "delete {[null][null][null]}");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[null][null][null]}" + "'", str11, "delete {[null][null][null]}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNull(throwable13);
    }

    @Test
    public void test7567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7567");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel1 = deleteRequest0.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel2 = deleteRequest0.consistencyLevel();
        deleteRequest0.primaryTerm((long) (short) 10);
        long long5 = deleteRequest0.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId16 = null;
        org.elasticsearch.tasks.Task task17 = deleteRequest12.createTask(0L, "", "", taskId16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest12.setRefreshPolicy("");
        java.lang.String str20 = deleteRequest19.toString();
        java.lang.String[] strArray21 = deleteRequest19.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest19.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str32 = deleteRequest31.id();
        java.lang.String str33 = deleteRequest31.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str35 = deleteRequest34.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest34.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId38 = deleteRequest34.getParentTask();
        deleteRequest31.setParentTask(taskId38);
        deleteRequest27.setParentTask(taskId38);
        deleteRequest23.setParentTask(taskId38);
        org.elasticsearch.tasks.Task task42 = deleteRequest0.createTask((-1L), "delete {[][delete {[][][]}][delete {[][][]}]}", "delete {[][][hi!]}", taskId38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest0.parent("");
        java.lang.String str45 = deleteRequest0.routing();
        deleteRequest0.setParentTask("delete {[][delete {[null][null][null]}][null]}", 0L);
        org.elasticsearch.index.shard.ShardId shardId49 = deleteRequest0.shardId();
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel1 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel1.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel2 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel2.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-3L) + "'", long5 == (-3L));
        org.junit.Assert.assertNotNull(task17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[][][]}" + "'", str20, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(taskId38);
        org.junit.Assert.assertNotNull(task42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(shardId49);
    }

    @Test
    public void test7568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7568");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.toString();
        long long13 = deleteRequest3.version();
        org.elasticsearch.action.support.IndicesOptions indicesOptions14 = deleteRequest3.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.index.VersionType versionType19 = deleteRequest18.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest18.version((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId29 = null;
        org.elasticsearch.tasks.Task task30 = deleteRequest25.createTask(0L, "", "", taskId29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest25.setRefreshPolicy("");
        deleteRequest32.primaryTerm(1L);
        boolean boolean35 = deleteRequest32.getShouldPersistResult();
        java.lang.String str36 = deleteRequest32.id();
        org.elasticsearch.index.VersionType versionType37 = deleteRequest32.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest18.versionType(versionType37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest3.versionType(versionType37);
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][][]}" + "'", str12, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-3L) + "'", long13 == (-3L));
        org.junit.Assert.assertNotNull(indicesOptions14);
        org.junit.Assert.assertNotNull(versionType19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(task30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(versionType37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest39);
    }

    @Test
    public void test7569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7569");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}", "delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}", "delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}");
        boolean boolean4 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.index("delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy7 = deleteRequest6.getRefreshPolicy();
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = null;
        deleteRequest6.remoteAddress(transportAddress8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId17 = null;
        org.elasticsearch.tasks.Task task18 = deleteRequest13.createTask(0L, "", "", taskId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest13.setRefreshPolicy("");
        deleteRequest20.primaryTerm(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest20.type("hi!");
        java.lang.String[] strArray25 = deleteRequest24.indices();
        deleteRequest24.setParentTask("delete {[delete {[][null][null]}][][]}", 32L);
        org.elasticsearch.index.VersionType versionType29 = deleteRequest24.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest6.versionType(versionType29);
        org.elasticsearch.action.support.IndicesOptions indicesOptions31 = deleteRequest6.indicesOptions();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest6.timeout("delete {[null][delete {[][delete {[hi!][null][null]}][hi!]}][delete {[][][hi!]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[null][delete {[][delete {[hi!][null][null]}][hi!]}][delete {[][][hi!]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + refreshPolicy7 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy7.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(versionType29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(indicesOptions31);
    }

    @Test
    public void test7570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7570");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest1.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue6 = deleteRequest5.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.timeout(timeValue6);
        java.lang.String str8 = deleteRequest1.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException9 = deleteRequest1.validate();
        java.lang.String str10 = deleteRequest1.parent();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest1.consistencyLevel();
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[][null][null]}" + "'", str8, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test7571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7571");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException2 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest4.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue9 = deleteRequest8.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest4.timeout(timeValue9);
        java.lang.String str11 = deleteRequest4.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str19 = deleteRequest18.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.type("delete {[][][]}");
        java.lang.String str26 = deleteRequest23.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest23.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId36 = null;
        org.elasticsearch.tasks.Task task37 = deleteRequest32.createTask(0L, "", "", taskId36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest32.setRefreshPolicy("");
        java.lang.String str40 = deleteRequest39.toString();
        java.lang.String[] strArray41 = deleteRequest39.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest39.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str52 = deleteRequest51.id();
        java.lang.String str53 = deleteRequest51.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str55 = deleteRequest54.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest54.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId58 = deleteRequest54.getParentTask();
        deleteRequest51.setParentTask(taskId58);
        deleteRequest47.setParentTask(taskId58);
        deleteRequest43.setParentTask(taskId58);
        deleteRequest28.setParentTask(taskId58);
        deleteRequest18.setParentTask(taskId58);
        org.elasticsearch.tasks.Task task64 = deleteRequest4.createTask((long) 100, "delete {[][][hi!]}", "hi!", taskId58);
        deleteRequest0.setParentTask(taskId58);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest0.routing("delete {[delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}][delete {[hi!][null][null]}][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId68 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest0.setShardId(shardId68);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "delete {[null][null][null]}" + "'", str1, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException2);
        org.junit.Assert.assertNotNull(timeValue9);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "delete {[][][]}" + "'", str26, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(task37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "delete {[][][]}" + "'", str40, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(taskId58);
        org.junit.Assert.assertNotNull(task64);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNotNull(deleteRequest69);
    }

    @Test
    public void test7572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7572");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[hi!][][delete {[][][]}]}][null]}", "delete {[delete {[null][null][null]}][][]}", "delete {[][delete {[][null][null]}][delete {[][][]}]}");
    }

    @Test
    public void test7573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7573");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str7 = deleteRequest6.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest6.timeout(timeValue10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId14 = deleteRequest13.getParentTask();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException15 = deleteRequest13.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure17 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[null][null][null]}][null][null]}", (java.lang.Throwable) actionRequestValidationException15, "delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure19 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}][delete {[hi!][null][null]}][hi!]}", (java.lang.Throwable) actionRequestValidationException15, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure21 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[][delete {[delete {[][][hi!]}][null][null]}][]}][null][null]}", (java.lang.Throwable) actionRequestValidationException15, "delete {[delete {[][][delete {[][delete {[][][hi!]}][delete {[][][]}]}]}][null][null]}");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(taskId14);
        org.junit.Assert.assertNotNull(actionRequestValidationException15);
    }

    @Test
    public void test7574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7574");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.tasks.TaskId taskId6 = deleteRequest3.getParentTask();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest3.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = null;
        deleteRequest9.remoteAddress(transportAddress11);
        org.elasticsearch.common.unit.TimeValue timeValue13 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest9.timeout(timeValue13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.timeout(timeValue13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.version((long) ' ');
        long long18 = deleteRequest17.primaryTerm();
        java.lang.String str19 = deleteRequest17.routing();
        org.elasticsearch.common.transport.TransportAddress transportAddress20 = deleteRequest17.remoteAddress();
        java.lang.Class<?> wildcardClass21 = deleteRequest17.getClass();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(taskId6);
        org.junit.Assert.assertNull(actionRequestValidationException7);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(transportAddress20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test7575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7575");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = deleteRequest0.remoteAddress();
        java.lang.String str7 = deleteRequest0.parent();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel8 = deleteRequest0.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest0.routing("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.id("delete {[delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[delete {[][][hi!]}][null][delete {[][][]}]}][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId20 = null;
        org.elasticsearch.tasks.Task task21 = deleteRequest16.createTask(0L, "", "", taskId20);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException22 = deleteRequest16.validate();
        org.elasticsearch.common.transport.TransportAddress transportAddress23 = null;
        deleteRequest16.remoteAddress(transportAddress23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest16.version((-3L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress31 = deleteRequest30.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId39 = null;
        org.elasticsearch.tasks.Task task40 = deleteRequest35.createTask(0L, "", "", taskId39);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy41 = deleteRequest35.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest30.setRefreshPolicy(refreshPolicy41);
        java.lang.String str43 = deleteRequest30.index();
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest30.setShardId(shardId44);
        java.lang.String str46 = deleteRequest45.parent();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy47 = deleteRequest45.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest16.setRefreshPolicy(refreshPolicy47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest10.setRefreshPolicy(refreshPolicy47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest49.parent("delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId59 = null;
        org.elasticsearch.tasks.Task task60 = deleteRequest55.createTask(0L, "", "", taskId59);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest55.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType63 = deleteRequest55.versionType();
        java.lang.String str64 = deleteRequest55.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId72 = null;
        org.elasticsearch.tasks.Task task73 = deleteRequest68.createTask(0L, "", "", taskId72);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy74 = deleteRequest68.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest55.setRefreshPolicy(refreshPolicy74);
        java.lang.String[] strArray76 = deleteRequest75.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest82 = deleteRequest80.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = deleteRequest80.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest86 = deleteRequest80.id("delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest90 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest92 = deleteRequest90.type("delete {[][][]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy93 = deleteRequest90.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest94 = deleteRequest80.setRefreshPolicy(refreshPolicy93);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest95 = deleteRequest75.setRefreshPolicy(refreshPolicy93);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel96 = deleteRequest75.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest97 = deleteRequest51.consistencyLevel(writeConsistencyLevel96);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(transportAddress6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel8 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel8.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertNull(actionRequestValidationException22);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(transportAddress31);
        org.junit.Assert.assertNotNull(task40);
        org.junit.Assert.assertTrue("'" + refreshPolicy41 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy41.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + refreshPolicy47 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy47.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(task60);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(versionType63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "delete {[][][]}" + "'", str64, "delete {[][][]}");
        org.junit.Assert.assertNotNull(task73);
        org.junit.Assert.assertTrue("'" + refreshPolicy74 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy74.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest75);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(deleteRequest82);
        org.junit.Assert.assertNotNull(deleteRequest84);
        org.junit.Assert.assertNotNull(deleteRequest86);
        org.junit.Assert.assertNotNull(deleteRequest92);
        org.junit.Assert.assertTrue("'" + refreshPolicy93 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy93.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest94);
        org.junit.Assert.assertNotNull(deleteRequest95);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel96 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel96.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest97);
    }

    @Test
    public void test7576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7576");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}", "delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}", "delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("delete {[][delete {[delete {[][null][null]}][][]}][delete {[null][delete {[null][null][null]}][null]}]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = null;
        deleteRequest3.remoteAddress(transportAddress8);
        java.lang.String str10 = deleteRequest3.toString();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput11 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.writeTo(streamOutput11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[delete {[null][null][null]}][delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}][delete {[][delete {[delete {[][null][null]}][][]}][delete {[null][delete {[null][null][null]}][null]}]}]}" + "'", str10, "delete {[delete {[null][null][null]}][delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}][delete {[][delete {[delete {[][null][null]}][][]}][delete {[null][delete {[null][null][null]}][null]}]}]}");
    }

    @Test
    public void test7577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7577");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}", "delete {[][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}][]}", "delete {[][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId11 = null;
        org.elasticsearch.tasks.Task task12 = deleteRequest7.createTask(0L, "", "", taskId11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.setRefreshPolicy("");
        java.lang.String[] strArray15 = deleteRequest14.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId23 = null;
        org.elasticsearch.tasks.Task task24 = deleteRequest19.createTask(0L, "", "", taskId23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest19.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest14.consistencyLevel(writeConsistencyLevel27);
        java.lang.String str29 = deleteRequest28.getDescription();
        long long30 = deleteRequest28.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}", "delete {[][null][null]}", "delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId42 = null;
        org.elasticsearch.tasks.Task task43 = deleteRequest38.createTask(0L, "", "", taskId42);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy44 = deleteRequest38.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest34.setRefreshPolicy(refreshPolicy44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest28.setRefreshPolicy(refreshPolicy44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest3.setRefreshPolicy(refreshPolicy44);
        java.lang.String str48 = deleteRequest47.toString();
        org.elasticsearch.index.VersionType versionType49 = deleteRequest47.versionType();
        org.junit.Assert.assertNotNull(task12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(task24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "delete {[][][]}" + "'", str29, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertNotNull(task43);
        org.junit.Assert.assertTrue("'" + refreshPolicy44 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy44.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "delete {[delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}][delete {[][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}][]}][delete {[][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][delete {[][][]}]}]}" + "'", str48, "delete {[delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}][delete {[][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}][]}][delete {[][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][delete {[][][]}]}]}");
        org.junit.Assert.assertNotNull(versionType49);
    }

    @Test
    public void test7578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7578");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId9 = null;
        org.elasticsearch.tasks.Task task10 = deleteRequest5.createTask(0L, "", "", taskId9);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest5.setRefreshPolicy("");
        java.lang.String str13 = deleteRequest12.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long16 = deleteRequest15.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str18 = deleteRequest17.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue21 = deleteRequest20.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest17.timeout(timeValue21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest24.getParentTask();
        deleteRequest15.setParentTask(taskId25);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest15.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest12.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.setShardId(shardId29);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[delete {[hi!][null][null]}][null][null]}][null][delete {[delete {[][][hi!]}][null][null]}]}", deleteRequest28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[][][]}" + "'", str13, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(timeValue21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
    }

    @Test
    public void test7579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7579");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = deleteRequest5.consistencyLevel();
        org.elasticsearch.index.shard.ShardId shardId7 = deleteRequest5.shardId();
        org.elasticsearch.action.support.IndicesOptions indicesOptions8 = deleteRequest5.indicesOptions();
        deleteRequest5.primaryTerm((long) 0);
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest5.getParentTask();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel12 = deleteRequest5.consistencyLevel();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel6 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel6.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertNotNull(indicesOptions8);
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel12 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel12.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test7580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7580");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel12 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType19 = deleteRequest18.versionType();
        deleteRequest18.primaryTerm((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest18.routing("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId31 = null;
        org.elasticsearch.tasks.Task task32 = deleteRequest27.createTask(0L, "", "", taskId31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest27.setRefreshPolicy("");
        java.lang.String str35 = deleteRequest34.toString();
        java.lang.String[] strArray36 = deleteRequest34.indices();
        deleteRequest34.primaryTerm(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest34.routing("delete {[null][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest40.setShardId(shardId41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest47.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest49.type("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId59 = null;
        org.elasticsearch.tasks.Task task60 = deleteRequest55.createTask(0L, "", "", taskId59);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy61 = deleteRequest55.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId69 = null;
        org.elasticsearch.tasks.Task task70 = deleteRequest65.createTask(0L, "", "", taskId69);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy71 = deleteRequest65.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest55.setRefreshPolicy(refreshPolicy71);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest51.setRefreshPolicy(refreshPolicy71);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest51.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        deleteRequest75.setParentTask("delete {[][][hi!]}", (long) (byte) 100);
        org.elasticsearch.common.transport.TransportAddress transportAddress79 = null;
        deleteRequest75.remoteAddress(transportAddress79);
        org.elasticsearch.index.VersionType versionType81 = deleteRequest75.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest82 = deleteRequest46.versionType(versionType81);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest83 = deleteRequest42.versionType(versionType81);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = deleteRequest18.versionType(versionType81);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest85 = deleteRequest3.versionType(versionType81);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = deleteRequest85.routing("delete {[][][delete {[hi!][null][null]}]}");
        org.elasticsearch.tasks.TaskId taskId88 = deleteRequest87.getParentTask();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel12 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel12.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(versionType19);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(task32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "delete {[][][]}" + "'", str35, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(task60);
        org.junit.Assert.assertTrue("'" + refreshPolicy61 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy61.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task70);
        org.junit.Assert.assertTrue("'" + refreshPolicy71 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy71.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertNotNull(deleteRequest73);
        org.junit.Assert.assertNotNull(deleteRequest75);
        org.junit.Assert.assertNotNull(versionType81);
        org.junit.Assert.assertNotNull(deleteRequest82);
        org.junit.Assert.assertNotNull(deleteRequest83);
        org.junit.Assert.assertNotNull(deleteRequest84);
        org.junit.Assert.assertNotNull(deleteRequest85);
        org.junit.Assert.assertNotNull(deleteRequest87);
        org.junit.Assert.assertNotNull(taskId88);
    }

    @Test
    public void test7581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7581");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}][delete {[delete {[][null][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}]}");
    }

    @Test
    public void test7582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7582");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        java.lang.String str4 = deleteRequest2.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest2.version((long) (short) 100);
        deleteRequest6.primaryTerm(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str10 = deleteRequest9.parent();
        deleteRequest9.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest9.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest9.version(10L);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel17 = deleteRequest16.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest6.consistencyLevel(writeConsistencyLevel17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}", "delete {[hi!][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        java.lang.String str24 = deleteRequest22.index();
        deleteRequest22.setParentTask("delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}", (long) (short) 100);
        org.elasticsearch.index.VersionType versionType28 = deleteRequest22.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest6.versionType(versionType28);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel30 = deleteRequest29.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest29.type("delete {[null][hi!][null]}");
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel17 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel17.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel30 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel30.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest32);
    }

    @Test
    public void test7583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7583");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType6 = deleteRequest5.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = deleteRequest10.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy21 = deleteRequest15.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest10.setRefreshPolicy(refreshPolicy21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest5.setRefreshPolicy(refreshPolicy21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest5.id("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        boolean boolean26 = deleteRequest5.getShouldPersistResult();
        org.elasticsearch.index.VersionType versionType27 = deleteRequest5.versionType();
        java.lang.String str28 = deleteRequest5.index();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertNull(transportAddress11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertTrue("'" + refreshPolicy21 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy21.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(versionType27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
    }

    @Test
    public void test7584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7584");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}", "delete {[][delete {[][][]}][delete {[][][]}]}", "delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = deleteRequest3.remoteAddress();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}" + "'", str4, "delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        org.junit.Assert.assertNull(transportAddress5);
    }

    @Test
    public void test7585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7585");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.type("delete {[][][]}");
        java.lang.String str8 = deleteRequest5.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel12 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest5.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = null;
        deleteRequest5.remoteAddress(transportAddress15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest5.version(10L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.id("delete {[delete {[][][hi!]}][delete {[null][null][null]}][]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[][delete {[delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}][delete {[hi!][null][null]}][hi!]}][]}", deleteRequest18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[][][]}" + "'", str8, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel12 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel12.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
    }

    @Test
    public void test7586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7586");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        java.lang.String str4 = deleteRequest2.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest2.parent("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest2.parent("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.type("delete {[][][]}");
        java.lang.String str18 = deleteRequest15.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest15.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId28 = null;
        org.elasticsearch.tasks.Task task29 = deleteRequest24.createTask(0L, "", "", taskId28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest24.setRefreshPolicy("");
        java.lang.String str32 = deleteRequest31.toString();
        java.lang.String[] strArray33 = deleteRequest31.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest31.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str44 = deleteRequest43.id();
        java.lang.String str45 = deleteRequest43.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str47 = deleteRequest46.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest46.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId50 = deleteRequest46.getParentTask();
        deleteRequest43.setParentTask(taskId50);
        deleteRequest39.setParentTask(taskId50);
        deleteRequest35.setParentTask(taskId50);
        deleteRequest20.setParentTask(taskId50);
        org.elasticsearch.tasks.Task task55 = deleteRequest2.createTask((long) 1, "delete {[][delete {[][][hi!]}][delete {[][][]}]}", "", taskId50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest2.index("delete {[hi!][][delete {[][][]}]}");
        java.lang.String str58 = deleteRequest57.index();
        java.lang.String str59 = deleteRequest57.toString();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str4, "delete {[delete {[][][hi!]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[][][]}" + "'", str18, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(task29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[][][]}" + "'", str32, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(taskId50);
        org.junit.Assert.assertNotNull(task55);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "delete {[hi!][][delete {[][][]}]}" + "'", str58, "delete {[hi!][][delete {[][][]}]}");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "delete {[delete {[hi!][][delete {[][][]}]}][null][null]}" + "'", str59, "delete {[delete {[hi!][][delete {[][][]}]}][null][null]}");
    }

    @Test
    public void test7587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7587");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][null][null]}", "delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}", "delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}");
    }

    @Test
    public void test7588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7588");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel1 = deleteRequest0.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel2 = deleteRequest0.consistencyLevel();
        deleteRequest0.primaryTerm((long) (short) 10);
        long long5 = deleteRequest0.version();
        java.lang.String str6 = deleteRequest0.type();
        java.lang.String str7 = deleteRequest0.getDescription();
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel1 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel1.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel2 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel2.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-3L) + "'", long5 == (-3L));
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[null][null][null]}" + "'", str7, "delete {[null][null][null]}");
    }

    @Test
    public void test7589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7589");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.type("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId17 = null;
        org.elasticsearch.tasks.Task task18 = deleteRequest13.createTask(0L, "", "", taskId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest13.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType21 = deleteRequest13.versionType();
        java.lang.String str22 = deleteRequest13.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId30 = null;
        org.elasticsearch.tasks.Task task31 = deleteRequest26.createTask(0L, "", "", taskId30);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy32 = deleteRequest26.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest13.setRefreshPolicy(refreshPolicy32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest9.setRefreshPolicy(refreshPolicy32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest9.parent("delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str41 = deleteRequest40.id();
        java.lang.String str42 = deleteRequest40.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest40.type("delete {[][][]}");
        org.elasticsearch.common.unit.TimeValue timeValue45 = deleteRequest44.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest36.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest47.index("delete {[][][hi!]}");
        java.lang.String str50 = deleteRequest49.parent();
        java.lang.String str51 = deleteRequest49.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest49.version((long) (short) 100);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel54 = deleteRequest53.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId62 = null;
        org.elasticsearch.tasks.Task task63 = deleteRequest58.createTask(0L, "", "", taskId62);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy64 = deleteRequest58.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest53.setRefreshPolicy(refreshPolicy64);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest46.setRefreshPolicy(refreshPolicy64);
        deleteRequest66.primaryTerm((long) (short) 10);
        org.elasticsearch.common.transport.TransportAddress transportAddress69 = null;
        deleteRequest66.remoteAddress(transportAddress69);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(versionType21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[][][]}" + "'", str22, "delete {[][][]}");
        org.junit.Assert.assertNotNull(task31);
        org.junit.Assert.assertTrue("'" + refreshPolicy32 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy32.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(timeValue45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel54 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel54.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(task63);
        org.junit.Assert.assertTrue("'" + refreshPolicy64 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy64.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(deleteRequest66);
    }

    @Test
    public void test7590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7590");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest5.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest5.timeout(timeValue10);
        java.lang.String str12 = deleteRequest5.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException13 = deleteRequest5.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure15 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][null][null]}", (java.lang.Throwable) actionRequestValidationException13, "");
        java.lang.Throwable throwable16 = shardFailure15.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure18 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[][][hi!]}][null][null]}", throwable16, "delete {[][delete {[null][null][null]}][null]}");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting19 = shardFailure18.routing;
        java.lang.String str20 = shardFailure18.reason;
        java.lang.String str21 = shardFailure18.indexUUID;
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][null][null]}" + "'", str12, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException13);
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable16.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertNull(shardRouting19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str20, "delete {[delete {[][][hi!]}][null][null]}");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[][delete {[null][null][null]}][null]}" + "'", str21, "delete {[][delete {[null][null][null]}][null]}");
    }

    @Test
    public void test7591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7591");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel1 = deleteRequest0.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions2 = deleteRequest0.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str7 = deleteRequest6.id();
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = deleteRequest6.remoteAddress();
        org.elasticsearch.index.VersionType versionType9 = deleteRequest6.versionType();
        boolean boolean10 = deleteRequest6.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId21 = null;
        org.elasticsearch.tasks.Task task22 = deleteRequest17.createTask(0L, "", "", taskId21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest17.setRefreshPolicy("");
        java.lang.String str25 = deleteRequest24.toString();
        java.lang.String[] strArray26 = deleteRequest24.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest24.index("");
        org.elasticsearch.common.unit.TimeValue timeValue29 = deleteRequest28.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str37 = deleteRequest36.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest41.type("delete {[][][]}");
        java.lang.String str44 = deleteRequest41.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest41.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId54 = null;
        org.elasticsearch.tasks.Task task55 = deleteRequest50.createTask(0L, "", "", taskId54);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest50.setRefreshPolicy("");
        java.lang.String str58 = deleteRequest57.toString();
        java.lang.String[] strArray59 = deleteRequest57.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest57.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str70 = deleteRequest69.id();
        java.lang.String str71 = deleteRequest69.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str73 = deleteRequest72.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest72.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId76 = deleteRequest72.getParentTask();
        deleteRequest69.setParentTask(taskId76);
        deleteRequest65.setParentTask(taskId76);
        deleteRequest61.setParentTask(taskId76);
        deleteRequest46.setParentTask(taskId76);
        deleteRequest36.setParentTask(taskId76);
        org.elasticsearch.tasks.Task task82 = deleteRequest28.createTask((long) (short) -1, "", "delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}", taskId76);
        org.elasticsearch.tasks.Task task83 = deleteRequest6.createTask((long) (short) 0, "delete {[][][hi!]}", "delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}", taskId76);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel84 = deleteRequest6.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest85 = deleteRequest0.consistencyLevel(writeConsistencyLevel84);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = deleteRequest85.routing("delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.elasticsearch.index.shard.ShardId shardId88 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest89 = deleteRequest87.setShardId(shardId88);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest91 = deleteRequest87.index("delete {[hi!][][delete {[][][]}]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel1 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel1.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(transportAddress8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[][][]}" + "'", str25, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(timeValue29);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "delete {[][][]}" + "'", str44, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(task55);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "delete {[][][]}" + "'", str58, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(deleteRequest75);
        org.junit.Assert.assertNotNull(taskId76);
        org.junit.Assert.assertNotNull(task82);
        org.junit.Assert.assertNotNull(task83);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel84 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel84.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest85);
        org.junit.Assert.assertNotNull(deleteRequest87);
        org.junit.Assert.assertNotNull(deleteRequest89);
        org.junit.Assert.assertNotNull(deleteRequest91);
    }

    @Test
    public void test7592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7592");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str7 = deleteRequest6.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest6.getParentTask();
        deleteRequest3.setParentTask(taskId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.consistencyLevel(writeConsistencyLevel14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.type("delete {[delete {[][][hi!]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest17.routing("delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest17.type("delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest17.index("delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}");
        java.lang.String[] strArray26 = deleteRequest25.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str28 = deleteRequest27.parent();
        org.elasticsearch.index.VersionType versionType29 = deleteRequest27.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest27.version((long) 'a');
        org.elasticsearch.index.shard.ShardId shardId32 = deleteRequest31.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest31.type("delete {[][][hi!]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy35 = deleteRequest31.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest25.setRefreshPolicy(refreshPolicy35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest36.id("delete {[][hi!][delete {[][][]}]}");
        org.elasticsearch.index.VersionType versionType39 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest36.versionType(versionType39);
        java.lang.String str41 = deleteRequest36.getDescription();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(versionType29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNull(shardId32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + refreshPolicy35 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy35.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}][delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][hi!][delete {[][][]}]}]}" + "'", str41, "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}][delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][hi!][delete {[][][]}]}]}");
    }

    @Test
    public void test7593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7593");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress2 = deleteRequest0.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId3 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.setShardId(shardId3);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId12 = null;
        org.elasticsearch.tasks.Task task13 = deleteRequest8.createTask(0L, "", "", taskId12);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = deleteRequest8.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest0.setRefreshPolicy(refreshPolicy14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long18 = deleteRequest17.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str20 = deleteRequest19.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue23 = deleteRequest22.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest19.timeout(timeValue23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest26.getParentTask();
        deleteRequest17.setParentTask(taskId27);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = deleteRequest17.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest0.consistencyLevel(writeConsistencyLevel29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest0.index("delete {[delete {[][][]}][delete {[null][null][null]}][null]}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(transportAddress2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertTrue("'" + refreshPolicy14 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy14.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(timeValue23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(taskId27);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel29 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel29.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
    }

    @Test
    public void test7594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7594");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str3 = deleteRequest2.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue6 = deleteRequest5.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest2.timeout(timeValue6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest9.getParentTask();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest9.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure13 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][hi!][]}", (java.lang.Throwable) actionRequestValidationException11, "delete {[delete {[][delete {[delete {[][][hi!]}][null][null]}][]}][null][null]}");
        java.lang.String str14 = shardFailure13.indexUUID;
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertNotNull(actionRequestValidationException11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[delete {[][delete {[delete {[][][hi!]}][null][null]}][]}][null][null]}" + "'", str14, "delete {[delete {[][delete {[delete {[][][hi!]}][null][null]}][]}][null][null]}");
    }

    @Test
    public void test7595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7595");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str6 = deleteRequest5.id();
        java.lang.String str7 = deleteRequest5.index();
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest5.getParentTask();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException9 = deleteRequest5.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue12 = deleteRequest11.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = null;
        deleteRequest11.remoteAddress(transportAddress13);
        org.elasticsearch.common.unit.TimeValue timeValue15 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest5.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest5.version((long) ' ');
        long long20 = deleteRequest19.primaryTerm();
        java.lang.String str21 = deleteRequest19.routing();
        org.elasticsearch.common.transport.TransportAddress transportAddress22 = null;
        deleteRequest19.remoteAddress(transportAddress22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest19.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId33 = null;
        org.elasticsearch.tasks.Task task34 = deleteRequest29.createTask(0L, "", "", taskId33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest29.setRefreshPolicy("");
        java.lang.String str37 = deleteRequest29.index();
        java.lang.String str38 = deleteRequest29.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest40.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue45 = deleteRequest44.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest40.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest29.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest25.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest1.timeout(timeValue45);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(taskId8);
        org.junit.Assert.assertNull(actionRequestValidationException9);
        org.junit.Assert.assertNotNull(timeValue12);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(task34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(timeValue45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest49);
    }

    @Test
    public void test7596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7596");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest3.consistencyLevel(writeConsistencyLevel11);
        deleteRequest12.setParentTask("hi!", 1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.type("delete {[][][]}");
        java.lang.String str22 = deleteRequest19.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest19.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel26 = deleteRequest25.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest25.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest19.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest12.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel30 = deleteRequest12.consistencyLevel();
        java.lang.String str31 = deleteRequest12.toString();
        org.elasticsearch.index.shard.ShardId shardId32 = deleteRequest12.shardId();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[][][]}" + "'", str22, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel26 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel26.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel30 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel30.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "delete {[][delete {[][][]}][delete {[][][]}]}" + "'", str31, "delete {[][delete {[][][]}][delete {[][][]}]}");
        org.junit.Assert.assertNull(shardId32);
    }

    @Test
    public void test7597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7597");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.routing("delete {[][][hi!]}");
        java.lang.String str13 = deleteRequest12.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.id("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.id("delete {[][][delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}]}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
    }

    @Test
    public void test7598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7598");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.routing("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.setShardId(shardId5);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
    }

    @Test
    public void test7599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7599");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}", "delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}", "delete {[null][null][null]}");
        java.lang.String str4 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}][delete {[][delete {[null][null][null]}][delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}]}][delete {[delete {[hi!][null][null]}][null][null]}]}");
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest9.getParentTask();
        org.elasticsearch.tasks.Task task11 = deleteRequest3.createTask((long) (byte) -1, "delete {[][delete {[][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}][]}][null]}", "delete {[][hi!][hi!]}", taskId10);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertNotNull(task11);
    }

    @Test
    public void test7600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7600");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[][][]}");
        org.elasticsearch.index.VersionType versionType3 = deleteRequest2.versionType();
        java.lang.String str4 = deleteRequest2.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str9 = deleteRequest8.id();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest8.setShardId(shardId10);
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest8.setShardId(shardId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.parent("delete {[][][]}");
        org.elasticsearch.index.VersionType versionType17 = deleteRequest16.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest13.versionType(versionType17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest2.versionType(versionType17);
        java.lang.String str20 = deleteRequest19.routing();
        java.lang.String str21 = deleteRequest19.id();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[null][null][null]}" + "'", str4, "delete {[null][null][null]}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(versionType17);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test7601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7601");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.setRefreshPolicy("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy10 = deleteRequest6.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId18 = null;
        org.elasticsearch.tasks.Task task19 = deleteRequest14.createTask(0L, "", "", taskId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType22 = deleteRequest14.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest14.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest6.consistencyLevel(writeConsistencyLevel23);
        long long25 = deleteRequest6.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest6.version((long) (short) -1);
        org.elasticsearch.tasks.TaskId taskId28 = deleteRequest27.getParentTask();
        org.elasticsearch.index.shard.IndexShard indexShard29 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult30 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest27, indexShard29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + refreshPolicy10 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy10.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(task19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-3L) + "'", long25 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(taskId28);
    }

    @Test
    public void test7602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7602");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}", "delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("delete {[delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}][delete {[hi!][null][null]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str9 = deleteRequest8.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue12 = deleteRequest11.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest8.timeout(timeValue12);
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = deleteRequest8.remoteAddress();
        long long15 = deleteRequest8.version();
        java.lang.String str16 = deleteRequest8.routing();
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest8.getParentTask();
        deleteRequest3.setParentTask(taskId17);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest3.setShardId(shardId19);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(timeValue12);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNull(transportAddress14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-3L) + "'", long15 == (-3L));
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(deleteRequest20);
    }

    @Test
    public void test7603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7603");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue2 = deleteRequest1.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress3 = null;
        deleteRequest1.remoteAddress(transportAddress3);
        org.elasticsearch.common.unit.TimeValue timeValue5 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest1.timeout(timeValue5);
        java.lang.String str7 = deleteRequest1.type();
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest1.setShardId(shardId8);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy10 = deleteRequest1.getRefreshPolicy();
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest1.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest1.id("delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}");
        long long14 = deleteRequest13.version();
        org.elasticsearch.tasks.TaskId taskId15 = deleteRequest13.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest13.index("delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.parent("delete {[delete {[null][delete {[null][null][null]}][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[hi!][null][null]}]}");
        org.elasticsearch.tasks.TaskId taskId20 = deleteRequest19.getParentTask();
        org.junit.Assert.assertNotNull(timeValue2);
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + refreshPolicy10 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy10.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-3L) + "'", long14 == (-3L));
        org.junit.Assert.assertNotNull(taskId15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(taskId20);
    }

    @Test
    public void test7604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7604");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("delete {[][][]}");
        java.lang.String str10 = deleteRequest7.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId22 = null;
        org.elasticsearch.tasks.Task task23 = deleteRequest18.createTask(0L, "", "", taskId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest18.setRefreshPolicy("");
        java.lang.String[] strArray26 = deleteRequest25.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId34 = null;
        org.elasticsearch.tasks.Task task35 = deleteRequest30.createTask(0L, "", "", taskId34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest30.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = deleteRequest37.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest25.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue42 = deleteRequest41.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress43 = null;
        deleteRequest41.remoteAddress(transportAddress43);
        org.elasticsearch.common.unit.TimeValue timeValue45 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest41.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest25.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest14.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest3.timeout(timeValue45);
        org.elasticsearch.action.support.IndicesOptions indicesOptions50 = deleteRequest49.indicesOptions();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel51 = deleteRequest49.consistencyLevel();
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest49.setShardId(shardId52);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest55.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue60 = deleteRequest59.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest55.timeout(timeValue60);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str63 = deleteRequest62.parent();
        org.elasticsearch.index.VersionType versionType64 = deleteRequest62.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest55.versionType(versionType64);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest49.versionType(versionType64);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][hi!]}", "delete {[null][null][null]}", "");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy71 = deleteRequest70.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest49.setRefreshPolicy(refreshPolicy71);
        java.lang.String str73 = deleteRequest72.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest72.routing("delete {[][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][][]}]}");
        java.lang.String str76 = deleteRequest72.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long79 = deleteRequest78.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = deleteRequest78.index("");
        boolean boolean82 = deleteRequest78.getShouldPersistResult();
        deleteRequest78.primaryTerm((long) 0);
        org.elasticsearch.common.unit.TimeValue timeValue85 = deleteRequest78.timeout();
        org.elasticsearch.index.VersionType versionType86 = deleteRequest78.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = deleteRequest72.versionType(versionType86);
        java.lang.String str88 = deleteRequest87.type();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][][]}" + "'", str10, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(task35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel38 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel38.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(timeValue42);
        org.junit.Assert.assertNotNull(timeValue45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(indicesOptions50);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel51 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel51.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(timeValue60);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(versionType64);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertTrue("'" + refreshPolicy71 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy71.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(deleteRequest75);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 0L + "'", long79 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(timeValue85);
        org.junit.Assert.assertNotNull(versionType86);
        org.junit.Assert.assertNotNull(deleteRequest87);
        org.junit.Assert.assertNull(str88);
    }

    @Test
    public void test7605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7605");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.setShardId(shardId2);
        boolean boolean4 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str9 = deleteRequest8.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest8.id("hi!");
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest11.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.setRefreshPolicy("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy15 = deleteRequest11.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId23 = null;
        org.elasticsearch.tasks.Task task24 = deleteRequest19.createTask(0L, "", "", taskId23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest19.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType27 = deleteRequest19.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest19.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest11.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.index.shard.ShardId shardId30 = deleteRequest29.shardId();
        org.elasticsearch.index.shard.ShardId shardId31 = deleteRequest29.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest29.parent("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][null][null]}", "delete {[hi!][null][null]}", "delete {[hi!][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = deleteRequest37.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest29.consistencyLevel(writeConsistencyLevel38);
        long long40 = deleteRequest39.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest44.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest46.type("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId56 = null;
        org.elasticsearch.tasks.Task task57 = deleteRequest52.createTask(0L, "", "", taskId56);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest52.setRefreshPolicy("");
        java.lang.String str60 = deleteRequest59.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long63 = deleteRequest62.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str65 = deleteRequest64.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue68 = deleteRequest67.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest64.timeout(timeValue68);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest69.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId72 = deleteRequest71.getParentTask();
        deleteRequest62.setParentTask(taskId72);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel74 = deleteRequest62.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest59.consistencyLevel(writeConsistencyLevel74);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest46.consistencyLevel(writeConsistencyLevel74);
        org.elasticsearch.common.unit.TimeValue timeValue77 = deleteRequest76.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = deleteRequest78.parent("delete {[][][]}");
        java.lang.String str81 = deleteRequest78.id();
        java.lang.String[] strArray82 = deleteRequest78.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest83 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str84 = deleteRequest83.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress85 = deleteRequest83.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId86 = deleteRequest83.getParentTask();
        deleteRequest78.setParentTask(taskId86);
        deleteRequest76.setParentTask(taskId86);
        org.elasticsearch.tasks.Task task89 = deleteRequest39.createTask((long) '#', "delete {[hi!][][delete {[][][]}]}", "delete {[delete {[][null][null]}][][delete {[][][hi!]}]}", taskId86);
        deleteRequest0.setParentTask(taskId86);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertTrue("'" + refreshPolicy15 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy15.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(task24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(versionType27);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNull(shardId30);
        org.junit.Assert.assertNull(shardId31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel38 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel38.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-3L) + "'", long40 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(task57);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "delete {[][][]}" + "'", str60, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 0L + "'", long63 == 0L);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(timeValue68);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(taskId72);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel74 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel74.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest75);
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertNotNull(timeValue77);
        org.junit.Assert.assertNotNull(deleteRequest80);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNull(transportAddress85);
        org.junit.Assert.assertNotNull(taskId86);
        org.junit.Assert.assertNotNull(task89);
    }

    @Test
    public void test7606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7606");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][hi!]}");
        java.lang.String str6 = deleteRequest3.getDescription();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy7 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy8 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.tasks.TaskId taskId9 = deleteRequest3.getParentTask();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str19 = deleteRequest18.id();
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest18.setShardId(shardId20);
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest18.setShardId(shardId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest18.setRefreshPolicy("");
        org.elasticsearch.common.transport.TransportAddress transportAddress26 = null;
        deleteRequest25.remoteAddress(transportAddress26);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest25.consistencyLevel();
        org.elasticsearch.index.shard.ShardId shardId29 = deleteRequest25.shardId();
        java.lang.String str30 = deleteRequest25.routing();
        org.elasticsearch.tasks.TaskId taskId31 = deleteRequest25.getParentTask();
        org.elasticsearch.tasks.Task task32 = deleteRequest11.createTask((-1L), "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}][delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}][]}", "delete {[delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}][null][null]}", taskId31);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][delete {[][][hi!]}][delete {[][][]}]}" + "'", str6, "delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.junit.Assert.assertTrue("'" + refreshPolicy7 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy7.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertTrue("'" + refreshPolicy8 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy8.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(taskId9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(shardId29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(taskId31);
        org.junit.Assert.assertNotNull(task32);
    }

    @Test
    public void test7607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7607");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str8 = deleteRequest7.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.type("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest7.versionType();
        java.lang.String[] strArray12 = deleteRequest7.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.routing("delete {[][null][null]}");
        org.elasticsearch.tasks.TaskId taskId15 = deleteRequest14.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.id("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str22 = deleteRequest21.id();
        org.elasticsearch.common.transport.TransportAddress transportAddress23 = deleteRequest21.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest21.setShardId(shardId24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType32 = deleteRequest31.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest25.versionType(versionType32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest17.versionType(versionType32);
        deleteRequest17.setParentTask("delete {[delete {[][null][null]}][][delete {[null][null][null]}]}", (-1L));
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[][][]}" + "'", str8, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(taskId15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(transportAddress23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(versionType32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest34);
    }

    @Test
    public void test7608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7608");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.setRefreshPolicy("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy10 = deleteRequest6.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId18 = null;
        org.elasticsearch.tasks.Task task19 = deleteRequest14.createTask(0L, "", "", taskId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType22 = deleteRequest14.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest14.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest6.consistencyLevel(writeConsistencyLevel23);
        org.elasticsearch.index.shard.ShardId shardId25 = deleteRequest24.shardId();
        org.elasticsearch.index.shard.ShardId shardId26 = deleteRequest24.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest24.parent("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][null][null]}", "delete {[hi!][null][null]}", "delete {[hi!][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel33 = deleteRequest32.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest24.consistencyLevel(writeConsistencyLevel33);
        java.lang.String str35 = deleteRequest24.index();
        java.lang.String str36 = deleteRequest24.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest24.index("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest24.setShardId(shardId39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest40.type("delete {[delete {[delete {[][][hi!]}][null][null]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest40.parent("delete {[delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][delete {[][][]}][delete {[][][]}]}][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}]}");
        java.lang.String[] strArray45 = deleteRequest44.indices();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + refreshPolicy10 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy10.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(task19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNull(shardId25);
        org.junit.Assert.assertNull(shardId26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel33 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel33.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "delete {[][][hi!]}" + "'", str36, "delete {[][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(strArray45);
    }

    @Test
    public void test7609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7609");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}][delete {[hi!][null][null]}][hi!]}][delete {[][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][][]}]}][delete {[][][]}]}", "delete {[null][delete {[hi!][null][null]}][null]}", "delete {[delete {[][delete {[][][]}][delete {[][][]}]}][][delete {[][][]}]}");
    }

    @Test
    public void test7610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7610");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.version((long) (-1));
        org.elasticsearch.tasks.TaskId taskId4 = deleteRequest3.getParentTask();
        org.elasticsearch.index.VersionType versionType5 = deleteRequest3.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId13 = null;
        org.elasticsearch.tasks.Task task14 = deleteRequest9.createTask(0L, "", "", taskId13);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy15 = deleteRequest9.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId23 = null;
        org.elasticsearch.tasks.Task task24 = deleteRequest19.createTask(0L, "", "", taskId23);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy25 = deleteRequest19.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest9.setRefreshPolicy(refreshPolicy25);
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest26.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId30 = deleteRequest29.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId38 = null;
        org.elasticsearch.tasks.Task task39 = deleteRequest34.createTask(0L, "", "", taskId38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest34.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel42 = deleteRequest41.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions43 = deleteRequest41.indicesOptions();
        java.lang.String str44 = deleteRequest41.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str46 = deleteRequest45.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest45.version((long) (short) 100);
        deleteRequest45.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str52 = deleteRequest51.parent();
        org.elasticsearch.index.VersionType versionType53 = deleteRequest51.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest45.versionType(versionType53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest41.versionType(versionType53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest29.versionType(versionType53);
        org.elasticsearch.index.VersionType versionType57 = deleteRequest56.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest26.versionType(versionType57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest3.versionType(versionType57);
        boolean boolean60 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException61 = deleteRequest3.validate();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(taskId4);
        org.junit.Assert.assertNotNull(versionType5);
        org.junit.Assert.assertNotNull(task14);
        org.junit.Assert.assertTrue("'" + refreshPolicy15 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy15.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task24);
        org.junit.Assert.assertTrue("'" + refreshPolicy25 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy25.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(taskId27);
        org.junit.Assert.assertNull(shardId30);
        org.junit.Assert.assertNotNull(task39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel42 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel42.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "delete {[][][]}" + "'", str44, "delete {[][][]}");
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(versionType53);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(versionType57);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(actionRequestValidationException61);
    }

    @Test
    public void test7611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7611");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str8 = deleteRequest7.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.type("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest7.versionType();
        java.lang.String[] strArray12 = deleteRequest7.indices();
        java.lang.String[] strArray13 = deleteRequest7.indices();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException14 = deleteRequest7.validate();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[][][]}" + "'", str8, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNull(actionRequestValidationException14);
    }

    @Test
    public void test7612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7612");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[][][]}");
        java.lang.String str3 = deleteRequest0.toString();
        java.lang.String str4 = deleteRequest0.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId12 = null;
        org.elasticsearch.tasks.Task task13 = deleteRequest8.createTask(0L, "", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest8.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType16 = deleteRequest8.versionType();
        java.lang.String str17 = deleteRequest8.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId25 = null;
        org.elasticsearch.tasks.Task task26 = deleteRequest21.createTask(0L, "", "", taskId25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest21.setRefreshPolicy("");
        java.lang.String str29 = deleteRequest28.toString();
        java.lang.String[] strArray30 = deleteRequest28.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest28.index("");
        org.elasticsearch.common.unit.TimeValue timeValue33 = deleteRequest32.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest8.timeout(timeValue33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress39 = deleteRequest38.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId47 = null;
        org.elasticsearch.tasks.Task task48 = deleteRequest43.createTask(0L, "", "", taskId47);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy49 = deleteRequest43.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest38.setRefreshPolicy(refreshPolicy49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest34.setRefreshPolicy(refreshPolicy49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest0.setRefreshPolicy(refreshPolicy49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest0.id("delete {[null][null][null]}");
        java.lang.Class<?> wildcardClass55 = deleteRequest54.getClass();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "delete {[null][null][null]}" + "'", str3, "delete {[null][null][null]}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][][]}" + "'", str4, "delete {[][][]}");
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(versionType16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "delete {[][][]}" + "'", str29, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(timeValue33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNull(transportAddress39);
        org.junit.Assert.assertNotNull(task48);
        org.junit.Assert.assertTrue("'" + refreshPolicy49 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy49.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test7613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7613");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str8 = deleteRequest7.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.type("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest7.versionType();
        java.lang.String[] strArray12 = deleteRequest7.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.routing("delete {[][null][null]}");
        org.elasticsearch.tasks.TaskId taskId15 = deleteRequest14.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.id("delete {[hi!][null][null]}");
        java.lang.String[] strArray18 = deleteRequest17.indices();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest17.getParentTask();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[][][]}" + "'", str8, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(taskId15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(taskId19);
    }

    @Test
    public void test7614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7614");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy9 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId17 = null;
        org.elasticsearch.tasks.Task task18 = deleteRequest13.createTask(0L, "", "", taskId17);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy19 = deleteRequest13.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest3.setRefreshPolicy(refreshPolicy19);
        java.lang.String str21 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest3.id("hi!");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel24 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.type("delete {[][][]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel31 = deleteRequest30.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest3.consistencyLevel(writeConsistencyLevel31);
        java.lang.String str33 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest3.parent("delete {[][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][][]}]}");
        java.lang.String[] strArray36 = deleteRequest3.indices();
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest3.setShardId(shardId37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str40 = deleteRequest39.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue43 = deleteRequest42.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest39.timeout(timeValue43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest44.id("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest46.version((long) 10);
        org.elasticsearch.action.support.IndicesOptions indicesOptions49 = deleteRequest46.indicesOptions();
        java.lang.String str50 = deleteRequest46.type();
        deleteRequest46.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str57 = deleteRequest56.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long63 = deleteRequest62.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str65 = deleteRequest64.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue68 = deleteRequest67.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest64.timeout(timeValue68);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest69.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId72 = deleteRequest71.getParentTask();
        deleteRequest62.setParentTask(taskId72);
        org.elasticsearch.tasks.Task task74 = deleteRequest56.createTask((long) ' ', "delete {[][][hi!]}", "delete {[][][]}", taskId72);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel75 = deleteRequest56.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest46.consistencyLevel(writeConsistencyLevel75);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel77 = deleteRequest46.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = deleteRequest38.consistencyLevel(writeConsistencyLevel77);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = deleteRequest78.version((long) (short) 1);
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertTrue("'" + refreshPolicy9 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy9.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertTrue("'" + refreshPolicy19 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy19.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[][][]}" + "'", str21, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel24 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel24.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel31 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel31.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(timeValue43);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(indicesOptions49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "delete {[][][]}" + "'", str57, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 0L + "'", long63 == 0L);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(timeValue68);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(taskId72);
        org.junit.Assert.assertNotNull(task74);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel75 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel75.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel77 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel77.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest78);
        org.junit.Assert.assertNotNull(deleteRequest80);
    }

    @Test
    public void test7615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7615");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        deleteRequest0.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.type("delete {[null][null][null]}");
        java.lang.String str8 = deleteRequest5.parent();
        java.lang.String str9 = deleteRequest5.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][null][null]}");
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.setShardId(shardId15);
        deleteRequest14.primaryTerm((long) 1);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy19 = deleteRequest14.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest11.setRefreshPolicy(refreshPolicy19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest5.setRefreshPolicy(refreshPolicy19);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[delete {[][null][null]}][null][null]}" + "'", str12, "delete {[delete {[][null][null]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertTrue("'" + refreshPolicy19 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy19.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest21);
    }

    @Test
    public void test7616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7616");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long10 = deleteRequest9.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str12 = deleteRequest11.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest14.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest18.getParentTask();
        deleteRequest9.setParentTask(taskId19);
        org.elasticsearch.tasks.Task task21 = deleteRequest3.createTask((long) ' ', "delete {[][][hi!]}", "delete {[][][]}", taskId19);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel22 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest3.type("delete {[][][hi!]}");
        deleteRequest24.setParentTask("delete {[][delete {[][][]}][delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}]}", (long) (byte) 0);
        org.elasticsearch.common.transport.TransportAddress transportAddress28 = deleteRequest24.remoteAddress();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][][]}" + "'", str4, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel22 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel22.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNull(transportAddress28);
    }

    @Test
    public void test7617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7617");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}", "delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.index("delete {[][][hi!]}");
        java.lang.String str7 = deleteRequest6.parent();
        java.lang.String str8 = deleteRequest6.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest6.version((long) (short) 100);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy21 = deleteRequest15.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest10.setRefreshPolicy(refreshPolicy21);
        org.elasticsearch.common.unit.TimeValue timeValue23 = deleteRequest10.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest3.timeout(timeValue23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest29.setParentTask("hi!", (long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest36.type("delete {[][][]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy39 = deleteRequest36.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest29.setRefreshPolicy(refreshPolicy39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest44.type("delete {[][][]}");
        java.lang.String str47 = deleteRequest44.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest44.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel51 = deleteRequest50.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel52 = deleteRequest50.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest44.consistencyLevel(writeConsistencyLevel52);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest40.consistencyLevel(writeConsistencyLevel52);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel55 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest54.consistencyLevel(writeConsistencyLevel55);
        java.lang.String str57 = deleteRequest54.parent();
        org.elasticsearch.tasks.TaskId taskId58 = deleteRequest54.getParentTask();
        org.elasticsearch.tasks.Task task59 = deleteRequest3.createTask(35L, "hi!", "delete {[][delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}][]}", taskId58);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertTrue("'" + refreshPolicy21 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy21.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(timeValue23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertTrue("'" + refreshPolicy39 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy39.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "delete {[][][]}" + "'", str47, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel51 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel51.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel52 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel52.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(taskId58);
        org.junit.Assert.assertNotNull(task59);
    }

    @Test
    public void test7618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7618");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy9 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId17 = null;
        org.elasticsearch.tasks.Task task18 = deleteRequest13.createTask(0L, "", "", taskId17);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy19 = deleteRequest13.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest3.setRefreshPolicy(refreshPolicy19);
        java.lang.String str21 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest3.id("hi!");
        deleteRequest23.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest23.index("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest23.routing("delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.type("");
        java.lang.String str32 = deleteRequest29.getDescription();
        java.lang.String str33 = deleteRequest29.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress34 = deleteRequest29.remoteAddress();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertTrue("'" + refreshPolicy9 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy9.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertTrue("'" + refreshPolicy19 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy19.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[][][]}" + "'", str21, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][][hi!]}" + "'", str32, "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][][hi!]}");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(transportAddress34);
    }

    @Test
    public void test7619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7619");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest10.indicesOptions();
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = deleteRequest10.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest10.setShardId(shardId14);
        long long16 = deleteRequest15.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][hi!]}", "delete {[null][null][null]}", "");
        org.elasticsearch.index.VersionType versionType21 = deleteRequest20.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.versionType(versionType21);
        java.lang.String str23 = deleteRequest22.parent();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions12);
        org.junit.Assert.assertNull(transportAddress13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(versionType21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test7620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7620");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.setShardId(shardId2);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest1.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.index("delete {[delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
    }

    @Test
    public void test7621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7621");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest1.setParentTask("hi!", (long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.type("delete {[][][]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy11 = deleteRequest8.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest1.setRefreshPolicy(refreshPolicy11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.type("delete {[][][]}");
        java.lang.String str19 = deleteRequest16.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest16.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel24 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest16.consistencyLevel(writeConsistencyLevel24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest12.consistencyLevel(writeConsistencyLevel24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.index("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.type("delete {[hi!][][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest28.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest28.id("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException35 = deleteRequest28.validate();
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + refreshPolicy11 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy11.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[][][]}" + "'", str19, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel24 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel24.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNull(actionRequestValidationException35);
    }

    @Test
    public void test7622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7622");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][]}", "delete {[][null][null]}", "hi!");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy4 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.routing("delete {[null][delete {[][delete {[hi!][null][null]}][hi!]}][delete {[][][hi!]}]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException8 = deleteRequest7.validate();
        org.junit.Assert.assertTrue("'" + refreshPolicy4 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy4.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(actionRequestValidationException8);
    }

    @Test
    public void test7623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7623");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long2 = deleteRequest1.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.index("");
        boolean boolean5 = deleteRequest1.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str13 = deleteRequest12.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.routing("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest15.version(1L);
        java.lang.String str20 = deleteRequest19.type();
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest19.getParentTask();
        org.elasticsearch.tasks.Task task22 = deleteRequest1.createTask((long) (short) 0, "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][null][null]}", "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}", taskId21);
        org.elasticsearch.common.transport.TransportAddress transportAddress23 = null;
        deleteRequest1.remoteAddress(transportAddress23);
        org.elasticsearch.common.transport.TransportAddress transportAddress25 = null;
        deleteRequest1.remoteAddress(transportAddress25);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(task22);
    }

    @Test
    public void test7624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7624");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        java.lang.String str9 = deleteRequest8.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId17 = null;
        org.elasticsearch.tasks.Task task18 = deleteRequest13.createTask(0L, "", "", taskId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest13.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType21 = deleteRequest13.versionType();
        java.lang.String str22 = deleteRequest13.parent();
        org.elasticsearch.index.shard.ShardId shardId23 = deleteRequest13.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel24 = deleteRequest13.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest8.consistencyLevel(writeConsistencyLevel24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue28 = deleteRequest27.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress29 = null;
        deleteRequest27.remoteAddress(transportAddress29);
        java.lang.String str31 = deleteRequest27.index();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException32 = deleteRequest27.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str37 = deleteRequest36.id();
        java.lang.String str38 = deleteRequest36.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest36.type("delete {[][][]}");
        java.lang.String str41 = deleteRequest40.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest40.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel44 = deleteRequest43.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest27.consistencyLevel(writeConsistencyLevel44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest8.consistencyLevel(writeConsistencyLevel44);
        java.lang.String[] strArray47 = deleteRequest46.indices();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(versionType21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(shardId23);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel24 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel24.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(timeValue28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "delete {[null][null][null]}" + "'", str31, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException32);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "delete {[][][]}" + "'", str41, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel44 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel44.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(strArray47);
    }

    @Test
    public void test7625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7625");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = deleteRequest0.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest0.getParentTask();
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = deleteRequest0.remoteAddress();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(transportAddress6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNull(transportAddress8);
    }

    @Test
    public void test7626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7626");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy9 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.index.shard.ShardId shardId10 = deleteRequest3.shardId();
        java.lang.String str11 = deleteRequest3.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.index("delete {[delete {[][null][null]}][][delete {[][][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.parent("");
        java.lang.Class<?> wildcardClass16 = deleteRequest13.getClass();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertTrue("'" + refreshPolicy9 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy9.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNull(shardId10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test7627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7627");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType6 = deleteRequest5.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = deleteRequest10.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy21 = deleteRequest15.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest10.setRefreshPolicy(refreshPolicy21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest5.setRefreshPolicy(refreshPolicy21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel26 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest5.consistencyLevel(writeConsistencyLevel26);
        long long28 = deleteRequest5.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.setShardId(shardId31);
        deleteRequest30.primaryTerm((long) 1);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy35 = deleteRequest30.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest5.setRefreshPolicy(refreshPolicy35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest36.index("hi!");
        deleteRequest38.primaryTerm((long) (byte) -1);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy41 = deleteRequest38.getRefreshPolicy();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel42 = deleteRequest38.consistencyLevel();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertNull(transportAddress11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertTrue("'" + refreshPolicy21 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy21.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel26 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel26.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-3L) + "'", long28 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + refreshPolicy35 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy35.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertTrue("'" + refreshPolicy41 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy41.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel42 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel42.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test7628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7628");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}][delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}][]}");
    }

    @Test
    public void test7629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7629");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.routing("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.version((long) (short) -1);
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = deleteRequest13.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest13.id("delete {[delete {[delete {[][][hi!]}][null][null]}][null][null]}");
        java.lang.String[] strArray19 = deleteRequest13.indices();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(transportAddress16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(strArray19);
    }

    @Test
    public void test7630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7630");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        java.lang.String str7 = deleteRequest3.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = null;
        deleteRequest9.remoteAddress(transportAddress11);
        java.lang.String str13 = deleteRequest9.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest9.parent("delete {[hi!][null][null]}");
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest15.getParentTask();
        deleteRequest3.setParentTask(taskId16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest3.type("delete {[null][null][null]}");
        java.lang.String str20 = deleteRequest3.routing();
        org.elasticsearch.index.VersionType versionType21 = deleteRequest3.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str26 = deleteRequest25.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest25.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.type("delete {[][][]}");
        java.lang.String str35 = deleteRequest32.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest32.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest37.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId47 = null;
        org.elasticsearch.tasks.Task task48 = deleteRequest43.createTask(0L, "", "", taskId47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest43.setRefreshPolicy("");
        java.lang.String[] strArray51 = deleteRequest50.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId59 = null;
        org.elasticsearch.tasks.Task task60 = deleteRequest55.createTask(0L, "", "", taskId59);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest55.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel63 = deleteRequest62.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest50.consistencyLevel(writeConsistencyLevel63);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue67 = deleteRequest66.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress68 = null;
        deleteRequest66.remoteAddress(transportAddress68);
        org.elasticsearch.common.unit.TimeValue timeValue70 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest66.timeout(timeValue70);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest50.timeout(timeValue70);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest39.timeout(timeValue70);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest28.timeout(timeValue70);
        org.elasticsearch.index.VersionType versionType75 = deleteRequest74.versionType();
        org.elasticsearch.tasks.TaskId taskId76 = deleteRequest74.getParentTask();
        org.elasticsearch.tasks.Task task77 = deleteRequest3.createTask((long) (byte) 1, "delete {[delete {[][null][null]}][null][null]}", "delete {[delete {[][][hi!]}][null][null]}", taskId76);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = deleteRequest3.parent("delete {[hi!][][delete {[hi!][null][null]}]}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[null][null][null]}" + "'", str13, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(versionType21);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "delete {[][][]}" + "'", str35, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(task48);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(task60);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel63 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel63.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(timeValue67);
        org.junit.Assert.assertNotNull(timeValue70);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertNotNull(deleteRequest73);
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertNotNull(versionType75);
        org.junit.Assert.assertNotNull(taskId76);
        org.junit.Assert.assertNotNull(task77);
        org.junit.Assert.assertNotNull(deleteRequest79);
    }

    @Test
    public void test7631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7631");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        deleteRequest5.setParentTask("hi!", 1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.type("delete {[][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}", "delete {[][][hi!]}", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str22 = deleteRequest21.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.id("hi!");
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest24.getParentTask();
        org.elasticsearch.tasks.TaskId taskId26 = deleteRequest24.getParentTask();
        org.elasticsearch.tasks.Task task27 = deleteRequest14.createTask((-1L), "", "hi!", taskId26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId35 = null;
        org.elasticsearch.tasks.Task task36 = deleteRequest31.createTask(0L, "", "", taskId35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest31.setRefreshPolicy("");
        java.lang.String str39 = deleteRequest38.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long42 = deleteRequest41.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str44 = deleteRequest43.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue47 = deleteRequest46.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest43.timeout(timeValue47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest48.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId51 = deleteRequest50.getParentTask();
        deleteRequest41.setParentTask(taskId51);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel53 = deleteRequest41.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest38.consistencyLevel(writeConsistencyLevel53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest14.consistencyLevel(writeConsistencyLevel53);
        long long56 = deleteRequest55.version();
        org.elasticsearch.common.unit.TimeValue timeValue57 = deleteRequest55.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest5.timeout(timeValue57);
        deleteRequest5.setParentTask("delete {[][][delete {[delete {[][null][null]}][][]}]}", (long) (short) -1);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(taskId26);
        org.junit.Assert.assertNotNull(task27);
        org.junit.Assert.assertNotNull(task36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "delete {[][][]}" + "'", str39, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 0L + "'", long42 == 0L);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(timeValue47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(taskId51);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel53 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel53.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + (-3L) + "'", long56 == (-3L));
        org.junit.Assert.assertNotNull(timeValue57);
        org.junit.Assert.assertNotNull(deleteRequest58);
    }

    @Test
    public void test7632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7632");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str19 = deleteRequest18.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest18.id("hi!");
        org.elasticsearch.tasks.TaskId taskId22 = deleteRequest21.getParentTask();
        org.elasticsearch.tasks.Task task23 = deleteRequest3.createTask(10L, "delete {[hi!][null][null]}", "delete {[delete {[][][hi!]}][null][null]}", taskId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId31 = null;
        org.elasticsearch.tasks.Task task32 = deleteRequest27.createTask(0L, "", "", taskId31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest27.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType35 = deleteRequest27.versionType();
        java.lang.String str36 = deleteRequest27.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress37 = deleteRequest27.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy38 = deleteRequest27.getRefreshPolicy();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel39 = deleteRequest27.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest3.consistencyLevel(writeConsistencyLevel39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest3.version((long) (short) 0);
        deleteRequest42.primaryTerm(100L);
        boolean boolean45 = deleteRequest42.getShouldPersistResult();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(taskId22);
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertNotNull(task32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(versionType35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(transportAddress37);
        org.junit.Assert.assertTrue("'" + refreshPolicy38 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy38.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel39 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel39.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test7633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7633");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue2 = deleteRequest1.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress3 = null;
        deleteRequest1.remoteAddress(transportAddress3);
        java.lang.String str5 = deleteRequest1.index();
        org.elasticsearch.index.VersionType versionType6 = deleteRequest1.versionType();
        org.elasticsearch.index.shard.ShardId shardId7 = deleteRequest1.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest1.version(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest1.index("");
        org.junit.Assert.assertNotNull(timeValue2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[null][null][null]}" + "'", str5, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
    }

    @Test
    public void test7634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7634");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.setRefreshPolicy("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy10 = deleteRequest6.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId18 = null;
        org.elasticsearch.tasks.Task task19 = deleteRequest14.createTask(0L, "", "", taskId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType22 = deleteRequest14.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest14.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest6.consistencyLevel(writeConsistencyLevel23);
        long long25 = deleteRequest24.version();
        java.lang.String[] strArray26 = deleteRequest24.indices();
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest24.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest24.type("delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str31 = deleteRequest30.index();
        deleteRequest30.setParentTask("delete {[][][hi!]}", (long) '#');
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException35 = deleteRequest30.validate();
        long long36 = deleteRequest30.primaryTerm();
        deleteRequest30.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str43 = deleteRequest42.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest42.id("hi!");
        org.elasticsearch.tasks.TaskId taskId46 = deleteRequest45.getParentTask();
        org.elasticsearch.tasks.TaskId taskId47 = deleteRequest45.getParentTask();
        org.elasticsearch.common.unit.TimeValue timeValue48 = deleteRequest45.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest30.timeout(timeValue48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest30.routing("delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy52 = deleteRequest51.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest29.setRefreshPolicy(refreshPolicy52);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + refreshPolicy10 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy10.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(task19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-3L) + "'", long25 == (-3L));
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(taskId27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(actionRequestValidationException35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(taskId46);
        org.junit.Assert.assertNotNull(taskId47);
        org.junit.Assert.assertNotNull(timeValue48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertTrue("'" + refreshPolicy52 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy52.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest53);
    }

    @Test
    public void test7635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7635");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId20 = null;
        org.elasticsearch.tasks.Task task21 = deleteRequest16.createTask(0L, "", "", taskId20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest16.setRefreshPolicy("");
        deleteRequest23.primaryTerm(1L);
        java.lang.String str26 = deleteRequest23.routing();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy27 = deleteRequest23.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest3.setRefreshPolicy(refreshPolicy27);
        java.lang.String str29 = deleteRequest28.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest28.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest28.version(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest33.routing("delete {[delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][null][null]}");
        java.lang.String str36 = deleteRequest33.toString();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][][]}" + "'", str12, "delete {[][][]}");
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + refreshPolicy27 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy27.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "delete {[][][]}" + "'", str29, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "delete {[][][]}" + "'", str36, "delete {[][][]}");
    }

    @Test
    public void test7636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7636");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[][][]}");
        java.lang.String str3 = deleteRequest0.id();
        java.lang.String[] strArray4 = deleteRequest0.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str6 = deleteRequest5.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress7 = deleteRequest5.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest5.getParentTask();
        deleteRequest0.setParentTask(taskId8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId17 = null;
        org.elasticsearch.tasks.Task task18 = deleteRequest13.createTask(0L, "", "", taskId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest13.setRefreshPolicy("");
        deleteRequest20.primaryTerm(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest20.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str29 = deleteRequest28.id();
        org.elasticsearch.common.unit.TimeValue timeValue30 = deleteRequest28.timeout();
        long long31 = deleteRequest28.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest28.index("");
        java.lang.String str34 = deleteRequest28.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest28.parent("hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress37 = null;
        deleteRequest28.remoteAddress(transportAddress37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest39.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest39.index("");
        java.lang.String str44 = deleteRequest39.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest39.index("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue49 = deleteRequest48.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress50 = null;
        deleteRequest48.remoteAddress(transportAddress50);
        java.lang.String str52 = deleteRequest48.index();
        org.elasticsearch.index.VersionType versionType53 = deleteRequest48.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest46.versionType(versionType53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest28.versionType(versionType53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest24.versionType(versionType53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest0.versionType(versionType53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId65 = null;
        org.elasticsearch.tasks.Task task66 = deleteRequest61.createTask(0L, "", "", taskId65);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest61.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel69 = deleteRequest68.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest57.consistencyLevel(writeConsistencyLevel69);
        java.lang.String[] strArray71 = deleteRequest57.indices();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(transportAddress7);
        org.junit.Assert.assertNotNull(taskId8);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(timeValue30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-3L) + "'", long31 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(timeValue49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "delete {[null][null][null]}" + "'", str52, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(versionType53);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(task66);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel69 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel69.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNotNull(strArray71);
    }

    @Test
    public void test7637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7637");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue2 = deleteRequest1.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress3 = null;
        deleteRequest1.remoteAddress(transportAddress3);
        java.lang.String str5 = deleteRequest1.index();
        org.elasticsearch.index.VersionType versionType6 = deleteRequest1.versionType();
        java.lang.String str7 = deleteRequest1.routing();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy8 = deleteRequest1.getRefreshPolicy();
        org.junit.Assert.assertNotNull(timeValue2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[null][null][null]}" + "'", str5, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + refreshPolicy8 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy8.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
    }

    @Test
    public void test7638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7638");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version((long) (short) 100);
        java.lang.String str4 = deleteRequest3.index();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId16 = null;
        org.elasticsearch.tasks.Task task17 = deleteRequest12.createTask(0L, "", "", taskId16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest12.setRefreshPolicy("");
        java.lang.String[] strArray20 = deleteRequest19.indices();
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest19.setShardId(shardId21);
        long long23 = deleteRequest19.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str25 = deleteRequest24.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest24.parent("hi!");
        org.elasticsearch.tasks.TaskId taskId28 = deleteRequest24.getParentTask();
        deleteRequest19.setParentTask(taskId28);
        java.lang.String str30 = deleteRequest19.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest19.id("delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy33 = deleteRequest32.getRefreshPolicy();
        org.elasticsearch.tasks.TaskId taskId34 = deleteRequest32.getParentTask();
        org.elasticsearch.tasks.Task task35 = deleteRequest3.createTask(100L, "delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}", "delete {[delete {[hi!][][delete {[][][]}]}][delete {[][][]}][delete {[][][]}]}", taskId34);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(task17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-3L) + "'", long23 == (-3L));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[null][null][null]}" + "'", str25, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(taskId28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "delete {[][][]}" + "'", str30, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + refreshPolicy33 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy33.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(taskId34);
        org.junit.Assert.assertNotNull(task35);
    }

    @Test
    public void test7639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7639");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy9 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId17 = null;
        org.elasticsearch.tasks.Task task18 = deleteRequest13.createTask(0L, "", "", taskId17);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy19 = deleteRequest13.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest3.setRefreshPolicy(refreshPolicy19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId28 = null;
        org.elasticsearch.tasks.Task task29 = deleteRequest24.createTask(0L, "", "", taskId28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest24.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType32 = deleteRequest24.versionType();
        java.lang.String str33 = deleteRequest24.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId41 = null;
        org.elasticsearch.tasks.Task task42 = deleteRequest37.createTask(0L, "", "", taskId41);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy43 = deleteRequest37.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest24.setRefreshPolicy(refreshPolicy43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest3.setRefreshPolicy(refreshPolicy43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest3.index("delete {[delete {[hi!][][delete {[][][]}]}][delete {[][][]}][delete {[][][]}]}");
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertTrue("'" + refreshPolicy9 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy9.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertTrue("'" + refreshPolicy19 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy19.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(task29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(versionType32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "delete {[][][]}" + "'", str33, "delete {[][][]}");
        org.junit.Assert.assertNotNull(task42);
        org.junit.Assert.assertTrue("'" + refreshPolicy43 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy43.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest47);
    }

    @Test
    public void test7640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7640");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType16 = deleteRequest15.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress21 = deleteRequest20.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId29 = null;
        org.elasticsearch.tasks.Task task30 = deleteRequest25.createTask(0L, "", "", taskId29);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy31 = deleteRequest25.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest20.setRefreshPolicy(refreshPolicy31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest15.setRefreshPolicy(refreshPolicy31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest9.setRefreshPolicy(refreshPolicy31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str39 = deleteRequest38.id();
        java.lang.String str40 = deleteRequest38.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str42 = deleteRequest41.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest41.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId45 = deleteRequest41.getParentTask();
        deleteRequest38.setParentTask(taskId45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str48 = deleteRequest47.parent();
        deleteRequest47.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest47.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest52.type("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest54.version((long) '#');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel58 = deleteRequest57.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel59 = deleteRequest57.consistencyLevel();
        deleteRequest57.setParentTask("delete {[delete {[][][hi!]}][null][null]}", (long) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId70 = null;
        org.elasticsearch.tasks.Task task71 = deleteRequest66.createTask(0L, "", "", taskId70);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest66.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType74 = deleteRequest66.versionType();
        java.lang.String str75 = deleteRequest66.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress76 = deleteRequest66.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy77 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = deleteRequest66.setRefreshPolicy(refreshPolicy77);
        long long79 = deleteRequest66.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue80 = deleteRequest66.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = deleteRequest57.timeout(timeValue80);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest82 = deleteRequest56.timeout(timeValue80);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest83 = deleteRequest38.timeout(timeValue80);
        org.elasticsearch.index.VersionType versionType84 = deleteRequest38.versionType();
        org.elasticsearch.index.VersionType versionType85 = deleteRequest38.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest86 = deleteRequest9.versionType(versionType85);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest88 = deleteRequest86.type("delete {[][][null]}");
        long long89 = deleteRequest88.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest91 = deleteRequest88.id("delete {[null][null][delete {[hi!][null][null]}]}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(versionType16);
        org.junit.Assert.assertNull(transportAddress21);
        org.junit.Assert.assertNotNull(task30);
        org.junit.Assert.assertTrue("'" + refreshPolicy31 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy31.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(taskId45);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel58 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel58.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel59 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel59.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(task71);
        org.junit.Assert.assertNotNull(deleteRequest73);
        org.junit.Assert.assertNotNull(versionType74);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNull(transportAddress76);
        org.junit.Assert.assertNotNull(deleteRequest78);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 0L + "'", long79 == 0L);
        org.junit.Assert.assertNotNull(timeValue80);
        org.junit.Assert.assertNotNull(deleteRequest81);
        org.junit.Assert.assertNotNull(deleteRequest82);
        org.junit.Assert.assertNotNull(deleteRequest83);
        org.junit.Assert.assertNotNull(versionType84);
        org.junit.Assert.assertNotNull(versionType85);
        org.junit.Assert.assertNotNull(deleteRequest86);
        org.junit.Assert.assertNotNull(deleteRequest88);
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + (-3L) + "'", long89 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest91);
    }

    @Test
    public void test7641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7641");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.type("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId12 = null;
        org.elasticsearch.tasks.Task task13 = deleteRequest8.createTask(0L, "", "", taskId12);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = deleteRequest8.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId22 = null;
        org.elasticsearch.tasks.Task task23 = deleteRequest18.createTask(0L, "", "", taskId22);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy24 = deleteRequest18.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest8.setRefreshPolicy(refreshPolicy24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest4.setRefreshPolicy(refreshPolicy24);
        java.lang.String str27 = deleteRequest26.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.index("delete {[][][hi!]}");
        java.lang.String str31 = deleteRequest30.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest30.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest33.parent("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId43 = null;
        org.elasticsearch.tasks.Task task44 = deleteRequest39.createTask(0L, "", "", taskId43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest39.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType47 = deleteRequest39.versionType();
        java.lang.String str48 = deleteRequest39.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress49 = deleteRequest39.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy50 = deleteRequest39.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str52 = deleteRequest51.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest51.version((long) (short) 100);
        java.lang.String str55 = deleteRequest51.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue58 = deleteRequest57.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress59 = null;
        deleteRequest57.remoteAddress(transportAddress59);
        java.lang.String str61 = deleteRequest57.index();
        org.elasticsearch.index.VersionType versionType62 = deleteRequest57.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest51.versionType(versionType62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest39.versionType(versionType62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest35.versionType(versionType62);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy66 = deleteRequest65.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest26.setRefreshPolicy(refreshPolicy66);
        org.elasticsearch.common.transport.TransportAddress transportAddress68 = null;
        deleteRequest67.remoteAddress(transportAddress68);
        long long70 = deleteRequest67.version();
        org.elasticsearch.action.support.IndicesOptions indicesOptions71 = deleteRequest67.indicesOptions();
        java.lang.String str72 = deleteRequest67.type();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertTrue("'" + refreshPolicy14 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy14.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertTrue("'" + refreshPolicy24 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy24.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(task44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(versionType47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(transportAddress49);
        org.junit.Assert.assertTrue("'" + refreshPolicy50 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy50.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(timeValue58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "delete {[null][null][null]}" + "'", str61, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(versionType62);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertTrue("'" + refreshPolicy66 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy66.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + (-3L) + "'", long70 == (-3L));
        org.junit.Assert.assertNotNull(indicesOptions71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "delete {[][][hi!]}" + "'", str72, "delete {[][][hi!]}");
    }

    @Test
    public void test7642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7642");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType6 = deleteRequest5.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = deleteRequest10.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy21 = deleteRequest15.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest10.setRefreshPolicy(refreshPolicy21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest5.setRefreshPolicy(refreshPolicy21);
        java.lang.String str24 = deleteRequest23.parent();
        org.elasticsearch.common.unit.TimeValue timeValue25 = deleteRequest23.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest23.routing("");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.setRefreshPolicy("delete {[delete {[][null][null]}][][delete {[null][null][null]}]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[delete {[][null][null]}][][delete {[null][null][null]}]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertNull(transportAddress11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertTrue("'" + refreshPolicy21 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy21.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(timeValue25);
        org.junit.Assert.assertNotNull(deleteRequest27);
    }

    @Test
    public void test7643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7643");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest10.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId13 = null;
        deleteRequest10.setParentTask(taskId13);
        deleteRequest10.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest10.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        java.lang.String str19 = deleteRequest18.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest18.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest18.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest18.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId30 = deleteRequest29.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId38 = null;
        org.elasticsearch.tasks.Task task39 = deleteRequest34.createTask(0L, "", "", taskId38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest34.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel42 = deleteRequest41.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions43 = deleteRequest41.indicesOptions();
        java.lang.String str44 = deleteRequest41.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str46 = deleteRequest45.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest45.version((long) (short) 100);
        deleteRequest45.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str52 = deleteRequest51.parent();
        org.elasticsearch.index.VersionType versionType53 = deleteRequest51.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest45.versionType(versionType53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest41.versionType(versionType53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest29.versionType(versionType53);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy57 = deleteRequest29.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest27.setRefreshPolicy(refreshPolicy57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest18.setRefreshPolicy(refreshPolicy57);
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions12);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNull(shardId30);
        org.junit.Assert.assertNotNull(task39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel42 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel42.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "delete {[][][]}" + "'", str44, "delete {[][][]}");
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(versionType53);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertTrue("'" + refreshPolicy57 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy57.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest59);
    }

    @Test
    public void test7644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7644");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}", "delete {[][null][null]}", "delete {[][delete {[][][]}][delete {[][][]}]}");
        deleteRequest3.primaryTerm(10L);
        long long6 = deleteRequest3.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[null][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = deleteRequest13.remoteAddress();
        org.elasticsearch.index.VersionType versionType15 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.type("delete {[][][]}");
        java.lang.String str22 = deleteRequest19.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest19.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel26 = deleteRequest25.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest25.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest19.consistencyLevel(writeConsistencyLevel27);
        deleteRequest28.setParentTask("hi!", 1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest35.type("delete {[][][]}");
        java.lang.String str38 = deleteRequest35.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest35.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel42 = deleteRequest41.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel43 = deleteRequest41.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest35.consistencyLevel(writeConsistencyLevel43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest28.consistencyLevel(writeConsistencyLevel43);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel46 = deleteRequest28.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest13.consistencyLevel(writeConsistencyLevel46);
        long long48 = deleteRequest47.version();
        org.elasticsearch.tasks.TaskId taskId49 = deleteRequest47.getParentTask();
        org.elasticsearch.tasks.Task task50 = deleteRequest3.createTask((long) (byte) 0, "delete {[][][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}]}", "delete {[delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}][delete {[][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][][]}]}][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}]}", taskId49);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-3L) + "'", long6 == (-3L));
        org.junit.Assert.assertNull(transportAddress14);
        org.junit.Assert.assertNotNull(versionType15);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[][][]}" + "'", str22, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel26 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel26.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "delete {[][][]}" + "'", str38, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel42 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel42.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel43 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel43.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel46 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel46.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + (-3L) + "'", long48 == (-3L));
        org.junit.Assert.assertNotNull(taskId49);
        org.junit.Assert.assertNotNull(task50);
    }

    @Test
    public void test7645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7645");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str7 = deleteRequest6.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest6.getParentTask();
        deleteRequest3.setParentTask(taskId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.consistencyLevel(writeConsistencyLevel14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.type("delete {[delete {[][][hi!]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest17.routing("delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest17.type("delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest17.index("delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress26 = null;
        deleteRequest25.remoteAddress(transportAddress26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str32 = deleteRequest31.id();
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest31.setShardId(shardId33);
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest31.setShardId(shardId35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest31.setRefreshPolicy("");
        org.elasticsearch.common.transport.TransportAddress transportAddress39 = null;
        deleteRequest38.remoteAddress(transportAddress39);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel41 = deleteRequest38.consistencyLevel();
        org.elasticsearch.index.shard.ShardId shardId42 = deleteRequest38.shardId();
        boolean boolean43 = deleteRequest38.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest45.type("delete {[null][null][null]}");
        java.lang.String str48 = deleteRequest45.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest45.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest45.parent("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str57 = deleteRequest56.id();
        java.lang.String str58 = deleteRequest56.index();
        org.elasticsearch.tasks.TaskId taskId59 = deleteRequest56.getParentTask();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException60 = deleteRequest56.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue63 = deleteRequest62.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress64 = null;
        deleteRequest62.remoteAddress(transportAddress64);
        org.elasticsearch.common.unit.TimeValue timeValue66 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest62.timeout(timeValue66);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest56.timeout(timeValue66);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest56.version((long) ' ');
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy71 = deleteRequest56.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest52.setRefreshPolicy(refreshPolicy71);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest38.setRefreshPolicy(refreshPolicy71);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest25.setRefreshPolicy(refreshPolicy71);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress79 = deleteRequest78.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest83 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId87 = null;
        org.elasticsearch.tasks.Task task88 = deleteRequest83.createTask(0L, "", "", taskId87);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy89 = deleteRequest83.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest90 = deleteRequest78.setRefreshPolicy(refreshPolicy89);
        java.lang.String str91 = deleteRequest78.index();
        org.elasticsearch.index.shard.ShardId shardId92 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest93 = deleteRequest78.setShardId(shardId92);
        java.lang.String str94 = deleteRequest93.parent();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy95 = deleteRequest93.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest96 = deleteRequest25.setRefreshPolicy(refreshPolicy95);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel41 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel41.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(shardId42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertNotNull(taskId59);
        org.junit.Assert.assertNull(actionRequestValidationException60);
        org.junit.Assert.assertNotNull(timeValue63);
        org.junit.Assert.assertNotNull(timeValue66);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertTrue("'" + refreshPolicy71 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy71.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertNotNull(deleteRequest73);
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertNull(transportAddress79);
        org.junit.Assert.assertNotNull(task88);
        org.junit.Assert.assertTrue("'" + refreshPolicy89 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy89.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "hi!" + "'", str91, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest93);
        org.junit.Assert.assertNull(str94);
        org.junit.Assert.assertTrue("'" + refreshPolicy95 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy95.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest96);
    }

    @Test
    public void test7646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7646");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.type("delete {[][][]}");
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        deleteRequest7.setParentTask("delete {[][delete {[null][null][null]}][delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}]}", 97L);
        java.lang.String str12 = deleteRequest7.parent();
        org.elasticsearch.action.support.IndicesOptions indicesOptions13 = deleteRequest7.indicesOptions();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(indicesOptions13);
    }

    @Test
    public void test7647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7647");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][delete {[][delete {[][][hi!]}][delete {[][][]}]}]}][null][null]}");
        java.lang.String str2 = deleteRequest1.id();
        org.junit.Assert.assertNull(str2);
    }

    @Test
    public void test7648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7648");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = null;
        deleteRequest10.remoteAddress(transportAddress11);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest10.consistencyLevel();
        org.elasticsearch.index.shard.ShardId shardId14 = deleteRequest10.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest10.version((long) (short) -1);
        deleteRequest10.setParentTask("delete {[delete {[delete {[][][hi!]}][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[null][null][null]}]}][null][null]}", 100L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(shardId14);
        org.junit.Assert.assertNotNull(deleteRequest16);
    }

    @Test
    public void test7649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7649");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.setRefreshPolicy(refreshPolicy14);
        org.elasticsearch.action.support.IndicesOptions indicesOptions16 = deleteRequest3.indicesOptions();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest3.setShardId(shardId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.index("delete {[delete {[][][hi!]}][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress21 = deleteRequest20.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest20.type("delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}");
        java.lang.Class<?> wildcardClass24 = deleteRequest20.getClass();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(transportAddress13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(indicesOptions16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNull(transportAddress21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test7650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7650");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.type("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.index.shard.ShardId shardId10 = deleteRequest9.shardId();
        long long11 = deleteRequest9.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest9.routing("delete {[][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][delete {[][][]}]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        deleteRequest13.remoteAddress(transportAddress14);
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = deleteRequest13.remoteAddress();
        deleteRequest13.primaryTerm((long) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest13.setRefreshPolicy("delete {[delete {[hi!][null][null]}][null][null]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[delete {[hi!][null][null]}][null][null]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNull(shardId10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-3L) + "'", long11 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNull(transportAddress16);
    }

    @Test
    public void test7651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7651");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress2 = deleteRequest0.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId3 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.setShardId(shardId3);
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = null;
        deleteRequest0.remoteAddress(transportAddress5);
        org.elasticsearch.common.transport.TransportAddress transportAddress7 = deleteRequest0.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.version((long) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.index("delete {[][delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}][]}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(transportAddress2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNull(transportAddress7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
    }

    @Test
    public void test7652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7652");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("delete {[null][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest7.setShardId(shardId10);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException12 = deleteRequest7.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure14 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}", (java.lang.Throwable) actionRequestValidationException12, "delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure16 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][null][null]}", (java.lang.Throwable) actionRequestValidationException12, "delete {[delete {[][][hi!]}][null][null]}");
        java.lang.Throwable throwable17 = shardFailure16.cause;
        java.lang.Throwable throwable18 = shardFailure16.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure20 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][][null]}", throwable18, "delete {[][delete {[][null][null]}][delete {[][][]}]}");
        java.lang.Throwable throwable21 = shardFailure20.cause;
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(actionRequestValidationException12);
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "Validation Failed: 1: id is missing;");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "Validation Failed: 1: id is missing;");
        org.junit.Assert.assertEquals(throwable17.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: id is missing;");
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "Validation Failed: 1: id is missing;");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "Validation Failed: 1: id is missing;");
        org.junit.Assert.assertEquals(throwable18.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: id is missing;");
        org.junit.Assert.assertNotNull(throwable21);
        org.junit.Assert.assertEquals(throwable21.getLocalizedMessage(), "Validation Failed: 1: id is missing;");
        org.junit.Assert.assertEquals(throwable21.getMessage(), "Validation Failed: 1: id is missing;");
        org.junit.Assert.assertEquals(throwable21.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: id is missing;");
    }

    @Test
    public void test7653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7653");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest1.setParentTask("hi!", (long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.type("delete {[][][]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy11 = deleteRequest8.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest1.setRefreshPolicy(refreshPolicy11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.type("delete {[][][]}");
        java.lang.String str19 = deleteRequest16.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest16.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel24 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest16.consistencyLevel(writeConsistencyLevel24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest12.consistencyLevel(writeConsistencyLevel24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.index("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.type("delete {[hi!][][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest28.setRefreshPolicy("");
        deleteRequest28.setParentTask("delete {[delete {[][delete {[][][]}][delete {[][][]}]}][delete {[][delete {[null][null][null]}][]}][null]}", (long) (short) -1);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + refreshPolicy11 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy11.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[][][]}" + "'", str19, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel24 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel24.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
    }

    @Test
    public void test7654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7654");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][null][null]}", throwable2, "delete {[][][]}");
        java.lang.String str5 = shardFailure4.reason;
        java.lang.Throwable throwable6 = shardFailure4.cause;
        java.lang.String str7 = shardFailure4.indexUUID;
        java.lang.Throwable throwable8 = shardFailure4.cause;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting9 = shardFailure4.routing;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[null][null][null]}" + "'", str5, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(throwable6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[][][]}" + "'", str7, "delete {[][][]}");
        org.junit.Assert.assertNull(throwable8);
        org.junit.Assert.assertNull(shardRouting9);
    }

    @Test
    public void test7655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7655");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest1.setParentTask("hi!", (long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.type("delete {[][][]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy11 = deleteRequest8.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest1.setRefreshPolicy(refreshPolicy11);
        long long13 = deleteRequest1.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest1.setRefreshPolicy("");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput16 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest15.writeTo(streamOutput16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + refreshPolicy11 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy11.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-3L) + "'", long13 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest15);
    }

    @Test
    public void test7656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7656");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[][][]}");
        java.lang.String str3 = deleteRequest0.id();
        java.lang.String[] strArray4 = deleteRequest0.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str6 = deleteRequest5.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress7 = deleteRequest5.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest5.getParentTask();
        deleteRequest0.setParentTask(taskId8);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException10 = deleteRequest0.validate();
        boolean boolean11 = deleteRequest0.getShouldPersistResult();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(transportAddress7);
        org.junit.Assert.assertNotNull(taskId8);
        org.junit.Assert.assertNotNull(actionRequestValidationException10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test7657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7657");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "hi!", throwable2, "delete {[null][null][null]}");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting5 = shardFailure4.routing;
        java.lang.Throwable throwable6 = shardFailure4.cause;
        java.lang.String str7 = shardFailure4.reason;
        java.lang.String str8 = shardFailure4.reason;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting9 = shardFailure4.routing;
        org.junit.Assert.assertNull(shardRouting5);
        org.junit.Assert.assertNull(throwable6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNull(shardRouting9);
    }

    @Test
    public void test7658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7658");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest1.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue6 = deleteRequest5.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.timeout(timeValue6);
        java.lang.String str8 = deleteRequest1.toString();
        org.elasticsearch.action.support.IndicesOptions indicesOptions9 = deleteRequest1.indicesOptions();
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[][null][null]}" + "'", str8, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(indicesOptions9);
    }

    @Test
    public void test7659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7659");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][null][null]}", throwable2, "delete {[][][hi!]}");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting5 = shardFailure4.routing;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = shardFailure4.routing;
        java.lang.String str7 = shardFailure4.indexUUID;
        java.lang.String str8 = shardFailure4.reason;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting9 = shardFailure4.routing;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = shardFailure4.routing;
        java.lang.String str11 = shardFailure4.reason;
        java.lang.String str12 = shardFailure4.indexUUID;
        java.lang.String str13 = shardFailure4.reason;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = shardFailure4.routing;
        java.lang.String str15 = shardFailure4.indexUUID;
        java.lang.String str16 = shardFailure4.indexUUID;
        org.junit.Assert.assertNull(shardRouting5);
        org.junit.Assert.assertNull(shardRouting6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[][][hi!]}" + "'", str7, "delete {[][][hi!]}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[null][null][null]}" + "'", str8, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(shardRouting9);
        org.junit.Assert.assertNull(shardRouting10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[null][null][null]}" + "'", str11, "delete {[null][null][null]}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][][hi!]}" + "'", str12, "delete {[][][hi!]}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[null][null][null]}" + "'", str13, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(shardRouting14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[][][hi!]}" + "'", str15, "delete {[][][hi!]}");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[][][hi!]}" + "'", str16, "delete {[][][hi!]}");
    }

    @Test
    public void test7660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7660");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId12 = null;
        org.elasticsearch.tasks.Task task13 = deleteRequest8.createTask(0L, "", "", taskId12);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = deleteRequest8.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.setRefreshPolicy(refreshPolicy14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.id("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest19.setParentTask("hi!", (long) (short) 1);
        long long23 = deleteRequest19.version();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest19.setShardId(shardId24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest26.routing("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.common.unit.TimeValue timeValue31 = deleteRequest30.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest19.timeout(timeValue31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest17.timeout(timeValue31);
        java.lang.String str34 = deleteRequest33.toString();
        deleteRequest33.primaryTerm((long) 10);
        org.junit.Assert.assertNull(transportAddress4);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertTrue("'" + refreshPolicy14 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy14.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-3L) + "'", long23 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(timeValue31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "delete {[hi!][][delete {[hi!][null][null]}]}" + "'", str34, "delete {[hi!][][delete {[hi!][null][null]}]}");
    }

    @Test
    public void test7661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7661");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}][delete {[hi!][null][null]}][null]}");
    }

    @Test
    public void test7662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7662");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str7 = deleteRequest6.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest6.getParentTask();
        deleteRequest3.setParentTask(taskId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.consistencyLevel(writeConsistencyLevel14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.type("delete {[delete {[][][hi!]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest17.routing("delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest17.type("delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}");
        java.lang.String str24 = deleteRequest17.getDescription();
        java.lang.String str25 = deleteRequest17.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str30 = deleteRequest29.id();
        java.lang.String str31 = deleteRequest29.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str33 = deleteRequest32.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest32.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId36 = deleteRequest32.getParentTask();
        deleteRequest29.setParentTask(taskId36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str39 = deleteRequest38.parent();
        deleteRequest38.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest38.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest43.type("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest45.version((long) '#');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel49 = deleteRequest48.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel50 = deleteRequest48.consistencyLevel();
        deleteRequest48.setParentTask("delete {[delete {[][][hi!]}][null][null]}", (long) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId61 = null;
        org.elasticsearch.tasks.Task task62 = deleteRequest57.createTask(0L, "", "", taskId61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest57.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType65 = deleteRequest57.versionType();
        java.lang.String str66 = deleteRequest57.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress67 = deleteRequest57.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy68 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest57.setRefreshPolicy(refreshPolicy68);
        long long70 = deleteRequest57.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue71 = deleteRequest57.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest48.timeout(timeValue71);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest47.timeout(timeValue71);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest29.timeout(timeValue71);
        org.elasticsearch.index.VersionType versionType75 = deleteRequest29.versionType();
        org.elasticsearch.index.VersionType versionType76 = deleteRequest29.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = deleteRequest29.parent("delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.common.unit.TimeValue timeValue79 = deleteRequest29.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = deleteRequest17.timeout(timeValue79);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy81 = deleteRequest80.getRefreshPolicy();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "delete {[][delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}][]}" + "'", str24, "delete {[][delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}][]}");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[][delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}][]}" + "'", str25, "delete {[][delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}][]}");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(taskId36);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel49 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel49.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel50 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel50.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(task62);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(versionType65);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNull(transportAddress67);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 0L + "'", long70 == 0L);
        org.junit.Assert.assertNotNull(timeValue71);
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertNotNull(deleteRequest73);
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertNotNull(versionType75);
        org.junit.Assert.assertNotNull(versionType76);
        org.junit.Assert.assertNotNull(deleteRequest78);
        org.junit.Assert.assertNotNull(timeValue79);
        org.junit.Assert.assertNotNull(deleteRequest80);
        org.junit.Assert.assertTrue("'" + refreshPolicy81 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy81.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
    }

    @Test
    public void test7663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7663");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.routing("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.version((long) (short) -1);
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = deleteRequest13.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest18.setParentTask("hi!", (long) (short) 1);
        long long22 = deleteRequest18.version();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest18.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest13.consistencyLevel(writeConsistencyLevel23);
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(transportAddress16);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-3L) + "'", long22 == (-3L));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
    }

    @Test
    public void test7664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7664");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][hi!]}");
        org.elasticsearch.common.unit.TimeValue timeValue6 = deleteRequest5.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.type("delete {[delete {[hi!][null][null]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.type("delete {[delete {[delete {[][][hi!]}][null][null]}][null][null]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest10.validate();
        java.lang.String str12 = deleteRequest10.toString();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(actionRequestValidationException11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][delete {[delete {[delete {[][][hi!]}][null][null]}][null][null]}][delete {[][][]}]}" + "'", str12, "delete {[][delete {[delete {[delete {[][][hi!]}][null][null]}][null][null]}][delete {[][][]}]}");
    }

    @Test
    public void test7665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7665");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][delete {[][][]}][delete {[][][]}]}][delete {[][null][delete {[][delete {[][][hi!]}][delete {[][][]}]}]}][delete {[][delete {[null][null][null]}][]}]}");
    }

    @Test
    public void test7666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7666");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType6 = deleteRequest5.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = deleteRequest10.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy21 = deleteRequest15.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest10.setRefreshPolicy(refreshPolicy21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest5.setRefreshPolicy(refreshPolicy21);
        java.lang.String str24 = deleteRequest23.parent();
        org.elasticsearch.common.unit.TimeValue timeValue25 = deleteRequest23.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest23.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str29 = deleteRequest28.parent();
        org.elasticsearch.index.VersionType versionType30 = deleteRequest28.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest28.version((long) 'a');
        org.elasticsearch.common.unit.TimeValue timeValue33 = deleteRequest28.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest23.timeout(timeValue33);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertNull(transportAddress11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertTrue("'" + refreshPolicy21 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy21.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(timeValue25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(versionType30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(timeValue33);
        org.junit.Assert.assertNotNull(deleteRequest34);
    }

    @Test
    public void test7667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7667");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[][][]}");
        java.lang.String str3 = deleteRequest0.toString();
        java.lang.String str4 = deleteRequest0.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId12 = null;
        org.elasticsearch.tasks.Task task13 = deleteRequest8.createTask(0L, "", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest8.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType16 = deleteRequest8.versionType();
        java.lang.String str17 = deleteRequest8.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId25 = null;
        org.elasticsearch.tasks.Task task26 = deleteRequest21.createTask(0L, "", "", taskId25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest21.setRefreshPolicy("");
        java.lang.String str29 = deleteRequest28.toString();
        java.lang.String[] strArray30 = deleteRequest28.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest28.index("");
        org.elasticsearch.common.unit.TimeValue timeValue33 = deleteRequest32.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest8.timeout(timeValue33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress39 = deleteRequest38.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId47 = null;
        org.elasticsearch.tasks.Task task48 = deleteRequest43.createTask(0L, "", "", taskId47);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy49 = deleteRequest43.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest38.setRefreshPolicy(refreshPolicy49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest34.setRefreshPolicy(refreshPolicy49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest0.setRefreshPolicy(refreshPolicy49);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput53 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest52.writeTo(streamOutput53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "delete {[null][null][null]}" + "'", str3, "delete {[null][null][null]}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][][]}" + "'", str4, "delete {[][][]}");
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(versionType16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "delete {[][][]}" + "'", str29, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(timeValue33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNull(transportAddress39);
        org.junit.Assert.assertNotNull(task48);
        org.junit.Assert.assertTrue("'" + refreshPolicy49 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy49.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest52);
    }

    @Test
    public void test7668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7668");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.routing("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.version((long) (short) -1);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException16 = deleteRequest13.validate();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(actionRequestValidationException16);
    }

    @Test
    public void test7669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7669");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "hi!", throwable2, "delete {[null][null][null]}");
        java.lang.String str5 = shardFailure4.indexUUID;
        java.lang.Throwable throwable6 = shardFailure4.cause;
        java.lang.String str7 = shardFailure4.reason;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = shardFailure4.routing;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[null][null][null]}" + "'", str5, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(throwable6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNull(shardRouting8);
    }

    @Test
    public void test7670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7670");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.type("delete {[][][]}");
        java.lang.String str11 = deleteRequest8.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest8.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId21 = null;
        org.elasticsearch.tasks.Task task22 = deleteRequest17.createTask(0L, "", "", taskId21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest17.setRefreshPolicy("");
        java.lang.String str25 = deleteRequest24.toString();
        java.lang.String[] strArray26 = deleteRequest24.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest24.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str37 = deleteRequest36.id();
        java.lang.String str38 = deleteRequest36.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str40 = deleteRequest39.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest39.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId43 = deleteRequest39.getParentTask();
        deleteRequest36.setParentTask(taskId43);
        deleteRequest32.setParentTask(taskId43);
        deleteRequest28.setParentTask(taskId43);
        deleteRequest13.setParentTask(taskId43);
        deleteRequest3.setParentTask(taskId43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest3.index("delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}");
        java.lang.String str51 = deleteRequest50.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest50.parent("delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}");
        org.elasticsearch.index.VersionType versionType54 = deleteRequest50.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest50.version(52L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[][][]}" + "'", str25, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(taskId43);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(versionType54);
        org.junit.Assert.assertNotNull(deleteRequest56);
    }

    @Test
    public void test7671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7671");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest10.toString();
        java.lang.String[] strArray12 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str23 = deleteRequest22.id();
        java.lang.String str24 = deleteRequest22.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str26 = deleteRequest25.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest25.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest25.getParentTask();
        deleteRequest22.setParentTask(taskId29);
        deleteRequest18.setParentTask(taskId29);
        deleteRequest14.setParentTask(taskId29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest14.parent("delete {[delete {[][][hi!]}][null][null]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException35 = deleteRequest14.validate();
        org.elasticsearch.common.transport.TransportAddress transportAddress36 = deleteRequest14.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][hi!]}", "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId48 = null;
        org.elasticsearch.tasks.Task task49 = deleteRequest44.createTask(0L, "", "", taskId48);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel50 = deleteRequest44.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest40.consistencyLevel(writeConsistencyLevel50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest14.consistencyLevel(writeConsistencyLevel50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest14.type("delete {[delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}][delete {[][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}][]}][delete {[][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][delete {[][][]}]}]}");
        org.elasticsearch.index.VersionType versionType55 = deleteRequest54.versionType();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNull(actionRequestValidationException35);
        org.junit.Assert.assertNull(transportAddress36);
        org.junit.Assert.assertNotNull(task49);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel50 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel50.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(versionType55);
    }

    @Test
    public void test7672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7672");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest7.id("delete {[][][]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException12 = deleteRequest11.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId15 = deleteRequest14.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId23 = null;
        org.elasticsearch.tasks.Task task24 = deleteRequest19.createTask(0L, "", "", taskId23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest19.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions28 = deleteRequest26.indicesOptions();
        java.lang.String str29 = deleteRequest26.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str31 = deleteRequest30.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest30.version((long) (short) 100);
        deleteRequest30.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str37 = deleteRequest36.parent();
        org.elasticsearch.index.VersionType versionType38 = deleteRequest36.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest30.versionType(versionType38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest26.versionType(versionType38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest14.versionType(versionType38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest11.versionType(versionType38);
        deleteRequest11.primaryTerm((long) (short) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest11.version((long) (short) -1);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException47 = deleteRequest11.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure49 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}", (java.lang.Throwable) actionRequestValidationException47, "delete {[delete {[delete {[][null][null]}][][delete {[][][hi!]}]}][delete {[][null][null]}][delete {[null][null][delete {[][][hi!]}]}]}");
        java.lang.Throwable throwable50 = shardFailure49.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure52 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][delete {[][][hi!]}][delete {[][][]}]}", throwable50, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(actionRequestValidationException12);
        org.junit.Assert.assertNull(shardId15);
        org.junit.Assert.assertNotNull(task24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "delete {[][][]}" + "'", str29, "delete {[][][]}");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(versionType38);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(actionRequestValidationException47);
        org.junit.Assert.assertNotNull(throwable50);
        org.junit.Assert.assertEquals(throwable50.getLocalizedMessage(), "Validation Failed: 1: illegal version value [-1] for version type [INTERNAL];");
        org.junit.Assert.assertEquals(throwable50.getMessage(), "Validation Failed: 1: illegal version value [-1] for version type [INTERNAL];");
        org.junit.Assert.assertEquals(throwable50.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: illegal version value [-1] for version type [INTERNAL];");
    }

    @Test
    public void test7673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7673");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest9.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue14 = deleteRequest13.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest9.timeout(timeValue14);
        java.lang.String str16 = deleteRequest9.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException17 = deleteRequest9.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure19 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[delete {[][][hi!]}][null][null]}", (java.lang.Throwable) actionRequestValidationException17, "delete {[][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure21 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "", (java.lang.Throwable) actionRequestValidationException17, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure23 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "hi!", (java.lang.Throwable) actionRequestValidationException17, "delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure25 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][null][null]}", (java.lang.Throwable) actionRequestValidationException17, "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting26 = shardFailure25.routing;
        java.lang.String str27 = shardFailure25.reason;
        java.lang.String str28 = shardFailure25.indexUUID;
        org.junit.Assert.assertNotNull(timeValue14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[][null][null]}" + "'", str16, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException17);
        org.junit.Assert.assertNull(shardRouting26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[null][null][null]}" + "'", str27, "delete {[null][null][null]}");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}" + "'", str28, "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
    }

    @Test
    public void test7674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7674");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest10.toString();
        java.lang.String[] strArray12 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.index("");
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest14.timeout();
        deleteRequest14.setParentTask("hi!", (long) (short) 100);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest14.setShardId(shardId19);
        org.elasticsearch.common.transport.TransportAddress transportAddress21 = deleteRequest20.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest20.setRefreshPolicy("");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput24 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest23.writeTo(streamOutput24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNull(transportAddress21);
        org.junit.Assert.assertNotNull(deleteRequest23);
    }

    @Test
    public void test7675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7675");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "hi!", throwable2, "delete {[null][null][null]}");
        java.lang.String str5 = shardFailure4.reason;
        java.lang.Throwable throwable6 = shardFailure4.cause;
        java.lang.String str7 = shardFailure4.indexUUID;
        java.lang.Throwable throwable8 = shardFailure4.cause;
        java.lang.String str9 = shardFailure4.reason;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNull(throwable6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[null][null][null]}" + "'", str7, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(throwable8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
    }

    @Test
    public void test7676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7676");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.parent("delete {[][][]}");
        long long11 = deleteRequest10.version();
        java.lang.String str12 = deleteRequest10.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str17 = deleteRequest16.id();
        java.lang.String str18 = deleteRequest16.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str20 = deleteRequest19.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest19.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest19.getParentTask();
        deleteRequest16.setParentTask(taskId23);
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest16.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest16.version(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest16.routing("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str34 = deleteRequest33.id();
        java.lang.String str35 = deleteRequest33.index();
        org.elasticsearch.tasks.TaskId taskId36 = deleteRequest33.getParentTask();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException37 = deleteRequest33.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue40 = deleteRequest39.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress41 = null;
        deleteRequest39.remoteAddress(transportAddress41);
        org.elasticsearch.common.unit.TimeValue timeValue43 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest39.timeout(timeValue43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest33.timeout(timeValue43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest16.timeout(timeValue43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest51.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest53.type("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId63 = null;
        org.elasticsearch.tasks.Task task64 = deleteRequest59.createTask(0L, "", "", taskId63);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy65 = deleteRequest59.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId73 = null;
        org.elasticsearch.tasks.Task task74 = deleteRequest69.createTask(0L, "", "", taskId73);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy75 = deleteRequest69.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest59.setRefreshPolicy(refreshPolicy75);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest55.setRefreshPolicy(refreshPolicy75);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = deleteRequest55.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        deleteRequest79.setParentTask("delete {[][][hi!]}", (long) (byte) 100);
        org.elasticsearch.common.transport.TransportAddress transportAddress83 = null;
        deleteRequest79.remoteAddress(transportAddress83);
        org.elasticsearch.index.VersionType versionType85 = deleteRequest79.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest86 = deleteRequest50.versionType(versionType85);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = deleteRequest16.versionType(versionType85);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest88 = deleteRequest10.versionType(versionType85);
        java.lang.String str89 = deleteRequest10.toString();
        java.lang.String str90 = deleteRequest10.routing();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest92 = deleteRequest10.setRefreshPolicy("delete {[][delete {[delete {[delete {[][][hi!]}][null][null]}][null][null]}][delete {[][][]}]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[][delete {[delete {[delete {[][][hi!]}][null][null]}][null][null]}][delete {[][][]}]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-3L) + "'", long11 == (-3L));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(taskId36);
        org.junit.Assert.assertNull(actionRequestValidationException37);
        org.junit.Assert.assertNotNull(timeValue40);
        org.junit.Assert.assertNotNull(timeValue43);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(task64);
        org.junit.Assert.assertTrue("'" + refreshPolicy65 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy65.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task74);
        org.junit.Assert.assertTrue("'" + refreshPolicy75 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy75.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertNotNull(deleteRequest79);
        org.junit.Assert.assertNotNull(versionType85);
        org.junit.Assert.assertNotNull(deleteRequest86);
        org.junit.Assert.assertNotNull(deleteRequest87);
        org.junit.Assert.assertNotNull(deleteRequest88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "delete {[][delete {[][][]}][delete {[][][]}]}" + "'", str89, "delete {[][delete {[][][]}][delete {[][][]}]}");
        org.junit.Assert.assertNull(str90);
    }

    @Test
    public void test7677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7677");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy9 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.index.shard.ShardId shardId10 = deleteRequest3.shardId();
        java.lang.String str11 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.parent("delete {[delete {[null][null][null]}][][]}");
        long long14 = deleteRequest3.primaryTerm();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertTrue("'" + refreshPolicy9 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy9.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNull(shardId10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
    }

    @Test
    public void test7678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7678");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][null][null]}", "delete {[hi!][null][null]}", "delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.setRefreshPolicy("");
        deleteRequest5.primaryTerm((long) (-1));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.index("delete {[][][hi!]}");
        java.lang.String str14 = deleteRequest13.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest13.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest13.index("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        long long19 = deleteRequest13.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.type("delete {[null][null][null]}");
        java.lang.String str24 = deleteRequest21.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest21.index("");
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest26.getParentTask();
        deleteRequest13.setParentTask(taskId27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue34 = deleteRequest33.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest33.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str38 = deleteRequest37.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest37.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId41 = deleteRequest37.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest37.id("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str48 = deleteRequest47.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest47.id("hi!");
        org.elasticsearch.tasks.TaskId taskId51 = deleteRequest50.getParentTask();
        org.elasticsearch.tasks.TaskId taskId52 = deleteRequest50.getParentTask();
        deleteRequest43.setParentTask(taskId52);
        deleteRequest33.setParentTask(taskId52);
        org.elasticsearch.tasks.Task task55 = deleteRequest13.createTask(97L, "", "delete {[delete {[][null][null]}][][delete {[][][hi!]}]}", taskId52);
        org.elasticsearch.tasks.Task task56 = deleteRequest5.createTask((long) (short) 0, "delete {[delete {[hi!][null][null]}][null][null]}", "delete {[][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][][]}]}", taskId52);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(taskId27);
        org.junit.Assert.assertNotNull(timeValue34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(taskId41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(taskId51);
        org.junit.Assert.assertNotNull(taskId52);
        org.junit.Assert.assertNotNull(task55);
        org.junit.Assert.assertNotNull(task56);
    }

    @Test
    public void test7679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7679");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.type("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        java.lang.String str14 = deleteRequest13.index();
        long long15 = deleteRequest13.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str23 = deleteRequest22.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest22.id("hi!");
        org.elasticsearch.tasks.TaskId taskId26 = deleteRequest25.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest25.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType35 = deleteRequest34.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress40 = deleteRequest39.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId48 = null;
        org.elasticsearch.tasks.Task task49 = deleteRequest44.createTask(0L, "", "", taskId48);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy50 = deleteRequest44.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest39.setRefreshPolicy(refreshPolicy50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest34.setRefreshPolicy(refreshPolicy50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest28.setRefreshPolicy(refreshPolicy50);
        long long54 = deleteRequest28.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str56 = deleteRequest55.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue59 = deleteRequest58.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest55.timeout(timeValue59);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest60.id("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str70 = deleteRequest69.id();
        java.lang.String str71 = deleteRequest69.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str73 = deleteRequest72.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest72.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId76 = deleteRequest72.getParentTask();
        deleteRequest69.setParentTask(taskId76);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel79 = deleteRequest78.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel80 = deleteRequest78.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = deleteRequest69.consistencyLevel(writeConsistencyLevel80);
        org.elasticsearch.tasks.TaskId taskId82 = deleteRequest81.getParentTask();
        org.elasticsearch.tasks.Task task83 = deleteRequest60.createTask(32L, "delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}", "delete {[hi!][null][null]}", taskId82);
        deleteRequest28.setParentTask(taskId82);
        org.elasticsearch.tasks.Task task85 = deleteRequest13.createTask(0L, "delete {[][delete {[][][]}][delete {[][][]}]}", "delete {[null][null][delete {[hi!][null][null]}]}", taskId82);
        java.lang.String str86 = deleteRequest13.getDescription();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-3L) + "'", long15 == (-3L));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(taskId26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(versionType35);
        org.junit.Assert.assertNull(transportAddress40);
        org.junit.Assert.assertNotNull(task49);
        org.junit.Assert.assertTrue("'" + refreshPolicy50 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy50.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + (-3L) + "'", long54 == (-3L));
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(timeValue59);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(deleteRequest75);
        org.junit.Assert.assertNotNull(taskId76);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel79 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel79.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel80 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel80.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest81);
        org.junit.Assert.assertNotNull(taskId82);
        org.junit.Assert.assertNotNull(task83);
        org.junit.Assert.assertNotNull(task85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "delete {[][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][]}" + "'", str86, "delete {[][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][]}");
    }

    @Test
    public void test7680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7680");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.setRefreshPolicy("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy10 = deleteRequest6.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId18 = null;
        org.elasticsearch.tasks.Task task19 = deleteRequest14.createTask(0L, "", "", taskId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType22 = deleteRequest14.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest14.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest6.consistencyLevel(writeConsistencyLevel23);
        org.elasticsearch.index.shard.ShardId shardId25 = deleteRequest24.shardId();
        org.elasticsearch.index.shard.ShardId shardId26 = deleteRequest24.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest24.parent("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][null][null]}", "delete {[hi!][null][null]}", "delete {[hi!][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel33 = deleteRequest32.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest24.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest34.index("delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest36.version((long) (short) -1);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy39 = deleteRequest36.getRefreshPolicy();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + refreshPolicy10 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy10.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(task19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNull(shardId25);
        org.junit.Assert.assertNull(shardId26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel33 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel33.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertTrue("'" + refreshPolicy39 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy39.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
    }

    @Test
    public void test7681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7681");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue2 = deleteRequest1.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress3 = null;
        deleteRequest1.remoteAddress(transportAddress3);
        org.elasticsearch.common.unit.TimeValue timeValue5 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest1.timeout(timeValue5);
        java.lang.String str7 = deleteRequest1.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest1.routing("delete {[][delete {[][][]}][delete {[][][]}]}");
        java.lang.String str10 = deleteRequest1.parent();
        long long11 = deleteRequest1.version();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest1.getParentTask();
        java.lang.String str13 = deleteRequest1.parent();
        org.junit.Assert.assertNotNull(timeValue2);
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-3L) + "'", long11 == (-3L));
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test7682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7682");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel1 = deleteRequest0.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions2 = deleteRequest0.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str7 = deleteRequest6.id();
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = deleteRequest6.remoteAddress();
        org.elasticsearch.index.VersionType versionType9 = deleteRequest6.versionType();
        boolean boolean10 = deleteRequest6.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId21 = null;
        org.elasticsearch.tasks.Task task22 = deleteRequest17.createTask(0L, "", "", taskId21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest17.setRefreshPolicy("");
        java.lang.String str25 = deleteRequest24.toString();
        java.lang.String[] strArray26 = deleteRequest24.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest24.index("");
        org.elasticsearch.common.unit.TimeValue timeValue29 = deleteRequest28.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str37 = deleteRequest36.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest41.type("delete {[][][]}");
        java.lang.String str44 = deleteRequest41.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest41.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId54 = null;
        org.elasticsearch.tasks.Task task55 = deleteRequest50.createTask(0L, "", "", taskId54);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest50.setRefreshPolicy("");
        java.lang.String str58 = deleteRequest57.toString();
        java.lang.String[] strArray59 = deleteRequest57.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest57.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str70 = deleteRequest69.id();
        java.lang.String str71 = deleteRequest69.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str73 = deleteRequest72.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest72.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId76 = deleteRequest72.getParentTask();
        deleteRequest69.setParentTask(taskId76);
        deleteRequest65.setParentTask(taskId76);
        deleteRequest61.setParentTask(taskId76);
        deleteRequest46.setParentTask(taskId76);
        deleteRequest36.setParentTask(taskId76);
        org.elasticsearch.tasks.Task task82 = deleteRequest28.createTask((long) (short) -1, "", "delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}", taskId76);
        org.elasticsearch.tasks.Task task83 = deleteRequest6.createTask((long) (short) 0, "delete {[][][hi!]}", "delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}", taskId76);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel84 = deleteRequest6.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest85 = deleteRequest0.consistencyLevel(writeConsistencyLevel84);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = deleteRequest85.routing("delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.elasticsearch.index.shard.ShardId shardId88 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest89 = deleteRequest87.setShardId(shardId88);
        org.elasticsearch.common.transport.TransportAddress transportAddress90 = deleteRequest87.remoteAddress();
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel1 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel1.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(transportAddress8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[][][]}" + "'", str25, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(timeValue29);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "delete {[][][]}" + "'", str44, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(task55);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "delete {[][][]}" + "'", str58, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(deleteRequest75);
        org.junit.Assert.assertNotNull(taskId76);
        org.junit.Assert.assertNotNull(task82);
        org.junit.Assert.assertNotNull(task83);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel84 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel84.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest85);
        org.junit.Assert.assertNotNull(deleteRequest87);
        org.junit.Assert.assertNotNull(deleteRequest89);
        org.junit.Assert.assertNull(transportAddress90);
    }

    @Test
    public void test7683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7683");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.type("delete {[hi!][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest2.consistencyLevel();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest2.setShardId(shardId6);
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest2.timeout();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest2.setShardId(shardId9);
        long long11 = deleteRequest2.version();
        org.elasticsearch.index.shard.ShardId shardId12 = deleteRequest2.shardId();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-3L) + "'", long11 == (-3L));
        org.junit.Assert.assertNull(shardId12);
    }

    @Test
    public void test7684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7684");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][null][null]}", throwable2, "delete {[][][]}");
        java.lang.String str5 = shardFailure4.reason;
        java.lang.Throwable throwable6 = shardFailure4.cause;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting7 = shardFailure4.routing;
        java.lang.String str8 = shardFailure4.indexUUID;
        java.lang.String str9 = shardFailure4.indexUUID;
        java.lang.Throwable throwable10 = shardFailure4.cause;
        java.lang.Throwable throwable11 = shardFailure4.cause;
        java.lang.Throwable throwable12 = shardFailure4.cause;
        java.lang.String str13 = shardFailure4.reason;
        java.lang.Throwable throwable14 = shardFailure4.cause;
        java.lang.String str15 = shardFailure4.reason;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = shardFailure4.routing;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting17 = shardFailure4.routing;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[null][null][null]}" + "'", str5, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(throwable6);
        org.junit.Assert.assertNull(shardRouting7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[][][]}" + "'", str8, "delete {[][][]}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[][][]}" + "'", str9, "delete {[][][]}");
        org.junit.Assert.assertNull(throwable10);
        org.junit.Assert.assertNull(throwable11);
        org.junit.Assert.assertNull(throwable12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[null][null][null]}" + "'", str13, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(throwable14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[null][null][null]}" + "'", str15, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(shardRouting16);
        org.junit.Assert.assertNull(shardRouting17);
    }

    @Test
    public void test7685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7685");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId9 = null;
        org.elasticsearch.tasks.Task task10 = deleteRequest5.createTask(0L, "", "", taskId9);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest5.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest12.consistencyLevel();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[][][hi!]}][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[null][null][null]}]}", deleteRequest12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test7686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7686");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        long long11 = deleteRequest3.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.type("delete {[delete {[hi!][null][null]}][delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}][delete {[delete {[][null][null]}][][]}]}");
        long long14 = deleteRequest13.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest13.timeout();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(timeValue15);
    }

    @Test
    public void test7687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7687");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[null][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.setShardId(shardId6);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException8 = deleteRequest3.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure10 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}", (java.lang.Throwable) actionRequestValidationException8, "delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        java.lang.Throwable throwable11 = shardFailure10.cause;
        java.lang.String str12 = shardFailure10.reason;
        java.lang.String str13 = shardFailure10.indexUUID;
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(actionRequestValidationException8);
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "Validation Failed: 1: id is missing;");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "Validation Failed: 1: id is missing;");
        org.junit.Assert.assertEquals(throwable11.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: id is missing;");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}" + "'", str12, "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}" + "'", str13, "delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
    }

    @Test
    public void test7688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7688");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("delete {[][][]}");
        java.lang.String str10 = deleteRequest7.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId22 = null;
        org.elasticsearch.tasks.Task task23 = deleteRequest18.createTask(0L, "", "", taskId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest18.setRefreshPolicy("");
        java.lang.String[] strArray26 = deleteRequest25.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId34 = null;
        org.elasticsearch.tasks.Task task35 = deleteRequest30.createTask(0L, "", "", taskId34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest30.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = deleteRequest37.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest25.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue42 = deleteRequest41.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress43 = null;
        deleteRequest41.remoteAddress(transportAddress43);
        org.elasticsearch.common.unit.TimeValue timeValue45 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest41.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest25.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest14.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest3.timeout(timeValue45);
        org.elasticsearch.action.support.IndicesOptions indicesOptions50 = deleteRequest49.indicesOptions();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel51 = deleteRequest49.consistencyLevel();
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest49.setShardId(shardId52);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest55.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue60 = deleteRequest59.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest55.timeout(timeValue60);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str63 = deleteRequest62.parent();
        org.elasticsearch.index.VersionType versionType64 = deleteRequest62.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest55.versionType(versionType64);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest49.versionType(versionType64);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][hi!]}", "delete {[null][null][null]}", "");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy71 = deleteRequest70.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest49.setRefreshPolicy(refreshPolicy71);
        java.lang.String str73 = deleteRequest72.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest72.id("delete {[][hi!][delete {[null][null][null]}]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress76 = null;
        deleteRequest72.remoteAddress(transportAddress76);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][][]}" + "'", str10, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(task35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel38 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel38.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(timeValue42);
        org.junit.Assert.assertNotNull(timeValue45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(indicesOptions50);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel51 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel51.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(timeValue60);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(versionType64);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertTrue("'" + refreshPolicy71 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy71.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(deleteRequest75);
    }

    @Test
    public void test7689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7689");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest1.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue6 = deleteRequest5.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.timeout(timeValue6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str9 = deleteRequest8.parent();
        org.elasticsearch.index.VersionType versionType10 = deleteRequest8.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest1.versionType(versionType10);
        long long12 = deleteRequest11.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.type("");
        java.lang.String str15 = deleteRequest14.toString();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput16 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest14.writeTo(streamOutput16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(versionType10);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[][][null]}" + "'", str15, "delete {[][][null]}");
    }

    @Test
    public void test7690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7690");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        deleteRequest0.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.type("delete {[null][null][null]}");
        java.lang.String str8 = deleteRequest5.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.index("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest5.routing("delete {[hi!][null][null]}");
        long long13 = deleteRequest5.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.version((long) (-1));
        org.elasticsearch.common.transport.TransportAddress transportAddress18 = null;
        deleteRequest17.remoteAddress(transportAddress18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest17.index("delete {[][delete {[][][]}][delete {[][][]}]}");
        boolean boolean22 = deleteRequest21.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}", "delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.index("delete {[][][hi!]}");
        java.lang.String str30 = deleteRequest29.parent();
        java.lang.String str31 = deleteRequest29.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest29.version((long) (short) 100);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel34 = deleteRequest33.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId42 = null;
        org.elasticsearch.tasks.Task task43 = deleteRequest38.createTask(0L, "", "", taskId42);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy44 = deleteRequest38.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest33.setRefreshPolicy(refreshPolicy44);
        org.elasticsearch.common.unit.TimeValue timeValue46 = deleteRequest33.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest26.timeout(timeValue46);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest21.timeout(timeValue46);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest49.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest51.type("delete {[hi!][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel54 = deleteRequest51.consistencyLevel();
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest51.setShardId(shardId55);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel57 = deleteRequest56.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest21.consistencyLevel(writeConsistencyLevel57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel60 = deleteRequest59.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel61 = deleteRequest59.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest58.consistencyLevel(writeConsistencyLevel61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest5.consistencyLevel(writeConsistencyLevel61);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 100L + "'", long13 == 100L);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel34 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel34.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(task43);
        org.junit.Assert.assertTrue("'" + refreshPolicy44 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy44.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(timeValue46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel54 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel54.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel57 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel57.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel60 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel60.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel61 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel61.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest63);
    }

    @Test
    public void test7691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7691");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId20 = null;
        org.elasticsearch.tasks.Task task21 = deleteRequest16.createTask(0L, "", "", taskId20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest16.setRefreshPolicy("");
        deleteRequest23.primaryTerm(1L);
        java.lang.String str26 = deleteRequest23.routing();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy27 = deleteRequest23.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest3.setRefreshPolicy(refreshPolicy27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.type("delete {[null][delete {[null][null][null]}][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest34.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest34.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest34.type("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest34.type("delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long45 = deleteRequest44.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest44.index("");
        boolean boolean48 = deleteRequest44.getShouldPersistResult();
        deleteRequest44.primaryTerm((long) 0);
        org.elasticsearch.common.unit.TimeValue timeValue51 = deleteRequest44.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest42.timeout(timeValue51);
        org.elasticsearch.common.transport.TransportAddress transportAddress53 = null;
        deleteRequest42.remoteAddress(transportAddress53);
        org.elasticsearch.common.unit.TimeValue timeValue55 = deleteRequest42.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest30.timeout(timeValue55);
        org.elasticsearch.common.transport.TransportAddress transportAddress57 = deleteRequest30.remoteAddress();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][][]}" + "'", str12, "delete {[][][]}");
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + refreshPolicy27 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy27.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 0L + "'", long45 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(timeValue51);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(timeValue55);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNull(transportAddress57);
    }

    @Test
    public void test7692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7692");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.routing("delete {[][][hi!]}");
        java.lang.String str13 = deleteRequest12.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.id("delete {[hi!][null][null]}");
        boolean boolean16 = deleteRequest15.getShouldPersistResult();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test7693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7693");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.type("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId12 = null;
        org.elasticsearch.tasks.Task task13 = deleteRequest8.createTask(0L, "", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest8.setRefreshPolicy("");
        java.lang.String str16 = deleteRequest15.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long19 = deleteRequest18.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str21 = deleteRequest20.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue24 = deleteRequest23.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest20.timeout(timeValue24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId28 = deleteRequest27.getParentTask();
        deleteRequest18.setParentTask(taskId28);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel30 = deleteRequest18.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest15.consistencyLevel(writeConsistencyLevel30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest2.consistencyLevel(writeConsistencyLevel30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.index("delete {[delete {[][null][null]}][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress35 = null;
        deleteRequest32.remoteAddress(transportAddress35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest32.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[][][]}" + "'", str16, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(timeValue24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(taskId28);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel30 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel30.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest38);
    }

    @Test
    public void test7694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7694");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str7 = deleteRequest6.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest6.getParentTask();
        deleteRequest3.setParentTask(taskId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str13 = deleteRequest12.parent();
        deleteRequest12.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.type("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.version((long) '#');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel24 = deleteRequest22.consistencyLevel();
        deleteRequest22.setParentTask("delete {[delete {[][][hi!]}][null][null]}", (long) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId35 = null;
        org.elasticsearch.tasks.Task task36 = deleteRequest31.createTask(0L, "", "", taskId35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest31.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType39 = deleteRequest31.versionType();
        java.lang.String str40 = deleteRequest31.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress41 = deleteRequest31.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy42 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest31.setRefreshPolicy(refreshPolicy42);
        long long44 = deleteRequest31.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue45 = deleteRequest31.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest22.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest21.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest3.timeout(timeValue45);
        long long49 = deleteRequest48.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest48.parent("delete {[hi!][][delete {[][][]}]}");
        java.lang.String str52 = deleteRequest51.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException53 = deleteRequest51.validate();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel24 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel24.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(task36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(versionType39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(transportAddress41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertNotNull(timeValue45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 0L + "'", long49 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "delete {[][][]}" + "'", str52, "delete {[][][]}");
        org.junit.Assert.assertNull(actionRequestValidationException53);
    }

    @Test
    public void test7695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7695");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest1.setParentTask("hi!", (long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest1.routing("delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}");
        java.lang.String[] strArray7 = deleteRequest1.indices();
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(strArray7);
    }

    @Test
    public void test7696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7696");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[][null][null]}][delete {[][][]}]}", "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][][hi!]}", "delete {[hi!][][delete {[][][]}]}");
        java.lang.String[] strArray4 = deleteRequest3.indices();
        org.junit.Assert.assertNotNull(strArray4);
    }

    @Test
    public void test7697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7697");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.consistencyLevel(writeConsistencyLevel23);
        java.lang.String str25 = deleteRequest24.getDescription();
        java.lang.String str26 = deleteRequest24.routing();
        java.lang.String str27 = deleteRequest24.parent();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[][][]}" + "'", str25, "delete {[][][]}");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
    }

    @Test
    public void test7698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7698");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.type("delete {[hi!][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest2.consistencyLevel();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest2.setShardId(shardId6);
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest2.timeout();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest2.setShardId(shardId9);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest2.version((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest2.version((long) (byte) 10);
        java.lang.String str15 = deleteRequest2.parent();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[][][]}" + "'", str15, "delete {[][][]}");
    }

    @Test
    public void test7699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7699");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.version((long) 10);
        deleteRequest3.setParentTask("delete {[][delete {[null][null][null]}][]}", (long) (short) 1);
        org.elasticsearch.action.support.IndicesOptions indicesOptions7 = deleteRequest3.indicesOptions();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(indicesOptions7);
    }

    @Test
    public void test7700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7700");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][hi!]}][null][null]}", "delete {[][][]}", "");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel4 = deleteRequest3.consistencyLevel();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.type("delete {[hi!][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue12 = deleteRequest9.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest6.timeout(timeValue12);
        java.lang.String str14 = deleteRequest6.index();
        long long15 = deleteRequest6.version();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy16 = deleteRequest6.getRefreshPolicy();
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel4 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel4.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(timeValue12);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str14, "delete {[delete {[][][hi!]}][null][null]}");
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-3L) + "'", long15 == (-3L));
        org.junit.Assert.assertTrue("'" + refreshPolicy16 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy16.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
    }

    @Test
    public void test7701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7701");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = deleteRequest3.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.setShardId(shardId6);
        java.lang.String str8 = deleteRequest3.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.version(100L);
        java.lang.String str11 = deleteRequest3.id();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(transportAddress5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test7702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7702");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str7 = deleteRequest6.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest6.getParentTask();
        deleteRequest3.setParentTask(taskId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.consistencyLevel(writeConsistencyLevel14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.type("delete {[delete {[][][hi!]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest17.routing("delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest17.type("delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest17.index("delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}");
        java.lang.String[] strArray26 = deleteRequest25.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str28 = deleteRequest27.parent();
        org.elasticsearch.index.VersionType versionType29 = deleteRequest27.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest27.version((long) 'a');
        org.elasticsearch.index.shard.ShardId shardId32 = deleteRequest31.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest31.type("delete {[][][hi!]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy35 = deleteRequest31.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest25.setRefreshPolicy(refreshPolicy35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress41 = deleteRequest40.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId49 = null;
        org.elasticsearch.tasks.Task task50 = deleteRequest45.createTask(0L, "", "", taskId49);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy51 = deleteRequest45.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest40.setRefreshPolicy(refreshPolicy51);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}", "delete {[delete {[hi!][null][null]}][null][null]}", "delete {[null][null][null]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy57 = deleteRequest56.getRefreshPolicy();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy58 = deleteRequest56.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest52.setRefreshPolicy(refreshPolicy58);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest25.setRefreshPolicy(refreshPolicy58);
        java.lang.String str61 = deleteRequest60.parent();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(versionType29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNull(shardId32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + refreshPolicy35 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy35.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNull(transportAddress41);
        org.junit.Assert.assertNotNull(task50);
        org.junit.Assert.assertTrue("'" + refreshPolicy51 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy51.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertTrue("'" + refreshPolicy57 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy57.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertTrue("'" + refreshPolicy58 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy58.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNull(str61);
    }

    @Test
    public void test7703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7703");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.type("delete {[null][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = deleteRequest3.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.version((long) '4');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId16 = null;
        org.elasticsearch.tasks.Task task17 = deleteRequest12.createTask(0L, "", "", taskId16);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel18 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress23 = deleteRequest22.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId31 = null;
        org.elasticsearch.tasks.Task task32 = deleteRequest27.createTask(0L, "", "", taskId31);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy33 = deleteRequest27.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest22.setRefreshPolicy(refreshPolicy33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest12.setRefreshPolicy(refreshPolicy33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest6.setRefreshPolicy(refreshPolicy33);
        org.elasticsearch.index.shard.ShardId shardId37 = deleteRequest36.shardId();
        long long38 = deleteRequest36.version();
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest36.setShardId(shardId39);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(transportAddress4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(task17);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel18 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel18.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(transportAddress23);
        org.junit.Assert.assertNotNull(task32);
        org.junit.Assert.assertTrue("'" + refreshPolicy33 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy33.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNull(shardId37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 52L + "'", long38 == 52L);
        org.junit.Assert.assertNotNull(deleteRequest40);
    }

    @Test
    public void test7704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7704");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        deleteRequest0.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.version(10L);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel8 = deleteRequest7.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions9 = deleteRequest7.indicesOptions();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest7.setShardId(shardId10);
        org.elasticsearch.index.shard.IndexShard indexShard12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete13 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest11, indexShard12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel8 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel8.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions9);
        org.junit.Assert.assertNotNull(deleteRequest11);
    }

    @Test
    public void test7705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7705");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.consistencyLevel(writeConsistencyLevel23);
        deleteRequest24.setParentTask("hi!", (long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest24.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest24.routing("hi!");
        long long32 = deleteRequest31.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str37 = deleteRequest36.id();
        org.elasticsearch.common.transport.TransportAddress transportAddress38 = deleteRequest36.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest36.setShardId(shardId39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest44.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType47 = deleteRequest46.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest40.versionType(versionType47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest31.versionType(versionType47);
        org.elasticsearch.index.shard.ShardId shardId50 = deleteRequest49.shardId();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(transportAddress38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(versionType47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNull(shardId50);
    }

    @Test
    public void test7706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7706");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.version((long) (-1));
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy6 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.type("delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.common.unit.TimeValue timeValue9 = deleteRequest8.timeout();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertTrue("'" + refreshPolicy6 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy6.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(timeValue9);
    }

    @Test
    public void test7707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7707");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType16 = deleteRequest15.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress21 = deleteRequest20.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId29 = null;
        org.elasticsearch.tasks.Task task30 = deleteRequest25.createTask(0L, "", "", taskId29);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy31 = deleteRequest25.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest20.setRefreshPolicy(refreshPolicy31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest15.setRefreshPolicy(refreshPolicy31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest9.setRefreshPolicy(refreshPolicy31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str39 = deleteRequest38.id();
        java.lang.String str40 = deleteRequest38.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str42 = deleteRequest41.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest41.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId45 = deleteRequest41.getParentTask();
        deleteRequest38.setParentTask(taskId45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str48 = deleteRequest47.parent();
        deleteRequest47.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest47.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest52.type("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest54.version((long) '#');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel58 = deleteRequest57.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel59 = deleteRequest57.consistencyLevel();
        deleteRequest57.setParentTask("delete {[delete {[][][hi!]}][null][null]}", (long) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId70 = null;
        org.elasticsearch.tasks.Task task71 = deleteRequest66.createTask(0L, "", "", taskId70);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest66.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType74 = deleteRequest66.versionType();
        java.lang.String str75 = deleteRequest66.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress76 = deleteRequest66.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy77 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = deleteRequest66.setRefreshPolicy(refreshPolicy77);
        long long79 = deleteRequest66.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue80 = deleteRequest66.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = deleteRequest57.timeout(timeValue80);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest82 = deleteRequest56.timeout(timeValue80);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest83 = deleteRequest38.timeout(timeValue80);
        org.elasticsearch.index.VersionType versionType84 = deleteRequest38.versionType();
        org.elasticsearch.index.VersionType versionType85 = deleteRequest38.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest86 = deleteRequest9.versionType(versionType85);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest88 = deleteRequest86.type("");
        java.lang.String str89 = deleteRequest86.type();
        long long90 = deleteRequest86.version();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(versionType16);
        org.junit.Assert.assertNull(transportAddress21);
        org.junit.Assert.assertNotNull(task30);
        org.junit.Assert.assertTrue("'" + refreshPolicy31 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy31.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(taskId45);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel58 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel58.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel59 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel59.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(task71);
        org.junit.Assert.assertNotNull(deleteRequest73);
        org.junit.Assert.assertNotNull(versionType74);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNull(transportAddress76);
        org.junit.Assert.assertNotNull(deleteRequest78);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 0L + "'", long79 == 0L);
        org.junit.Assert.assertNotNull(timeValue80);
        org.junit.Assert.assertNotNull(deleteRequest81);
        org.junit.Assert.assertNotNull(deleteRequest82);
        org.junit.Assert.assertNotNull(deleteRequest83);
        org.junit.Assert.assertNotNull(versionType84);
        org.junit.Assert.assertNotNull(versionType85);
        org.junit.Assert.assertNotNull(deleteRequest86);
        org.junit.Assert.assertNotNull(deleteRequest88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "" + "'", str89, "");
        org.junit.Assert.assertTrue("'" + long90 + "' != '" + (-3L) + "'", long90 == (-3L));
    }

    @Test
    public void test7708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7708");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest5.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest5.timeout(timeValue10);
        java.lang.String str12 = deleteRequest5.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException13 = deleteRequest5.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure15 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][null][null]}", (java.lang.Throwable) actionRequestValidationException13, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure17 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "hi!", (java.lang.Throwable) actionRequestValidationException13, "");
        java.lang.String str18 = shardFailure17.indexUUID;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting19 = shardFailure17.routing;
        java.lang.String str20 = shardFailure17.reason;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting21 = shardFailure17.routing;
        java.lang.String str22 = shardFailure17.indexUUID;
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][null][null]}" + "'", str12, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException13);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNull(shardRouting19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNull(shardRouting21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
    }

    @Test
    public void test7709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7709");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest10.toString();
        java.lang.String[] strArray12 = deleteRequest10.indices();
        deleteRequest10.primaryTerm(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest10.routing("delete {[null][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.setShardId(shardId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.type("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId35 = null;
        org.elasticsearch.tasks.Task task36 = deleteRequest31.createTask(0L, "", "", taskId35);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy37 = deleteRequest31.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId45 = null;
        org.elasticsearch.tasks.Task task46 = deleteRequest41.createTask(0L, "", "", taskId45);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy47 = deleteRequest41.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest31.setRefreshPolicy(refreshPolicy47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest27.setRefreshPolicy(refreshPolicy47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest27.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        deleteRequest51.setParentTask("delete {[][][hi!]}", (long) (byte) 100);
        org.elasticsearch.common.transport.TransportAddress transportAddress55 = null;
        deleteRequest51.remoteAddress(transportAddress55);
        org.elasticsearch.index.VersionType versionType57 = deleteRequest51.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest22.versionType(versionType57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest18.versionType(versionType57);
        org.elasticsearch.index.shard.ShardId shardId60 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest18.setShardId(shardId60);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel62 = deleteRequest18.consistencyLevel();
        java.lang.String str63 = deleteRequest18.toString();
        org.elasticsearch.tasks.TaskId taskId64 = deleteRequest18.getParentTask();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(task36);
        org.junit.Assert.assertTrue("'" + refreshPolicy37 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy37.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task46);
        org.junit.Assert.assertTrue("'" + refreshPolicy47 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy47.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(versionType57);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel62 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel62.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "delete {[][][]}" + "'", str63, "delete {[][][]}");
        org.junit.Assert.assertNotNull(taskId64);
    }

    @Test
    public void test7710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7710");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException2 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest4.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue9 = deleteRequest8.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest4.timeout(timeValue9);
        java.lang.String str11 = deleteRequest4.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str19 = deleteRequest18.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.type("delete {[][][]}");
        java.lang.String str26 = deleteRequest23.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest23.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId36 = null;
        org.elasticsearch.tasks.Task task37 = deleteRequest32.createTask(0L, "", "", taskId36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest32.setRefreshPolicy("");
        java.lang.String str40 = deleteRequest39.toString();
        java.lang.String[] strArray41 = deleteRequest39.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest39.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str52 = deleteRequest51.id();
        java.lang.String str53 = deleteRequest51.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str55 = deleteRequest54.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest54.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId58 = deleteRequest54.getParentTask();
        deleteRequest51.setParentTask(taskId58);
        deleteRequest47.setParentTask(taskId58);
        deleteRequest43.setParentTask(taskId58);
        deleteRequest28.setParentTask(taskId58);
        deleteRequest18.setParentTask(taskId58);
        org.elasticsearch.tasks.Task task64 = deleteRequest4.createTask((long) 100, "delete {[][][hi!]}", "hi!", taskId58);
        deleteRequest0.setParentTask(taskId58);
        org.elasticsearch.index.shard.ShardId shardId66 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest0.setShardId(shardId66);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest67.index("delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}");
        java.lang.String str70 = deleteRequest69.type();
        java.lang.String str71 = deleteRequest69.type();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel72 = deleteRequest69.consistencyLevel();
        org.elasticsearch.tasks.TaskId taskId73 = deleteRequest69.getParentTask();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "delete {[null][null][null]}" + "'", str1, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException2);
        org.junit.Assert.assertNotNull(timeValue9);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "delete {[][][]}" + "'", str26, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(task37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "delete {[][][]}" + "'", str40, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(taskId58);
        org.junit.Assert.assertNotNull(task64);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel72 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel72.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(taskId73);
    }

    @Test
    public void test7711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7711");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        deleteRequest0.setParentTask("delete {[][][hi!]}", (long) '#');
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest0.validate();
        long long6 = deleteRequest0.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest0.routing("delete {[delete {[][][]}][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest0.setShardId(shardId9);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.version((long) (byte) -1);
        deleteRequest10.setParentTask("delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[][delete {[][null][null]}][delete {[][][]}]}]}", 52L);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
    }

    @Test
    public void test7712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7712");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType16 = deleteRequest15.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress21 = deleteRequest20.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId29 = null;
        org.elasticsearch.tasks.Task task30 = deleteRequest25.createTask(0L, "", "", taskId29);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy31 = deleteRequest25.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest20.setRefreshPolicy(refreshPolicy31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest15.setRefreshPolicy(refreshPolicy31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest9.setRefreshPolicy(refreshPolicy31);
        org.elasticsearch.index.shard.ShardId shardId35 = deleteRequest9.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str40 = deleteRequest39.id();
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest39.setShardId(shardId41);
        java.lang.String str43 = deleteRequest39.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue46 = deleteRequest45.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress47 = null;
        deleteRequest45.remoteAddress(transportAddress47);
        java.lang.String str49 = deleteRequest45.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest45.parent("delete {[hi!][null][null]}");
        org.elasticsearch.tasks.TaskId taskId52 = deleteRequest51.getParentTask();
        deleteRequest39.setParentTask(taskId52);
        deleteRequest9.setParentTask(taskId52);
        org.elasticsearch.action.support.IndicesOptions indicesOptions55 = deleteRequest9.indicesOptions();
        java.lang.String str56 = deleteRequest9.id();
        deleteRequest9.primaryTerm(0L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(versionType16);
        org.junit.Assert.assertNull(transportAddress21);
        org.junit.Assert.assertNotNull(task30);
        org.junit.Assert.assertTrue("'" + refreshPolicy31 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy31.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNull(shardId35);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(timeValue46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "delete {[null][null][null]}" + "'", str49, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(taskId52);
        org.junit.Assert.assertNotNull(indicesOptions55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
    }

    @Test
    public void test7713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7713");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.setRefreshPolicy(refreshPolicy14);
        org.elasticsearch.action.support.IndicesOptions indicesOptions16 = deleteRequest3.indicesOptions();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException17 = deleteRequest3.validate();
        java.lang.String[] strArray18 = deleteRequest3.indices();
        java.lang.String str19 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str21 = deleteRequest20.parent();
        deleteRequest20.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest20.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.type("delete {[null][null][null]}");
        org.elasticsearch.index.VersionType versionType28 = deleteRequest27.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.versionType(versionType28);
        org.elasticsearch.common.transport.TransportAddress transportAddress30 = null;
        deleteRequest29.remoteAddress(transportAddress30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId39 = null;
        org.elasticsearch.tasks.Task task40 = deleteRequest35.createTask(0L, "", "", taskId39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest35.setRefreshPolicy("");
        java.lang.String[] strArray43 = deleteRequest42.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId51 = null;
        org.elasticsearch.tasks.Task task52 = deleteRequest47.createTask(0L, "", "", taskId51);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest47.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel55 = deleteRequest54.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest42.consistencyLevel(writeConsistencyLevel55);
        deleteRequest56.setParentTask("hi!", (long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest56.routing("hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress62 = null;
        deleteRequest61.remoteAddress(transportAddress62);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy64 = deleteRequest61.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest29.setRefreshPolicy(refreshPolicy64);
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(transportAddress13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(indicesOptions16);
        org.junit.Assert.assertNull(actionRequestValidationException17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(task40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(task52);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel55 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel55.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertTrue("'" + refreshPolicy64 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy64.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(deleteRequest65);
    }

    @Test
    public void test7714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7714");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}][]}", "delete {[delete {[][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][][]}]}][delete {[][][hi!]}][delete {[][][]}]}", "delete {[][delete {[][][hi!]}][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}]}");
        deleteRequest3.setParentTask("delete {[delete {[][][hi!]}][null][delete {[delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][null][null]}]}", (long) (short) 1);
    }

    @Test
    public void test7715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7715");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = deleteRequest3.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.setShardId(shardId6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType14 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest7.versionType(versionType14);
        java.lang.String str16 = deleteRequest7.id();
        org.elasticsearch.index.VersionType versionType17 = deleteRequest7.versionType();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(transportAddress5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(versionType17);
    }

    @Test
    public void test7716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7716");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}][delete {[][delete {[null][null][null]}][delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}]}][delete {[delete {[hi!][null][null]}][null][null]}]}", "delete {[hi!][null][null]}", "");
    }

    @Test
    public void test7717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7717");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}", "delete {[delete {[][null][null]}][null][null]}", "delete {[delete {[hi!][null][null]}][null][null]}");
        long long4 = deleteRequest3.primaryTerm();
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = null;
        deleteRequest3.remoteAddress(transportAddress5);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    }

    @Test
    public void test7718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7718");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][hi!]}][null][null]}", "delete {[][][]}", "");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel4 = deleteRequest3.consistencyLevel();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId14 = null;
        org.elasticsearch.tasks.Task task15 = deleteRequest10.createTask(0L, "", "", taskId14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest10.setRefreshPolicy("");
        java.lang.String[] strArray18 = deleteRequest17.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId26 = null;
        org.elasticsearch.tasks.Task task27 = deleteRequest22.createTask(0L, "", "", taskId26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel30 = deleteRequest29.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest17.consistencyLevel(writeConsistencyLevel30);
        deleteRequest31.setParentTask("hi!", (long) (short) 100);
        java.lang.String str35 = deleteRequest31.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest39.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType42 = deleteRequest41.versionType();
        java.lang.String str43 = deleteRequest41.index();
        org.elasticsearch.common.unit.TimeValue timeValue44 = deleteRequest41.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest31.timeout(timeValue44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest3.timeout(timeValue44);
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest3.setShardId(shardId47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest50.setParentTask("hi!", (long) (short) 1);
        java.lang.String[] strArray54 = deleteRequest50.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest56.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue61 = deleteRequest60.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest56.timeout(timeValue61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest50.timeout(timeValue61);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel64 = deleteRequest50.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest3.consistencyLevel(writeConsistencyLevel64);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long68 = deleteRequest67.primaryTerm();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy69 = deleteRequest67.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest65.setRefreshPolicy(refreshPolicy69);
        java.lang.String[] strArray71 = deleteRequest70.indices();
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel4 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel4.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(task15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(task27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel30 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel30.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(versionType42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(timeValue44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(timeValue61);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel64 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel64.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 0L + "'", long68 == 0L);
        org.junit.Assert.assertTrue("'" + refreshPolicy69 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy69.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNotNull(strArray71);
    }

    @Test
    public void test7719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7719");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId14 = null;
        org.elasticsearch.tasks.Task task15 = deleteRequest10.createTask(0L, "", "", taskId14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest10.setRefreshPolicy("");
        java.lang.String str18 = deleteRequest17.toString();
        java.lang.String[] strArray19 = deleteRequest17.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest17.index("");
        org.elasticsearch.common.unit.TimeValue timeValue22 = deleteRequest21.timeout();
        org.elasticsearch.index.VersionType versionType23 = deleteRequest21.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest3.versionType(versionType23);
        org.elasticsearch.action.support.IndicesOptions indicesOptions25 = deleteRequest24.indicesOptions();
        java.lang.String str26 = deleteRequest24.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str31 = deleteRequest30.id();
        java.lang.String str32 = deleteRequest30.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest30.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long37 = deleteRequest36.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue38 = deleteRequest36.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest34.timeout(timeValue38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest24.timeout(timeValue38);
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest40.setShardId(shardId41);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(task15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[][][]}" + "'", str18, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(timeValue22);
        org.junit.Assert.assertNotNull(versionType23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(indicesOptions25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertNotNull(timeValue38);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest42);
    }

    @Test
    public void test7720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7720");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        java.lang.String str12 = deleteRequest10.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = deleteRequest10.remoteAddress();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(transportAddress13);
    }

    @Test
    public void test7721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7721");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId2 = deleteRequest1.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId10 = null;
        org.elasticsearch.tasks.Task task11 = deleteRequest6.createTask(0L, "", "", taskId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest6.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest13.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions15 = deleteRequest13.indicesOptions();
        java.lang.String str16 = deleteRequest13.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str18 = deleteRequest17.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest17.version((long) (short) 100);
        deleteRequest17.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str24 = deleteRequest23.parent();
        org.elasticsearch.index.VersionType versionType25 = deleteRequest23.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest17.versionType(versionType25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest13.versionType(versionType25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest1.versionType(versionType25);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy29 = deleteRequest1.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest1.parent("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest1.type("delete {[delete {[][][hi!]}][delete {[null][null][null]}][]}");
        java.lang.String str34 = deleteRequest33.id();
        org.junit.Assert.assertNull(shardId2);
        org.junit.Assert.assertNotNull(task11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[][][]}" + "'", str16, "delete {[][][]}");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(versionType25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertTrue("'" + refreshPolicy29 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy29.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNull(str34);
    }

    @Test
    public void test7722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7722");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy9 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId17 = null;
        org.elasticsearch.tasks.Task task18 = deleteRequest13.createTask(0L, "", "", taskId17);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy19 = deleteRequest13.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest3.setRefreshPolicy(refreshPolicy19);
        java.lang.String str21 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest3.id("hi!");
        deleteRequest23.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest23.index("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        java.lang.String str28 = deleteRequest23.toString();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertTrue("'" + refreshPolicy9 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy9.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertTrue("'" + refreshPolicy19 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy19.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[][][]}" + "'", str21, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][][hi!]}" + "'", str28, "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][][hi!]}");
    }

    @Test
    public void test7723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7723");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str9 = deleteRequest8.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException10 = deleteRequest8.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure12 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "hi!", (java.lang.Throwable) actionRequestValidationException10, "delete {[][][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure14 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "", (java.lang.Throwable) actionRequestValidationException10, "delete {[][][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure16 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][delete {[][][]}][delete {[][][]}]}", (java.lang.Throwable) actionRequestValidationException10, "");
        java.lang.Throwable throwable17 = shardFailure16.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure19 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][null][null]}", throwable17, "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        java.lang.String str20 = shardFailure19.indexUUID;
        java.lang.String str21 = shardFailure19.reason;
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[null][null][null]}" + "'", str9, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException10);
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable17.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}" + "'", str20, "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[][null][null]}" + "'", str21, "delete {[][null][null]}");
    }

    @Test
    public void test7724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7724");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        java.lang.String str4 = deleteRequest2.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest2.version((long) (short) 100);
        deleteRequest2.primaryTerm((long) (-1));
        org.elasticsearch.common.unit.TimeValue timeValue9 = deleteRequest2.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress10 = deleteRequest2.remoteAddress();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(timeValue9);
        org.junit.Assert.assertNull(transportAddress10);
    }

    @Test
    public void test7725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7725");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel1 = deleteRequest0.consistencyLevel();
        java.lang.String str2 = deleteRequest0.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.index("hi!");
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.setShardId(shardId5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.setShardId(shardId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.routing("delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.routing("delete {[][delete {[delete {[][][hi!]}][null][null]}][]}");
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.setShardId(shardId13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str25 = deleteRequest24.id();
        java.lang.String str26 = deleteRequest24.index();
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest24.getParentTask();
        org.elasticsearch.tasks.Task task28 = deleteRequest15.createTask((-1L), "delete {[][][hi!]}", "delete {[][delete {[][][]}][delete {[][][]}]}", taskId27);
        deleteRequest15.setParentTask("delete {[delete {[][][hi!]}][null][null]}", (long) 10);
        java.lang.String str32 = deleteRequest15.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest15.index("delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.elasticsearch.common.unit.TimeValue timeValue35 = deleteRequest15.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest14.timeout(timeValue35);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel1 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel1.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(taskId27);
        org.junit.Assert.assertNotNull(task28);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[null][null][null]}" + "'", str32, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(timeValue35);
        org.junit.Assert.assertNotNull(deleteRequest36);
    }

    @Test
    public void test7726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7726");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.setRefreshPolicy(refreshPolicy14);
        long long16 = deleteRequest3.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest19.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue24 = deleteRequest23.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest19.timeout(timeValue24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str27 = deleteRequest26.parent();
        org.elasticsearch.index.VersionType versionType28 = deleteRequest26.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest19.versionType(versionType28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest3.versionType(versionType28);
        org.elasticsearch.common.unit.TimeValue timeValue31 = deleteRequest30.timeout();
        long long32 = deleteRequest30.primaryTerm();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(transportAddress13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(timeValue24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(timeValue31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
    }

    @Test
    public void test7727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7727");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.common.unit.TimeValue timeValue5 = deleteRequest3.timeout();
        java.lang.String str6 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str11 = deleteRequest10.getDescription();
        org.elasticsearch.index.VersionType versionType12 = deleteRequest10.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.versionType(versionType12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.version((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.type("delete {[][][]}");
        java.lang.String str25 = deleteRequest22.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest22.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.parent("delete {[][][]}");
        java.lang.String str30 = deleteRequest27.type();
        org.elasticsearch.tasks.TaskId taskId31 = deleteRequest27.getParentTask();
        org.elasticsearch.tasks.Task task32 = deleteRequest15.createTask((long) 'a', "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}", "delete {[null][null][null]}", taskId31);
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest15.setShardId(shardId33);
        org.elasticsearch.tasks.TaskId taskId35 = deleteRequest34.getParentTask();
        long long36 = deleteRequest34.primaryTerm();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[][][]}" + "'", str25, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "delete {[][][]}" + "'", str30, "delete {[][][]}");
        org.junit.Assert.assertNotNull(taskId31);
        org.junit.Assert.assertNotNull(task32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(taskId35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
    }

    @Test
    public void test7728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7728");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("delete {[][][]}");
        java.lang.String str10 = deleteRequest7.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId22 = null;
        org.elasticsearch.tasks.Task task23 = deleteRequest18.createTask(0L, "", "", taskId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest18.setRefreshPolicy("");
        java.lang.String[] strArray26 = deleteRequest25.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId34 = null;
        org.elasticsearch.tasks.Task task35 = deleteRequest30.createTask(0L, "", "", taskId34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest30.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = deleteRequest37.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest25.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue42 = deleteRequest41.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress43 = null;
        deleteRequest41.remoteAddress(transportAddress43);
        org.elasticsearch.common.unit.TimeValue timeValue45 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest41.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest25.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest14.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest3.timeout(timeValue45);
        org.elasticsearch.common.transport.TransportAddress transportAddress50 = deleteRequest49.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest49.index("delete {[][delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[][][]}]}][delete {[null][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard indexShard53 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult54 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest52, indexShard53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][][]}" + "'", str10, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(task35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel38 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel38.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(timeValue42);
        org.junit.Assert.assertNotNull(timeValue45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNull(transportAddress50);
        org.junit.Assert.assertNotNull(deleteRequest52);
    }

    @Test
    public void test7729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7729");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.consistencyLevel(writeConsistencyLevel23);
        deleteRequest24.setParentTask("hi!", (long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest24.routing("hi!");
        org.elasticsearch.index.VersionType versionType30 = deleteRequest29.versionType();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(versionType30);
    }

    @Test
    public void test7730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7730");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.type("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.index.shard.ShardId shardId10 = deleteRequest9.shardId();
        long long11 = deleteRequest9.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest9.routing("delete {[][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.routing("delete {[][][delete {[delete {[][null][null]}][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.parent("delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str22 = deleteRequest21.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.id("hi!");
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest24.getParentTask();
        org.elasticsearch.tasks.TaskId taskId26 = deleteRequest24.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest24.routing("delete {[delete {[hi!][null][null]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId36 = null;
        org.elasticsearch.tasks.Task task37 = deleteRequest32.createTask(0L, "", "", taskId36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest32.setRefreshPolicy("");
        java.lang.String str40 = deleteRequest39.toString();
        java.lang.String[] strArray41 = deleteRequest39.indices();
        deleteRequest39.primaryTerm(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest39.routing("delete {[null][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId46 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest45.setShardId(shardId46);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest52.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest54.type("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId64 = null;
        org.elasticsearch.tasks.Task task65 = deleteRequest60.createTask(0L, "", "", taskId64);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy66 = deleteRequest60.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId74 = null;
        org.elasticsearch.tasks.Task task75 = deleteRequest70.createTask(0L, "", "", taskId74);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy76 = deleteRequest70.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest60.setRefreshPolicy(refreshPolicy76);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = deleteRequest56.setRefreshPolicy(refreshPolicy76);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = deleteRequest56.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        deleteRequest80.setParentTask("delete {[][][hi!]}", (long) (byte) 100);
        org.elasticsearch.common.transport.TransportAddress transportAddress84 = null;
        deleteRequest80.remoteAddress(transportAddress84);
        org.elasticsearch.index.VersionType versionType86 = deleteRequest80.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = deleteRequest51.versionType(versionType86);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest88 = deleteRequest47.versionType(versionType86);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest89 = deleteRequest24.versionType(versionType86);
        org.elasticsearch.common.unit.TimeValue timeValue90 = deleteRequest24.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest91 = deleteRequest15.timeout(timeValue90);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNull(shardId10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-3L) + "'", long11 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(taskId26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(task37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "delete {[][][]}" + "'", str40, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(task65);
        org.junit.Assert.assertTrue("'" + refreshPolicy66 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy66.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task75);
        org.junit.Assert.assertTrue("'" + refreshPolicy76 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy76.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertNotNull(deleteRequest78);
        org.junit.Assert.assertNotNull(deleteRequest80);
        org.junit.Assert.assertNotNull(versionType86);
        org.junit.Assert.assertNotNull(deleteRequest87);
        org.junit.Assert.assertNotNull(deleteRequest88);
        org.junit.Assert.assertNotNull(deleteRequest89);
        org.junit.Assert.assertNotNull(timeValue90);
        org.junit.Assert.assertNotNull(deleteRequest91);
    }

    @Test
    public void test7731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7731");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version((long) (short) 100);
        java.lang.String str4 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long7 = deleteRequest6.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.index("");
        boolean boolean10 = deleteRequest6.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest6.version((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest6.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.timeout(timeValue13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str16 = deleteRequest15.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.type("delete {[][][]}");
        java.lang.String str25 = deleteRequest22.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest22.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId37 = null;
        org.elasticsearch.tasks.Task task38 = deleteRequest33.createTask(0L, "", "", taskId37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest33.setRefreshPolicy("");
        java.lang.String[] strArray41 = deleteRequest40.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId49 = null;
        org.elasticsearch.tasks.Task task50 = deleteRequest45.createTask(0L, "", "", taskId49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest45.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel53 = deleteRequest52.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest40.consistencyLevel(writeConsistencyLevel53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue57 = deleteRequest56.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress58 = null;
        deleteRequest56.remoteAddress(transportAddress58);
        org.elasticsearch.common.unit.TimeValue timeValue60 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest56.timeout(timeValue60);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest40.timeout(timeValue60);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest29.timeout(timeValue60);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest18.timeout(timeValue60);
        org.elasticsearch.index.VersionType versionType65 = deleteRequest64.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest3.versionType(versionType65);
        java.lang.String str67 = deleteRequest66.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[][][]}" + "'", str25, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(task38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(task50);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel53 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel53.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(timeValue57);
        org.junit.Assert.assertNotNull(timeValue60);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(versionType65);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "delete {[null][null][null]}" + "'", str67, "delete {[null][null][null]}");
    }

    @Test
    public void test7732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7732");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        java.lang.String str9 = deleteRequest8.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId17 = null;
        org.elasticsearch.tasks.Task task18 = deleteRequest13.createTask(0L, "", "", taskId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest13.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType21 = deleteRequest13.versionType();
        java.lang.String str22 = deleteRequest13.parent();
        org.elasticsearch.index.shard.ShardId shardId23 = deleteRequest13.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel24 = deleteRequest13.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest8.consistencyLevel(writeConsistencyLevel24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.parent("delete {[][delete {[][][]}][delete {[delete {[hi!][null][null]}][null][delete {[][][hi!]}]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest25.routing("delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId40 = null;
        org.elasticsearch.tasks.Task task41 = deleteRequest36.createTask(0L, "", "", taskId40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest36.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel44 = deleteRequest43.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions45 = deleteRequest43.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId46 = null;
        deleteRequest43.setParentTask(taskId46);
        deleteRequest43.primaryTerm((long) (-1));
        org.elasticsearch.action.support.IndicesOptions indicesOptions50 = deleteRequest43.indicesOptions();
        deleteRequest43.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}", "delete {[][][hi!]}", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str67 = deleteRequest66.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest66.id("hi!");
        org.elasticsearch.tasks.TaskId taskId70 = deleteRequest69.getParentTask();
        org.elasticsearch.tasks.TaskId taskId71 = deleteRequest69.getParentTask();
        org.elasticsearch.tasks.Task task72 = deleteRequest59.createTask((-1L), "", "hi!", taskId71);
        org.elasticsearch.tasks.Task task73 = deleteRequest43.createTask(0L, "delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}", "delete {[][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][delete {[][][]}]}", taskId71);
        org.elasticsearch.tasks.Task task74 = deleteRequest25.createTask(97L, "delete {[delete {[][null][null]}][null][null]}", "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}", taskId71);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(versionType21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(shardId23);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel24 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel24.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(task41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel44 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel44.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions45);
        org.junit.Assert.assertNotNull(indicesOptions50);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(taskId70);
        org.junit.Assert.assertNotNull(taskId71);
        org.junit.Assert.assertNotNull(task72);
        org.junit.Assert.assertNotNull(task73);
        org.junit.Assert.assertNotNull(task74);
    }

    @Test
    public void test7733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7733");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.setShardId(shardId2);
        long long4 = deleteRequest3.primaryTerm();
        org.elasticsearch.index.VersionType versionType5 = deleteRequest3.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.consistencyLevel(writeConsistencyLevel6);
        java.lang.String str8 = deleteRequest3.getDescription();
        boolean boolean9 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str14 = deleteRequest13.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest13.id("hi!");
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest16.getParentTask();
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest16.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest16.version((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress25 = deleteRequest24.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId33 = null;
        org.elasticsearch.tasks.Task task34 = deleteRequest29.createTask(0L, "", "", taskId33);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy35 = deleteRequest29.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest24.setRefreshPolicy(refreshPolicy35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest24.id("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest24.id("delete {[][][]}");
        org.elasticsearch.index.VersionType versionType41 = deleteRequest24.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest16.versionType(versionType41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest3.versionType(versionType41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest3.version((long) '#');
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(versionType5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[hi!][null][null]}" + "'", str8, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNull(transportAddress25);
        org.junit.Assert.assertNotNull(task34);
        org.junit.Assert.assertTrue("'" + refreshPolicy35 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy35.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(versionType41);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest45);
    }

    @Test
    public void test7734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7734");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest10.indicesOptions();
        java.lang.String str13 = deleteRequest10.toString();
        deleteRequest10.primaryTerm((long) '4');
        deleteRequest10.primaryTerm((-1L));
        java.lang.String str18 = deleteRequest10.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][null][null]}");
        java.lang.String str21 = deleteRequest20.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.setShardId(shardId24);
        deleteRequest23.primaryTerm((long) 1);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy28 = deleteRequest23.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest20.setRefreshPolicy(refreshPolicy28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest10.setRefreshPolicy(refreshPolicy28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.id("delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}");
        java.lang.String str33 = deleteRequest30.routing();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[][][]}" + "'", str13, "delete {[][][]}");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[delete {[][null][null]}][null][null]}" + "'", str21, "delete {[delete {[][null][null]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertTrue("'" + refreshPolicy28 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy28.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNull(str33);
    }

    @Test
    public void test7735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7735");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.type("delete {[][][]}");
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest8.timeout();
        org.elasticsearch.action.support.IndicesOptions indicesOptions14 = deleteRequest8.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest8.index("delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest8.parent("delete {[delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}][delete {[][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}][]}][delete {[][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][delete {[][][]}]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = deleteRequest19.consistencyLevel();
        java.lang.String str21 = deleteRequest19.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str29 = deleteRequest28.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest28.id("hi!");
        java.lang.String str32 = deleteRequest31.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str40 = deleteRequest39.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest39.id("hi!");
        org.elasticsearch.tasks.TaskId taskId43 = deleteRequest42.getParentTask();
        org.elasticsearch.tasks.TaskId taskId44 = deleteRequest42.getParentTask();
        org.elasticsearch.tasks.Task task45 = deleteRequest31.createTask((long) '4', "", "delete {[][][]}", taskId44);
        org.elasticsearch.tasks.Task task46 = deleteRequest19.createTask((long) (byte) 10, "delete {[][null][null]}", "", taskId44);
        deleteRequest18.setParentTask(taskId44);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(indicesOptions14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel20 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel20.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[][][hi!]}" + "'", str32, "delete {[][][hi!]}");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(taskId43);
        org.junit.Assert.assertNotNull(taskId44);
        org.junit.Assert.assertNotNull(task45);
        org.junit.Assert.assertNotNull(task46);
    }

    @Test
    public void test7736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7736");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}", "delete {[hi!][null][null]}", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.id("delete {[delete {[][null][null]}][][]}");
        java.lang.String str6 = deleteRequest5.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId14 = null;
        org.elasticsearch.tasks.Task task15 = deleteRequest10.createTask(0L, "", "", taskId14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest10.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType18 = deleteRequest10.versionType();
        java.lang.String str19 = deleteRequest10.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress20 = deleteRequest10.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest10.setRefreshPolicy(refreshPolicy21);
        org.elasticsearch.action.support.IndicesOptions indicesOptions23 = deleteRequest10.indicesOptions();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest10.setShardId(shardId24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.index("delete {[delete {[][][hi!]}][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress28 = deleteRequest27.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest27.routing("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress35 = deleteRequest34.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId43 = null;
        org.elasticsearch.tasks.Task task44 = deleteRequest39.createTask(0L, "", "", taskId43);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy45 = deleteRequest39.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest34.setRefreshPolicy(refreshPolicy45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest34.id("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest34.id("delete {[][][]}");
        java.lang.String str51 = deleteRequest50.index();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel52 = deleteRequest50.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest30.consistencyLevel(writeConsistencyLevel52);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest5.consistencyLevel(writeConsistencyLevel52);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[delete {[][null][null]}][][]}" + "'", str6, "delete {[delete {[][null][null]}][][]}");
        org.junit.Assert.assertNotNull(task15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(transportAddress20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(indicesOptions23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNull(transportAddress28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNull(transportAddress35);
        org.junit.Assert.assertNotNull(task44);
        org.junit.Assert.assertTrue("'" + refreshPolicy45 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy45.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel52 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel52.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest54);
    }

    @Test
    public void test7737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7737");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        deleteRequest0.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.setRefreshPolicy("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException6 = deleteRequest5.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.index("delete {[hi!][null][null]}");
        deleteRequest5.setParentTask("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}", 10L);
        java.lang.String str12 = deleteRequest5.parent();
        org.elasticsearch.tasks.TaskId taskId13 = deleteRequest5.getParentTask();
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        deleteRequest5.remoteAddress(transportAddress14);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(actionRequestValidationException6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(taskId13);
    }

    @Test
    public void test7738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7738");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest10.toString();
        java.lang.String str12 = deleteRequest10.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.routing("delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest10.index("delete {[][delete {[][][]}][delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}]}");
        long long17 = deleteRequest16.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest16.id("delete {[delete {[][null][null]}][null][null]}");
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][][]}" + "'", str12, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-3L) + "'", long17 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest19);
    }

    @Test
    public void test7739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7739");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest10.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long14 = deleteRequest13.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str16 = deleteRequest15.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue19 = deleteRequest18.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest15.timeout(timeValue19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest22.getParentTask();
        deleteRequest13.setParentTask(taskId23);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest13.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest10.consistencyLevel(writeConsistencyLevel25);
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.setShardId(shardId27);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException29 = deleteRequest28.validate();
        org.elasticsearch.common.io.stream.StreamInput streamInput30 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest28.readFrom(streamInput30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNull(actionRequestValidationException29);
    }

    @Test
    public void test7740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7740");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.setShardId(shardId12);
        long long14 = deleteRequest10.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str16 = deleteRequest15.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.parent("hi!");
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest15.getParentTask();
        deleteRequest10.setParentTask(taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.setShardId(shardId23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest22.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.index("delete {[][][hi!]}");
        java.lang.String str33 = deleteRequest32.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest32.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest32.index("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        long long38 = deleteRequest32.primaryTerm();
        org.elasticsearch.tasks.TaskId taskId39 = deleteRequest32.getParentTask();
        org.elasticsearch.tasks.Task task40 = deleteRequest22.createTask((long) 1, "delete {[null][delete {[null][null][null]}][null]}", "delete {[][delete {[][][]}][delete {[][][]}]}", taskId39);
        deleteRequest10.setParentTask(taskId39);
        java.lang.String str42 = deleteRequest10.toString();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-3L) + "'", long14 == (-3L));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[null][null][null]}" + "'", str16, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
        org.junit.Assert.assertNotNull(taskId39);
        org.junit.Assert.assertNotNull(task40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "delete {[][][]}" + "'", str42, "delete {[][][]}");
    }

    @Test
    public void test7741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7741");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("hi!");
        java.lang.String str4 = deleteRequest3.parent();
        java.lang.String str5 = deleteRequest3.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel7 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.type("hi!");
        java.lang.String str10 = deleteRequest3.getDescription();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "delete {[null][null][null]}" + "'", str1, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNull(transportAddress6);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel7 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel7.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[null][hi!][null]}" + "'", str10, "delete {[null][hi!][null]}");
    }

    @Test
    public void test7742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7742");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask((long) (byte) 0, "delete {[][][delete {[][][hi!]}]}", "delete {[delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][null][null]}", taskId7);
        org.elasticsearch.common.io.stream.StreamInput streamInput9 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.readFrom(streamInput9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
    }

    @Test
    public void test7743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7743");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("delete {[][][]}");
        java.lang.String str10 = deleteRequest7.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId22 = null;
        org.elasticsearch.tasks.Task task23 = deleteRequest18.createTask(0L, "", "", taskId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest18.setRefreshPolicy("");
        java.lang.String[] strArray26 = deleteRequest25.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId34 = null;
        org.elasticsearch.tasks.Task task35 = deleteRequest30.createTask(0L, "", "", taskId34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest30.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = deleteRequest37.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest25.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue42 = deleteRequest41.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress43 = null;
        deleteRequest41.remoteAddress(transportAddress43);
        org.elasticsearch.common.unit.TimeValue timeValue45 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest41.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest25.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest14.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest3.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest3.parent("delete {[][delete {[delete {[][][hi!]}][null][null]}][]}");
        java.lang.String str52 = deleteRequest3.parent();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy53 = deleteRequest3.getRefreshPolicy();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][][]}" + "'", str10, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(task35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel38 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel38.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(timeValue42);
        org.junit.Assert.assertNotNull(timeValue45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "delete {[][delete {[delete {[][][hi!]}][null][null]}][]}" + "'", str52, "delete {[][delete {[delete {[][][hi!]}][null][null]}][]}");
        org.junit.Assert.assertTrue("'" + refreshPolicy53 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy53.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
    }

    @Test
    public void test7744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7744");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[null][null][null]}][null]}", "delete {[null][delete {[][delete {[hi!][null][null]}][hi!]}][delete {[][][hi!]}]}", "delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str8 = deleteRequest7.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long14 = deleteRequest13.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str16 = deleteRequest15.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue19 = deleteRequest18.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest15.timeout(timeValue19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest22.getParentTask();
        deleteRequest13.setParentTask(taskId23);
        org.elasticsearch.tasks.Task task25 = deleteRequest7.createTask((long) ' ', "delete {[][][hi!]}", "delete {[][][]}", taskId23);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel26 = deleteRequest7.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest7.type("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.id("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy31 = deleteRequest30.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest3.setRefreshPolicy(refreshPolicy31);
        deleteRequest32.primaryTerm((long) (-1));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[][][]}" + "'", str8, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertNotNull(task25);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel26 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel26.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertTrue("'" + refreshPolicy31 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy31.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest32);
    }

    @Test
    public void test7745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7745");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        java.lang.String str4 = deleteRequest2.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest2.parent("delete {[][][hi!]}");
        deleteRequest6.setParentTask("delete {[][hi!][delete {[null][null][null]}]}", (long) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.type("delete {[][][]}");
        java.lang.String str16 = deleteRequest13.id();
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest13.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest6.timeout(timeValue17);
        boolean boolean19 = deleteRequest18.getShouldPersistResult();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str4, "delete {[delete {[][][hi!]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[][][]}" + "'", str16, "delete {[][][]}");
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test7746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7746");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][null][null]}", "delete {[hi!][null][null]}", "delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.setRefreshPolicy("");
        deleteRequest5.primaryTerm((long) (-1));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest5.routing("delete {[][delete {[][][]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.id("delete {[delete {[][][hi!]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
    }

    @Test
    public void test7747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7747");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}", "delete {[][][hi!]}", "hi!");
        org.elasticsearch.index.VersionType versionType4 = deleteRequest3.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.parent("delete {[][][]}");
        java.lang.String str8 = deleteRequest5.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.index("delete {[][][hi!]}");
        java.lang.String str12 = deleteRequest11.parent();
        java.lang.String str13 = deleteRequest11.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest11.parent("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId23 = null;
        org.elasticsearch.tasks.Task task24 = deleteRequest19.createTask(0L, "", "", taskId23);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest19.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress30 = deleteRequest29.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId38 = null;
        org.elasticsearch.tasks.Task task39 = deleteRequest34.createTask(0L, "", "", taskId38);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy40 = deleteRequest34.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest29.setRefreshPolicy(refreshPolicy40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest19.setRefreshPolicy(refreshPolicy40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest11.setRefreshPolicy(refreshPolicy40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest5.setRefreshPolicy(refreshPolicy40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str49 = deleteRequest48.id();
        java.lang.String str50 = deleteRequest48.index();
        org.elasticsearch.tasks.TaskId taskId51 = deleteRequest48.getParentTask();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException52 = deleteRequest48.validate();
        org.elasticsearch.index.VersionType versionType53 = deleteRequest48.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest5.versionType(versionType53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest3.versionType(versionType53);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy56 = deleteRequest55.getRefreshPolicy();
        org.junit.Assert.assertNotNull(versionType4);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[null][null][null]}" + "'", str8, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str13, "delete {[delete {[][][hi!]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(task24);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(transportAddress30);
        org.junit.Assert.assertNotNull(task39);
        org.junit.Assert.assertTrue("'" + refreshPolicy40 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy40.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(taskId51);
        org.junit.Assert.assertNull(actionRequestValidationException52);
        org.junit.Assert.assertNotNull(versionType53);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertTrue("'" + refreshPolicy56 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy56.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
    }

    @Test
    public void test7748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7748");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.consistencyLevel(writeConsistencyLevel23);
        deleteRequest24.setParentTask("hi!", (long) (short) 100);
        org.elasticsearch.index.VersionType versionType28 = deleteRequest24.versionType();
        java.lang.String str29 = deleteRequest24.routing();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException30 = deleteRequest24.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str35 = deleteRequest34.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest34.id("hi!");
        java.lang.String str38 = deleteRequest37.routing();
        org.elasticsearch.common.transport.TransportAddress transportAddress39 = null;
        deleteRequest37.remoteAddress(transportAddress39);
        org.elasticsearch.common.transport.TransportAddress transportAddress41 = deleteRequest37.remoteAddress();
        java.lang.String[] strArray42 = deleteRequest37.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel43 = deleteRequest37.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest24.consistencyLevel(writeConsistencyLevel43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest44.version((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest46.parent("delete {[][delete {[null][null][null]}][null]}");
        org.elasticsearch.index.shard.ShardId shardId49 = deleteRequest46.shardId();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(actionRequestValidationException30);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(transportAddress41);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel43 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel43.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNull(shardId49);
    }

    @Test
    public void test7749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7749");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        deleteRequest10.primaryTerm(1L);
        boolean boolean13 = deleteRequest10.getShouldPersistResult();
        java.lang.String str14 = deleteRequest10.id();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel15 = deleteRequest10.consistencyLevel();
        java.lang.Class<?> wildcardClass16 = deleteRequest10.getClass();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel15 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel15.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test7750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7750");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.setRefreshPolicy(refreshPolicy14);
        long long16 = deleteRequest3.primaryTerm();
        org.elasticsearch.common.transport.TransportAddress transportAddress17 = null;
        deleteRequest3.remoteAddress(transportAddress17);
        deleteRequest3.primaryTerm(97L);
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(transportAddress13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
    }

    @Test
    public void test7751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7751");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.type("delete {[null][null][null]}");
        java.lang.String str4 = deleteRequest1.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest1.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest1.parent("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.index("delete {[][][hi!]}");
        java.lang.String str12 = deleteRequest11.parent();
        java.lang.String str13 = deleteRequest11.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest11.parent("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest11.parent("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.routing("delete {[][][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.setShardId(shardId20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}", "delete {[delete {[hi!][null][null]}][null][null]}", "delete {[null][null][null]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy26 = deleteRequest25.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest19.setRefreshPolicy(refreshPolicy26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.parent("delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str31 = deleteRequest30.parent();
        deleteRequest30.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest30.setRefreshPolicy("");
        boolean boolean36 = deleteRequest30.getShouldPersistResult();
        org.elasticsearch.common.transport.TransportAddress transportAddress37 = deleteRequest30.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest41.type("delete {[][][]}");
        java.lang.String str44 = deleteRequest41.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest41.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest46.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest46.type("delete {[][][]}");
        org.elasticsearch.common.unit.TimeValue timeValue51 = deleteRequest46.timeout();
        org.elasticsearch.action.support.IndicesOptions indicesOptions52 = deleteRequest46.indicesOptions();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy53 = deleteRequest46.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str58 = deleteRequest57.index();
        org.elasticsearch.index.shard.ShardId shardId59 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest57.setShardId(shardId59);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId68 = null;
        org.elasticsearch.tasks.Task task69 = deleteRequest64.createTask(0L, "", "", taskId68);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy70 = deleteRequest64.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest60.setRefreshPolicy(refreshPolicy70);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest46.setRefreshPolicy(refreshPolicy70);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest30.setRefreshPolicy(refreshPolicy70);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest27.setRefreshPolicy(refreshPolicy70);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest1.setRefreshPolicy(refreshPolicy70);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str13, "delete {[delete {[][][hi!]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + refreshPolicy26 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy26.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(transportAddress37);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "delete {[][][]}" + "'", str44, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(timeValue51);
        org.junit.Assert.assertNotNull(indicesOptions52);
        org.junit.Assert.assertTrue("'" + refreshPolicy53 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy53.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(task69);
        org.junit.Assert.assertTrue("'" + refreshPolicy70 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy70.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertNotNull(deleteRequest73);
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertNotNull(deleteRequest75);
    }

    @Test
    public void test7752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7752");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue2 = deleteRequest1.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress3 = null;
        deleteRequest1.remoteAddress(transportAddress3);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy5 = deleteRequest1.getRefreshPolicy();
        org.junit.Assert.assertNotNull(timeValue2);
        org.junit.Assert.assertTrue("'" + refreshPolicy5 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy5.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
    }

    @Test
    public void test7753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7753");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        boolean boolean9 = deleteRequest3.getShouldPersistResult();
        long long10 = deleteRequest3.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = null;
        deleteRequest3.remoteAddress(transportAddress11);
        org.elasticsearch.index.shard.IndexShard indexShard13 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult14 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest3, indexShard13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-3L) + "'", long10 == (-3L));
    }

    @Test
    public void test7754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7754");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.parent("delete {[][][]}");
        long long11 = deleteRequest10.version();
        java.lang.String str12 = deleteRequest10.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.parent("delete {[delete {[null][null][null]}][][]}");
        boolean boolean15 = deleteRequest10.getShouldPersistResult();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-3L) + "'", long11 == (-3L));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test7755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7755");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId12 = null;
        org.elasticsearch.tasks.Task task13 = deleteRequest8.createTask(0L, "", "", taskId12);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = deleteRequest8.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.setRefreshPolicy(refreshPolicy14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.id("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest3.id("delete {[][][]}");
        java.lang.String str20 = deleteRequest19.parent();
        java.lang.String str21 = deleteRequest19.toString();
        org.elasticsearch.common.unit.TimeValue timeValue22 = deleteRequest19.timeout();
        org.junit.Assert.assertNull(transportAddress4);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertTrue("'" + refreshPolicy14 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy14.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[hi!][][delete {[][][]}]}" + "'", str21, "delete {[hi!][][delete {[][][]}]}");
        org.junit.Assert.assertNotNull(timeValue22);
    }

    @Test
    public void test7756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7756");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][][hi!]}", "delete {[null][delete {[delete {[][delete {[delete {[][][hi!]}][null][null]}][]}][null][null]}][null]}", "delete {[delete {[][][hi!]}][delete {[null][null][null]}][]}");
        boolean boolean4 = deleteRequest3.getShouldPersistResult();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test7757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7757");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str8 = deleteRequest7.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str16 = deleteRequest15.id();
        java.lang.String str17 = deleteRequest15.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str19 = deleteRequest18.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest18.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId22 = deleteRequest18.getParentTask();
        deleteRequest15.setParentTask(taskId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel26 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest15.consistencyLevel(writeConsistencyLevel26);
        org.elasticsearch.tasks.TaskId taskId28 = deleteRequest27.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.index.VersionType versionType33 = deleteRequest32.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest27.versionType(versionType33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str39 = deleteRequest38.getDescription();
        java.lang.String str40 = deleteRequest38.routing();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel41 = deleteRequest38.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest27.consistencyLevel(writeConsistencyLevel41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest10.consistencyLevel(writeConsistencyLevel41);
        java.lang.String str44 = deleteRequest10.routing();
        java.lang.String str45 = deleteRequest10.index();
        org.elasticsearch.common.io.stream.StreamInput streamInput46 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest10.readFrom(streamInput46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[][][]}" + "'", str8, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(taskId22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel26 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel26.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(taskId28);
        org.junit.Assert.assertNotNull(versionType33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "delete {[][][]}" + "'", str39, "delete {[][][]}");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel41 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel41.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
    }

    @Test
    public void test7758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7758");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long10 = deleteRequest9.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str12 = deleteRequest11.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest14.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest18.getParentTask();
        deleteRequest9.setParentTask(taskId19);
        org.elasticsearch.tasks.Task task21 = deleteRequest3.createTask((long) ' ', "delete {[][][hi!]}", "delete {[][][]}", taskId19);
        long long22 = deleteRequest3.version();
        java.lang.String str23 = deleteRequest3.toString();
        org.elasticsearch.index.shard.ShardId shardId24 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str29 = deleteRequest28.id();
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest28.setShardId(shardId30);
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest28.setShardId(shardId32);
        java.lang.String str34 = deleteRequest33.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId42 = null;
        org.elasticsearch.tasks.Task task43 = deleteRequest38.createTask(0L, "", "", taskId42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest38.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType46 = deleteRequest38.versionType();
        java.lang.String str47 = deleteRequest38.parent();
        org.elasticsearch.index.shard.ShardId shardId48 = deleteRequest38.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel49 = deleteRequest38.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest33.consistencyLevel(writeConsistencyLevel49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest3.consistencyLevel(writeConsistencyLevel49);
        org.elasticsearch.tasks.TaskId taskId52 = deleteRequest3.getParentTask();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][][]}" + "'", str4, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-3L) + "'", long22 == (-3L));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[][][]}" + "'", str23, "delete {[][][]}");
        org.junit.Assert.assertNull(shardId24);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(task43);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(versionType46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(shardId48);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel49 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel49.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(taskId52);
    }

    @Test
    public void test7759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7759");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest10.toString();
        java.lang.String[] strArray12 = deleteRequest10.indices();
        deleteRequest10.primaryTerm(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest10.routing("delete {[null][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.setShardId(shardId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.parent("delete {[][delete {[][][]}][delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str25 = deleteRequest24.id();
        java.lang.String str26 = deleteRequest24.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str28 = deleteRequest27.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest27.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId31 = deleteRequest27.getParentTask();
        deleteRequest24.setParentTask(taskId31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel34 = deleteRequest33.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel35 = deleteRequest33.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest24.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest18.consistencyLevel(writeConsistencyLevel35);
        boolean boolean38 = deleteRequest18.getShouldPersistResult();
        boolean boolean39 = deleteRequest18.getShouldPersistResult();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(taskId31);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel34 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel34.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel35 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel35.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test7760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7760");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        org.elasticsearch.index.VersionType versionType2 = deleteRequest0.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.version((long) 'a');
        org.elasticsearch.index.shard.ShardId shardId5 = deleteRequest4.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("delete {[null][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress10 = deleteRequest9.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.setShardId(shardId11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.version((long) '4');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId22 = null;
        org.elasticsearch.tasks.Task task23 = deleteRequest18.createTask(0L, "", "", taskId22);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel24 = deleteRequest18.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress29 = deleteRequest28.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId37 = null;
        org.elasticsearch.tasks.Task task38 = deleteRequest33.createTask(0L, "", "", taskId37);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy39 = deleteRequest33.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest28.setRefreshPolicy(refreshPolicy39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest18.setRefreshPolicy(refreshPolicy39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest12.setRefreshPolicy(refreshPolicy39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest4.setRefreshPolicy(refreshPolicy39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str45 = deleteRequest44.index();
        deleteRequest44.setParentTask("delete {[][][hi!]}", (long) '#');
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException49 = deleteRequest44.validate();
        long long50 = deleteRequest44.primaryTerm();
        deleteRequest44.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str57 = deleteRequest56.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest56.id("hi!");
        org.elasticsearch.tasks.TaskId taskId60 = deleteRequest59.getParentTask();
        org.elasticsearch.tasks.TaskId taskId61 = deleteRequest59.getParentTask();
        org.elasticsearch.common.unit.TimeValue timeValue62 = deleteRequest59.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest44.timeout(timeValue62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest63.routing("delete {[null][delete {[delete {[][delete {[delete {[][][hi!]}][null][null]}][]}][null][null]}][null]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy66 = deleteRequest65.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest4.setRefreshPolicy(refreshPolicy66);
        org.elasticsearch.common.transport.TransportAddress transportAddress68 = deleteRequest67.remoteAddress();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(versionType2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNull(shardId5);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNull(transportAddress10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel24 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel24.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(transportAddress29);
        org.junit.Assert.assertNotNull(task38);
        org.junit.Assert.assertTrue("'" + refreshPolicy39 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy39.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(actionRequestValidationException49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 0L + "'", long50 == 0L);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(taskId60);
        org.junit.Assert.assertNotNull(taskId61);
        org.junit.Assert.assertNotNull(timeValue62);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertTrue("'" + refreshPolicy66 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy66.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNull(transportAddress68);
    }

    @Test
    public void test7761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7761");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[delete {[][null][null]}][][]}][delete {[null][delete {[null][null][null]}][null]}]}", "delete {[null][null][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}]}", "delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard indexShard4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete5 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest3, indexShard4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test7762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7762");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str7 = deleteRequest6.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest6.getParentTask();
        deleteRequest3.setParentTask(taskId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.consistencyLevel(writeConsistencyLevel14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.type("delete {[delete {[][][hi!]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.id("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.tasks.TaskId taskId22 = deleteRequest21.getParentTask();
        java.lang.String str23 = deleteRequest21.id();
        org.elasticsearch.index.shard.ShardId shardId24 = deleteRequest21.shardId();
        java.lang.String str25 = deleteRequest21.index();
        java.lang.Class<?> wildcardClass26 = deleteRequest21.getClass();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(taskId22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}" + "'", str23, "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.junit.Assert.assertNull(shardId24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test7763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7763");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.consistencyLevel(writeConsistencyLevel23);
        deleteRequest24.setParentTask("hi!", (long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest24.routing("hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress30 = null;
        deleteRequest29.remoteAddress(transportAddress30);
        java.lang.String str32 = deleteRequest29.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest29.version((long) (byte) -1);
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(deleteRequest34);
    }

    @Test
    public void test7764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7764");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][null][null]}", "delete {[hi!][null][null]}", "delete {[hi!][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel4 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.version((long) (short) 10);
        java.lang.String str7 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType14 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress19 = deleteRequest18.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId27 = null;
        org.elasticsearch.tasks.Task task28 = deleteRequest23.createTask(0L, "", "", taskId27);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy29 = deleteRequest23.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest18.setRefreshPolicy(refreshPolicy29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest13.setRefreshPolicy(refreshPolicy29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest3.setRefreshPolicy(refreshPolicy29);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel4 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel4.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNull(transportAddress19);
        org.junit.Assert.assertNotNull(task28);
        org.junit.Assert.assertTrue("'" + refreshPolicy29 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy29.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest32);
    }

    @Test
    public void test7765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7765");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        java.lang.String str7 = deleteRequest3.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = null;
        deleteRequest9.remoteAddress(transportAddress11);
        java.lang.String str13 = deleteRequest9.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest9.parent("delete {[hi!][null][null]}");
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest15.getParentTask();
        deleteRequest3.setParentTask(taskId16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest3.type("delete {[null][null][null]}");
        java.lang.String str20 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][]}", "delete {[null][null][null]}", "delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest24.parent("delete {[][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][][]}]}");
        org.elasticsearch.index.shard.ShardId shardId29 = deleteRequest24.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel30 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest24.parent("delete {[delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.index("delete {[null][null][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str39 = deleteRequest38.id();
        java.lang.String str40 = deleteRequest38.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str42 = deleteRequest41.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest41.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId45 = deleteRequest41.getParentTask();
        deleteRequest38.setParentTask(taskId45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel48 = deleteRequest47.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel49 = deleteRequest47.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest38.consistencyLevel(writeConsistencyLevel49);
        org.elasticsearch.tasks.TaskId taskId51 = deleteRequest50.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.index.VersionType versionType56 = deleteRequest55.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest50.versionType(versionType56);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest57.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest59.routing("delete {[delete {[hi!][null][null]}][delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}][delete {[delete {[][null][null]}][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId69 = null;
        org.elasticsearch.tasks.Task task70 = deleteRequest65.createTask(0L, "", "", taskId69);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest65.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel73 = deleteRequest72.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions74 = deleteRequest72.indicesOptions();
        java.lang.String str75 = deleteRequest72.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str77 = deleteRequest76.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = deleteRequest76.version((long) (short) 100);
        deleteRequest76.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest82 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str83 = deleteRequest82.parent();
        org.elasticsearch.index.VersionType versionType84 = deleteRequest82.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest85 = deleteRequest76.versionType(versionType84);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest86 = deleteRequest72.versionType(versionType84);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = deleteRequest61.versionType(versionType84);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel88 = deleteRequest61.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest89 = deleteRequest32.consistencyLevel(writeConsistencyLevel88);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest90 = deleteRequest3.consistencyLevel(writeConsistencyLevel88);
        deleteRequest3.primaryTerm((long) 0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[null][null][null]}" + "'", str13, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[][delete {[null][null][null]}][]}" + "'", str20, "delete {[][delete {[null][null][null]}][]}");
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNull(shardId29);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel30 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel30.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(taskId45);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel48 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel48.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel49 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel49.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(taskId51);
        org.junit.Assert.assertNotNull(versionType56);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(task70);
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel73 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel73.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "delete {[][][]}" + "'", str75, "delete {[][][]}");
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(deleteRequest79);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNotNull(versionType84);
        org.junit.Assert.assertNotNull(deleteRequest85);
        org.junit.Assert.assertNotNull(deleteRequest86);
        org.junit.Assert.assertNotNull(deleteRequest87);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel88 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel88.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest89);
        org.junit.Assert.assertNotNull(deleteRequest90);
    }

    @Test
    public void test7766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7766");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.setRefreshPolicy("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy10 = deleteRequest6.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId18 = null;
        org.elasticsearch.tasks.Task task19 = deleteRequest14.createTask(0L, "", "", taskId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType22 = deleteRequest14.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest14.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest6.consistencyLevel(writeConsistencyLevel23);
        boolean boolean25 = deleteRequest6.getShouldPersistResult();
        java.lang.String[] strArray26 = deleteRequest6.indices();
        java.lang.String str27 = deleteRequest6.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest6.index("delete {[][delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[][][]}]}][]}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + refreshPolicy10 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy10.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(task19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][][hi!]}" + "'", str27, "delete {[][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest29);
    }

    @Test
    public void test7767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7767");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel1 = deleteRequest0.consistencyLevel();
        java.lang.String str2 = deleteRequest0.parent();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel3 = deleteRequest0.consistencyLevel();
        boolean boolean4 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.type("delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy7 = deleteRequest0.getRefreshPolicy();
        java.lang.Class<?> wildcardClass8 = refreshPolicy7.getClass();
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel1 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel1.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel3 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel3.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + refreshPolicy7 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy7.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test7768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7768");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.routing("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.version((long) (short) -1);
        java.lang.String str16 = deleteRequest13.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest13.type("delete {[delete {[][][hi!]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str23 = deleteRequest22.id();
        java.lang.String str24 = deleteRequest22.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest22.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long29 = deleteRequest28.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue30 = deleteRequest28.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest26.timeout(timeValue30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest36.setParentTask("hi!", (long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest43.type("delete {[][][]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy46 = deleteRequest43.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest36.setRefreshPolicy(refreshPolicy46);
        org.elasticsearch.tasks.TaskId taskId48 = deleteRequest36.getParentTask();
        org.elasticsearch.tasks.Task task49 = deleteRequest31.createTask(1L, "", "delete {[null][null][null]}", taskId48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest51.setParentTask("hi!", (long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest58.type("delete {[][][]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy61 = deleteRequest58.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest51.setRefreshPolicy(refreshPolicy61);
        org.elasticsearch.tasks.TaskId taskId63 = deleteRequest51.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest68.setParentTask("hi!", (long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest75.type("delete {[][][]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy78 = deleteRequest75.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = deleteRequest68.setRefreshPolicy(refreshPolicy78);
        org.elasticsearch.tasks.TaskId taskId80 = deleteRequest68.getParentTask();
        org.elasticsearch.tasks.Task task81 = deleteRequest51.createTask((long) (byte) 1, "delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}", "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}", taskId80);
        org.elasticsearch.tasks.TaskId taskId82 = deleteRequest51.getParentTask();
        deleteRequest31.setParentTask(taskId82);
        deleteRequest18.setParentTask(taskId82);
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertNotNull(timeValue30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertTrue("'" + refreshPolicy46 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy46.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(taskId48);
        org.junit.Assert.assertNotNull(task49);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertTrue("'" + refreshPolicy61 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy61.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(taskId63);
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertTrue("'" + refreshPolicy78 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy78.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest79);
        org.junit.Assert.assertNotNull(taskId80);
        org.junit.Assert.assertNotNull(task81);
        org.junit.Assert.assertNotNull(taskId82);
    }

    @Test
    public void test7769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7769");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][null][null]}][][]}", "delete {[delete {[delete {[][null][null]}][][]}][][delete {[][][]}]}", "delete {[delete {[][delete {[][][]}][delete {[][][]}]}][][delete {[][][]}]}");
    }

    @Test
    public void test7770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7770");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException2 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest4.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue9 = deleteRequest8.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest4.timeout(timeValue9);
        java.lang.String str11 = deleteRequest4.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str19 = deleteRequest18.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.type("delete {[][][]}");
        java.lang.String str26 = deleteRequest23.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest23.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId36 = null;
        org.elasticsearch.tasks.Task task37 = deleteRequest32.createTask(0L, "", "", taskId36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest32.setRefreshPolicy("");
        java.lang.String str40 = deleteRequest39.toString();
        java.lang.String[] strArray41 = deleteRequest39.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest39.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str52 = deleteRequest51.id();
        java.lang.String str53 = deleteRequest51.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str55 = deleteRequest54.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest54.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId58 = deleteRequest54.getParentTask();
        deleteRequest51.setParentTask(taskId58);
        deleteRequest47.setParentTask(taskId58);
        deleteRequest43.setParentTask(taskId58);
        deleteRequest28.setParentTask(taskId58);
        deleteRequest18.setParentTask(taskId58);
        org.elasticsearch.tasks.Task task64 = deleteRequest4.createTask((long) 100, "delete {[][][hi!]}", "hi!", taskId58);
        deleteRequest0.setParentTask(taskId58);
        org.elasticsearch.index.shard.ShardId shardId66 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest0.setShardId(shardId66);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel68 = deleteRequest67.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str70 = deleteRequest69.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue73 = deleteRequest72.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest69.timeout(timeValue73);
        org.elasticsearch.common.transport.TransportAddress transportAddress75 = deleteRequest69.remoteAddress();
        java.lang.String str76 = deleteRequest69.parent();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel77 = deleteRequest69.consistencyLevel();
        org.elasticsearch.common.unit.TimeValue timeValue78 = deleteRequest69.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = deleteRequest67.timeout(timeValue78);
        org.elasticsearch.index.shard.ShardId shardId80 = deleteRequest67.shardId();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "delete {[null][null][null]}" + "'", str1, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException2);
        org.junit.Assert.assertNotNull(timeValue9);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "delete {[][][]}" + "'", str26, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(task37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "delete {[][][]}" + "'", str40, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(taskId58);
        org.junit.Assert.assertNotNull(task64);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel68 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel68.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNotNull(timeValue73);
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertNull(transportAddress75);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel77 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel77.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(timeValue78);
        org.junit.Assert.assertNotNull(deleteRequest79);
        org.junit.Assert.assertNull(shardId80);
    }

    @Test
    public void test7771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7771");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        java.lang.String str4 = deleteRequest2.type();
        long long5 = deleteRequest2.primaryTerm();
        long long6 = deleteRequest2.version();
        deleteRequest2.setParentTask("delete {[hi!][null][null]}", (long) '4');
        boolean boolean10 = deleteRequest2.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId18 = null;
        org.elasticsearch.tasks.Task task19 = deleteRequest14.createTask(0L, "", "", taskId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.setRefreshPolicy("");
        java.lang.String[] strArray22 = deleteRequest21.indices();
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.setShardId(shardId23);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException25 = deleteRequest21.validate();
        org.elasticsearch.tasks.TaskId taskId26 = deleteRequest21.getParentTask();
        org.elasticsearch.index.VersionType versionType27 = deleteRequest21.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest2.versionType(versionType27);
        java.lang.String[] strArray29 = deleteRequest28.indices();
        java.lang.String str30 = deleteRequest28.toString();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-3L) + "'", long6 == (-3L));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(task19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNull(actionRequestValidationException25);
        org.junit.Assert.assertNotNull(taskId26);
        org.junit.Assert.assertNotNull(versionType27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str30, "delete {[delete {[][][hi!]}][null][null]}");
    }

    @Test
    public void test7772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7772");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[null][null][null]}][]}");
        long long2 = deleteRequest1.version();
        org.elasticsearch.index.shard.ShardId shardId3 = deleteRequest1.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest1.timeout();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-3L) + "'", long2 == (-3L));
        org.junit.Assert.assertNull(shardId3);
        org.junit.Assert.assertNotNull(timeValue4);
    }

    @Test
    public void test7773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7773");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        java.lang.String str4 = deleteRequest2.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest2.version((long) (short) 100);
        org.elasticsearch.common.transport.TransportAddress transportAddress7 = null;
        deleteRequest6.remoteAddress(transportAddress7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest6.type("delete {[][delete {[null][null][null]}][null]}");
        java.lang.String str11 = deleteRequest6.id();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test7774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7774");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.parent("delete {[][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest1.setShardId(shardId4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.id("delete {[][delete {[null][null][null]}][]}");
        long long8 = deleteRequest5.version();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-3L) + "'", long8 == (-3L));
    }

    @Test
    public void test7775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7775");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.type("delete {[hi!][null][null]}");
        deleteRequest4.setParentTask("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}", (long) ' ');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId15 = null;
        org.elasticsearch.tasks.Task task16 = deleteRequest11.createTask(0L, "", "", taskId15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest11.setRefreshPolicy("");
        java.lang.String str19 = deleteRequest18.toString();
        java.lang.String[] strArray20 = deleteRequest18.indices();
        deleteRequest18.primaryTerm(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest18.routing("delete {[null][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.setShardId(shardId25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest31.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest33.type("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId43 = null;
        org.elasticsearch.tasks.Task task44 = deleteRequest39.createTask(0L, "", "", taskId43);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy45 = deleteRequest39.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId53 = null;
        org.elasticsearch.tasks.Task task54 = deleteRequest49.createTask(0L, "", "", taskId53);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy55 = deleteRequest49.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest39.setRefreshPolicy(refreshPolicy55);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest35.setRefreshPolicy(refreshPolicy55);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest35.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        deleteRequest59.setParentTask("delete {[][][hi!]}", (long) (byte) 100);
        org.elasticsearch.common.transport.TransportAddress transportAddress63 = null;
        deleteRequest59.remoteAddress(transportAddress63);
        org.elasticsearch.index.VersionType versionType65 = deleteRequest59.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest30.versionType(versionType65);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest26.versionType(versionType65);
        org.elasticsearch.common.unit.TimeValue timeValue68 = deleteRequest67.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest4.timeout(timeValue68);
        org.elasticsearch.index.shard.ShardId shardId70 = deleteRequest4.shardId();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(task16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[][][]}" + "'", str19, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(task44);
        org.junit.Assert.assertTrue("'" + refreshPolicy45 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy45.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task54);
        org.junit.Assert.assertTrue("'" + refreshPolicy55 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy55.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(versionType65);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNotNull(timeValue68);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNull(shardId70);
    }

    @Test
    public void test7776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7776");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.setRefreshPolicy("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy10 = deleteRequest6.getRefreshPolicy();
        long long11 = deleteRequest6.version();
        long long12 = deleteRequest6.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest6.type("");
        java.lang.String str15 = deleteRequest6.type();
        java.lang.String str16 = deleteRequest6.toString();
        org.elasticsearch.action.support.IndicesOptions indicesOptions17 = deleteRequest6.indicesOptions();
        org.elasticsearch.index.shard.IndexShard indexShard18 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult19 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest6, indexShard18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + refreshPolicy10 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy10.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-3L) + "'", long11 == (-3L));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-3L) + "'", long12 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[][][hi!]}" + "'", str16, "delete {[][][hi!]}");
        org.junit.Assert.assertNotNull(indicesOptions17);
    }

    @Test
    public void test7777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7777");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][delete {[][delete {[hi!][null][null]}][hi!]}][delete {[][][hi!]}]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy2 = deleteRequest1.getRefreshPolicy();
        deleteRequest1.setParentTask("delete {[delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}][delete {[hi!][null][null]}][null]}", (long) '4');
        org.junit.Assert.assertTrue("'" + refreshPolicy2 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy2.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
    }

    @Test
    public void test7778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7778");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.type("delete {[null][null][null]}");
        java.lang.String str4 = deleteRequest1.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest1.index("");
        deleteRequest1.primaryTerm((long) 100);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
    }

    @Test
    public void test7779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7779");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][hi!]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId9 = null;
        org.elasticsearch.tasks.Task task10 = deleteRequest5.createTask(0L, "", "", taskId9);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest5.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions14 = deleteRequest12.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId15 = null;
        deleteRequest12.setParentTask(taskId15);
        java.lang.String str17 = deleteRequest12.type();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy18 = deleteRequest12.getRefreshPolicy();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy19 = deleteRequest12.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest1.setRefreshPolicy(refreshPolicy19);
        org.elasticsearch.action.support.IndicesOptions indicesOptions21 = deleteRequest1.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str26 = deleteRequest25.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest25.id("hi!");
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest28.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest28.setRefreshPolicy("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy32 = deleteRequest28.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId40 = null;
        org.elasticsearch.tasks.Task task41 = deleteRequest36.createTask(0L, "", "", taskId40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest36.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType44 = deleteRequest36.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel45 = deleteRequest36.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest28.consistencyLevel(writeConsistencyLevel45);
        long long47 = deleteRequest28.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest28.version((long) (short) -1);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy50 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest49.setRefreshPolicy(refreshPolicy50);
        org.elasticsearch.common.unit.TimeValue timeValue52 = deleteRequest49.timeout();
        java.lang.String[] strArray53 = deleteRequest49.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest54.index("delete {[][][hi!]}");
        java.lang.String str57 = deleteRequest56.parent();
        java.lang.String str58 = deleteRequest56.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest56.version((long) (short) 100);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel61 = deleteRequest60.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId69 = null;
        org.elasticsearch.tasks.Task task70 = deleteRequest65.createTask(0L, "", "", taskId69);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy71 = deleteRequest65.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest60.setRefreshPolicy(refreshPolicy71);
        org.elasticsearch.common.unit.TimeValue timeValue73 = deleteRequest60.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest49.timeout(timeValue73);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest1.timeout(timeValue73);
        org.junit.Assert.assertNotNull(task10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + refreshPolicy18 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy18.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertTrue("'" + refreshPolicy19 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy19.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(indicesOptions21);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertTrue("'" + refreshPolicy32 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy32.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(task41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(versionType44);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel45 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel45.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-3L) + "'", long47 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(timeValue52);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel61 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel61.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(task70);
        org.junit.Assert.assertTrue("'" + refreshPolicy71 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy71.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertNotNull(timeValue73);
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertNotNull(deleteRequest75);
    }

    @Test
    public void test7780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7780");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.tasks.TaskId taskId6 = deleteRequest3.getParentTask();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest3.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = null;
        deleteRequest9.remoteAddress(transportAddress11);
        org.elasticsearch.common.unit.TimeValue timeValue13 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest9.timeout(timeValue13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.timeout(timeValue13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.version((long) ' ');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.parent("hi!");
        org.elasticsearch.tasks.TaskId taskId20 = deleteRequest19.getParentTask();
        org.elasticsearch.action.support.IndicesOptions indicesOptions21 = deleteRequest19.indicesOptions();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(taskId6);
        org.junit.Assert.assertNull(actionRequestValidationException7);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(taskId20);
        org.junit.Assert.assertNotNull(indicesOptions21);
    }

    @Test
    public void test7781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7781");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest10.toString();
        java.lang.String[] strArray12 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.index("");
        java.lang.String str15 = deleteRequest10.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest10.version((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel19 = deleteRequest18.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = deleteRequest18.consistencyLevel();
        deleteRequest18.primaryTerm((long) (short) 10);
        long long23 = deleteRequest18.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId34 = null;
        org.elasticsearch.tasks.Task task35 = deleteRequest30.createTask(0L, "", "", taskId34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest30.setRefreshPolicy("");
        java.lang.String str38 = deleteRequest37.toString();
        java.lang.String[] strArray39 = deleteRequest37.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest37.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str50 = deleteRequest49.id();
        java.lang.String str51 = deleteRequest49.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str53 = deleteRequest52.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest52.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId56 = deleteRequest52.getParentTask();
        deleteRequest49.setParentTask(taskId56);
        deleteRequest45.setParentTask(taskId56);
        deleteRequest41.setParentTask(taskId56);
        org.elasticsearch.tasks.Task task60 = deleteRequest18.createTask((-1L), "delete {[][delete {[][][]}][delete {[][][]}]}", "delete {[][][hi!]}", taskId56);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str62 = deleteRequest61.parent();
        org.elasticsearch.index.VersionType versionType63 = deleteRequest61.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest67.type("delete {[][][hi!]}");
        org.elasticsearch.common.unit.TimeValue timeValue70 = deleteRequest69.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest61.timeout(timeValue70);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest18.timeout(timeValue70);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest10.timeout(timeValue70);
        java.lang.String str74 = deleteRequest10.routing();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel19 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel19.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel20 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel20.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-3L) + "'", long23 == (-3L));
        org.junit.Assert.assertNotNull(task35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "delete {[][][]}" + "'", str38, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(taskId56);
        org.junit.Assert.assertNotNull(task60);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(versionType63);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(timeValue70);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertNotNull(deleteRequest73);
        org.junit.Assert.assertNull(str74);
    }

    @Test
    public void test7782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7782");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.routing("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.version((long) (short) -1);
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = deleteRequest13.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest13.id("delete {[delete {[delete {[][][hi!]}][null][null]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest13.index("delete {[][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][delete {[][][]}]}");
        java.lang.String[] strArray21 = deleteRequest13.indices();
        java.lang.String str22 = deleteRequest13.parent();
        org.elasticsearch.action.support.IndicesOptions indicesOptions23 = deleteRequest13.indicesOptions();
        java.lang.String str24 = deleteRequest13.toString();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(transportAddress16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(indicesOptions23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "delete {[delete {[][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][delete {[][][]}]}][][delete {[delete {[delete {[][][hi!]}][null][null]}][null][null]}]}" + "'", str24, "delete {[delete {[][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][delete {[][][]}]}][][delete {[delete {[delete {[][][hi!]}][null][null]}][null][null]}]}");
    }

    @Test
    public void test7783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7783");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest1.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue6 = deleteRequest5.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.timeout(timeValue6);
        java.lang.String str8 = deleteRequest1.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException9 = deleteRequest1.validate();
        java.lang.String str10 = deleteRequest1.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long13 = deleteRequest12.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.index("");
        boolean boolean16 = deleteRequest12.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest12.version((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue19 = deleteRequest12.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest1.timeout(timeValue19);
        deleteRequest20.primaryTerm(10L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.index.VersionType versionType27 = deleteRequest26.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest26.version((long) (short) 1);
        java.lang.String str30 = deleteRequest26.parent();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel31 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest20.consistencyLevel(writeConsistencyLevel31);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput33 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest20.writeTo(streamOutput33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[][null][null]}" + "'", str8, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][null][null]}" + "'", str10, "delete {[][null][null]}");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(versionType27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel31 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel31.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest32);
    }

    @Test
    public void test7784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7784");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("delete {[][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = deleteRequest5.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.index("delete {[][][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.setShardId(shardId9);
        java.lang.String[] strArray11 = deleteRequest5.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest5.id("");
        java.lang.String[] strArray14 = deleteRequest13.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel15 = deleteRequest13.consistencyLevel();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(transportAddress6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel15 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel15.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test7785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7785");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.setRefreshPolicy("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy10 = deleteRequest6.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId18 = null;
        org.elasticsearch.tasks.Task task19 = deleteRequest14.createTask(0L, "", "", taskId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType22 = deleteRequest14.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest14.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest6.consistencyLevel(writeConsistencyLevel23);
        long long25 = deleteRequest6.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress26 = deleteRequest6.remoteAddress();
        java.lang.String str27 = deleteRequest6.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str29 = deleteRequest28.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue32 = deleteRequest31.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest28.timeout(timeValue32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest33.id("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest35.version((long) 10);
        org.elasticsearch.common.transport.TransportAddress transportAddress38 = deleteRequest35.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str43 = deleteRequest42.id();
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest42.setShardId(shardId44);
        org.elasticsearch.index.shard.ShardId shardId46 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest42.setShardId(shardId46);
        java.lang.String str48 = deleteRequest42.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str50 = deleteRequest49.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest49.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest52.routing("delete {[][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress55 = deleteRequest54.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str60 = deleteRequest59.id();
        java.lang.String str61 = deleteRequest59.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str63 = deleteRequest62.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest62.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId66 = deleteRequest62.getParentTask();
        deleteRequest59.setParentTask(taskId66);
        deleteRequest54.setParentTask(taskId66);
        deleteRequest42.setParentTask(taskId66);
        org.elasticsearch.index.shard.ShardId shardId70 = deleteRequest42.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.index.VersionType versionType75 = deleteRequest74.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest42.versionType(versionType75);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel77 = deleteRequest42.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = deleteRequest35.consistencyLevel(writeConsistencyLevel77);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel79 = deleteRequest78.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = deleteRequest6.consistencyLevel(writeConsistencyLevel79);
        long long81 = deleteRequest6.primaryTerm();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + refreshPolicy10 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy10.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(task19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-3L) + "'", long25 == (-3L));
        org.junit.Assert.assertNull(transportAddress26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][][hi!]}" + "'", str27, "delete {[][][hi!]}");
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(timeValue32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNull(transportAddress38);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNull(transportAddress55);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(taskId66);
        org.junit.Assert.assertNull(shardId70);
        org.junit.Assert.assertNotNull(versionType75);
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel77 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel77.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest78);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel79 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel79.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest80);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 0L + "'", long81 == 0L);
    }

    @Test
    public void test7786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7786");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException2 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest4.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue9 = deleteRequest8.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest4.timeout(timeValue9);
        java.lang.String str11 = deleteRequest4.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str19 = deleteRequest18.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.type("delete {[][][]}");
        java.lang.String str26 = deleteRequest23.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest23.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId36 = null;
        org.elasticsearch.tasks.Task task37 = deleteRequest32.createTask(0L, "", "", taskId36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest32.setRefreshPolicy("");
        java.lang.String str40 = deleteRequest39.toString();
        java.lang.String[] strArray41 = deleteRequest39.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest39.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str52 = deleteRequest51.id();
        java.lang.String str53 = deleteRequest51.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str55 = deleteRequest54.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest54.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId58 = deleteRequest54.getParentTask();
        deleteRequest51.setParentTask(taskId58);
        deleteRequest47.setParentTask(taskId58);
        deleteRequest43.setParentTask(taskId58);
        deleteRequest28.setParentTask(taskId58);
        deleteRequest18.setParentTask(taskId58);
        org.elasticsearch.tasks.Task task64 = deleteRequest4.createTask((long) 100, "delete {[][][hi!]}", "hi!", taskId58);
        deleteRequest0.setParentTask(taskId58);
        org.elasticsearch.index.shard.ShardId shardId66 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest0.setShardId(shardId66);
        org.elasticsearch.common.unit.TimeValue timeValue68 = deleteRequest67.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress69 = deleteRequest67.remoteAddress();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "delete {[null][null][null]}" + "'", str1, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException2);
        org.junit.Assert.assertNotNull(timeValue9);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "delete {[][][]}" + "'", str26, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(task37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "delete {[][][]}" + "'", str40, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(taskId58);
        org.junit.Assert.assertNotNull(task64);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNotNull(timeValue68);
        org.junit.Assert.assertNull(transportAddress69);
    }

    @Test
    public void test7787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7787");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel1 = deleteRequest0.consistencyLevel();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy2 = deleteRequest0.getRefreshPolicy();
        deleteRequest0.setParentTask("delete {[hi!][null][null]}", (long) (short) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId13 = null;
        org.elasticsearch.tasks.Task task14 = deleteRequest9.createTask(0L, "", "", taskId13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest9.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType17 = deleteRequest9.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel18 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest0.consistencyLevel(writeConsistencyLevel18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.type("delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.version((long) ' ');
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel1 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel1.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + refreshPolicy2 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy2.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(versionType17);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel18 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel18.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
    }

    @Test
    public void test7788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7788");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.setRefreshPolicy(refreshPolicy14);
        long long16 = deleteRequest3.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId34 = null;
        org.elasticsearch.tasks.Task task35 = deleteRequest30.createTask(0L, "", "", taskId34);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy36 = deleteRequest30.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId44 = null;
        org.elasticsearch.tasks.Task task45 = deleteRequest40.createTask(0L, "", "", taskId44);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy46 = deleteRequest40.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest30.setRefreshPolicy(refreshPolicy46);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest26.setRefreshPolicy(refreshPolicy46);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest26.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        deleteRequest50.setParentTask("delete {[][][hi!]}", (long) (byte) 100);
        org.elasticsearch.common.transport.TransportAddress transportAddress54 = null;
        deleteRequest50.remoteAddress(transportAddress54);
        org.elasticsearch.index.VersionType versionType56 = deleteRequest50.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest21.versionType(versionType56);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest3.versionType(versionType56);
        org.elasticsearch.common.unit.TimeValue timeValue59 = deleteRequest58.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId67 = null;
        org.elasticsearch.tasks.Task task68 = deleteRequest63.createTask(0L, "", "", taskId67);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest63.setRefreshPolicy("");
        deleteRequest70.primaryTerm(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest70.type("hi!");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel75 = deleteRequest74.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest58.consistencyLevel(writeConsistencyLevel75);
        java.lang.String str77 = deleteRequest58.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress78 = deleteRequest58.remoteAddress();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(transportAddress13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(task35);
        org.junit.Assert.assertTrue("'" + refreshPolicy36 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy36.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task45);
        org.junit.Assert.assertTrue("'" + refreshPolicy46 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy46.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(versionType56);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(timeValue59);
        org.junit.Assert.assertNotNull(task68);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel75 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel75.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNull(transportAddress78);
    }

    @Test
    public void test7789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7789");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest10.toString();
        java.lang.String str12 = deleteRequest10.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest10.index("delete {[delete {[][null][null]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest10.version(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest10.parent("delete {[delete {[][delete {[delete {[][][hi!]}][null][null]}][]}][null][null]}");
        java.lang.String str21 = deleteRequest20.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long24 = deleteRequest23.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest23.index("");
        boolean boolean27 = deleteRequest23.getShouldPersistResult();
        java.lang.String str28 = deleteRequest23.toString();
        deleteRequest23.primaryTerm((long) '4');
        java.lang.String str31 = deleteRequest23.routing();
        org.elasticsearch.common.unit.TimeValue timeValue32 = deleteRequest23.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest20.timeout(timeValue32);
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][][]}" + "'", str12, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "delete {[][null][null]}" + "'", str28, "delete {[][null][null]}");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(timeValue32);
        org.junit.Assert.assertNotNull(deleteRequest33);
    }

    @Test
    public void test7790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7790");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel1 = deleteRequest0.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel2 = deleteRequest0.consistencyLevel();
        deleteRequest0.setParentTask("delete {[delete {[][][hi!]}][null][null]}", (long) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId13 = null;
        org.elasticsearch.tasks.Task task14 = deleteRequest9.createTask(0L, "", "", taskId13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest9.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType17 = deleteRequest9.versionType();
        java.lang.String str18 = deleteRequest9.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress19 = deleteRequest9.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy20 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest9.setRefreshPolicy(refreshPolicy20);
        long long22 = deleteRequest9.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue23 = deleteRequest9.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest0.timeout(timeValue23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.parent("delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId27 = deleteRequest24.shardId();
        boolean boolean28 = deleteRequest24.getShouldPersistResult();
        org.elasticsearch.index.VersionType versionType29 = deleteRequest24.versionType();
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel1 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel1.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel2 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel2.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(task14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(versionType17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(transportAddress19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertNotNull(timeValue23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(shardId27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(versionType29);
    }

    @Test
    public void test7791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7791");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        java.lang.String str4 = deleteRequest2.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest2.version((long) (short) 100);
        java.lang.String str7 = deleteRequest2.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest2.id("delete {[][][delete {[][delete {[null][null][null]}][delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}]}]}");
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest9);
    }

    @Test
    public void test7792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7792");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.version((long) (-1));
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.index("delete {[][delete {[][][]}][delete {[][][]}]}");
        boolean boolean8 = deleteRequest7.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.type("delete {[][delete {[null][null][null]}][]}");
        java.lang.String str11 = deleteRequest10.toString();
        org.elasticsearch.index.shard.ShardId shardId12 = deleteRequest10.shardId();
        java.lang.String str13 = deleteRequest10.index();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[delete {[][delete {[][][]}][delete {[][][]}]}][delete {[][delete {[null][null][null]}][]}][null]}" + "'", str11, "delete {[delete {[][delete {[][][]}][delete {[][][]}]}][delete {[][delete {[null][null][null]}][]}][null]}");
        org.junit.Assert.assertNull(shardId12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[][delete {[][][]}][delete {[][][]}]}" + "'", str13, "delete {[][delete {[][][]}][delete {[][][]}]}");
    }

    @Test
    public void test7793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7793");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel1 = deleteRequest0.consistencyLevel();
        java.lang.String str2 = deleteRequest0.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.index("hi!");
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.setShardId(shardId5);
        org.elasticsearch.common.unit.TimeValue timeValue7 = deleteRequest6.timeout();
        org.elasticsearch.index.VersionType versionType8 = deleteRequest6.versionType();
        boolean boolean9 = deleteRequest6.getShouldPersistResult();
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel1 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel1.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(timeValue7);
        org.junit.Assert.assertNotNull(versionType8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test7794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7794");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][delete {[hi!][][delete {[][][]}]}]}", "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][][hi!]}", "delete {[null][hi!][null]}");
    }

    @Test
    public void test7795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7795");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.getDescription();
        java.lang.String str5 = deleteRequest3.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str10 = deleteRequest9.id();
        java.lang.String str11 = deleteRequest9.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str13 = deleteRequest12.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest12.getParentTask();
        deleteRequest9.setParentTask(taskId16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel19 = deleteRequest18.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = deleteRequest18.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest9.consistencyLevel(writeConsistencyLevel20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest9.type("delete {[delete {[][][hi!]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest23.routing("delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy28 = deleteRequest23.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.setRefreshPolicy(refreshPolicy28);
        long long30 = deleteRequest29.primaryTerm();
        org.elasticsearch.common.transport.TransportAddress transportAddress31 = null;
        deleteRequest29.remoteAddress(transportAddress31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest29.id("delete {[delete {[null][null][null]}][null][null]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy35 = deleteRequest29.getRefreshPolicy();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][][]}" + "'", str4, "delete {[][][]}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel19 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel19.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel20 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel20.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertTrue("'" + refreshPolicy28 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy28.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + refreshPolicy35 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy35.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
    }

    @Test
    public void test7796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7796");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.version((long) (-1));
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.index("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.index.VersionType versionType8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.versionType(versionType8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str14 = deleteRequest13.getDescription();
        java.lang.String str15 = deleteRequest13.routing();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel16 = deleteRequest13.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest7.consistencyLevel(writeConsistencyLevel16);
        org.elasticsearch.index.shard.IndexShard indexShard18 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete19 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest7, indexShard18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[][][]}" + "'", str14, "delete {[][][]}");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel16 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel16.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest17);
    }

    @Test
    public void test7797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7797");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.type("delete {[hi!][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue5 = deleteRequest2.timeout();
        deleteRequest2.primaryTerm((long) 10);
        java.lang.String str8 = deleteRequest2.routing();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test7798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7798");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest10.indicesOptions();
        java.lang.String str13 = deleteRequest10.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str15 = deleteRequest14.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.version((long) (short) 100);
        deleteRequest14.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str21 = deleteRequest20.parent();
        org.elasticsearch.index.VersionType versionType22 = deleteRequest20.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest14.versionType(versionType22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.versionType(versionType22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.id("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        java.lang.String str27 = deleteRequest24.parent();
        java.lang.String[] strArray28 = deleteRequest24.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest24.version((long) (byte) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId38 = null;
        org.elasticsearch.tasks.Task task39 = deleteRequest34.createTask(0L, "", "", taskId38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest34.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType42 = deleteRequest34.versionType();
        java.lang.String str43 = deleteRequest34.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress44 = deleteRequest34.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy45 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest34.setRefreshPolicy(refreshPolicy45);
        long long47 = deleteRequest34.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue48 = deleteRequest34.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest50.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue55 = deleteRequest54.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest50.timeout(timeValue55);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str58 = deleteRequest57.parent();
        org.elasticsearch.index.VersionType versionType59 = deleteRequest57.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest50.versionType(versionType59);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest34.versionType(versionType59);
        org.elasticsearch.common.unit.TimeValue timeValue62 = deleteRequest61.timeout();
        org.elasticsearch.index.shard.ShardId shardId63 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest61.setShardId(shardId63);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy65 = deleteRequest61.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str70 = deleteRequest69.id();
        org.elasticsearch.index.shard.ShardId shardId71 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest69.setShardId(shardId71);
        org.elasticsearch.index.shard.ShardId shardId73 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest69.setShardId(shardId73);
        java.lang.String str75 = deleteRequest74.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId83 = null;
        org.elasticsearch.tasks.Task task84 = deleteRequest79.createTask(0L, "", "", taskId83);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest86 = deleteRequest79.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType87 = deleteRequest79.versionType();
        java.lang.String str88 = deleteRequest79.parent();
        org.elasticsearch.index.shard.ShardId shardId89 = deleteRequest79.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel90 = deleteRequest79.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest91 = deleteRequest74.consistencyLevel(writeConsistencyLevel90);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest92 = deleteRequest61.consistencyLevel(writeConsistencyLevel90);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest93 = deleteRequest30.consistencyLevel(writeConsistencyLevel90);
        java.lang.String[] strArray94 = deleteRequest30.indices();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[][][]}" + "'", str13, "delete {[][][]}");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(task39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(versionType42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(transportAddress44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 0L + "'", long47 == 0L);
        org.junit.Assert.assertNotNull(timeValue48);
        org.junit.Assert.assertNotNull(timeValue55);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(versionType59);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(timeValue62);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNull(refreshPolicy65);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNotNull(task84);
        org.junit.Assert.assertNotNull(deleteRequest86);
        org.junit.Assert.assertNotNull(versionType87);
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertNull(shardId89);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel90 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel90.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest91);
        org.junit.Assert.assertNotNull(deleteRequest92);
        org.junit.Assert.assertNotNull(deleteRequest93);
        org.junit.Assert.assertNotNull(strArray94);
    }

    @Test
    public void test7799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7799");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}", "delete {[][][hi!]}", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
    }

    @Test
    public void test7800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7800");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        java.lang.String str9 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str11 = deleteRequest10.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.routing("delete {[][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = deleteRequest15.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str21 = deleteRequest20.id();
        java.lang.String str22 = deleteRequest20.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str24 = deleteRequest23.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest23.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest23.getParentTask();
        deleteRequest20.setParentTask(taskId27);
        deleteRequest15.setParentTask(taskId27);
        deleteRequest3.setParentTask(taskId27);
        org.elasticsearch.action.support.IndicesOptions indicesOptions31 = deleteRequest3.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest3.type("delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard indexShard34 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete35 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest3, indexShard34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(transportAddress16);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(taskId27);
        org.junit.Assert.assertNotNull(indicesOptions31);
        org.junit.Assert.assertNotNull(deleteRequest33);
    }

    @Test
    public void test7801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7801");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.type("delete {[][][]}");
        java.lang.String str13 = deleteRequest12.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.routing("delete {[][delete {[delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}][delete {[hi!][null][null]}][hi!]}][]}");
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[][][]}" + "'", str13, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest15);
    }

    @Test
    public void test7802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7802");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}", "delete {[][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}][]}", "delete {[][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId11 = null;
        org.elasticsearch.tasks.Task task12 = deleteRequest7.createTask(0L, "", "", taskId11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.setRefreshPolicy("");
        java.lang.String[] strArray15 = deleteRequest14.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId23 = null;
        org.elasticsearch.tasks.Task task24 = deleteRequest19.createTask(0L, "", "", taskId23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest19.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest14.consistencyLevel(writeConsistencyLevel27);
        java.lang.String str29 = deleteRequest28.getDescription();
        long long30 = deleteRequest28.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}", "delete {[][null][null]}", "delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId42 = null;
        org.elasticsearch.tasks.Task task43 = deleteRequest38.createTask(0L, "", "", taskId42);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy44 = deleteRequest38.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest34.setRefreshPolicy(refreshPolicy44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest28.setRefreshPolicy(refreshPolicy44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest3.setRefreshPolicy(refreshPolicy44);
        org.elasticsearch.index.VersionType versionType48 = deleteRequest47.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel49 = deleteRequest47.consistencyLevel();
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest47.setShardId(shardId50);
        org.elasticsearch.tasks.TaskId taskId52 = deleteRequest51.getParentTask();
        org.junit.Assert.assertNotNull(task12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(task24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "delete {[][][]}" + "'", str29, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertNotNull(task43);
        org.junit.Assert.assertTrue("'" + refreshPolicy44 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy44.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(versionType48);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel49 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel49.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(taskId52);
    }

    @Test
    public void test7803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7803");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.setRefreshPolicy(refreshPolicy14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId26 = null;
        org.elasticsearch.tasks.Task task27 = deleteRequest22.createTask(0L, "", "", taskId26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.setRefreshPolicy("");
        java.lang.String[] strArray30 = deleteRequest29.indices();
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest29.setShardId(shardId31);
        long long33 = deleteRequest29.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str35 = deleteRequest34.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest34.parent("hi!");
        org.elasticsearch.tasks.TaskId taskId38 = deleteRequest34.getParentTask();
        deleteRequest29.setParentTask(taskId38);
        org.elasticsearch.tasks.Task task40 = deleteRequest15.createTask((long) (byte) -1, "delete {[][delete {[][][hi!]}][delete {[][][]}]}", "delete {[][null][null]}", taskId38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest42.version((long) (-1));
        org.elasticsearch.common.transport.TransportAddress transportAddress45 = null;
        deleteRequest44.remoteAddress(transportAddress45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest44.index("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId56 = null;
        org.elasticsearch.tasks.Task task57 = deleteRequest52.createTask(0L, "", "", taskId56);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest52.setRefreshPolicy("");
        java.lang.String str60 = deleteRequest59.toString();
        java.lang.String[] strArray61 = deleteRequest59.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest59.index("");
        org.elasticsearch.common.unit.TimeValue timeValue64 = deleteRequest63.timeout();
        deleteRequest63.setParentTask("hi!", (long) 100);
        java.lang.String[] strArray68 = deleteRequest63.indices();
        org.elasticsearch.index.VersionType versionType69 = deleteRequest63.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest48.versionType(versionType69);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest15.versionType(versionType69);
        org.elasticsearch.common.transport.TransportAddress transportAddress72 = deleteRequest15.remoteAddress();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel73 = deleteRequest15.consistencyLevel();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(transportAddress13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(task27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-3L) + "'", long33 == (-3L));
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "delete {[null][null][null]}" + "'", str35, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(taskId38);
        org.junit.Assert.assertNotNull(task40);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(task57);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "delete {[][][]}" + "'", str60, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(timeValue64);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(versionType69);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNull(transportAddress72);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel73 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel73.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test7804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7804");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException8 = deleteRequest7.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions24 = deleteRequest22.indicesOptions();
        java.lang.String str25 = deleteRequest22.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str27 = deleteRequest26.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest26.version((long) (short) 100);
        deleteRequest26.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str33 = deleteRequest32.parent();
        org.elasticsearch.index.VersionType versionType34 = deleteRequest32.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest26.versionType(versionType34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest22.versionType(versionType34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest10.versionType(versionType34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest7.versionType(versionType34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.type("delete {[hi!][null][null]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy41 = deleteRequest40.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId49 = null;
        org.elasticsearch.tasks.Task task50 = deleteRequest45.createTask(0L, "", "", taskId49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest45.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel53 = deleteRequest52.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions54 = deleteRequest52.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId55 = null;
        deleteRequest52.setParentTask(taskId55);
        deleteRequest52.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest52.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.index.VersionType versionType61 = deleteRequest60.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest40.versionType(versionType61);
        java.lang.String str63 = deleteRequest62.index();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(actionRequestValidationException8);
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[][][]}" + "'", str25, "delete {[][][]}");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(versionType34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertTrue("'" + refreshPolicy41 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy41.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task50);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel53 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel53.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions54);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(versionType61);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
    }

    @Test
    public void test7805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7805");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][null][null]}", throwable2, "delete {[][][hi!]}");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting5 = shardFailure4.routing;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = shardFailure4.routing;
        java.lang.String str7 = shardFailure4.indexUUID;
        java.lang.String str8 = shardFailure4.reason;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting9 = shardFailure4.routing;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = shardFailure4.routing;
        java.lang.String str11 = shardFailure4.reason;
        java.lang.String str12 = shardFailure4.indexUUID;
        java.lang.String str13 = shardFailure4.reason;
        java.lang.Throwable throwable14 = shardFailure4.cause;
        java.lang.String str15 = shardFailure4.indexUUID;
        java.lang.Throwable throwable16 = shardFailure4.cause;
        org.junit.Assert.assertNull(shardRouting5);
        org.junit.Assert.assertNull(shardRouting6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[][][hi!]}" + "'", str7, "delete {[][][hi!]}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[null][null][null]}" + "'", str8, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(shardRouting9);
        org.junit.Assert.assertNull(shardRouting10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[null][null][null]}" + "'", str11, "delete {[null][null][null]}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][][hi!]}" + "'", str12, "delete {[][][hi!]}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[null][null][null]}" + "'", str13, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(throwable14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[][][hi!]}" + "'", str15, "delete {[][][hi!]}");
        org.junit.Assert.assertNull(throwable16);
    }

    @Test
    public void test7806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7806");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel1 = deleteRequest0.consistencyLevel();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy2 = deleteRequest0.getRefreshPolicy();
        deleteRequest0.setParentTask("delete {[hi!][null][null]}", (long) (short) 10);
        boolean boolean6 = deleteRequest0.getShouldPersistResult();
        java.lang.String str7 = deleteRequest0.id();
        java.lang.String str8 = deleteRequest0.parent();
        org.elasticsearch.action.support.IndicesOptions indicesOptions9 = deleteRequest0.indicesOptions();
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel1 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel1.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + refreshPolicy2 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy2.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(indicesOptions9);
    }

    @Test
    public void test7807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7807");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}", "delete {[][][hi!]}", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str11 = deleteRequest10.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.id("hi!");
        org.elasticsearch.tasks.TaskId taskId14 = deleteRequest13.getParentTask();
        org.elasticsearch.tasks.TaskId taskId15 = deleteRequest13.getParentTask();
        org.elasticsearch.tasks.Task task16 = deleteRequest3.createTask((-1L), "", "hi!", taskId15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest3.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType25 = deleteRequest24.versionType();
        java.lang.String str26 = deleteRequest24.index();
        org.elasticsearch.common.unit.TimeValue timeValue27 = deleteRequest24.timeout();
        org.elasticsearch.index.VersionType versionType28 = deleteRequest24.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest18.versionType(versionType28);
        org.elasticsearch.common.unit.TimeValue timeValue30 = deleteRequest18.timeout();
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(taskId14);
        org.junit.Assert.assertNotNull(taskId15);
        org.junit.Assert.assertNotNull(task16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(versionType25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(timeValue27);
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(timeValue30);
    }

    @Test
    public void test7808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7808");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.id("delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        boolean boolean10 = deleteRequest9.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.parent("hi!");
        deleteRequest14.setParentTask("delete {[delete {[][delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[][][]}]}][delete {[null][null][null]}]}][null][null]}", (-3L));
        long long18 = deleteRequest14.version();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-3L) + "'", long18 == (-3L));
    }

    @Test
    public void test7809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7809");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest10.indicesOptions();
        java.lang.String str13 = deleteRequest10.toString();
        deleteRequest10.primaryTerm((long) '4');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest10.index("delete {[][delete {[delete {[][][hi!]}][null][null]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.index("delete {[][][hi!]}");
        java.lang.String str24 = deleteRequest23.parent();
        java.lang.String str25 = deleteRequest23.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest23.parent("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest23.parent("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.routing("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest31.index("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        java.lang.String str34 = deleteRequest31.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str39 = deleteRequest38.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest38.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId42 = deleteRequest38.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest38.id("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str49 = deleteRequest48.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest48.id("hi!");
        org.elasticsearch.tasks.TaskId taskId52 = deleteRequest51.getParentTask();
        org.elasticsearch.tasks.TaskId taskId53 = deleteRequest51.getParentTask();
        deleteRequest44.setParentTask(taskId53);
        org.elasticsearch.tasks.Task task55 = deleteRequest31.createTask(0L, "", "delete {[null][null][null]}", taskId53);
        org.elasticsearch.tasks.Task task56 = deleteRequest17.createTask(52L, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}", "delete {[][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][delete {[][][]}]}", taskId53);
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[][][]}" + "'", str13, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str25, "delete {[delete {[][][hi!]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}" + "'", str34, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(taskId42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(taskId52);
        org.junit.Assert.assertNotNull(taskId53);
        org.junit.Assert.assertNotNull(task55);
        org.junit.Assert.assertNotNull(task56);
    }

    @Test
    public void test7810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7810");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str5 = deleteRequest4.parent();
        deleteRequest4.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest4.setRefreshPolicy("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException10 = deleteRequest9.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure12 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][delete {[][][hi!]}][delete {[][][]}]}", (java.lang.Throwable) actionRequestValidationException10, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure14 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[hi!][null][null]}][delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}][delete {[delete {[][null][null]}][][]}]}", (java.lang.Throwable) actionRequestValidationException10, "delete {[delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}][delete {[hi!][null][null]}][null]}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(actionRequestValidationException10);
    }

    @Test
    public void test7811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7811");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        deleteRequest0.setParentTask("delete {[][][hi!]}", (long) '#');
        boolean boolean5 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.action.support.IndicesOptions indicesOptions6 = deleteRequest0.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest0.version(0L);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel9 = deleteRequest8.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest8.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest12.consistencyLevel();
        java.lang.String str14 = deleteRequest12.parent();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel15 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel16 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest11.consistencyLevel(writeConsistencyLevel16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest11.index("delete {[][null][delete {[][null][delete {[][delete {[][][hi!]}][delete {[][][]}]}]}]}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(indicesOptions6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel9 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel9.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel15 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel15.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel16 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel16.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
    }

    @Test
    public void test7812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7812");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[hi!][null][null]}", "delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.parent("delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}");
        boolean boolean6 = deleteRequest5.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.routing("delete {[][delete {[][][]}][delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}]}");
        boolean boolean9 = deleteRequest8.getShouldPersistResult();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test7813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7813");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy9 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId17 = null;
        org.elasticsearch.tasks.Task task18 = deleteRequest13.createTask(0L, "", "", taskId17);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy19 = deleteRequest13.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest3.setRefreshPolicy(refreshPolicy19);
        java.lang.String str21 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest3.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest3.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.routing("delete {[][][delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}]}");
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertTrue("'" + refreshPolicy9 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy9.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertTrue("'" + refreshPolicy19 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy19.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[][][]}" + "'", str21, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
    }

    @Test
    public void test7814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7814");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy9 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId17 = null;
        org.elasticsearch.tasks.Task task18 = deleteRequest13.createTask(0L, "", "", taskId17);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy19 = deleteRequest13.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest3.setRefreshPolicy(refreshPolicy19);
        java.lang.String str21 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest3.id("hi!");
        deleteRequest23.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest23.index("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy28 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest23.setRefreshPolicy(refreshPolicy28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.routing("delete {[delete {[hi!][null][null]}][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue32 = deleteRequest29.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}", "delete {[][delete {[][][hi!]}][delete {[][][]}]}", "delete {[][delete {[hi!][null][null]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue39 = deleteRequest38.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress40 = null;
        deleteRequest38.remoteAddress(transportAddress40);
        org.elasticsearch.common.unit.TimeValue timeValue42 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest38.timeout(timeValue42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest36.timeout(timeValue42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest29.timeout(timeValue42);
        java.lang.String[] strArray46 = deleteRequest29.indices();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput47 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest29.writeTo(streamOutput47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertTrue("'" + refreshPolicy9 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy9.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertTrue("'" + refreshPolicy19 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy19.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[][][]}" + "'", str21, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(timeValue32);
        org.junit.Assert.assertNotNull(timeValue39);
        org.junit.Assert.assertNotNull(timeValue42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(strArray46);
    }

    @Test
    public void test7815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7815");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.setRefreshPolicy("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy10 = deleteRequest6.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId18 = null;
        org.elasticsearch.tasks.Task task19 = deleteRequest14.createTask(0L, "", "", taskId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType22 = deleteRequest14.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest14.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest6.consistencyLevel(writeConsistencyLevel23);
        deleteRequest6.primaryTerm((long) '#');
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy27 = deleteRequest6.getRefreshPolicy();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + refreshPolicy10 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy10.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(task19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + refreshPolicy27 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy27.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
    }

    @Test
    public void test7816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7816");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long2 = deleteRequest1.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest1.parent("hi!");
        org.elasticsearch.common.io.stream.StreamInput streamInput7 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest1.readFrom(streamInput7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
    }

    @Test
    public void test7817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7817");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.setRefreshPolicy("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy10 = deleteRequest6.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId18 = null;
        org.elasticsearch.tasks.Task task19 = deleteRequest14.createTask(0L, "", "", taskId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType22 = deleteRequest14.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest14.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest6.consistencyLevel(writeConsistencyLevel23);
        org.elasticsearch.index.shard.ShardId shardId25 = deleteRequest24.shardId();
        org.elasticsearch.index.shard.ShardId shardId26 = deleteRequest24.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue27 = deleteRequest24.timeout();
        org.elasticsearch.common.unit.TimeValue timeValue28 = deleteRequest24.timeout();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + refreshPolicy10 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy10.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(task19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNull(shardId25);
        org.junit.Assert.assertNull(shardId26);
        org.junit.Assert.assertNotNull(timeValue27);
        org.junit.Assert.assertNotNull(timeValue28);
    }

    @Test
    public void test7818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7818");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("delete {[][][]}");
        java.lang.String str10 = deleteRequest7.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId22 = null;
        org.elasticsearch.tasks.Task task23 = deleteRequest18.createTask(0L, "", "", taskId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest18.setRefreshPolicy("");
        java.lang.String[] strArray26 = deleteRequest25.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId34 = null;
        org.elasticsearch.tasks.Task task35 = deleteRequest30.createTask(0L, "", "", taskId34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest30.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = deleteRequest37.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest25.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue42 = deleteRequest41.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress43 = null;
        deleteRequest41.remoteAddress(transportAddress43);
        org.elasticsearch.common.unit.TimeValue timeValue45 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest41.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest25.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest14.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest3.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest3.type("delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress52 = null;
        deleteRequest3.remoteAddress(transportAddress52);
        deleteRequest3.primaryTerm((long) (short) -1);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][][]}" + "'", str10, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(task35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel38 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel38.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(timeValue42);
        org.junit.Assert.assertNotNull(timeValue45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest51);
    }

    @Test
    public void test7819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7819");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        java.lang.String str4 = deleteRequest2.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest2.version((long) (short) 100);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel7 = deleteRequest6.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId15 = null;
        org.elasticsearch.tasks.Task task16 = deleteRequest11.createTask(0L, "", "", taskId15);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy17 = deleteRequest11.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest6.setRefreshPolicy(refreshPolicy17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId29 = null;
        org.elasticsearch.tasks.Task task30 = deleteRequest25.createTask(0L, "", "", taskId29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest25.setRefreshPolicy("");
        java.lang.String str33 = deleteRequest32.toString();
        java.lang.String[] strArray34 = deleteRequest32.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest32.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str45 = deleteRequest44.id();
        java.lang.String str46 = deleteRequest44.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str48 = deleteRequest47.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest47.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId51 = deleteRequest47.getParentTask();
        deleteRequest44.setParentTask(taskId51);
        deleteRequest40.setParentTask(taskId51);
        deleteRequest36.setParentTask(taskId51);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest36.parent("delete {[delete {[][][hi!]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId67 = null;
        org.elasticsearch.tasks.Task task68 = deleteRequest63.createTask(0L, "", "", taskId67);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest63.setRefreshPolicy("");
        java.lang.String[] strArray71 = deleteRequest70.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long74 = deleteRequest73.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str76 = deleteRequest75.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue79 = deleteRequest78.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = deleteRequest75.timeout(timeValue79);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest82 = deleteRequest80.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId83 = deleteRequest82.getParentTask();
        deleteRequest73.setParentTask(taskId83);
        deleteRequest70.setParentTask(taskId83);
        org.elasticsearch.tasks.Task task86 = deleteRequest36.createTask((long) ' ', "delete {[][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][delete {[][][]}]}", "delete {[delete {[delete {[][][hi!]}][null][null]}][null][null]}", taskId83);
        org.elasticsearch.tasks.Task task87 = deleteRequest6.createTask((long) (byte) 10, "delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}", "delete {[null][delete {[][delete {[hi!][null][null]}][hi!]}][delete {[][][hi!]}]}", taskId83);
        java.lang.String[] strArray88 = deleteRequest6.indices();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel7 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel7.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(task16);
        org.junit.Assert.assertTrue("'" + refreshPolicy17 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy17.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(task30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "delete {[][][]}" + "'", str33, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(taskId51);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(task68);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 0L + "'", long74 == 0L);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNotNull(timeValue79);
        org.junit.Assert.assertNotNull(deleteRequest80);
        org.junit.Assert.assertNotNull(deleteRequest82);
        org.junit.Assert.assertNotNull(taskId83);
        org.junit.Assert.assertNotNull(task86);
        org.junit.Assert.assertNotNull(task87);
        org.junit.Assert.assertNotNull(strArray88);
    }

    @Test
    public void test7820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7820");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.parent("delete {[][][]}");
        org.elasticsearch.index.VersionType versionType12 = deleteRequest11.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest8.versionType(versionType12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.parent("delete {[hi!][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue16 = deleteRequest13.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest13.type("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions19 = deleteRequest13.indicesOptions();
        deleteRequest13.primaryTerm((long) (short) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest13.type("delete {[][delete {[][][]}][delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}]}");
        org.elasticsearch.common.unit.TimeValue timeValue24 = deleteRequest23.timeout();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(indicesOptions19);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(timeValue24);
    }

    @Test
    public void test7821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7821");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("delete {[null][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest7.setShardId(shardId10);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException12 = deleteRequest7.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure14 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}", (java.lang.Throwable) actionRequestValidationException12, "delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure16 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][null][null]}", (java.lang.Throwable) actionRequestValidationException12, "delete {[delete {[][][hi!]}][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure18 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[hi!][][delete {[][][]}]}", (java.lang.Throwable) actionRequestValidationException12, "");
        java.lang.String str19 = shardFailure18.reason;
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(actionRequestValidationException12);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[hi!][][delete {[][][]}]}" + "'", str19, "delete {[hi!][][delete {[][][]}]}");
    }

    @Test
    public void test7822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7822");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.setRefreshPolicy("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy10 = deleteRequest6.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId18 = null;
        org.elasticsearch.tasks.Task task19 = deleteRequest14.createTask(0L, "", "", taskId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType22 = deleteRequest14.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest14.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest6.consistencyLevel(writeConsistencyLevel23);
        long long25 = deleteRequest6.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId33 = null;
        org.elasticsearch.tasks.Task task34 = deleteRequest29.createTask(0L, "", "", taskId33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest29.setRefreshPolicy("");
        java.lang.String str37 = deleteRequest36.toString();
        java.lang.String[] strArray38 = deleteRequest36.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest36.index("");
        org.elasticsearch.common.unit.TimeValue timeValue41 = deleteRequest40.timeout();
        org.elasticsearch.index.VersionType versionType42 = deleteRequest40.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest6.versionType(versionType42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest6.version(1L);
        java.lang.String str46 = deleteRequest6.index();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + refreshPolicy10 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy10.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(task19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-3L) + "'", long25 == (-3L));
        org.junit.Assert.assertNotNull(task34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "delete {[][][]}" + "'", str37, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(timeValue41);
        org.junit.Assert.assertNotNull(versionType42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
    }

    @Test
    public void test7823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7823");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[][delete {[][null][null]}][delete {[][][]}]}]}", "delete {[][delete {[delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[delete {[][][hi!]}][null][delete {[][][]}]}][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}]}][]}", "delete {[delete {[][delete {[null][null][null]}][delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}]}][delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}][]}");
    }

    @Test
    public void test7824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7824");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest7.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.id("delete {[][][hi!]}");
        java.lang.String str11 = deleteRequest10.type();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException12 = deleteRequest10.validate();
        java.lang.String str13 = deleteRequest10.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(taskId8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(actionRequestValidationException12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[null][null][delete {[][][hi!]}]}" + "'", str13, "delete {[null][null][delete {[][][hi!]}]}");
    }

    @Test
    public void test7825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7825");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.setRefreshPolicy(refreshPolicy14);
        org.elasticsearch.action.support.IndicesOptions indicesOptions16 = deleteRequest3.indicesOptions();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException17 = deleteRequest3.validate();
        java.lang.String[] strArray18 = deleteRequest3.indices();
        java.lang.String str19 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str21 = deleteRequest20.parent();
        deleteRequest20.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest20.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.type("delete {[null][null][null]}");
        org.elasticsearch.index.VersionType versionType28 = deleteRequest27.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.versionType(versionType28);
        java.lang.String str30 = deleteRequest3.routing();
        deleteRequest3.primaryTerm((long) ' ');
        org.elasticsearch.action.support.IndicesOptions indicesOptions33 = deleteRequest3.indicesOptions();
        org.elasticsearch.common.transport.TransportAddress transportAddress34 = deleteRequest3.remoteAddress();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(transportAddress13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(indicesOptions16);
        org.junit.Assert.assertNull(actionRequestValidationException17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(indicesOptions33);
        org.junit.Assert.assertNull(transportAddress34);
    }

    @Test
    public void test7826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7826");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        deleteRequest0.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.setRefreshPolicy("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException6 = deleteRequest5.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.index("delete {[hi!][null][null]}");
        deleteRequest5.setParentTask("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}", 10L);
        java.lang.String str12 = deleteRequest5.parent();
        java.lang.String[] strArray13 = deleteRequest5.indices();
        org.elasticsearch.index.VersionType versionType14 = deleteRequest5.versionType();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(actionRequestValidationException6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(versionType14);
    }

    @Test
    public void test7827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7827");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.setRefreshPolicy("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy10 = deleteRequest6.getRefreshPolicy();
        java.lang.String str11 = deleteRequest6.index();
        java.lang.String[] strArray12 = deleteRequest6.indices();
        java.lang.String str13 = deleteRequest6.type();
        org.elasticsearch.tasks.TaskId taskId14 = deleteRequest6.getParentTask();
        long long15 = deleteRequest6.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue16 = deleteRequest6.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest6.routing("delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][][hi!]}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + refreshPolicy10 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy10.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(taskId14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(deleteRequest18);
    }

    @Test
    public void test7828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7828");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.parent();
        java.lang.String str13 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str18 = deleteRequest17.id();
        org.elasticsearch.common.transport.TransportAddress transportAddress19 = deleteRequest17.remoteAddress();
        org.elasticsearch.index.VersionType versionType20 = deleteRequest17.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel21 = deleteRequest17.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest3.consistencyLevel(writeConsistencyLevel21);
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.setShardId(shardId23);
        java.lang.String str25 = deleteRequest24.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest24.routing("delete {[delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}][null][null]}");
        java.lang.String str28 = deleteRequest24.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest24.routing("delete {[][][delete {[delete {[][null][null]}][][]}]}");
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[][][]}" + "'", str13, "delete {[][][]}");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNull(transportAddress19);
        org.junit.Assert.assertNotNull(versionType20);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel21 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel21.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[][][]}" + "'", str25, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "delete {[][][]}" + "'", str28, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest30);
    }

    @Test
    public void test7829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7829");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.tasks.TaskId taskId6 = deleteRequest3.getParentTask();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest3.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = null;
        deleteRequest9.remoteAddress(transportAddress11);
        org.elasticsearch.common.unit.TimeValue timeValue13 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest9.timeout(timeValue13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.timeout(timeValue13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str23 = deleteRequest22.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.type("delete {[][][]}");
        java.lang.String str30 = deleteRequest27.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest27.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId40 = null;
        org.elasticsearch.tasks.Task task41 = deleteRequest36.createTask(0L, "", "", taskId40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest36.setRefreshPolicy("");
        java.lang.String str44 = deleteRequest43.toString();
        java.lang.String[] strArray45 = deleteRequest43.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest43.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str56 = deleteRequest55.id();
        java.lang.String str57 = deleteRequest55.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str59 = deleteRequest58.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest58.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId62 = deleteRequest58.getParentTask();
        deleteRequest55.setParentTask(taskId62);
        deleteRequest51.setParentTask(taskId62);
        deleteRequest47.setParentTask(taskId62);
        deleteRequest32.setParentTask(taskId62);
        deleteRequest22.setParentTask(taskId62);
        org.elasticsearch.tasks.Task task68 = deleteRequest15.createTask((long) (short) -1, "delete {[hi!][null][null]}", "hi!", taskId62);
        java.lang.String str69 = deleteRequest15.getDescription();
        org.elasticsearch.common.unit.TimeValue timeValue70 = deleteRequest15.timeout();
        java.lang.String str71 = deleteRequest15.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest15.index("delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}");
        org.elasticsearch.common.unit.TimeValue timeValue74 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest15.timeout(timeValue74);
        java.lang.String str76 = deleteRequest15.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = deleteRequest15.routing("delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard indexShard79 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult80 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest15, indexShard79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(taskId6);
        org.junit.Assert.assertNull(actionRequestValidationException7);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "delete {[][][]}" + "'", str30, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(task41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "delete {[][][]}" + "'", str44, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(taskId62);
        org.junit.Assert.assertNotNull(task68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "delete {[][][]}" + "'", str69, "delete {[][][]}");
        org.junit.Assert.assertNotNull(timeValue70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "delete {[][][]}" + "'", str71, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest73);
        org.junit.Assert.assertNotNull(deleteRequest75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
        org.junit.Assert.assertNotNull(deleteRequest78);
    }

    @Test
    public void test7830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7830");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest11.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue16 = deleteRequest15.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest11.timeout(timeValue16);
        java.lang.String str18 = deleteRequest11.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException19 = deleteRequest11.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure21 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[delete {[][][hi!]}][null][null]}", (java.lang.Throwable) actionRequestValidationException19, "delete {[][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure23 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "", (java.lang.Throwable) actionRequestValidationException19, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure25 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "hi!", (java.lang.Throwable) actionRequestValidationException19, "delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure27 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[null][null][null]}", (java.lang.Throwable) actionRequestValidationException19, "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure29 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[][][]}][null][null]}", (java.lang.Throwable) actionRequestValidationException19, "delete {[][][hi!]}");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting30 = shardFailure29.routing;
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[][null][null]}" + "'", str18, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException19);
        org.junit.Assert.assertNull(shardRouting30);
    }

    @Test
    public void test7831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7831");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}][delete {[hi!][null][null]}][hi!]}", throwable2, "delete {[null][null][delete {[null][null][null]}]}");
    }

    @Test
    public void test7832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7832");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.consistencyLevel(writeConsistencyLevel23);
        deleteRequest24.setParentTask("hi!", (long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest24.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest24.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId39 = null;
        org.elasticsearch.tasks.Task task40 = deleteRequest35.createTask(0L, "", "", taskId39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest35.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel43 = deleteRequest42.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions44 = deleteRequest42.indicesOptions();
        java.lang.String str45 = deleteRequest42.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str47 = deleteRequest46.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest46.version((long) (short) 100);
        deleteRequest46.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str53 = deleteRequest52.parent();
        org.elasticsearch.index.VersionType versionType54 = deleteRequest52.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest46.versionType(versionType54);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest42.versionType(versionType54);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest31.versionType(versionType54);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest57.parent("");
        org.elasticsearch.index.shard.ShardId shardId60 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest59.setShardId(shardId60);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy62 = deleteRequest61.getRefreshPolicy();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(task40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel43 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel43.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "delete {[][][]}" + "'", str45, "delete {[][][]}");
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(versionType54);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertTrue("'" + refreshPolicy62 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy62.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
    }

    @Test
    public void test7833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7833");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.tasks.TaskId taskId6 = deleteRequest3.getParentTask();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest3.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = null;
        deleteRequest9.remoteAddress(transportAddress11);
        org.elasticsearch.common.unit.TimeValue timeValue13 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest9.timeout(timeValue13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.timeout(timeValue13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.version((long) ' ');
        long long18 = deleteRequest17.primaryTerm();
        java.lang.String str19 = deleteRequest17.routing();
        org.elasticsearch.common.transport.TransportAddress transportAddress20 = null;
        deleteRequest17.remoteAddress(transportAddress20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest17.parent("hi!");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException24 = deleteRequest17.validate();
        deleteRequest17.primaryTerm((long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str28 = deleteRequest27.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue31 = deleteRequest30.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest27.timeout(timeValue31);
        org.elasticsearch.common.transport.TransportAddress transportAddress33 = null;
        deleteRequest27.remoteAddress(transportAddress33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType41 = deleteRequest40.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress46 = deleteRequest45.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId54 = null;
        org.elasticsearch.tasks.Task task55 = deleteRequest50.createTask(0L, "", "", taskId54);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy56 = deleteRequest50.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest45.setRefreshPolicy(refreshPolicy56);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest40.setRefreshPolicy(refreshPolicy56);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel60 = deleteRequest59.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel61 = deleteRequest59.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest40.consistencyLevel(writeConsistencyLevel61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest27.consistencyLevel(writeConsistencyLevel61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest17.consistencyLevel(writeConsistencyLevel61);
        long long65 = deleteRequest17.version();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(taskId6);
        org.junit.Assert.assertNull(actionRequestValidationException7);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(actionRequestValidationException24);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(timeValue31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(versionType41);
        org.junit.Assert.assertNull(transportAddress46);
        org.junit.Assert.assertNotNull(task55);
        org.junit.Assert.assertTrue("'" + refreshPolicy56 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy56.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel60 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel60.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel61 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel61.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 32L + "'", long65 == 32L);
    }

    @Test
    public void test7834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7834");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str9 = deleteRequest8.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException10 = deleteRequest8.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure12 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "hi!", (java.lang.Throwable) actionRequestValidationException10, "delete {[][][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure14 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[][][]}", (java.lang.Throwable) actionRequestValidationException10, "delete {[][][]}");
        java.lang.String str15 = shardFailure14.indexUUID;
        java.lang.Throwable throwable16 = shardFailure14.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure18 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", throwable16, "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}][delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure20 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[][null][null]}][null][null]}", throwable16, "delete {[delete {[hi!][null][null]}][null][null]}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[null][null][null]}" + "'", str9, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException10);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[][][]}" + "'", str15, "delete {[][][]}");
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable16.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test7835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7835");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "hi!", throwable2, "delete {[null][null][null]}");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting5 = shardFailure4.routing;
        java.lang.Throwable throwable6 = shardFailure4.cause;
        java.lang.String str7 = shardFailure4.reason;
        java.lang.String str8 = shardFailure4.reason;
        java.lang.String str9 = shardFailure4.reason;
        java.lang.String str10 = shardFailure4.indexUUID;
        java.lang.Throwable throwable11 = shardFailure4.cause;
        java.lang.String str12 = shardFailure4.indexUUID;
        org.junit.Assert.assertNull(shardRouting5);
        org.junit.Assert.assertNull(throwable6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[null][null][null]}" + "'", str10, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(throwable11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[null][null][null]}" + "'", str12, "delete {[null][null][null]}");
    }

    @Test
    public void test7836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7836");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.routing("delete {[null][null][delete {[null][null][null]}]}");
        deleteRequest3.primaryTerm(0L);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
    }

    @Test
    public void test7837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7837");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        deleteRequest0.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.type("delete {[null][null][null]}");
        java.lang.String str8 = deleteRequest5.parent();
        boolean boolean9 = deleteRequest5.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest5.index("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str13 = deleteRequest12.parent();
        org.elasticsearch.index.VersionType versionType14 = deleteRequest12.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.type("delete {[][][hi!]}");
        org.elasticsearch.common.unit.TimeValue timeValue21 = deleteRequest20.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest12.timeout(timeValue21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest11.timeout(timeValue21);
        deleteRequest11.primaryTerm(0L);
        java.lang.String str26 = deleteRequest11.parent();
        deleteRequest11.setParentTask("delete {[delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][delete {[][][]}][delete {[][][]}]}][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}]}", (long) ' ');
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(timeValue21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test7838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7838");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.index();
        org.elasticsearch.index.shard.ShardId shardId5 = deleteRequest3.shardId();
        java.lang.String str6 = deleteRequest3.index();
        deleteRequest3.primaryTerm((long) (-1));
        java.lang.String str9 = deleteRequest3.id();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(shardId5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test7839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7839");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str13 = deleteRequest12.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException14 = deleteRequest12.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure16 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "hi!", (java.lang.Throwable) actionRequestValidationException14, "delete {[][][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure18 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "", (java.lang.Throwable) actionRequestValidationException14, "delete {[][][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure20 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[][delete {[][][]}][delete {[][][]}]}", (java.lang.Throwable) actionRequestValidationException14, "");
        java.lang.Throwable throwable21 = shardFailure20.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure23 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "hi!", throwable21, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure25 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}", throwable21, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure27 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][delete {[hi!][null][null]}][hi!]}", throwable21, "delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        java.lang.String str28 = shardFailure27.reason;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting29 = shardFailure27.routing;
        java.lang.String str30 = shardFailure27.indexUUID;
        java.lang.String str31 = shardFailure27.indexUUID;
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[null][null][null]}" + "'", str13, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException14);
        org.junit.Assert.assertNotNull(throwable21);
        org.junit.Assert.assertEquals(throwable21.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable21.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable21.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "delete {[][delete {[hi!][null][null]}][hi!]}" + "'", str28, "delete {[][delete {[hi!][null][null]}][hi!]}");
        org.junit.Assert.assertNull(shardRouting29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "delete {[][delete {[][][hi!]}][delete {[][][]}]}" + "'", str30, "delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "delete {[][delete {[][][hi!]}][delete {[][][]}]}" + "'", str31, "delete {[][delete {[][][hi!]}][delete {[][][]}]}");
    }

    @Test
    public void test7840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7840");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest10.indicesOptions();
        java.lang.String str13 = deleteRequest10.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str15 = deleteRequest14.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.version((long) (short) 100);
        deleteRequest14.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str21 = deleteRequest20.parent();
        org.elasticsearch.index.VersionType versionType22 = deleteRequest20.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest14.versionType(versionType22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.versionType(versionType22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.parent("delete {[][][]}");
        org.elasticsearch.index.VersionType versionType28 = deleteRequest27.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest10.versionType(versionType28);
        java.lang.String str30 = deleteRequest10.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest10.type("delete {[][][delete {[delete {[][null][null]}][][]}]}");
        deleteRequest10.primaryTerm((long) (byte) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][hi!]}][null][null]}", "delete {[][][]}", "");
        org.elasticsearch.common.unit.TimeValue timeValue39 = deleteRequest38.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest10.timeout(timeValue39);
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[][][]}" + "'", str13, "delete {[][][]}");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "delete {[][][]}" + "'", str30, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(timeValue39);
        org.junit.Assert.assertNotNull(deleteRequest40);
    }

    @Test
    public void test7841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7841");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}][delete {[hi!][null][null]}][hi!]}][]}");
    }

    @Test
    public void test7842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7842");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest10.toString();
        java.lang.String[] strArray12 = deleteRequest10.indices();
        deleteRequest10.primaryTerm(0L);
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest10.timeout();
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest10.getParentTask();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(taskId16);
    }

    @Test
    public void test7843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7843");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.setRefreshPolicy(refreshPolicy14);
        org.elasticsearch.action.support.IndicesOptions indicesOptions16 = deleteRequest3.indicesOptions();
        java.lang.String str17 = deleteRequest3.parent();
        boolean boolean18 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str23 = deleteRequest22.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long29 = deleteRequest28.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str31 = deleteRequest30.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue34 = deleteRequest33.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest30.timeout(timeValue34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest35.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId38 = deleteRequest37.getParentTask();
        deleteRequest28.setParentTask(taskId38);
        org.elasticsearch.tasks.Task task40 = deleteRequest22.createTask((long) ' ', "delete {[][][hi!]}", "delete {[][][]}", taskId38);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel41 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest3.consistencyLevel(writeConsistencyLevel41);
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(transportAddress13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(indicesOptions16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[][][]}" + "'", str23, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(timeValue34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(taskId38);
        org.junit.Assert.assertNotNull(task40);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel41 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel41.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest42);
    }

    @Test
    public void test7844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7844");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][hi!]}][null][null]}", "delete {[][][]}", "");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel4 = deleteRequest3.consistencyLevel();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = null;
        deleteRequest6.remoteAddress(transportAddress8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest6.routing("delete {[delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}][null][null]}");
        java.lang.String str12 = deleteRequest11.id();
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel4 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel4.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test7845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7845");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.index("");
        java.lang.String str5 = deleteRequest0.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.id("delete {[delete {[hi!][null][null]}][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.setShardId(shardId8);
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.setShardId(shardId10);
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = deleteRequest11.remoteAddress();
        long long13 = deleteRequest11.version();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(transportAddress12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-3L) + "'", long13 == (-3L));
    }

    @Test
    public void test7846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7846");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.id("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.version((long) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.index("");
        java.lang.String str15 = deleteRequest10.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest10.index("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest19.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress21 = null;
        deleteRequest19.remoteAddress(transportAddress21);
        java.lang.String str23 = deleteRequest19.index();
        org.elasticsearch.index.VersionType versionType24 = deleteRequest19.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest17.versionType(versionType24);
        org.elasticsearch.index.shard.ShardId shardId26 = deleteRequest25.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest25.type("delete {[null][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = deleteRequest28.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest9.consistencyLevel(writeConsistencyLevel29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.routing("delete {[][delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[][][]}]}][delete {[null][null][null]}]}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[null][null][null]}" + "'", str23, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(versionType24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNull(shardId26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel29 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel29.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
    }

    @Test
    public void test7847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7847");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.index.VersionType versionType4 = deleteRequest3.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.version((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.type("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.id("delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}");
        org.junit.Assert.assertNotNull(versionType4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
    }

    @Test
    public void test7848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7848");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId14 = null;
        org.elasticsearch.tasks.Task task15 = deleteRequest10.createTask(0L, "", "", taskId14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest10.setRefreshPolicy("");
        java.lang.String str18 = deleteRequest17.toString();
        java.lang.String[] strArray19 = deleteRequest17.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest17.index("");
        org.elasticsearch.common.unit.TimeValue timeValue22 = deleteRequest21.timeout();
        org.elasticsearch.index.VersionType versionType23 = deleteRequest21.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest3.versionType(versionType23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest3.index("delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}");
        long long27 = deleteRequest26.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue28 = deleteRequest26.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest26.version(0L);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(task15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[][][]}" + "'", str18, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(timeValue22);
        org.junit.Assert.assertNotNull(versionType23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertNotNull(timeValue28);
        org.junit.Assert.assertNotNull(deleteRequest30);
    }

    @Test
    public void test7849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7849");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][hi!]}", "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId11 = null;
        org.elasticsearch.tasks.Task task12 = deleteRequest7.createTask(0L, "", "", taskId11);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest7.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.common.io.stream.StreamInput streamInput15 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest14.readFrom(streamInput15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task12);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
    }

    @Test
    public void test7850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7850");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest10.toString();
        java.lang.String[] strArray12 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.index("");
        java.lang.String str15 = deleteRequest10.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest10.version((long) (short) 1);
        java.lang.String str18 = deleteRequest10.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest10.type("delete {[][delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[][][]}]}][delete {[null][null][null]}]}");
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(deleteRequest20);
    }

    @Test
    public void test7851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7851");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest5.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest5.timeout(timeValue10);
        java.lang.String str12 = deleteRequest5.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException13 = deleteRequest5.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure15 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[][][hi!]}][null][null]}", (java.lang.Throwable) actionRequestValidationException13, "delete {[][null][null]}");
        java.lang.String str16 = shardFailure15.indexUUID;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting17 = shardFailure15.routing;
        java.lang.Throwable throwable18 = shardFailure15.cause;
        java.lang.String str19 = shardFailure15.indexUUID;
        java.lang.String str20 = shardFailure15.reason;
        java.lang.Throwable throwable21 = shardFailure15.cause;
        java.lang.Throwable throwable22 = shardFailure15.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure24 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][delete {[null][null][delete {[][][hi!]}]}][]}", throwable22, "delete {[delete {[][delete {[][][]}][delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}]}][delete {[delete {[delete {[][null][null]}][][delete {[][][hi!]}]}][delete {[][null][null]}][delete {[null][null][delete {[][][hi!]}]}]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][null][null]}" + "'", str12, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[][null][null]}" + "'", str16, "delete {[][null][null]}");
        org.junit.Assert.assertNull(shardRouting17);
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable18.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[][null][null]}" + "'", str19, "delete {[][null][null]}");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str20, "delete {[delete {[][][hi!]}][null][null]}");
        org.junit.Assert.assertNotNull(throwable21);
        org.junit.Assert.assertEquals(throwable21.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable21.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable21.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable22.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
    }

    @Test
    public void test7852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7852");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.parent("delete {[][][]}");
        long long11 = deleteRequest10.version();
        java.lang.String str12 = deleteRequest10.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str17 = deleteRequest16.id();
        java.lang.String str18 = deleteRequest16.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str20 = deleteRequest19.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest19.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest19.getParentTask();
        deleteRequest16.setParentTask(taskId23);
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest16.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest16.version(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest16.routing("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str34 = deleteRequest33.id();
        java.lang.String str35 = deleteRequest33.index();
        org.elasticsearch.tasks.TaskId taskId36 = deleteRequest33.getParentTask();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException37 = deleteRequest33.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue40 = deleteRequest39.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress41 = null;
        deleteRequest39.remoteAddress(transportAddress41);
        org.elasticsearch.common.unit.TimeValue timeValue43 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest39.timeout(timeValue43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest33.timeout(timeValue43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest16.timeout(timeValue43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest51.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest53.type("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId63 = null;
        org.elasticsearch.tasks.Task task64 = deleteRequest59.createTask(0L, "", "", taskId63);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy65 = deleteRequest59.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId73 = null;
        org.elasticsearch.tasks.Task task74 = deleteRequest69.createTask(0L, "", "", taskId73);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy75 = deleteRequest69.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest59.setRefreshPolicy(refreshPolicy75);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest55.setRefreshPolicy(refreshPolicy75);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = deleteRequest55.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        deleteRequest79.setParentTask("delete {[][][hi!]}", (long) (byte) 100);
        org.elasticsearch.common.transport.TransportAddress transportAddress83 = null;
        deleteRequest79.remoteAddress(transportAddress83);
        org.elasticsearch.index.VersionType versionType85 = deleteRequest79.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest86 = deleteRequest50.versionType(versionType85);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = deleteRequest16.versionType(versionType85);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest88 = deleteRequest10.versionType(versionType85);
        java.lang.String str89 = deleteRequest10.toString();
        java.lang.String str90 = deleteRequest10.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest92 = deleteRequest10.id("delete {[delete {[hi!][null][null]}][null][delete {[][][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest94 = deleteRequest92.setRefreshPolicy("");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest96 = deleteRequest94.setRefreshPolicy("delete {[][delete {[null][null][null]}][]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[][delete {[null][null][null]}][]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-3L) + "'", long11 == (-3L));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(taskId36);
        org.junit.Assert.assertNull(actionRequestValidationException37);
        org.junit.Assert.assertNotNull(timeValue40);
        org.junit.Assert.assertNotNull(timeValue43);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(task64);
        org.junit.Assert.assertTrue("'" + refreshPolicy65 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy65.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task74);
        org.junit.Assert.assertTrue("'" + refreshPolicy75 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy75.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertNotNull(deleteRequest79);
        org.junit.Assert.assertNotNull(versionType85);
        org.junit.Assert.assertNotNull(deleteRequest86);
        org.junit.Assert.assertNotNull(deleteRequest87);
        org.junit.Assert.assertNotNull(deleteRequest88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "delete {[][delete {[][][]}][delete {[][][]}]}" + "'", str89, "delete {[][delete {[][][]}][delete {[][][]}]}");
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertNotNull(deleteRequest92);
        org.junit.Assert.assertNotNull(deleteRequest94);
    }

    @Test
    public void test7853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7853");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        java.lang.String str4 = deleteRequest2.type();
        long long5 = deleteRequest2.primaryTerm();
        long long6 = deleteRequest2.version();
        java.lang.String str7 = deleteRequest2.type();
        deleteRequest2.primaryTerm(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest2.index("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        java.lang.String str12 = deleteRequest11.toString();
        java.lang.String str13 = deleteRequest11.getDescription();
        long long14 = deleteRequest11.version();
        org.elasticsearch.common.unit.TimeValue timeValue15 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.timeout(timeValue15);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel17 = deleteRequest16.consistencyLevel();
        org.elasticsearch.common.transport.TransportAddress transportAddress18 = deleteRequest16.remoteAddress();
        java.lang.String str19 = deleteRequest16.index();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-3L) + "'", long6 == (-3L));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}" + "'", str12, "delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}" + "'", str13, "delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-3L) + "'", long14 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel17 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel17.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(transportAddress18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}" + "'", str19, "delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
    }

    @Test
    public void test7854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7854");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][]}", "delete {[null][null][null]}", "delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][hi!]}");
        java.lang.String str6 = deleteRequest3.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel7 = deleteRequest3.consistencyLevel();
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.setShardId(shardId8);
        org.elasticsearch.common.transport.TransportAddress transportAddress10 = deleteRequest9.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.routing("delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}");
        java.lang.String str13 = deleteRequest9.type();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}" + "'", str6, "delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel7 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel7.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNull(transportAddress10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[][][hi!]}" + "'", str13, "delete {[][][hi!]}");
    }

    @Test
    public void test7855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7855");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest3.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.timeout(timeValue8);
        java.lang.String str10 = deleteRequest3.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest3.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure13 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[][][hi!]}][null][null]}", (java.lang.Throwable) actionRequestValidationException11, "delete {[][null][null]}");
        java.lang.String str14 = shardFailure13.indexUUID;
        java.lang.String str15 = shardFailure13.indexUUID;
        java.lang.Throwable throwable16 = shardFailure13.cause;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting17 = shardFailure13.routing;
        java.lang.Throwable throwable18 = shardFailure13.cause;
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][null][null]}" + "'", str10, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[][null][null]}" + "'", str14, "delete {[][null][null]}");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[][null][null]}" + "'", str15, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable16.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertNull(shardRouting17);
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable18.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
    }

    @Test
    public void test7856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7856");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}][delete {[hi!][null][null]}][hi!]}][delete {[][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][][]}]}][delete {[][][]}]}", "delete {[delete {[][null][null]}][delete {[hi!][null][null]}][delete {[hi!][null][null]}]}", "delete {[][delete {[null][null][null]}][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId11 = null;
        org.elasticsearch.tasks.Task task12 = deleteRequest7.createTask(0L, "", "", taskId11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.setRefreshPolicy("");
        java.lang.String[] strArray15 = deleteRequest14.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId23 = null;
        org.elasticsearch.tasks.Task task24 = deleteRequest19.createTask(0L, "", "", taskId23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest19.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest14.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue31 = deleteRequest30.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress32 = null;
        deleteRequest30.remoteAddress(transportAddress32);
        org.elasticsearch.common.unit.TimeValue timeValue34 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest30.timeout(timeValue34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest14.timeout(timeValue34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest36.parent("delete {[][][hi!]}");
        org.elasticsearch.common.unit.TimeValue timeValue39 = deleteRequest38.timeout();
        org.elasticsearch.index.VersionType versionType40 = deleteRequest38.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest3.versionType(versionType40);
        org.junit.Assert.assertNotNull(task12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(task24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(timeValue31);
        org.junit.Assert.assertNotNull(timeValue34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(timeValue39);
        org.junit.Assert.assertNotNull(versionType40);
        org.junit.Assert.assertNotNull(deleteRequest41);
    }

    @Test
    public void test7857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7857");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.setShardId(shardId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.type("delete {[hi!][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel19 = deleteRequest16.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest13.consistencyLevel(writeConsistencyLevel19);
        java.lang.String str21 = deleteRequest20.index();
        java.lang.String str22 = deleteRequest20.getDescription();
        java.lang.String str23 = deleteRequest20.toString();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel19 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel19.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[][][]}" + "'", str22, "delete {[][][]}");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[][][]}" + "'", str23, "delete {[][][]}");
    }

    @Test
    public void test7858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7858");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][null][null]}", "delete {[hi!][null][null]}", "delete {[hi!][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel4 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.version((long) (short) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.routing("delete {[delete {[delete {[][][hi!]}][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[null][null][null]}]}][null][null]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel4 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel4.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
    }

    @Test
    public void test7859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7859");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest10.toString();
        java.lang.String[] strArray12 = deleteRequest10.indices();
        deleteRequest10.primaryTerm(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest10.routing("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest16.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest16.type("delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy20 = deleteRequest19.getRefreshPolicy();
        java.lang.Class<?> wildcardClass21 = deleteRequest19.getClass();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + refreshPolicy20 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy20.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test7860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7860");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long10 = deleteRequest9.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str12 = deleteRequest11.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest14.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest18.getParentTask();
        deleteRequest9.setParentTask(taskId19);
        org.elasticsearch.tasks.Task task21 = deleteRequest3.createTask((long) ' ', "delete {[][][hi!]}", "delete {[][][]}", taskId19);
        java.lang.String[] strArray22 = deleteRequest3.indices();
        java.lang.String[] strArray23 = deleteRequest3.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest3.id("delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest3.version((long) (byte) 0);
        long long28 = deleteRequest3.version();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][][]}" + "'", str4, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
    }

    @Test
    public void test7861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7861");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.consistencyLevel(writeConsistencyLevel23);
        deleteRequest24.setParentTask("hi!", (long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest24.routing("hi!");
        deleteRequest24.primaryTerm((long) (byte) -1);
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest29);
    }

    @Test
    public void test7862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7862");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.setRefreshPolicy(refreshPolicy14);
        org.elasticsearch.action.support.IndicesOptions indicesOptions16 = deleteRequest3.indicesOptions();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest3.setShardId(shardId17);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest3.setShardId(shardId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][null][null]}", "", "delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId38 = null;
        org.elasticsearch.tasks.Task task39 = deleteRequest34.createTask(0L, "", "", taskId38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest34.setRefreshPolicy("");
        java.lang.String str42 = deleteRequest41.toString();
        java.lang.String[] strArray43 = deleteRequest41.indices();
        java.lang.String[] strArray44 = deleteRequest41.indices();
        org.elasticsearch.tasks.TaskId taskId45 = deleteRequest41.getParentTask();
        org.elasticsearch.tasks.Task task46 = deleteRequest27.createTask((long) 100, "delete {[delete {[hi!][null][null]}][null][null]}", "delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}", taskId45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str51 = deleteRequest50.id();
        java.lang.String str52 = deleteRequest50.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str54 = deleteRequest53.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest53.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId57 = deleteRequest53.getParentTask();
        deleteRequest50.setParentTask(taskId57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel60 = deleteRequest59.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel61 = deleteRequest59.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest50.consistencyLevel(writeConsistencyLevel61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest50.type("delete {[delete {[][][hi!]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest64.type("delete {[][][]}");
        org.elasticsearch.tasks.TaskId taskId67 = deleteRequest66.getParentTask();
        deleteRequest27.setParentTask(taskId67);
        org.elasticsearch.tasks.Task task69 = deleteRequest20.createTask(32L, "delete {[][delete {[][][hi!]}][delete {[][][]}]}", "delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}", taskId67);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException70 = deleteRequest20.validate();
        boolean boolean71 = deleteRequest20.getShouldPersistResult();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(transportAddress13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(indicesOptions16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(task39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "delete {[][][]}" + "'", str42, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(taskId45);
        org.junit.Assert.assertNotNull(task46);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(taskId57);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel60 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel60.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel61 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel61.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNotNull(taskId67);
        org.junit.Assert.assertNotNull(task69);
        org.junit.Assert.assertNull(actionRequestValidationException70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test7863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7863");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest2.indicesOptions();
        java.lang.String str5 = deleteRequest2.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue11 = deleteRequest10.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = null;
        deleteRequest10.remoteAddress(transportAddress12);
        org.elasticsearch.common.unit.TimeValue timeValue14 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest10.timeout(timeValue14);
        java.lang.String str16 = deleteRequest10.type();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest10.setShardId(shardId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.parent("delete {[][delete {[null][null][null]}][]}");
        boolean boolean21 = deleteRequest18.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str26 = deleteRequest25.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress27 = deleteRequest25.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest25.setShardId(shardId28);
        org.elasticsearch.common.transport.TransportAddress transportAddress30 = null;
        deleteRequest25.remoteAddress(transportAddress30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest36.type("delete {[null][null][null]}");
        java.lang.String str39 = deleteRequest36.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest36.index("");
        org.elasticsearch.tasks.TaskId taskId42 = deleteRequest41.getParentTask();
        org.elasticsearch.tasks.Task task43 = deleteRequest25.createTask(1L, "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}", "delete {[][][hi!]}", taskId42);
        org.elasticsearch.tasks.Task task44 = deleteRequest18.createTask((long) 'a', "delete {[delete {[][delete {[][][]}][delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}]}][delete {[delete {[delete {[][null][null]}][][delete {[][][hi!]}]}][delete {[][null][null]}][delete {[null][null][delete {[][][hi!]}]}]}][delete {[delete {[][][hi!]}][null][null]}]}", "delete {[delete {[null][null][null]}][][]}", taskId42);
        org.elasticsearch.tasks.Task task45 = deleteRequest2.createTask((long) (byte) -1, "delete {[delete {[][delete {[null][null][null]}][null]}][delete {[delete {[delete {[][][hi!]}][null][null]}][null][null]}][null]}", "delete {[][][delete {[delete {[][null][null]}][][]}]}", taskId42);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(timeValue11);
        org.junit.Assert.assertNotNull(timeValue14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(transportAddress27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(taskId42);
        org.junit.Assert.assertNotNull(task43);
        org.junit.Assert.assertNotNull(task44);
        org.junit.Assert.assertNotNull(task45);
    }

    @Test
    public void test7864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7864");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest8.versionType();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
    }

    @Test
    public void test7865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7865");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException8 = deleteRequest7.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions24 = deleteRequest22.indicesOptions();
        java.lang.String str25 = deleteRequest22.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str27 = deleteRequest26.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest26.version((long) (short) 100);
        deleteRequest26.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str33 = deleteRequest32.parent();
        org.elasticsearch.index.VersionType versionType34 = deleteRequest32.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest26.versionType(versionType34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest22.versionType(versionType34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest10.versionType(versionType34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest7.versionType(versionType34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.type("delete {[hi!][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue41 = deleteRequest38.timeout();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy42 = deleteRequest38.getRefreshPolicy();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(actionRequestValidationException8);
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[][][]}" + "'", str25, "delete {[][][]}");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(versionType34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(timeValue41);
        org.junit.Assert.assertTrue("'" + refreshPolicy42 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy42.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
    }

    @Test
    public void test7866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7866");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.routing("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.version((long) (short) -1);
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = deleteRequest13.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest13.id("delete {[delete {[delete {[][][hi!]}][null][null]}][null][null]}");
        deleteRequest18.setParentTask("delete {[delete {[][null][null]}][][]}", (long) (short) 0);
        java.lang.String[] strArray22 = deleteRequest18.indices();
        org.elasticsearch.action.support.IndicesOptions indicesOptions23 = deleteRequest18.indicesOptions();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException24 = deleteRequest18.validate();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(transportAddress16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(indicesOptions23);
        org.junit.Assert.assertNotNull(actionRequestValidationException24);
    }

    @Test
    public void test7867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7867");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue2 = deleteRequest1.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress3 = null;
        deleteRequest1.remoteAddress(transportAddress3);
        org.elasticsearch.common.unit.TimeValue timeValue5 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest1.timeout(timeValue5);
        java.lang.String str7 = deleteRequest1.type();
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest1.setShardId(shardId8);
        java.lang.String str10 = deleteRequest1.parent();
        long long11 = deleteRequest1.version();
        java.lang.String str12 = deleteRequest1.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest1.parent("delete {[delete {[][delete {[null][null][null]}][delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}]}][delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}][]}");
        org.elasticsearch.index.shard.IndexShard indexShard15 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult16 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest1, indexShard15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(timeValue2);
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-3L) + "'", long11 == (-3L));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(deleteRequest14);
    }

    @Test
    public void test7868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7868");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str16 = deleteRequest15.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.version((long) (short) 100);
        java.lang.String str19 = deleteRequest15.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue22 = deleteRequest21.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress23 = null;
        deleteRequest21.remoteAddress(transportAddress23);
        java.lang.String str25 = deleteRequest21.index();
        org.elasticsearch.index.VersionType versionType26 = deleteRequest21.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest15.versionType(versionType26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest3.versionType(versionType26);
        long long29 = deleteRequest3.version();
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest3.setShardId(shardId30);
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(transportAddress13);
        org.junit.Assert.assertTrue("'" + refreshPolicy14 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy14.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(timeValue22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[null][null][null]}" + "'", str25, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-3L) + "'", long29 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest31);
    }

    @Test
    public void test7869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7869");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = deleteRequest0.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest0.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.index("delete {[][hi!][delete {[][][]}]}");
        deleteRequest0.primaryTerm(10L);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(transportAddress6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
    }

    @Test
    public void test7870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7870");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest10.toString();
        java.lang.String[] strArray12 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.index("");
        java.lang.String str15 = deleteRequest10.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest10.version((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel19 = deleteRequest18.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = deleteRequest18.consistencyLevel();
        deleteRequest18.primaryTerm((long) (short) 10);
        long long23 = deleteRequest18.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId34 = null;
        org.elasticsearch.tasks.Task task35 = deleteRequest30.createTask(0L, "", "", taskId34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest30.setRefreshPolicy("");
        java.lang.String str38 = deleteRequest37.toString();
        java.lang.String[] strArray39 = deleteRequest37.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest37.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str50 = deleteRequest49.id();
        java.lang.String str51 = deleteRequest49.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str53 = deleteRequest52.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest52.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId56 = deleteRequest52.getParentTask();
        deleteRequest49.setParentTask(taskId56);
        deleteRequest45.setParentTask(taskId56);
        deleteRequest41.setParentTask(taskId56);
        org.elasticsearch.tasks.Task task60 = deleteRequest18.createTask((-1L), "delete {[][delete {[][][]}][delete {[][][]}]}", "delete {[][][hi!]}", taskId56);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str62 = deleteRequest61.parent();
        org.elasticsearch.index.VersionType versionType63 = deleteRequest61.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest67.type("delete {[][][hi!]}");
        org.elasticsearch.common.unit.TimeValue timeValue70 = deleteRequest69.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest61.timeout(timeValue70);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest18.timeout(timeValue70);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest10.timeout(timeValue70);
        org.elasticsearch.index.VersionType versionType74 = deleteRequest10.versionType();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel19 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel19.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel20 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel20.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-3L) + "'", long23 == (-3L));
        org.junit.Assert.assertNotNull(task35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "delete {[][][]}" + "'", str38, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(taskId56);
        org.junit.Assert.assertNotNull(task60);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(versionType63);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(timeValue70);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertNotNull(deleteRequest73);
        org.junit.Assert.assertNotNull(versionType74);
    }

    @Test
    public void test7871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7871");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest3.index();
        java.lang.String str12 = deleteRequest3.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest14.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue19 = deleteRequest18.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest14.timeout(timeValue19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.timeout(timeValue19);
        long long22 = deleteRequest21.primaryTerm();
        long long23 = deleteRequest21.version();
        org.elasticsearch.index.shard.IndexShard indexShard24 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult25 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest21, indexShard24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-3L) + "'", long23 == (-3L));
    }

    @Test
    public void test7872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7872");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        java.lang.String str7 = deleteRequest6.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId15 = null;
        org.elasticsearch.tasks.Task task16 = deleteRequest11.createTask(0L, "", "", taskId15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest11.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType19 = deleteRequest11.versionType();
        java.lang.String str20 = deleteRequest11.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress21 = deleteRequest11.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy22 = deleteRequest11.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest6.setRefreshPolicy(refreshPolicy22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.routing("delete {[][delete {[delete {[][][hi!]}][null][null]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest23.type("delete {[delete {[hi!][null][null]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str29 = deleteRequest28.parent();
        deleteRequest28.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest28.setRefreshPolicy("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException34 = deleteRequest33.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest33.index("delete {[hi!][null][null]}");
        deleteRequest33.setParentTask("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}", 10L);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel40 = deleteRequest33.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest23.consistencyLevel(writeConsistencyLevel40);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[][][hi!]}" + "'", str7, "delete {[][][hi!]}");
        org.junit.Assert.assertNotNull(task16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(versionType19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(transportAddress21);
        org.junit.Assert.assertTrue("'" + refreshPolicy22 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy22.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(actionRequestValidationException34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel40 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel40.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest41);
    }

    @Test
    public void test7873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7873");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        java.lang.String str4 = deleteRequest2.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest2.parent("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId14 = null;
        org.elasticsearch.tasks.Task task15 = deleteRequest10.createTask(0L, "", "", taskId14);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel16 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress21 = deleteRequest20.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId29 = null;
        org.elasticsearch.tasks.Task task30 = deleteRequest25.createTask(0L, "", "", taskId29);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy31 = deleteRequest25.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest20.setRefreshPolicy(refreshPolicy31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest10.setRefreshPolicy(refreshPolicy31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest2.setRefreshPolicy(refreshPolicy31);
        deleteRequest2.primaryTerm((-3L));
        org.elasticsearch.tasks.TaskId taskId37 = deleteRequest2.getParentTask();
        boolean boolean38 = deleteRequest2.getShouldPersistResult();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str4, "delete {[delete {[][][hi!]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(task15);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel16 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel16.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(transportAddress21);
        org.junit.Assert.assertNotNull(task30);
        org.junit.Assert.assertTrue("'" + refreshPolicy31 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy31.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(taskId37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test7874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7874");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.type("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress10 = null;
        deleteRequest9.remoteAddress(transportAddress10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest9.type("delete {[][delete {[null][null][null]}][]}");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput14 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest13.writeTo(streamOutput14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest13);
    }

    @Test
    public void test7875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7875");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[null][delete {[null][null][null]}][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[hi!][null][null]}]}");
    }

    @Test
    public void test7876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7876");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str8 = deleteRequest7.id();
        java.lang.String str9 = deleteRequest7.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str11 = deleteRequest10.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId14 = deleteRequest10.getParentTask();
        deleteRequest7.setParentTask(taskId14);
        deleteRequest3.setParentTask(taskId14);
        java.lang.String str17 = deleteRequest3.id();
        long long18 = deleteRequest3.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest3.routing("delete {[delete {[][delete {[null][null][null]}][delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}]}][delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}][]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel21 = deleteRequest3.consistencyLevel();
        org.elasticsearch.common.unit.TimeValue timeValue22 = deleteRequest3.timeout();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(taskId14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[][][]}" + "'", str17, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel21 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel21.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(timeValue22);
    }

    @Test
    public void test7877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7877");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue2 = deleteRequest1.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress3 = null;
        deleteRequest1.remoteAddress(transportAddress3);
        org.elasticsearch.common.unit.TimeValue timeValue5 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest1.timeout(timeValue5);
        java.lang.String str7 = deleteRequest1.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest1.routing("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest1.routing("delete {[][null][null]}");
        java.lang.String str12 = deleteRequest1.routing();
        long long13 = deleteRequest1.version();
        java.lang.Class<?> wildcardClass14 = deleteRequest1.getClass();
        org.junit.Assert.assertNotNull(timeValue2);
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][null][null]}" + "'", str12, "delete {[][null][null]}");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-3L) + "'", long13 == (-3L));
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test7878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7878");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.setRefreshPolicy(refreshPolicy14);
        long long16 = deleteRequest3.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest19.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue24 = deleteRequest23.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest19.timeout(timeValue24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str27 = deleteRequest26.parent();
        org.elasticsearch.index.VersionType versionType28 = deleteRequest26.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest19.versionType(versionType28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest3.versionType(versionType28);
        java.lang.String str31 = deleteRequest3.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest3.type("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest33.setShardId(shardId34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str40 = deleteRequest39.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest39.id("hi!");
        org.elasticsearch.tasks.TaskId taskId43 = deleteRequest42.getParentTask();
        org.elasticsearch.tasks.TaskId taskId44 = deleteRequest42.getParentTask();
        org.elasticsearch.common.unit.TimeValue timeValue45 = deleteRequest42.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest49.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest49.id("delete {[][][]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException54 = deleteRequest53.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId57 = deleteRequest56.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId65 = null;
        org.elasticsearch.tasks.Task task66 = deleteRequest61.createTask(0L, "", "", taskId65);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest61.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel69 = deleteRequest68.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions70 = deleteRequest68.indicesOptions();
        java.lang.String str71 = deleteRequest68.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str73 = deleteRequest72.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest72.version((long) (short) 100);
        deleteRequest72.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str79 = deleteRequest78.parent();
        org.elasticsearch.index.VersionType versionType80 = deleteRequest78.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = deleteRequest72.versionType(versionType80);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest82 = deleteRequest68.versionType(versionType80);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest83 = deleteRequest56.versionType(versionType80);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = deleteRequest53.versionType(versionType80);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest85 = deleteRequest42.versionType(versionType80);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest86 = deleteRequest35.versionType(versionType80);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest88 = deleteRequest86.parent("delete {[][][delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}]}");
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(transportAddress13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(timeValue24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(taskId43);
        org.junit.Assert.assertNotNull(taskId44);
        org.junit.Assert.assertNotNull(timeValue45);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNull(actionRequestValidationException54);
        org.junit.Assert.assertNull(shardId57);
        org.junit.Assert.assertNotNull(task66);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel69 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel69.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "delete {[][][]}" + "'", str71, "delete {[][][]}");
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(deleteRequest75);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNotNull(versionType80);
        org.junit.Assert.assertNotNull(deleteRequest81);
        org.junit.Assert.assertNotNull(deleteRequest82);
        org.junit.Assert.assertNotNull(deleteRequest83);
        org.junit.Assert.assertNotNull(deleteRequest84);
        org.junit.Assert.assertNotNull(deleteRequest85);
        org.junit.Assert.assertNotNull(deleteRequest86);
        org.junit.Assert.assertNotNull(deleteRequest88);
    }

    @Test
    public void test7879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7879");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("delete {[][][]}");
        java.lang.String str10 = deleteRequest7.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId22 = null;
        org.elasticsearch.tasks.Task task23 = deleteRequest18.createTask(0L, "", "", taskId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest18.setRefreshPolicy("");
        java.lang.String[] strArray26 = deleteRequest25.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId34 = null;
        org.elasticsearch.tasks.Task task35 = deleteRequest30.createTask(0L, "", "", taskId34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest30.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = deleteRequest37.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest25.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue42 = deleteRequest41.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress43 = null;
        deleteRequest41.remoteAddress(transportAddress43);
        org.elasticsearch.common.unit.TimeValue timeValue45 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest41.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest25.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest14.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest3.timeout(timeValue45);
        org.elasticsearch.action.support.IndicesOptions indicesOptions50 = deleteRequest49.indicesOptions();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel51 = deleteRequest49.consistencyLevel();
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest49.setShardId(shardId52);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest55.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue60 = deleteRequest59.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest55.timeout(timeValue60);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str63 = deleteRequest62.parent();
        org.elasticsearch.index.VersionType versionType64 = deleteRequest62.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest55.versionType(versionType64);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest49.versionType(versionType64);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][hi!]}", "delete {[null][null][null]}", "");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy71 = deleteRequest70.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest49.setRefreshPolicy(refreshPolicy71);
        org.elasticsearch.common.io.stream.StreamInput streamInput73 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest49.readFrom(streamInput73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][][]}" + "'", str10, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(task35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel38 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel38.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(timeValue42);
        org.junit.Assert.assertNotNull(timeValue45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(indicesOptions50);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel51 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel51.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(timeValue60);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(versionType64);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertTrue("'" + refreshPolicy71 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy71.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest72);
    }

    @Test
    public void test7880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7880");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.setRefreshPolicy("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy10 = deleteRequest6.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId18 = null;
        org.elasticsearch.tasks.Task task19 = deleteRequest14.createTask(0L, "", "", taskId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType22 = deleteRequest14.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest14.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest6.consistencyLevel(writeConsistencyLevel23);
        deleteRequest6.primaryTerm((long) '#');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str31 = deleteRequest30.id();
        org.elasticsearch.common.transport.TransportAddress transportAddress32 = deleteRequest30.remoteAddress();
        org.elasticsearch.index.VersionType versionType33 = deleteRequest30.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest6.versionType(versionType33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest6.id("delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str41 = deleteRequest40.id();
        java.lang.String str42 = deleteRequest40.index();
        org.elasticsearch.tasks.TaskId taskId43 = deleteRequest40.getParentTask();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException44 = deleteRequest40.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue47 = deleteRequest46.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress48 = null;
        deleteRequest46.remoteAddress(transportAddress48);
        org.elasticsearch.common.unit.TimeValue timeValue50 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest46.timeout(timeValue50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest40.timeout(timeValue50);
        java.lang.String str53 = deleteRequest40.toString();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy54 = deleteRequest40.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest36.setRefreshPolicy(refreshPolicy54);
        deleteRequest55.setParentTask("delete {[][][null]}", (-3L));
        org.elasticsearch.index.shard.IndexShard indexShard59 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult60 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest55, indexShard59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + refreshPolicy10 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy10.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(task19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNull(transportAddress32);
        org.junit.Assert.assertNotNull(versionType33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(taskId43);
        org.junit.Assert.assertNull(actionRequestValidationException44);
        org.junit.Assert.assertNotNull(timeValue47);
        org.junit.Assert.assertNotNull(timeValue50);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "delete {[][][]}" + "'", str53, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + refreshPolicy54 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy54.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest55);
    }

    @Test
    public void test7881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7881");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.type("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId12 = null;
        org.elasticsearch.tasks.Task task13 = deleteRequest8.createTask(0L, "", "", taskId12);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = deleteRequest8.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId22 = null;
        org.elasticsearch.tasks.Task task23 = deleteRequest18.createTask(0L, "", "", taskId22);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy24 = deleteRequest18.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest8.setRefreshPolicy(refreshPolicy24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest4.setRefreshPolicy(refreshPolicy24);
        java.lang.String str27 = deleteRequest26.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.index("delete {[][][hi!]}");
        java.lang.String str31 = deleteRequest30.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest30.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest33.parent("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId43 = null;
        org.elasticsearch.tasks.Task task44 = deleteRequest39.createTask(0L, "", "", taskId43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest39.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType47 = deleteRequest39.versionType();
        java.lang.String str48 = deleteRequest39.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress49 = deleteRequest39.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy50 = deleteRequest39.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str52 = deleteRequest51.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest51.version((long) (short) 100);
        java.lang.String str55 = deleteRequest51.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue58 = deleteRequest57.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress59 = null;
        deleteRequest57.remoteAddress(transportAddress59);
        java.lang.String str61 = deleteRequest57.index();
        org.elasticsearch.index.VersionType versionType62 = deleteRequest57.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest51.versionType(versionType62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest39.versionType(versionType62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest35.versionType(versionType62);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy66 = deleteRequest65.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest26.setRefreshPolicy(refreshPolicy66);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest67.parent("");
        org.elasticsearch.index.shard.ShardId shardId70 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest67.setShardId(shardId70);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertTrue("'" + refreshPolicy14 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy14.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertTrue("'" + refreshPolicy24 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy24.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(task44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(versionType47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(transportAddress49);
        org.junit.Assert.assertTrue("'" + refreshPolicy50 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy50.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(timeValue58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "delete {[null][null][null]}" + "'", str61, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(versionType62);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertTrue("'" + refreshPolicy66 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy66.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(deleteRequest71);
    }

    @Test
    public void test7882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7882");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId4 = deleteRequest0.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.id("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest0.index("delete {[hi!][null][null]}");
        java.lang.String str9 = deleteRequest8.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest11.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue16 = deleteRequest15.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest11.timeout(timeValue16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest8.timeout(timeValue16);
        org.elasticsearch.common.unit.TimeValue timeValue19 = deleteRequest18.timeout();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(taskId4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[delete {[hi!][null][null]}][null][delete {[][][hi!]}]}" + "'", str9, "delete {[delete {[hi!][null][null]}][null][delete {[][][hi!]}]}");
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(timeValue19);
    }

    @Test
    public void test7883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7883");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId20 = null;
        org.elasticsearch.tasks.Task task21 = deleteRequest16.createTask(0L, "", "", taskId20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest16.setRefreshPolicy("");
        deleteRequest23.primaryTerm(1L);
        java.lang.String str26 = deleteRequest23.routing();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy27 = deleteRequest23.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest3.setRefreshPolicy(refreshPolicy27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.type("delete {[null][delete {[null][null][null]}][null]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException31 = deleteRequest28.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest28.routing("delete {[null][null][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest33.routing("delete {[][hi!][delete {[][][]}]}");
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][][]}" + "'", str12, "delete {[][][]}");
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + refreshPolicy27 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy27.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNull(actionRequestValidationException31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest35);
    }

    @Test
    public void test7884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7884");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][delete {[null][null][null]}][null]}][delete {[delete {[delete {[][][hi!]}][null][null]}][null][null]}][null]}", "", "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}][delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][hi!][delete {[][][]}]}]}");
    }

    @Test
    public void test7885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7885");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.index("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[][][]}][delete {[][][]}]}", "", "delete {[][][]}");
        long long15 = deleteRequest14.version();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel16 = deleteRequest14.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel17 = deleteRequest14.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest3.consistencyLevel(writeConsistencyLevel17);
        java.lang.String str19 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.version(35L);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-3L) + "'", long15 == (-3L));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel16 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel16.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel17 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel17.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}" + "'", str19, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.junit.Assert.assertNotNull(deleteRequest21);
    }

    @Test
    public void test7886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7886");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][hi!]}", "delete {[hi!][null][null]}", "delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId6 = deleteRequest5.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId14 = null;
        org.elasticsearch.tasks.Task task15 = deleteRequest10.createTask(0L, "", "", taskId14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest10.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel18 = deleteRequest17.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions19 = deleteRequest17.indicesOptions();
        java.lang.String str20 = deleteRequest17.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str22 = deleteRequest21.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.version((long) (short) 100);
        deleteRequest21.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str28 = deleteRequest27.parent();
        org.elasticsearch.index.VersionType versionType29 = deleteRequest27.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest21.versionType(versionType29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest17.versionType(versionType29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest5.versionType(versionType29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest3.versionType(versionType29);
        java.lang.String[] strArray34 = deleteRequest33.indices();
        org.elasticsearch.common.transport.TransportAddress transportAddress35 = null;
        deleteRequest33.remoteAddress(transportAddress35);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy37 = deleteRequest33.getRefreshPolicy();
        org.junit.Assert.assertNull(shardId6);
        org.junit.Assert.assertNotNull(task15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel18 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel18.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[][][]}" + "'", str20, "delete {[][][]}");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(versionType29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + refreshPolicy37 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy37.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
    }

    @Test
    public void test7887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7887");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId20 = null;
        org.elasticsearch.tasks.Task task21 = deleteRequest16.createTask(0L, "", "", taskId20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest16.setRefreshPolicy("");
        deleteRequest23.primaryTerm(1L);
        java.lang.String str26 = deleteRequest23.routing();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy27 = deleteRequest23.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest3.setRefreshPolicy(refreshPolicy27);
        org.elasticsearch.index.shard.ShardId shardId29 = deleteRequest28.shardId();
        org.elasticsearch.index.shard.IndexShard indexShard30 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult31 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest28, indexShard30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][][]}" + "'", str12, "delete {[][][]}");
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + refreshPolicy27 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy27.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNull(shardId29);
    }

    @Test
    public void test7888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7888");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest6.getParentTask();
        org.elasticsearch.common.unit.TimeValue timeValue9 = deleteRequest6.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest13.id("delete {[][][]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException18 = deleteRequest17.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId21 = deleteRequest20.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId29 = null;
        org.elasticsearch.tasks.Task task30 = deleteRequest25.createTask(0L, "", "", taskId29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest25.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel33 = deleteRequest32.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions34 = deleteRequest32.indicesOptions();
        java.lang.String str35 = deleteRequest32.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str37 = deleteRequest36.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest36.version((long) (short) 100);
        deleteRequest36.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str43 = deleteRequest42.parent();
        org.elasticsearch.index.VersionType versionType44 = deleteRequest42.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest36.versionType(versionType44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest32.versionType(versionType44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest20.versionType(versionType44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest17.versionType(versionType44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest6.versionType(versionType44);
        org.elasticsearch.action.support.IndicesOptions indicesOptions50 = deleteRequest49.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId51 = deleteRequest49.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId62 = null;
        org.elasticsearch.tasks.Task task63 = deleteRequest58.createTask(0L, "", "", taskId62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest58.setRefreshPolicy("");
        java.lang.String[] strArray66 = deleteRequest65.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId74 = null;
        org.elasticsearch.tasks.Task task75 = deleteRequest70.createTask(0L, "", "", taskId74);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest70.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel78 = deleteRequest77.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = deleteRequest65.consistencyLevel(writeConsistencyLevel78);
        deleteRequest79.setParentTask("hi!", (long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = deleteRequest79.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest86 = deleteRequest84.routing("delete {[delete {[][null][null]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest90 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][hi!]}][null][null]}", "hi!", "hi!");
        org.elasticsearch.index.shard.ShardId shardId91 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest92 = deleteRequest90.setShardId(shardId91);
        org.elasticsearch.tasks.TaskId taskId93 = deleteRequest90.getParentTask();
        deleteRequest86.setParentTask(taskId93);
        org.elasticsearch.tasks.Task task95 = deleteRequest49.createTask((long) 100, "delete {[delete {[][null][null]}][][delete {[][][hi!]}]}", "delete {[][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}][]}", taskId93);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel96 = deleteRequest49.consistencyLevel();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(taskId8);
        org.junit.Assert.assertNotNull(timeValue9);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(actionRequestValidationException18);
        org.junit.Assert.assertNull(shardId21);
        org.junit.Assert.assertNotNull(task30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel33 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel33.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "delete {[][][]}" + "'", str35, "delete {[][][]}");
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(versionType44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(indicesOptions50);
        org.junit.Assert.assertNotNull(taskId51);
        org.junit.Assert.assertNotNull(task63);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(task75);
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel78 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel78.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest79);
        org.junit.Assert.assertNotNull(deleteRequest84);
        org.junit.Assert.assertNotNull(deleteRequest86);
        org.junit.Assert.assertNotNull(deleteRequest92);
        org.junit.Assert.assertNotNull(taskId93);
        org.junit.Assert.assertNotNull(task95);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel96 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel96.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test7889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7889");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.type("delete {[][][]}");
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest8.timeout();
        org.elasticsearch.action.support.IndicesOptions indicesOptions14 = deleteRequest8.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest18.parent("hi!");
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest24.getParentTask();
        org.elasticsearch.common.unit.TimeValue timeValue26 = deleteRequest24.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest8.timeout(timeValue26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.index("delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(indicesOptions14);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(timeValue26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
    }

    @Test
    public void test7890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7890");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[][][hi!]}][delete {[][][]}]}", "delete {[delete {[delete {[][null][null]}][][delete {[][][hi!]}]}][delete {[][null][null]}][delete {[null][null][delete {[][][hi!]}]}]}", "delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}");
    }

    @Test
    public void test7891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7891");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest10.toString();
        java.lang.String str12 = deleteRequest10.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.routing("delete {[][null][null]}");
        java.lang.String str15 = deleteRequest14.index();
        java.lang.String[] strArray16 = deleteRequest14.indices();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][][]}" + "'", str12, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test7892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7892");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest1.setParentTask("hi!", (long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.type("delete {[][][]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy11 = deleteRequest8.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest1.setRefreshPolicy(refreshPolicy11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.type("delete {[][][]}");
        java.lang.String str19 = deleteRequest16.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest16.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel24 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest16.consistencyLevel(writeConsistencyLevel24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest12.consistencyLevel(writeConsistencyLevel24);
        java.lang.String str27 = deleteRequest26.id();
        org.elasticsearch.index.VersionType versionType28 = deleteRequest26.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest26.version(32L);
        org.elasticsearch.index.shard.IndexShard indexShard31 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete32 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest30, indexShard31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + refreshPolicy11 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy11.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[][][]}" + "'", str19, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel24 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel24.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertNotNull(deleteRequest30);
    }

    @Test
    public void test7893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7893");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][null][null]}", "delete {[hi!][null][null]}", "delete {[hi!][null][null]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy4 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy5 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str9 = deleteRequest8.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest8.version((long) (short) 100);
        java.lang.String str12 = deleteRequest11.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.id("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.index.VersionType versionType15 = deleteRequest11.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest11.parent("delete {[null][null][null]}");
        org.elasticsearch.index.VersionType versionType18 = deleteRequest17.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId26 = null;
        org.elasticsearch.tasks.Task task27 = deleteRequest22.createTask(0L, "", "", taskId26);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy28 = deleteRequest22.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId36 = null;
        org.elasticsearch.tasks.Task task37 = deleteRequest32.createTask(0L, "", "", taskId36);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy38 = deleteRequest32.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest22.setRefreshPolicy(refreshPolicy38);
        java.lang.String str40 = deleteRequest22.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest22.id("hi!");
        long long43 = deleteRequest42.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str48 = deleteRequest47.id();
        org.elasticsearch.common.transport.TransportAddress transportAddress49 = deleteRequest47.remoteAddress();
        org.elasticsearch.index.VersionType versionType50 = deleteRequest47.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str55 = deleteRequest54.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest54.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest57.routing("delete {[][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress60 = deleteRequest59.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str65 = deleteRequest64.id();
        java.lang.String str66 = deleteRequest64.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str68 = deleteRequest67.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest67.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId71 = deleteRequest67.getParentTask();
        deleteRequest64.setParentTask(taskId71);
        deleteRequest59.setParentTask(taskId71);
        org.elasticsearch.tasks.Task task74 = deleteRequest47.createTask((long) 0, "delete {[null][null][null]}", "delete {[delete {[delete {[][][hi!]}][null][null]}][null][null]}", taskId71);
        org.elasticsearch.common.unit.TimeValue timeValue75 = deleteRequest47.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest42.timeout(timeValue75);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest17.timeout(timeValue75);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][]}][delete {[null][null][null]}][delete {[null][null][null]}]}");
        org.elasticsearch.common.unit.TimeValue timeValue80 = deleteRequest79.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = deleteRequest17.timeout(timeValue80);
        org.elasticsearch.common.unit.TimeValue timeValue82 = deleteRequest17.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest83 = deleteRequest3.timeout(timeValue82);
        org.junit.Assert.assertTrue("'" + refreshPolicy4 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy4.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertTrue("'" + refreshPolicy5 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy5.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(versionType15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertNotNull(task27);
        org.junit.Assert.assertTrue("'" + refreshPolicy28 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy28.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task37);
        org.junit.Assert.assertTrue("'" + refreshPolicy38 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy38.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "delete {[][][]}" + "'", str40, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 0L + "'", long43 == 0L);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertNull(transportAddress49);
        org.junit.Assert.assertNotNull(versionType50);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNull(transportAddress60);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNotNull(taskId71);
        org.junit.Assert.assertNotNull(task74);
        org.junit.Assert.assertNotNull(timeValue75);
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertNotNull(timeValue80);
        org.junit.Assert.assertNotNull(deleteRequest81);
        org.junit.Assert.assertNotNull(timeValue82);
        org.junit.Assert.assertNotNull(deleteRequest83);
    }

    @Test
    public void test7894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7894");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType6 = deleteRequest5.versionType();
        deleteRequest5.primaryTerm((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.routing("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId18 = null;
        org.elasticsearch.tasks.Task task19 = deleteRequest14.createTask(0L, "", "", taskId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.setRefreshPolicy("");
        java.lang.String str22 = deleteRequest21.toString();
        java.lang.String[] strArray23 = deleteRequest21.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest21.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str34 = deleteRequest33.id();
        java.lang.String str35 = deleteRequest33.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str37 = deleteRequest36.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest36.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId40 = deleteRequest36.getParentTask();
        deleteRequest33.setParentTask(taskId40);
        deleteRequest29.setParentTask(taskId40);
        deleteRequest25.setParentTask(taskId40);
        deleteRequest10.setParentTask(taskId40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str49 = deleteRequest48.index();
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest48.setShardId(shardId50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId59 = null;
        org.elasticsearch.tasks.Task task60 = deleteRequest55.createTask(0L, "", "", taskId59);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy61 = deleteRequest55.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest51.setRefreshPolicy(refreshPolicy61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest10.setRefreshPolicy(refreshPolicy61);
        org.elasticsearch.common.unit.TimeValue timeValue64 = deleteRequest10.timeout();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy65 = deleteRequest10.getRefreshPolicy();
        org.elasticsearch.tasks.TaskId taskId66 = deleteRequest10.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest10.id("delete {[delete {[][][hi!]}][null][null]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException69 = deleteRequest68.validate();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(task19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[][][]}" + "'", str22, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(taskId40);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(task60);
        org.junit.Assert.assertTrue("'" + refreshPolicy61 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy61.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(timeValue64);
        org.junit.Assert.assertTrue("'" + refreshPolicy65 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy65.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(taskId66);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertNull(actionRequestValidationException69);
    }

    @Test
    public void test7895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7895");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest7.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.id("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.setRefreshPolicy("");
        java.lang.String str15 = deleteRequest14.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str17 = deleteRequest16.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest16.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.type("delete {[][][]}");
        java.lang.String str26 = deleteRequest23.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest23.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId38 = null;
        org.elasticsearch.tasks.Task task39 = deleteRequest34.createTask(0L, "", "", taskId38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest34.setRefreshPolicy("");
        java.lang.String[] strArray42 = deleteRequest41.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId50 = null;
        org.elasticsearch.tasks.Task task51 = deleteRequest46.createTask(0L, "", "", taskId50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest46.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel54 = deleteRequest53.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest41.consistencyLevel(writeConsistencyLevel54);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue58 = deleteRequest57.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress59 = null;
        deleteRequest57.remoteAddress(transportAddress59);
        org.elasticsearch.common.unit.TimeValue timeValue61 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest57.timeout(timeValue61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest41.timeout(timeValue61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest30.timeout(timeValue61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest19.timeout(timeValue61);
        org.elasticsearch.index.VersionType versionType66 = deleteRequest65.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest14.versionType(versionType66);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest14.type("delete {[][delete {[hi!][null][null]}][hi!]}");
        java.lang.String[] strArray70 = deleteRequest14.indices();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest14.setRefreshPolicy("delete {[hi!][][delete {[hi!][null][null]}]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[hi!][][delete {[hi!][null][null]}]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(taskId8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "delete {[][][]}" + "'", str26, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(task39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(task51);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel54 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel54.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(timeValue58);
        org.junit.Assert.assertNotNull(timeValue61);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(versionType66);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(strArray70);
    }

    @Test
    public void test7896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7896");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.routing("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest4.consistencyLevel();
        org.elasticsearch.common.io.stream.StreamInput streamInput6 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest4.readFrom(streamInput6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test7897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7897");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "delete {[][delete {[delete {[][][hi!]}][null][null]}][]}", "delete {[delete {[][null][null]}][delete {[hi!][null][null]}][delete {[hi!][null][null]}]}");
    }

    @Test
    public void test7898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7898");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][hi!]}][null][null]}", "delete {[][][]}", "");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel4 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.type("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.type("delete {[][][]}");
        java.lang.String str13 = deleteRequest10.id();
        java.lang.String str14 = deleteRequest10.getDescription();
        org.elasticsearch.tasks.TaskId taskId15 = deleteRequest10.getParentTask();
        deleteRequest3.setParentTask(taskId15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId24 = null;
        org.elasticsearch.tasks.Task task25 = deleteRequest20.createTask(0L, "", "", taskId24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest20.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType28 = deleteRequest20.versionType();
        java.lang.String str29 = deleteRequest20.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress30 = deleteRequest20.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy31 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest20.setRefreshPolicy(refreshPolicy31);
        long long33 = deleteRequest20.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue34 = deleteRequest20.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest39.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest41.type("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId51 = null;
        org.elasticsearch.tasks.Task task52 = deleteRequest47.createTask(0L, "", "", taskId51);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy53 = deleteRequest47.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId61 = null;
        org.elasticsearch.tasks.Task task62 = deleteRequest57.createTask(0L, "", "", taskId61);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy63 = deleteRequest57.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest47.setRefreshPolicy(refreshPolicy63);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest43.setRefreshPolicy(refreshPolicy63);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest43.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        deleteRequest67.setParentTask("delete {[][][hi!]}", (long) (byte) 100);
        org.elasticsearch.common.transport.TransportAddress transportAddress71 = null;
        deleteRequest67.remoteAddress(transportAddress71);
        org.elasticsearch.index.VersionType versionType73 = deleteRequest67.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest38.versionType(versionType73);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest20.versionType(versionType73);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = deleteRequest79.parent("delete {[][][]}");
        java.lang.String str82 = deleteRequest79.id();
        java.lang.String[] strArray83 = deleteRequest79.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str85 = deleteRequest84.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress86 = deleteRequest84.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId87 = deleteRequest84.getParentTask();
        deleteRequest79.setParentTask(taskId87);
        org.elasticsearch.tasks.Task task89 = deleteRequest20.createTask((long) 10, "delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}", "delete {[][][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}]}", taskId87);
        deleteRequest3.setParentTask(taskId87);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel4 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel4.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[][][]}" + "'", str13, "delete {[][][]}");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[][delete {[][][]}][delete {[][][]}]}" + "'", str14, "delete {[][delete {[][][]}][delete {[][][]}]}");
        org.junit.Assert.assertNotNull(taskId15);
        org.junit.Assert.assertNotNull(task25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(transportAddress30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertNotNull(timeValue34);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(task52);
        org.junit.Assert.assertTrue("'" + refreshPolicy53 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy53.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task62);
        org.junit.Assert.assertTrue("'" + refreshPolicy63 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy63.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNotNull(versionType73);
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertNotNull(deleteRequest75);
        org.junit.Assert.assertNotNull(deleteRequest81);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertNull(transportAddress86);
        org.junit.Assert.assertNotNull(taskId87);
        org.junit.Assert.assertNotNull(task89);
    }

    @Test
    public void test7899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7899");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        java.lang.String str4 = deleteRequest2.type();
        long long5 = deleteRequest2.primaryTerm();
        long long6 = deleteRequest2.version();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest2.setShardId(shardId7);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException9 = deleteRequest8.validate();
        java.lang.String str10 = deleteRequest8.index();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-3L) + "'", long6 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(actionRequestValidationException9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][][hi!]}" + "'", str10, "delete {[][][hi!]}");
    }

    @Test
    public void test7900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7900");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("delete {[][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = deleteRequest5.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.version(0L);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(transportAddress6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
    }

    @Test
    public void test7901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7901");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy9 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId17 = null;
        org.elasticsearch.tasks.Task task18 = deleteRequest13.createTask(0L, "", "", taskId17);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy19 = deleteRequest13.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest3.setRefreshPolicy(refreshPolicy19);
        java.lang.String str21 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest3.id("hi!");
        deleteRequest23.primaryTerm((long) (short) 100);
        org.elasticsearch.common.transport.TransportAddress transportAddress26 = null;
        deleteRequest23.remoteAddress(transportAddress26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId35 = null;
        org.elasticsearch.tasks.Task task36 = deleteRequest31.createTask(0L, "", "", taskId35);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy37 = deleteRequest31.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId45 = null;
        org.elasticsearch.tasks.Task task46 = deleteRequest41.createTask(0L, "", "", taskId45);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy47 = deleteRequest41.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest31.setRefreshPolicy(refreshPolicy47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest23.setRefreshPolicy(refreshPolicy47);
        java.lang.Class<?> wildcardClass50 = refreshPolicy47.getClass();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertTrue("'" + refreshPolicy9 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy9.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertTrue("'" + refreshPolicy19 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy19.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[][][]}" + "'", str21, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(task36);
        org.junit.Assert.assertTrue("'" + refreshPolicy37 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy37.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task46);
        org.junit.Assert.assertTrue("'" + refreshPolicy47 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy47.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test7902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7902");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest5.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest5.timeout(timeValue10);
        java.lang.String str12 = deleteRequest5.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException13 = deleteRequest5.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure15 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[][][hi!]}][null][null]}", (java.lang.Throwable) actionRequestValidationException13, "delete {[][null][null]}");
        java.lang.String str16 = shardFailure15.indexUUID;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting17 = shardFailure15.routing;
        java.lang.Throwable throwable18 = shardFailure15.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure20 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[hi!][null][null]}][delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}][delete {[delete {[][null][null]}][][]}]}", throwable18, "delete {[][][delete {[][delete {[][][hi!]}][delete {[][][]}]}]}");
        java.lang.Throwable throwable21 = shardFailure20.cause;
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][null][null]}" + "'", str12, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[][null][null]}" + "'", str16, "delete {[][null][null]}");
        org.junit.Assert.assertNull(shardRouting17);
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable18.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertNotNull(throwable21);
        org.junit.Assert.assertEquals(throwable21.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable21.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable21.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
    }

    @Test
    public void test7903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7903");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest6.getParentTask();
        org.elasticsearch.common.unit.TimeValue timeValue9 = deleteRequest6.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest13.id("delete {[][][]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException18 = deleteRequest17.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId21 = deleteRequest20.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId29 = null;
        org.elasticsearch.tasks.Task task30 = deleteRequest25.createTask(0L, "", "", taskId29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest25.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel33 = deleteRequest32.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions34 = deleteRequest32.indicesOptions();
        java.lang.String str35 = deleteRequest32.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str37 = deleteRequest36.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest36.version((long) (short) 100);
        deleteRequest36.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str43 = deleteRequest42.parent();
        org.elasticsearch.index.VersionType versionType44 = deleteRequest42.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest36.versionType(versionType44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest32.versionType(versionType44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest20.versionType(versionType44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest17.versionType(versionType44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest6.versionType(versionType44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest49.id("delete {[delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][null][null]}");
        java.lang.String str52 = deleteRequest51.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest51.version((long) ' ');
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(taskId8);
        org.junit.Assert.assertNotNull(timeValue9);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(actionRequestValidationException18);
        org.junit.Assert.assertNull(shardId21);
        org.junit.Assert.assertNotNull(task30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel33 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel33.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "delete {[][][]}" + "'", str35, "delete {[][][]}");
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(versionType44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "delete {[delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][null][null]}" + "'", str52, "delete {[delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest54);
    }

    @Test
    public void test7904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7904");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.type("delete {[null][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = deleteRequest3.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.version((long) '4');
        long long9 = deleteRequest6.primaryTerm();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest6.setRefreshPolicy("delete {[null][null][null]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[null][null][null]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(transportAddress4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
    }

    @Test
    public void test7905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7905");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.type("delete {[null][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest5.setShardId(shardId8);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException10 = deleteRequest5.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure12 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}", (java.lang.Throwable) actionRequestValidationException10, "delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure14 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][null][null]}", (java.lang.Throwable) actionRequestValidationException10, "delete {[delete {[][][hi!]}][null][null]}");
        java.lang.Throwable throwable15 = shardFailure14.cause;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = shardFailure14.routing;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting17 = shardFailure14.routing;
        java.lang.Throwable throwable18 = shardFailure14.cause;
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(actionRequestValidationException10);
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "Validation Failed: 1: id is missing;");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "Validation Failed: 1: id is missing;");
        org.junit.Assert.assertEquals(throwable15.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: id is missing;");
        org.junit.Assert.assertNull(shardRouting16);
        org.junit.Assert.assertNull(shardRouting17);
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "Validation Failed: 1: id is missing;");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "Validation Failed: 1: id is missing;");
        org.junit.Assert.assertEquals(throwable18.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: id is missing;");
    }

    @Test
    public void test7906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7906");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId15 = null;
        org.elasticsearch.tasks.Task task16 = deleteRequest11.createTask(0L, "", "", taskId15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest11.setRefreshPolicy("");
        java.lang.String[] strArray19 = deleteRequest18.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId27 = null;
        org.elasticsearch.tasks.Task task28 = deleteRequest23.createTask(0L, "", "", taskId27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest23.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel31 = deleteRequest30.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest18.consistencyLevel(writeConsistencyLevel31);
        deleteRequest32.setParentTask("hi!", (long) (short) 100);
        org.elasticsearch.index.VersionType versionType36 = deleteRequest32.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest6.versionType(versionType36);
        org.elasticsearch.index.VersionType versionType38 = deleteRequest6.versionType();
        deleteRequest6.primaryTerm(97L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(task16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(task28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel31 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel31.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(versionType36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(versionType38);
    }

    @Test
    public void test7907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7907");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        deleteRequest10.primaryTerm(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.type("hi!");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel15 = deleteRequest14.consistencyLevel();
        java.lang.String str16 = deleteRequest14.toString();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel15 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel15.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[][hi!][]}" + "'", str16, "delete {[][hi!][]}");
    }

    @Test
    public void test7908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7908");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId20 = null;
        org.elasticsearch.tasks.Task task21 = deleteRequest16.createTask(0L, "", "", taskId20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest16.setRefreshPolicy("");
        deleteRequest23.primaryTerm(1L);
        java.lang.String str26 = deleteRequest23.routing();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy27 = deleteRequest23.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest3.setRefreshPolicy(refreshPolicy27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId36 = null;
        org.elasticsearch.tasks.Task task37 = deleteRequest32.createTask(0L, "", "", taskId36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest32.setRefreshPolicy("");
        java.lang.String str40 = deleteRequest39.toString();
        java.lang.String[] strArray41 = deleteRequest39.indices();
        deleteRequest39.primaryTerm(0L);
        org.elasticsearch.common.unit.TimeValue timeValue44 = deleteRequest39.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest28.timeout(timeValue44);
        deleteRequest28.primaryTerm(0L);
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][][]}" + "'", str12, "delete {[][][]}");
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + refreshPolicy27 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy27.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(task37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "delete {[][][]}" + "'", str40, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(timeValue44);
        org.junit.Assert.assertNotNull(deleteRequest45);
    }

    @Test
    public void test7909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7909");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.consistencyLevel(writeConsistencyLevel23);
        java.lang.String str25 = deleteRequest24.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest24.parent("");
        long long28 = deleteRequest27.version();
        org.elasticsearch.common.unit.TimeValue timeValue29 = deleteRequest27.timeout();
        long long30 = deleteRequest27.version();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[][][]}" + "'", str25, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-3L) + "'", long28 == (-3L));
        org.junit.Assert.assertNotNull(timeValue29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-3L) + "'", long30 == (-3L));
    }

    @Test
    public void test7910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7910");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest9.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue14 = deleteRequest13.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest9.timeout(timeValue14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest3.timeout(timeValue14);
        java.lang.String str17 = deleteRequest3.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str25 = deleteRequest24.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long31 = deleteRequest30.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str33 = deleteRequest32.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue36 = deleteRequest35.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest32.timeout(timeValue36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest37.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId40 = deleteRequest39.getParentTask();
        deleteRequest30.setParentTask(taskId40);
        org.elasticsearch.tasks.Task task42 = deleteRequest24.createTask((long) ' ', "delete {[][][hi!]}", "delete {[][][]}", taskId40);
        org.elasticsearch.common.transport.TransportAddress transportAddress43 = deleteRequest24.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest24.id("delete {[null][null][null]}");
        org.elasticsearch.index.VersionType versionType46 = deleteRequest24.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str54 = deleteRequest53.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest53.id("hi!");
        org.elasticsearch.tasks.TaskId taskId57 = deleteRequest56.getParentTask();
        org.elasticsearch.tasks.Task task58 = deleteRequest24.createTask((long) (short) -1, "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}", "", taskId57);
        org.elasticsearch.tasks.Task task59 = deleteRequest3.createTask(52L, "delete {[delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}][delete {[hi!][null][null]}][hi!]}", "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}", taskId57);
        java.lang.String str60 = deleteRequest3.toString();
        deleteRequest3.setParentTask("delete {[][delete {[null][null][null]}][null]}", (long) '#');
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[][][]}" + "'", str25, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(timeValue36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(taskId40);
        org.junit.Assert.assertNotNull(task42);
        org.junit.Assert.assertNull(transportAddress43);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(versionType46);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(taskId57);
        org.junit.Assert.assertNotNull(task58);
        org.junit.Assert.assertNotNull(task59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "delete {[][delete {[][][]}][delete {[][][]}]}" + "'", str60, "delete {[][delete {[][][]}][delete {[][][]}]}");
    }

    @Test
    public void test7911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7911");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.setRefreshPolicy(refreshPolicy14);
        long long16 = deleteRequest3.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId34 = null;
        org.elasticsearch.tasks.Task task35 = deleteRequest30.createTask(0L, "", "", taskId34);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy36 = deleteRequest30.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId44 = null;
        org.elasticsearch.tasks.Task task45 = deleteRequest40.createTask(0L, "", "", taskId44);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy46 = deleteRequest40.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest30.setRefreshPolicy(refreshPolicy46);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest26.setRefreshPolicy(refreshPolicy46);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest26.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        deleteRequest50.setParentTask("delete {[][][hi!]}", (long) (byte) 100);
        org.elasticsearch.common.transport.TransportAddress transportAddress54 = null;
        deleteRequest50.remoteAddress(transportAddress54);
        org.elasticsearch.index.VersionType versionType56 = deleteRequest50.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest21.versionType(versionType56);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest3.versionType(versionType56);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest62.type("delete {[][][]}");
        java.lang.String str65 = deleteRequest62.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest62.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel69 = deleteRequest68.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel70 = deleteRequest68.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest62.consistencyLevel(writeConsistencyLevel70);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest71.type("delete {[][null][null]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException74 = deleteRequest73.validate();
        org.elasticsearch.common.unit.TimeValue timeValue75 = deleteRequest73.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest58.timeout(timeValue75);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = deleteRequest76.version((long) '4');
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(transportAddress13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(task35);
        org.junit.Assert.assertTrue("'" + refreshPolicy36 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy36.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task45);
        org.junit.Assert.assertTrue("'" + refreshPolicy46 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy46.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(versionType56);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "delete {[][][]}" + "'", str65, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel69 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel69.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel70 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel70.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(deleteRequest73);
        org.junit.Assert.assertNull(actionRequestValidationException74);
        org.junit.Assert.assertNotNull(timeValue75);
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertNotNull(deleteRequest78);
    }

    @Test
    public void test7912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7912");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.type("delete {[null][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = deleteRequest3.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.version((long) '4');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest6.version((long) (short) 0);
        java.lang.String str11 = deleteRequest6.getDescription();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(transportAddress4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][delete {[null][null][null]}][null]}" + "'", str11, "delete {[][delete {[null][null][null]}][null]}");
    }

    @Test
    public void test7913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7913");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        java.lang.String str4 = deleteRequest2.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest2.parent("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest2.parent("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.routing("delete {[][][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.setShardId(shardId11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}", "delete {[delete {[hi!][null][null]}][null][null]}", "delete {[null][null][null]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy17 = deleteRequest16.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest10.setRefreshPolicy(refreshPolicy17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.parent("delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str22 = deleteRequest21.parent();
        deleteRequest21.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest21.setRefreshPolicy("");
        boolean boolean27 = deleteRequest21.getShouldPersistResult();
        org.elasticsearch.common.transport.TransportAddress transportAddress28 = deleteRequest21.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.type("delete {[][][]}");
        java.lang.String str35 = deleteRequest32.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest32.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest37.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest37.type("delete {[][][]}");
        org.elasticsearch.common.unit.TimeValue timeValue42 = deleteRequest37.timeout();
        org.elasticsearch.action.support.IndicesOptions indicesOptions43 = deleteRequest37.indicesOptions();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy44 = deleteRequest37.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str49 = deleteRequest48.index();
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest48.setShardId(shardId50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId59 = null;
        org.elasticsearch.tasks.Task task60 = deleteRequest55.createTask(0L, "", "", taskId59);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy61 = deleteRequest55.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest51.setRefreshPolicy(refreshPolicy61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest37.setRefreshPolicy(refreshPolicy61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest21.setRefreshPolicy(refreshPolicy61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest18.setRefreshPolicy(refreshPolicy61);
        org.elasticsearch.index.shard.IndexShard indexShard66 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete67 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest18, indexShard66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str4, "delete {[delete {[][][hi!]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + refreshPolicy17 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy17.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(transportAddress28);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "delete {[][][]}" + "'", str35, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(timeValue42);
        org.junit.Assert.assertNotNull(indicesOptions43);
        org.junit.Assert.assertTrue("'" + refreshPolicy44 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy44.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(task60);
        org.junit.Assert.assertTrue("'" + refreshPolicy61 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy61.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(deleteRequest65);
    }

    @Test
    public void test7914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7914");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][]}][delete {[null][null][null]}][null]}", "delete {[][hi!][delete {[][][]}]}", "delete {[][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException4 = deleteRequest3.validate();
        org.junit.Assert.assertNull(actionRequestValidationException4);
    }

    @Test
    public void test7915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7915");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.type("delete {[][][hi!]}");
        java.lang.String str7 = deleteRequest6.id();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException8 = deleteRequest6.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure10 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}][delete {[][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][][]}]}][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}]}", (java.lang.Throwable) actionRequestValidationException8, "delete {[][][delete {[][delete {[][][hi!]}][delete {[][][]}]}]}");
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(actionRequestValidationException8);
    }

    @Test
    public void test7916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7916");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][null][null]}][delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}][delete {[][][]}]}", "delete {[delete {[][null][null]}][][]}", "delete {[][delete {[][][]}][delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}]}");
    }

    @Test
    public void test7917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7917");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest1.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue6 = deleteRequest5.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.timeout(timeValue6);
        long long8 = deleteRequest1.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.type("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId21 = null;
        org.elasticsearch.tasks.Task task22 = deleteRequest17.createTask(0L, "", "", taskId21);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy23 = deleteRequest17.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId31 = null;
        org.elasticsearch.tasks.Task task32 = deleteRequest27.createTask(0L, "", "", taskId31);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy33 = deleteRequest27.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest17.setRefreshPolicy(refreshPolicy33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest13.setRefreshPolicy(refreshPolicy33);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy36 = deleteRequest35.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest1.setRefreshPolicy(refreshPolicy36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest1.routing("delete {[][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][][]}]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress40 = null;
        deleteRequest39.remoteAddress(transportAddress40);
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-3L) + "'", long8 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertTrue("'" + refreshPolicy23 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy23.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task32);
        org.junit.Assert.assertTrue("'" + refreshPolicy33 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy33.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertTrue("'" + refreshPolicy36 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy36.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest39);
    }

    @Test
    public void test7918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7918");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest2.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest2.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("delete {[delete {[][][hi!]}][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[null][null][null]}]}");
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
    }

    @Test
    public void test7919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7919");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.version((long) (-1));
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.index("delete {[][delete {[][][]}][delete {[][][]}]}");
        boolean boolean8 = deleteRequest7.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.version((long) (byte) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId18 = null;
        org.elasticsearch.tasks.Task task19 = deleteRequest14.createTask(0L, "", "", taskId18);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy20 = deleteRequest14.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId28 = null;
        org.elasticsearch.tasks.Task task29 = deleteRequest24.createTask(0L, "", "", taskId28);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy30 = deleteRequest24.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest14.setRefreshPolicy(refreshPolicy30);
        java.lang.String str32 = deleteRequest14.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest14.id("hi!");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel35 = deleteRequest14.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest39.type("delete {[][][]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel42 = deleteRequest41.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest14.consistencyLevel(writeConsistencyLevel42);
        java.lang.String str44 = deleteRequest14.id();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy45 = deleteRequest14.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest7.setRefreshPolicy(refreshPolicy45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest7.routing("delete {[delete {[delete {[][][hi!]}][null][null]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(task19);
        org.junit.Assert.assertTrue("'" + refreshPolicy20 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy20.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task29);
        org.junit.Assert.assertTrue("'" + refreshPolicy30 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy30.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[][][]}" + "'", str32, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel35 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel35.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel42 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel42.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertTrue("'" + refreshPolicy45 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy45.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest48);
    }

    @Test
    public void test7920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7920");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long10 = deleteRequest9.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str12 = deleteRequest11.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest14.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest18.getParentTask();
        deleteRequest9.setParentTask(taskId19);
        org.elasticsearch.tasks.Task task21 = deleteRequest3.createTask((long) ' ', "delete {[][][hi!]}", "delete {[][][]}", taskId19);
        java.lang.String str22 = deleteRequest3.getDescription();
        org.elasticsearch.common.unit.TimeValue timeValue23 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest3.routing("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        java.lang.String str26 = deleteRequest3.index();
        org.elasticsearch.index.shard.ShardId shardId27 = deleteRequest3.shardId();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][][]}" + "'", str4, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[][][]}" + "'", str22, "delete {[][][]}");
        org.junit.Assert.assertNotNull(timeValue23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNull(shardId27);
    }

    @Test
    public void test7921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7921");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][hi!]}");
        boolean boolean6 = deleteRequest5.getShouldPersistResult();
        org.elasticsearch.index.shard.ShardId shardId7 = deleteRequest5.shardId();
        java.lang.String str8 = deleteRequest5.toString();
        boolean boolean9 = deleteRequest5.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest5.parent("delete {[][null][delete {[][null][delete {[][delete {[][][hi!]}][delete {[][][]}]}]}]}");
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[][delete {[][][hi!]}][delete {[][][]}]}" + "'", str8, "delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(deleteRequest11);
    }

    @Test
    public void test7922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7922");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.type("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        java.lang.String str14 = deleteRequest13.index();
        java.lang.String str15 = deleteRequest13.parent();
        java.lang.String str16 = deleteRequest13.type();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}" + "'", str16, "delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
    }

    @Test
    public void test7923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7923");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel1 = deleteRequest0.consistencyLevel();
        java.lang.String str2 = deleteRequest0.parent();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel3 = deleteRequest0.consistencyLevel();
        boolean boolean4 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.type("delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}");
        java.lang.String[] strArray7 = deleteRequest6.indices();
        deleteRequest6.primaryTerm((long) (byte) -1);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel1 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel1.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel3 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel3.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(strArray7);
    }

    @Test
    public void test7924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7924");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType6 = deleteRequest5.versionType();
        deleteRequest5.primaryTerm((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.routing("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId18 = null;
        org.elasticsearch.tasks.Task task19 = deleteRequest14.createTask(0L, "", "", taskId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.setRefreshPolicy("");
        java.lang.String str22 = deleteRequest21.toString();
        java.lang.String[] strArray23 = deleteRequest21.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest21.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str34 = deleteRequest33.id();
        java.lang.String str35 = deleteRequest33.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str37 = deleteRequest36.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest36.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId40 = deleteRequest36.getParentTask();
        deleteRequest33.setParentTask(taskId40);
        deleteRequest29.setParentTask(taskId40);
        deleteRequest25.setParentTask(taskId40);
        deleteRequest10.setParentTask(taskId40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str49 = deleteRequest48.index();
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest48.setShardId(shardId50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId59 = null;
        org.elasticsearch.tasks.Task task60 = deleteRequest55.createTask(0L, "", "", taskId59);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy61 = deleteRequest55.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest51.setRefreshPolicy(refreshPolicy61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest10.setRefreshPolicy(refreshPolicy61);
        org.elasticsearch.common.unit.TimeValue timeValue64 = deleteRequest10.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest10.routing("delete {[delete {[][null][null]}][delete {[hi!][null][null]}][delete {[hi!][null][null]}]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions67 = deleteRequest10.indicesOptions();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(task19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[][][]}" + "'", str22, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(taskId40);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(task60);
        org.junit.Assert.assertTrue("'" + refreshPolicy61 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy61.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(timeValue64);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNotNull(indicesOptions67);
    }

    @Test
    public void test7925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7925");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.type("delete {[][][]}");
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest8.timeout();
        org.elasticsearch.action.support.IndicesOptions indicesOptions14 = deleteRequest8.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest8.index("delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest8.id("delete {[delete {[delete {[][null][null]}][][delete {[][][hi!]}]}][delete {[][null][null]}][delete {[null][null][delete {[][][hi!]}]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest8.id("delete {[delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][null][null]}");
        deleteRequest20.setParentTask("delete {[delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}][delete {[hi!][null][null]}][hi!]}", (long) (byte) 1);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(indicesOptions14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
    }

    @Test
    public void test7926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7926");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str9 = deleteRequest8.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException10 = deleteRequest8.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure12 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "hi!", (java.lang.Throwable) actionRequestValidationException10, "delete {[][][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure14 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[][][]}", (java.lang.Throwable) actionRequestValidationException10, "delete {[][][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure16 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}", (java.lang.Throwable) actionRequestValidationException10, "");
        java.lang.String str17 = shardFailure16.indexUUID;
        java.lang.String str18 = shardFailure16.indexUUID;
        java.lang.Throwable throwable19 = shardFailure16.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure21 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[hi!][null][null]}][delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}][delete {[delete {[][null][null]}][][]}]}", throwable19, "delete {[][hi!][delete {[][delete {[delete {[][][hi!]}][null][null]}][]}]}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[null][null][null]}" + "'", str9, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException10);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable19.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test7927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7927");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}", "delete {[][][delete {[][][hi!]}]}", "delete {[][delete {[][][]}][delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}]}");
        java.lang.Class<?> wildcardClass4 = deleteRequest3.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test7928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7928");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long2 = deleteRequest1.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str4 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue7 = deleteRequest6.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.timeout(timeValue7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest10.getParentTask();
        deleteRequest1.setParentTask(taskId11);
        java.lang.String str13 = deleteRequest1.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest1.version((long) '#');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.index.VersionType versionType20 = deleteRequest19.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest19.version((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.type("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.index("delete {[][][hi!]}");
        java.lang.String str28 = deleteRequest27.parent();
        java.lang.String str29 = deleteRequest27.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str37 = deleteRequest36.id();
        java.lang.String str38 = deleteRequest36.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str40 = deleteRequest39.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest39.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId43 = deleteRequest39.getParentTask();
        deleteRequest36.setParentTask(taskId43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel46 = deleteRequest45.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel47 = deleteRequest45.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest36.consistencyLevel(writeConsistencyLevel47);
        org.elasticsearch.tasks.TaskId taskId49 = deleteRequest48.getParentTask();
        org.elasticsearch.tasks.Task task50 = deleteRequest27.createTask(0L, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}", "delete {[delete {[][][hi!]}][null][null]}", taskId49);
        deleteRequest24.setParentTask(taskId49);
        org.elasticsearch.common.unit.TimeValue timeValue52 = deleteRequest24.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest15.timeout(timeValue52);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(timeValue7);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(versionType20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str29, "delete {[delete {[][][hi!]}][null][null]}");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(taskId43);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel46 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel46.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel47 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel47.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(taskId49);
        org.junit.Assert.assertNotNull(task50);
        org.junit.Assert.assertNotNull(timeValue52);
        org.junit.Assert.assertNotNull(deleteRequest53);
    }

    @Test
    public void test7929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7929");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}][delete {[][null][null]}][delete {[][hi!][delete {[null][null][null]}]}]}][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.type("delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest3);
    }

    @Test
    public void test7930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7930");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.parent("hi!");
        java.lang.String[] strArray10 = deleteRequest9.indices();
        deleteRequest9.setParentTask("delete {[][][]}", (long) ' ');
        boolean boolean14 = deleteRequest9.getShouldPersistResult();
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest9.setShardId(shardId15);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(deleteRequest16);
    }

    @Test
    public void test7931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7931");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest10.toString();
        java.lang.String[] strArray12 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str23 = deleteRequest22.id();
        java.lang.String str24 = deleteRequest22.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str26 = deleteRequest25.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest25.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest25.getParentTask();
        deleteRequest22.setParentTask(taskId29);
        deleteRequest18.setParentTask(taskId29);
        deleteRequest14.setParentTask(taskId29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest14.parent("delete {[delete {[][][hi!]}][null][null]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions35 = deleteRequest14.indicesOptions();
        boolean boolean36 = deleteRequest14.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest14.routing("delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}");
        org.elasticsearch.tasks.TaskId taskId39 = null;
        deleteRequest14.setParentTask(taskId39);
        java.lang.String str41 = deleteRequest14.parent();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(indicesOptions35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str41, "delete {[delete {[][][hi!]}][null][null]}");
    }

    @Test
    public void test7932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7932");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][hi!]}][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[][delete {[delete {[][][hi!]}][null][null]}][]}", deleteRequest3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(timeValue4);
    }

    @Test
    public void test7933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7933");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest3.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.timeout(timeValue8);
        java.lang.String str10 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str18 = deleteRequest17.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.type("delete {[][][]}");
        java.lang.String str25 = deleteRequest22.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest22.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId35 = null;
        org.elasticsearch.tasks.Task task36 = deleteRequest31.createTask(0L, "", "", taskId35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest31.setRefreshPolicy("");
        java.lang.String str39 = deleteRequest38.toString();
        java.lang.String[] strArray40 = deleteRequest38.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest38.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str51 = deleteRequest50.id();
        java.lang.String str52 = deleteRequest50.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str54 = deleteRequest53.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest53.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId57 = deleteRequest53.getParentTask();
        deleteRequest50.setParentTask(taskId57);
        deleteRequest46.setParentTask(taskId57);
        deleteRequest42.setParentTask(taskId57);
        deleteRequest27.setParentTask(taskId57);
        deleteRequest17.setParentTask(taskId57);
        org.elasticsearch.tasks.Task task63 = deleteRequest3.createTask((long) 100, "delete {[][][hi!]}", "hi!", taskId57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest3.routing("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.tasks.TaskId taskId66 = deleteRequest3.getParentTask();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[][delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[][][]}]}][]}", deleteRequest3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[][][]}" + "'", str25, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(task36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "delete {[][][]}" + "'", str39, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(taskId57);
        org.junit.Assert.assertNotNull(task63);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(taskId66);
    }

    @Test
    public void test7934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7934");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress2 = deleteRequest0.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId3 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.setShardId(shardId3);
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = null;
        deleteRequest0.remoteAddress(transportAddress5);
        org.elasticsearch.common.transport.TransportAddress transportAddress7 = deleteRequest0.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.version((long) 10);
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest0.getParentTask();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(transportAddress2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNull(transportAddress7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(taskId10);
    }

    @Test
    public void test7935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7935");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("delete {[null][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest7.setShardId(shardId10);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException12 = deleteRequest7.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure14 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}", (java.lang.Throwable) actionRequestValidationException12, "delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure16 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][null][null]}", (java.lang.Throwable) actionRequestValidationException12, "delete {[delete {[][][hi!]}][null][null]}");
        java.lang.Throwable throwable17 = shardFailure16.cause;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting18 = shardFailure16.routing;
        java.lang.String str19 = shardFailure16.indexUUID;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting20 = shardFailure16.routing;
        java.lang.Throwable throwable21 = shardFailure16.cause;
        java.lang.Throwable throwable22 = shardFailure16.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure24 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][hi!][null]}", throwable22, "delete {[delete {[delete {[][null][null]}][null][null]}][][]}");
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(actionRequestValidationException12);
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "Validation Failed: 1: id is missing;");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "Validation Failed: 1: id is missing;");
        org.junit.Assert.assertEquals(throwable17.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: id is missing;");
        org.junit.Assert.assertNull(shardRouting18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str19, "delete {[delete {[][][hi!]}][null][null]}");
        org.junit.Assert.assertNull(shardRouting20);
        org.junit.Assert.assertNotNull(throwable21);
        org.junit.Assert.assertEquals(throwable21.getLocalizedMessage(), "Validation Failed: 1: id is missing;");
        org.junit.Assert.assertEquals(throwable21.getMessage(), "Validation Failed: 1: id is missing;");
        org.junit.Assert.assertEquals(throwable21.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: id is missing;");
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "Validation Failed: 1: id is missing;");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "Validation Failed: 1: id is missing;");
        org.junit.Assert.assertEquals(throwable22.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: id is missing;");
    }

    @Test
    public void test7936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7936");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.setRefreshPolicy("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy10 = deleteRequest6.getRefreshPolicy();
        long long11 = deleteRequest6.version();
        long long12 = deleteRequest6.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest6.type("");
        java.lang.String str15 = deleteRequest14.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.version((-3L));
        java.lang.String str18 = deleteRequest14.getDescription();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + refreshPolicy10 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy10.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-3L) + "'", long11 == (-3L));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-3L) + "'", long12 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[][][hi!]}" + "'", str18, "delete {[][][hi!]}");
    }

    @Test
    public void test7937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7937");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str5 = deleteRequest4.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException6 = deleteRequest4.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure8 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "hi!", (java.lang.Throwable) actionRequestValidationException6, "delete {[][][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure10 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", (java.lang.Throwable) actionRequestValidationException6, "delete {[][][hi!]}");
        java.lang.String str11 = shardFailure10.reason;
        java.lang.Throwable throwable12 = shardFailure10.cause;
        java.lang.String str13 = shardFailure10.reason;
        java.lang.Throwable throwable14 = shardFailure10.cause;
        java.lang.String str15 = shardFailure10.indexUUID;
        java.lang.Throwable throwable16 = shardFailure10.cause;
        java.lang.String str17 = shardFailure10.indexUUID;
        java.lang.String str18 = shardFailure10.reason;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[null][null][null]}" + "'", str5, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(throwable14);
        org.junit.Assert.assertEquals(throwable14.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable14.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable14.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[][][hi!]}" + "'", str15, "delete {[][][hi!]}");
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable16.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[][][hi!]}" + "'", str17, "delete {[][][hi!]}");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
    }

    @Test
    public void test7938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7938");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel1 = deleteRequest0.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions2 = deleteRequest0.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId12 = null;
        org.elasticsearch.tasks.Task task13 = deleteRequest8.createTask(0L, "", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest8.setRefreshPolicy("");
        java.lang.String str16 = deleteRequest15.toString();
        java.lang.String str17 = deleteRequest15.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.type("delete {[null][null][null]}");
        java.lang.String str22 = deleteRequest19.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest19.index("");
        org.elasticsearch.common.unit.TimeValue timeValue25 = deleteRequest24.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest15.timeout(timeValue25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest0.timeout(timeValue25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.id("delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][null][null]}");
        org.elasticsearch.common.io.stream.StreamInput streamInput30 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest29.readFrom(streamInput30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel1 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel1.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[][][]}" + "'", str16, "delete {[][][]}");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[][][]}" + "'", str17, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(timeValue25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
    }

    @Test
    public void test7939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7939");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.type("delete {[][][hi!]}");
        java.lang.String str7 = deleteRequest4.id();
        long long8 = deleteRequest4.version();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[][delete {[null][null][null]}][]}", deleteRequest4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-3L) + "'", long8 == (-3L));
    }

    @Test
    public void test7940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7940");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.setRefreshPolicy("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy10 = deleteRequest6.getRefreshPolicy();
        java.lang.String str11 = deleteRequest6.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = deleteRequest6.remoteAddress();
        deleteRequest6.primaryTerm((long) 1);
        java.lang.String str15 = deleteRequest6.routing();
        org.elasticsearch.index.VersionType versionType16 = deleteRequest6.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest6.index("delete {[delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}][delete {[hi!][null][null]}][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest6.index("delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest24.id("delete {[][][]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException29 = deleteRequest28.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId32 = deleteRequest31.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId40 = null;
        org.elasticsearch.tasks.Task task41 = deleteRequest36.createTask(0L, "", "", taskId40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest36.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel44 = deleteRequest43.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions45 = deleteRequest43.indicesOptions();
        java.lang.String str46 = deleteRequest43.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str48 = deleteRequest47.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest47.version((long) (short) 100);
        deleteRequest47.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str54 = deleteRequest53.parent();
        org.elasticsearch.index.VersionType versionType55 = deleteRequest53.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest47.versionType(versionType55);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest43.versionType(versionType55);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest31.versionType(versionType55);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest28.versionType(versionType55);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy60 = deleteRequest28.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest20.setRefreshPolicy(refreshPolicy60);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + refreshPolicy10 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy10.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(transportAddress12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(versionType16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNull(actionRequestValidationException29);
        org.junit.Assert.assertNull(shardId32);
        org.junit.Assert.assertNotNull(task41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel44 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel44.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "delete {[][][]}" + "'", str46, "delete {[][][]}");
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(versionType55);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertTrue("'" + refreshPolicy60 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy60.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest61);
    }

    @Test
    public void test7941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7941");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest11.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue16 = deleteRequest15.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest11.timeout(timeValue16);
        java.lang.String str18 = deleteRequest11.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException19 = deleteRequest11.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure21 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[delete {[][][hi!]}][null][null]}", (java.lang.Throwable) actionRequestValidationException19, "delete {[][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure23 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "", (java.lang.Throwable) actionRequestValidationException19, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure25 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "hi!", (java.lang.Throwable) actionRequestValidationException19, "delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure27 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[null][null][null]}", (java.lang.Throwable) actionRequestValidationException19, "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure29 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[][][]}][null][null]}", (java.lang.Throwable) actionRequestValidationException19, "delete {[][][hi!]}");
        java.lang.String str30 = shardFailure29.reason;
        java.lang.String str31 = shardFailure29.reason;
        java.lang.String str32 = shardFailure29.indexUUID;
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[][null][null]}" + "'", str18, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException19);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "delete {[delete {[][][]}][null][null]}" + "'", str30, "delete {[delete {[][][]}][null][null]}");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "delete {[delete {[][][]}][null][null]}" + "'", str31, "delete {[delete {[][][]}][null][null]}");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[][][hi!]}" + "'", str32, "delete {[][][hi!]}");
    }

    @Test
    public void test7942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7942");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.setRefreshPolicy("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy10 = deleteRequest6.getRefreshPolicy();
        long long11 = deleteRequest6.version();
        long long12 = deleteRequest6.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest6.type("");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest6.setRefreshPolicy("delete {[][null][delete {[][null][delete {[][delete {[][][hi!]}][delete {[][][]}]}]}]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[][null][delete {[][null][delete {[][delete {[][][hi!]}][delete {[][][]}]}]}]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + refreshPolicy10 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy10.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-3L) + "'", long11 == (-3L));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-3L) + "'", long12 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest14);
    }

    @Test
    public void test7943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7943");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.index("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        deleteRequest10.setParentTask("delete {[null][null][null]}", (long) (short) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest10.index("delete {[hi!][][delete {[][][]}]}");
        java.lang.String str16 = deleteRequest10.getDescription();
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest10.timeout();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[delete {[hi!][][delete {[][][]}]}][delete {[][][]}][delete {[][][]}]}" + "'", str16, "delete {[delete {[hi!][][delete {[][][]}]}][delete {[][][]}][delete {[][][]}]}");
        org.junit.Assert.assertNotNull(timeValue17);
    }

    @Test
    public void test7944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7944");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}", "delete {[][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}][]}", "delete {[][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId11 = null;
        org.elasticsearch.tasks.Task task12 = deleteRequest7.createTask(0L, "", "", taskId11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.setRefreshPolicy("");
        java.lang.String[] strArray15 = deleteRequest14.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId23 = null;
        org.elasticsearch.tasks.Task task24 = deleteRequest19.createTask(0L, "", "", taskId23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest19.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest14.consistencyLevel(writeConsistencyLevel27);
        java.lang.String str29 = deleteRequest28.getDescription();
        long long30 = deleteRequest28.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}", "delete {[][null][null]}", "delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId42 = null;
        org.elasticsearch.tasks.Task task43 = deleteRequest38.createTask(0L, "", "", taskId42);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy44 = deleteRequest38.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest34.setRefreshPolicy(refreshPolicy44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest28.setRefreshPolicy(refreshPolicy44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest3.setRefreshPolicy(refreshPolicy44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest47.type("delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}][delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}][]}");
        java.lang.String str50 = deleteRequest47.id();
        org.junit.Assert.assertNotNull(task12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(task24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "delete {[][][]}" + "'", str29, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertNotNull(task43);
        org.junit.Assert.assertTrue("'" + refreshPolicy44 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy44.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "delete {[][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][delete {[][][]}]}" + "'", str50, "delete {[][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][delete {[][][]}]}");
    }

    @Test
    public void test7945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7945");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.type("delete {[hi!][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue7 = deleteRequest4.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest4.version((long) (byte) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long12 = deleteRequest11.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest11.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest4.timeout(timeValue13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId22 = null;
        org.elasticsearch.tasks.Task task23 = deleteRequest18.createTask(0L, "", "", taskId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest18.setRefreshPolicy("");
        java.lang.String str26 = deleteRequest25.toString();
        java.lang.String[] strArray27 = deleteRequest25.indices();
        deleteRequest25.primaryTerm(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest25.routing("delete {[null][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest31.setShardId(shardId32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest40.type("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId50 = null;
        org.elasticsearch.tasks.Task task51 = deleteRequest46.createTask(0L, "", "", taskId50);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy52 = deleteRequest46.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId60 = null;
        org.elasticsearch.tasks.Task task61 = deleteRequest56.createTask(0L, "", "", taskId60);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy62 = deleteRequest56.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest46.setRefreshPolicy(refreshPolicy62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest42.setRefreshPolicy(refreshPolicy62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest42.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        deleteRequest66.setParentTask("delete {[][][hi!]}", (long) (byte) 100);
        org.elasticsearch.common.transport.TransportAddress transportAddress70 = null;
        deleteRequest66.remoteAddress(transportAddress70);
        org.elasticsearch.index.VersionType versionType72 = deleteRequest66.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest37.versionType(versionType72);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest33.versionType(versionType72);
        org.elasticsearch.common.unit.TimeValue timeValue75 = deleteRequest74.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest4.timeout(timeValue75);
        org.elasticsearch.index.VersionType versionType77 = deleteRequest76.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId85 = null;
        org.elasticsearch.tasks.Task task86 = deleteRequest81.createTask(0L, "", "", taskId85);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest88 = deleteRequest81.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel89 = deleteRequest88.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions90 = deleteRequest88.indicesOptions();
        java.lang.String str91 = deleteRequest88.toString();
        deleteRequest88.primaryTerm((long) '4');
        deleteRequest88.primaryTerm((-1L));
        java.lang.String str96 = deleteRequest88.id();
        org.elasticsearch.common.unit.TimeValue timeValue97 = deleteRequest88.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest98 = deleteRequest76.timeout(timeValue97);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[][][delete {[delete {[][null][null]}][][]}]}", deleteRequest98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(timeValue7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "delete {[][][]}" + "'", str26, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(task51);
        org.junit.Assert.assertTrue("'" + refreshPolicy52 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy52.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task61);
        org.junit.Assert.assertTrue("'" + refreshPolicy62 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy62.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNotNull(versionType72);
        org.junit.Assert.assertNotNull(deleteRequest73);
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertNotNull(timeValue75);
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertNotNull(versionType77);
        org.junit.Assert.assertNotNull(task86);
        org.junit.Assert.assertNotNull(deleteRequest88);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel89 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel89.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "delete {[][][]}" + "'", str91, "delete {[][][]}");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "" + "'", str96, "");
        org.junit.Assert.assertNotNull(timeValue97);
        org.junit.Assert.assertNotNull(deleteRequest98);
    }

    @Test
    public void test7946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7946");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        java.lang.String str9 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str11 = deleteRequest10.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.routing("delete {[][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = deleteRequest15.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str21 = deleteRequest20.id();
        java.lang.String str22 = deleteRequest20.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str24 = deleteRequest23.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest23.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest23.getParentTask();
        deleteRequest20.setParentTask(taskId27);
        deleteRequest15.setParentTask(taskId27);
        deleteRequest3.setParentTask(taskId27);
        org.elasticsearch.action.support.IndicesOptions indicesOptions31 = deleteRequest3.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId32 = deleteRequest3.getParentTask();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(transportAddress16);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(taskId27);
        org.junit.Assert.assertNotNull(indicesOptions31);
        org.junit.Assert.assertNotNull(taskId32);
    }

    @Test
    public void test7947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7947");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest10.toString();
        java.lang.String str12 = deleteRequest10.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.routing("delete {[][null][null]}");
        java.lang.String str15 = deleteRequest14.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str17 = deleteRequest16.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest16.parent("hi!");
        org.elasticsearch.tasks.TaskId taskId20 = deleteRequest16.getParentTask();
        java.lang.String str21 = deleteRequest16.toString();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy22 = deleteRequest16.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest14.setRefreshPolicy(refreshPolicy22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.type("delete {[][][hi!]}");
        boolean boolean30 = deleteRequest29.getShouldPersistResult();
        deleteRequest29.primaryTerm((long) ' ');
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel33 = deleteRequest29.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest14.consistencyLevel(writeConsistencyLevel33);
        java.lang.String str35 = deleteRequest34.index();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][][]}" + "'", str12, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[null][null][null]}" + "'", str17, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(taskId20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[null][null][null]}" + "'", str21, "delete {[null][null][null]}");
        org.junit.Assert.assertTrue("'" + refreshPolicy22 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy22.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel33 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel33.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
    }

    @Test
    public void test7948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7948");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy9 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId17 = null;
        org.elasticsearch.tasks.Task task18 = deleteRequest13.createTask(0L, "", "", taskId17);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy19 = deleteRequest13.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest3.setRefreshPolicy(refreshPolicy19);
        java.lang.String str21 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest3.id("hi!");
        deleteRequest23.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest23.index("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        boolean boolean28 = deleteRequest23.getShouldPersistResult();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertTrue("'" + refreshPolicy9 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy9.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertTrue("'" + refreshPolicy19 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy19.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[][][]}" + "'", str21, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test7949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7949");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId12 = null;
        org.elasticsearch.tasks.Task task13 = deleteRequest8.createTask(0L, "", "", taskId12);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = deleteRequest8.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.setRefreshPolicy(refreshPolicy14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.id("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest3.id("delete {[][][]}");
        java.lang.String str20 = deleteRequest19.index();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput21 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest19.writeTo(streamOutput21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(transportAddress4);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertTrue("'" + refreshPolicy14 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy14.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
    }

    @Test
    public void test7950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7950");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.tasks.TaskId taskId6 = deleteRequest3.getParentTask();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest3.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = null;
        deleteRequest9.remoteAddress(transportAddress11);
        org.elasticsearch.common.unit.TimeValue timeValue13 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest9.timeout(timeValue13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.timeout(timeValue13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.version((long) ' ');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str22 = deleteRequest21.parent();
        deleteRequest21.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str26 = deleteRequest25.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest25.version((long) (short) 100);
        java.lang.String str29 = deleteRequest28.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest28.id("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long34 = deleteRequest33.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str36 = deleteRequest35.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue39 = deleteRequest38.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest35.timeout(timeValue39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest40.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId43 = deleteRequest42.getParentTask();
        deleteRequest33.setParentTask(taskId43);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel45 = deleteRequest33.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest28.consistencyLevel(writeConsistencyLevel45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest21.consistencyLevel(writeConsistencyLevel45);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy48 = deleteRequest21.getRefreshPolicy();
        org.elasticsearch.action.support.IndicesOptions indicesOptions49 = deleteRequest21.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId50 = deleteRequest21.getParentTask();
        org.elasticsearch.tasks.Task task51 = deleteRequest17.createTask((long) 1, "delete {[][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][delete {[][][]}]}", "delete {[][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}][]}", taskId50);
        org.elasticsearch.index.VersionType versionType52 = deleteRequest17.versionType();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(taskId6);
        org.junit.Assert.assertNull(actionRequestValidationException7);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(timeValue39);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(taskId43);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel45 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel45.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertTrue("'" + refreshPolicy48 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy48.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(indicesOptions49);
        org.junit.Assert.assertNotNull(taskId50);
        org.junit.Assert.assertNotNull(task51);
        org.junit.Assert.assertNotNull(versionType52);
    }

    @Test
    public void test7951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7951");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.type("delete {[hi!][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue5 = deleteRequest2.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest2.version((long) (byte) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long10 = deleteRequest9.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue11 = deleteRequest9.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest2.timeout(timeValue11);
        org.elasticsearch.action.support.IndicesOptions indicesOptions13 = deleteRequest12.indicesOptions();
        deleteRequest12.primaryTerm((-3L));
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(timeValue11);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(indicesOptions13);
    }

    @Test
    public void test7952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7952");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}][null][null]}");
        java.lang.String str2 = deleteRequest1.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str7 = deleteRequest6.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest6.timeout(timeValue10);
        deleteRequest11.setParentTask("hi!", 1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.type("delete {[][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.routing("delete {[delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}][delete {[][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}][]}][delete {[][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][delete {[][][]}]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.index.VersionType versionType23 = deleteRequest22.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest22.version((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.parent("");
        java.lang.String str28 = deleteRequest25.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress36 = deleteRequest35.remoteAddress();
        java.lang.String str37 = deleteRequest35.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId48 = null;
        org.elasticsearch.tasks.Task task49 = deleteRequest44.createTask(0L, "", "", taskId48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest44.setRefreshPolicy("");
        java.lang.String[] strArray52 = deleteRequest51.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId60 = null;
        org.elasticsearch.tasks.Task task61 = deleteRequest56.createTask(0L, "", "", taskId60);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest56.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel64 = deleteRequest63.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest51.consistencyLevel(writeConsistencyLevel64);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue68 = deleteRequest67.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress69 = null;
        deleteRequest67.remoteAddress(transportAddress69);
        org.elasticsearch.common.unit.TimeValue timeValue71 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest67.timeout(timeValue71);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest51.timeout(timeValue71);
        org.elasticsearch.index.shard.ShardId shardId74 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest73.setShardId(shardId74);
        org.elasticsearch.tasks.TaskId taskId76 = deleteRequest73.getParentTask();
        org.elasticsearch.tasks.Task task77 = deleteRequest35.createTask((long) '#', "delete {[][][]}", "delete {[][][hi!]}", taskId76);
        org.elasticsearch.tasks.Task task78 = deleteRequest25.createTask((long) 100, "delete {[][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}][]}", "delete {[null][null][null]}", taskId76);
        deleteRequest16.setParentTask(taskId76);
        org.elasticsearch.tasks.Task task80 = deleteRequest1.createTask((-1L), "delete {[hi!][delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[hi!][null][null]}]}", "delete {[][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][delete {[delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}][null][null]}]}", taskId76);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(versionType23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNull(transportAddress36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(task49);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(task61);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel64 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel64.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(timeValue68);
        org.junit.Assert.assertNotNull(timeValue71);
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertNotNull(deleteRequest73);
        org.junit.Assert.assertNotNull(deleteRequest75);
        org.junit.Assert.assertNotNull(taskId76);
        org.junit.Assert.assertNotNull(task77);
        org.junit.Assert.assertNotNull(task78);
        org.junit.Assert.assertNotNull(task80);
    }

    @Test
    public void test7953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7953");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        long long11 = deleteRequest3.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.type("delete {[delete {[hi!][null][null]}][delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}][delete {[delete {[][null][null]}][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str18 = deleteRequest17.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue21 = deleteRequest20.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest17.timeout(timeValue21);
        java.lang.String str23 = deleteRequest17.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str25 = deleteRequest24.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue28 = deleteRequest27.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest24.timeout(timeValue28);
        org.elasticsearch.common.transport.TransportAddress transportAddress30 = deleteRequest24.remoteAddress();
        long long31 = deleteRequest24.version();
        java.lang.String str32 = deleteRequest24.routing();
        org.elasticsearch.tasks.TaskId taskId33 = deleteRequest24.getParentTask();
        deleteRequest17.setParentTask(taskId33);
        org.elasticsearch.tasks.Task task35 = deleteRequest13.createTask((long) 100, "delete {[delete {[][null][null]}][null][null]}", "delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}", taskId33);
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(timeValue21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[null][null][null]}" + "'", str23, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(timeValue28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNull(transportAddress30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-3L) + "'", long31 == (-3L));
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(taskId33);
        org.junit.Assert.assertNotNull(task35);
    }

    @Test
    public void test7954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7954");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}", "delete {[][null][null]}", "delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId11 = null;
        org.elasticsearch.tasks.Task task12 = deleteRequest7.createTask(0L, "", "", taskId11);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy13 = deleteRequest7.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.setRefreshPolicy(refreshPolicy13);
        org.elasticsearch.tasks.TaskId taskId15 = deleteRequest14.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.type("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput18 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest14.writeTo(streamOutput18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task12);
        org.junit.Assert.assertTrue("'" + refreshPolicy13 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy13.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(taskId15);
        org.junit.Assert.assertNotNull(deleteRequest17);
    }

    @Test
    public void test7955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7955");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.type("delete {[null][null][null]}");
        java.lang.String str4 = deleteRequest1.parent();
        java.lang.String str5 = deleteRequest1.type();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[null][null][null]}" + "'", str5, "delete {[null][null][null]}");
    }

    @Test
    public void test7956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7956");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest9.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue14 = deleteRequest13.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest9.timeout(timeValue14);
        java.lang.String str16 = deleteRequest9.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException17 = deleteRequest9.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure19 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[][null][null]}", (java.lang.Throwable) actionRequestValidationException17, "");
        java.lang.Throwable throwable20 = shardFailure19.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure22 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[hi!][null][null]}", throwable20, "delete {[delete {[][][]}][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure24 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}][null][null]}", throwable20, "delete {[delete {[hi!][][delete {[][][]}]}][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure26 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", throwable20, "delete {[delete {[delete {[][][hi!]}][null][null]}][delete {[][][]}][]}");
        java.lang.String str27 = shardFailure26.indexUUID;
        org.junit.Assert.assertNotNull(timeValue14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[][null][null]}" + "'", str16, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException17);
        org.junit.Assert.assertNotNull(throwable20);
        org.junit.Assert.assertEquals(throwable20.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable20.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable20.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[delete {[delete {[][][hi!]}][null][null]}][delete {[][][]}][]}" + "'", str27, "delete {[delete {[delete {[][][hi!]}][null][null]}][delete {[][][]}][]}");
    }

    @Test
    public void test7957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7957");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.type("delete {[hi!][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue5 = deleteRequest2.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest2.version((long) (byte) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long10 = deleteRequest9.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue11 = deleteRequest9.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest2.timeout(timeValue11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId20 = null;
        org.elasticsearch.tasks.Task task21 = deleteRequest16.createTask(0L, "", "", taskId20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest16.setRefreshPolicy("");
        java.lang.String str24 = deleteRequest23.toString();
        java.lang.String[] strArray25 = deleteRequest23.indices();
        deleteRequest23.primaryTerm(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest23.routing("delete {[null][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.setShardId(shardId30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest36.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.type("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId48 = null;
        org.elasticsearch.tasks.Task task49 = deleteRequest44.createTask(0L, "", "", taskId48);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy50 = deleteRequest44.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId58 = null;
        org.elasticsearch.tasks.Task task59 = deleteRequest54.createTask(0L, "", "", taskId58);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy60 = deleteRequest54.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest44.setRefreshPolicy(refreshPolicy60);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest40.setRefreshPolicy(refreshPolicy60);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest40.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        deleteRequest64.setParentTask("delete {[][][hi!]}", (long) (byte) 100);
        org.elasticsearch.common.transport.TransportAddress transportAddress68 = null;
        deleteRequest64.remoteAddress(transportAddress68);
        org.elasticsearch.index.VersionType versionType70 = deleteRequest64.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest35.versionType(versionType70);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest31.versionType(versionType70);
        org.elasticsearch.common.unit.TimeValue timeValue73 = deleteRequest72.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest2.timeout(timeValue73);
        org.elasticsearch.index.VersionType versionType75 = deleteRequest74.versionType();
        org.elasticsearch.index.shard.ShardId shardId76 = deleteRequest74.shardId();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(timeValue11);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "delete {[][][]}" + "'", str24, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(task49);
        org.junit.Assert.assertTrue("'" + refreshPolicy50 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy50.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task59);
        org.junit.Assert.assertTrue("'" + refreshPolicy60 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy60.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(versionType70);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertNotNull(timeValue73);
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertNotNull(versionType75);
        org.junit.Assert.assertNull(shardId76);
    }

    @Test
    public void test7958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7958");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.parent("delete {[][][]}");
        org.elasticsearch.index.VersionType versionType12 = deleteRequest11.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest8.versionType(versionType12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.parent("delete {[hi!][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue16 = deleteRequest13.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest13.type("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        java.lang.String[] strArray19 = deleteRequest18.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str27 = deleteRequest26.id();
        java.lang.String str28 = deleteRequest26.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str30 = deleteRequest29.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest29.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId33 = deleteRequest29.getParentTask();
        deleteRequest26.setParentTask(taskId33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str36 = deleteRequest35.parent();
        deleteRequest35.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest35.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest40.type("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest42.version((long) '#');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel46 = deleteRequest45.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel47 = deleteRequest45.consistencyLevel();
        deleteRequest45.setParentTask("delete {[delete {[][][hi!]}][null][null]}", (long) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId58 = null;
        org.elasticsearch.tasks.Task task59 = deleteRequest54.createTask(0L, "", "", taskId58);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest54.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType62 = deleteRequest54.versionType();
        java.lang.String str63 = deleteRequest54.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress64 = deleteRequest54.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy65 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest54.setRefreshPolicy(refreshPolicy65);
        long long67 = deleteRequest54.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue68 = deleteRequest54.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest45.timeout(timeValue68);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest44.timeout(timeValue68);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest26.timeout(timeValue68);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = deleteRequest76.version((long) (-1));
        org.elasticsearch.common.transport.TransportAddress transportAddress79 = null;
        deleteRequest78.remoteAddress(transportAddress79);
        org.elasticsearch.tasks.TaskId taskId81 = deleteRequest78.getParentTask();
        org.elasticsearch.tasks.Task task82 = deleteRequest26.createTask((long) (short) 100, "delete {[][][delete {[][null][null]}]}", "delete {[delete {[delete {[][null][null]}][][delete {[][][hi!]}]}][delete {[][null][null]}][delete {[null][null][delete {[][][hi!]}]}]}", taskId81);
        org.elasticsearch.tasks.Task task83 = deleteRequest18.createTask((long) 10, "delete {[][delete {[delete {[][][hi!]}][null][null]}][]}", "delete {[][delete {[][][]}][delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}]}", taskId81);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest85 = deleteRequest18.routing("delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(taskId33);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel46 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel46.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel47 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel47.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(task59);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(versionType62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNull(transportAddress64);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 0L + "'", long67 == 0L);
        org.junit.Assert.assertNotNull(timeValue68);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(deleteRequest78);
        org.junit.Assert.assertNotNull(taskId81);
        org.junit.Assert.assertNotNull(task82);
        org.junit.Assert.assertNotNull(task83);
        org.junit.Assert.assertNotNull(deleteRequest85);
    }

    @Test
    public void test7959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7959");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.tasks.TaskId taskId6 = deleteRequest3.getParentTask();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest3.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = null;
        deleteRequest9.remoteAddress(transportAddress11);
        org.elasticsearch.common.unit.TimeValue timeValue13 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest9.timeout(timeValue13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.timeout(timeValue13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str23 = deleteRequest22.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.type("delete {[][][]}");
        java.lang.String str30 = deleteRequest27.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest27.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId40 = null;
        org.elasticsearch.tasks.Task task41 = deleteRequest36.createTask(0L, "", "", taskId40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest36.setRefreshPolicy("");
        java.lang.String str44 = deleteRequest43.toString();
        java.lang.String[] strArray45 = deleteRequest43.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest43.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str56 = deleteRequest55.id();
        java.lang.String str57 = deleteRequest55.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str59 = deleteRequest58.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest58.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId62 = deleteRequest58.getParentTask();
        deleteRequest55.setParentTask(taskId62);
        deleteRequest51.setParentTask(taskId62);
        deleteRequest47.setParentTask(taskId62);
        deleteRequest32.setParentTask(taskId62);
        deleteRequest22.setParentTask(taskId62);
        org.elasticsearch.tasks.Task task68 = deleteRequest15.createTask((long) (short) -1, "delete {[hi!][null][null]}", "hi!", taskId62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest15.index("delete {[][null][null]}");
        java.lang.String str71 = deleteRequest70.getDescription();
        java.lang.String str72 = deleteRequest70.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue75 = deleteRequest74.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest74.id("");
        java.lang.String str78 = deleteRequest77.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str80 = deleteRequest79.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest82 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue83 = deleteRequest82.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = deleteRequest79.timeout(timeValue83);
        java.lang.String str85 = deleteRequest79.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest86 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str87 = deleteRequest86.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest89 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue90 = deleteRequest89.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest91 = deleteRequest86.timeout(timeValue90);
        org.elasticsearch.common.transport.TransportAddress transportAddress92 = deleteRequest86.remoteAddress();
        long long93 = deleteRequest86.version();
        java.lang.String str94 = deleteRequest86.routing();
        org.elasticsearch.tasks.TaskId taskId95 = deleteRequest86.getParentTask();
        deleteRequest79.setParentTask(taskId95);
        deleteRequest77.setParentTask(taskId95);
        deleteRequest70.setParentTask(taskId95);
        java.lang.String str99 = deleteRequest70.toString();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(taskId6);
        org.junit.Assert.assertNull(actionRequestValidationException7);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "delete {[][][]}" + "'", str30, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(task41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "delete {[][][]}" + "'", str44, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(taskId62);
        org.junit.Assert.assertNotNull(task68);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "delete {[delete {[][null][null]}][][]}" + "'", str71, "delete {[delete {[][null][null]}][][]}");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "delete {[delete {[][null][null]}][][]}" + "'", str72, "delete {[delete {[][null][null]}][][]}");
        org.junit.Assert.assertNotNull(timeValue75);
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "delete {[null][null][null]}" + "'", str78, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNotNull(timeValue83);
        org.junit.Assert.assertNotNull(deleteRequest84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "delete {[null][null][null]}" + "'", str85, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertNotNull(timeValue90);
        org.junit.Assert.assertNotNull(deleteRequest91);
        org.junit.Assert.assertNull(transportAddress92);
        org.junit.Assert.assertTrue("'" + long93 + "' != '" + (-3L) + "'", long93 == (-3L));
        org.junit.Assert.assertNull(str94);
        org.junit.Assert.assertNotNull(taskId95);
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "delete {[delete {[][null][null]}][][]}" + "'", str99, "delete {[delete {[][null][null]}][][]}");
    }

    @Test
    public void test7960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7960");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest5.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest5.timeout(timeValue10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str13 = deleteRequest12.parent();
        org.elasticsearch.index.VersionType versionType14 = deleteRequest12.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest5.versionType(versionType14);
        long long16 = deleteRequest15.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.type("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException19 = deleteRequest15.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure21 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][delete {[][][hi!]}][delete {[][][]}]}", (java.lang.Throwable) actionRequestValidationException19, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure23 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", (java.lang.Throwable) actionRequestValidationException19, "delete {[delete {[][null][null]}][][]}");
        java.lang.String str24 = shardFailure23.indexUUID;
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(actionRequestValidationException19);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "delete {[delete {[][null][null]}][][]}" + "'", str24, "delete {[delete {[][null][null]}][][]}");
    }

    @Test
    public void test7961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7961");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][delete {[hi!][null][null]}]}", "delete {[][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][delete {[][][]}]}", "delete {[hi!][delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[hi!][null][null]}]}");
    }

    @Test
    public void test7962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7962");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("hi!");
        org.elasticsearch.tasks.TaskId taskId4 = deleteRequest0.getParentTask();
        java.lang.String str5 = deleteRequest0.toString();
        org.elasticsearch.tasks.TaskId taskId6 = deleteRequest0.getParentTask();
        org.elasticsearch.index.VersionType versionType7 = deleteRequest0.versionType();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "delete {[null][null][null]}" + "'", str1, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(taskId4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[null][null][null]}" + "'", str5, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(taskId6);
        org.junit.Assert.assertNotNull(versionType7);
    }

    @Test
    public void test7963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7963");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        org.elasticsearch.index.VersionType versionType2 = deleteRequest0.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.version((long) 'a');
        org.elasticsearch.index.shard.ShardId shardId5 = deleteRequest4.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("delete {[null][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress10 = deleteRequest9.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.setShardId(shardId11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.version((long) '4');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId22 = null;
        org.elasticsearch.tasks.Task task23 = deleteRequest18.createTask(0L, "", "", taskId22);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel24 = deleteRequest18.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress29 = deleteRequest28.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId37 = null;
        org.elasticsearch.tasks.Task task38 = deleteRequest33.createTask(0L, "", "", taskId37);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy39 = deleteRequest33.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest28.setRefreshPolicy(refreshPolicy39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest18.setRefreshPolicy(refreshPolicy39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest12.setRefreshPolicy(refreshPolicy39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest4.setRefreshPolicy(refreshPolicy39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest4.parent("delete {[null][null][null]}");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput46 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest45.writeTo(streamOutput46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(versionType2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNull(shardId5);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNull(transportAddress10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel24 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel24.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(transportAddress29);
        org.junit.Assert.assertNotNull(task38);
        org.junit.Assert.assertTrue("'" + refreshPolicy39 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy39.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest45);
    }

    @Test
    public void test7964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7964");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest2.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest2.index("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        long long8 = deleteRequest2.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.type("delete {[null][null][null]}");
        java.lang.String str13 = deleteRequest10.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest10.index("");
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest15.getParentTask();
        deleteRequest2.setParentTask(taskId16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue23 = deleteRequest22.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest22.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str27 = deleteRequest26.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest26.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId30 = deleteRequest26.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest26.id("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str37 = deleteRequest36.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest36.id("hi!");
        org.elasticsearch.tasks.TaskId taskId40 = deleteRequest39.getParentTask();
        org.elasticsearch.tasks.TaskId taskId41 = deleteRequest39.getParentTask();
        deleteRequest32.setParentTask(taskId41);
        deleteRequest22.setParentTask(taskId41);
        org.elasticsearch.tasks.Task task44 = deleteRequest2.createTask(97L, "", "delete {[delete {[][null][null]}][][delete {[][][hi!]}]}", taskId41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId52 = null;
        org.elasticsearch.tasks.Task task53 = deleteRequest48.createTask(0L, "", "", taskId52);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest48.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType56 = deleteRequest48.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel57 = deleteRequest48.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest2.consistencyLevel(writeConsistencyLevel57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}", "delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}", "delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}");
        boolean boolean63 = deleteRequest62.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest62.index("delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy66 = deleteRequest62.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str71 = deleteRequest70.id();
        org.elasticsearch.index.shard.ShardId shardId72 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest70.setShardId(shardId72);
        org.elasticsearch.index.shard.ShardId shardId74 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest70.setShardId(shardId74);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = deleteRequest76.parent("delete {[][][]}");
        org.elasticsearch.index.VersionType versionType79 = deleteRequest78.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = deleteRequest75.versionType(versionType79);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest82 = deleteRequest80.parent("delete {[hi!][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue83 = deleteRequest80.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = deleteRequest62.timeout(timeValue83);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest85 = deleteRequest58.timeout(timeValue83);
        long long86 = deleteRequest58.primaryTerm();
        org.elasticsearch.index.shard.IndexShard indexShard87 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult88 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest58, indexShard87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertNotNull(timeValue23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(taskId30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(taskId40);
        org.junit.Assert.assertNotNull(taskId41);
        org.junit.Assert.assertNotNull(task44);
        org.junit.Assert.assertNotNull(task53);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(versionType56);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel57 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel57.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertTrue("'" + refreshPolicy66 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy66.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertNotNull(deleteRequest73);
        org.junit.Assert.assertNotNull(deleteRequest75);
        org.junit.Assert.assertNotNull(deleteRequest78);
        org.junit.Assert.assertNotNull(versionType79);
        org.junit.Assert.assertNotNull(deleteRequest80);
        org.junit.Assert.assertNotNull(deleteRequest82);
        org.junit.Assert.assertNotNull(timeValue83);
        org.junit.Assert.assertNotNull(deleteRequest84);
        org.junit.Assert.assertNotNull(deleteRequest85);
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + 0L + "'", long86 == 0L);
    }

    @Test
    public void test7965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7965");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][null][null]}][null][delete {[][][hi!]}]}", "delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}", "delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.setShardId(shardId4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = deleteRequest5.remoteAddress();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(transportAddress6);
    }

    @Test
    public void test7966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7966");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        boolean boolean6 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest0.id("delete {[delete {[][][hi!]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str13 = deleteRequest12.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long19 = deleteRequest18.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str21 = deleteRequest20.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue24 = deleteRequest23.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest20.timeout(timeValue24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId28 = deleteRequest27.getParentTask();
        deleteRequest18.setParentTask(taskId28);
        org.elasticsearch.tasks.Task task30 = deleteRequest12.createTask((long) ' ', "delete {[][][hi!]}", "delete {[][][]}", taskId28);
        java.lang.String str31 = deleteRequest12.getDescription();
        org.elasticsearch.common.unit.TimeValue timeValue32 = deleteRequest12.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest8.timeout(timeValue32);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException34 = deleteRequest8.validate();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[][][]}" + "'", str13, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(timeValue24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(taskId28);
        org.junit.Assert.assertNotNull(task30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "delete {[][][]}" + "'", str31, "delete {[][][]}");
        org.junit.Assert.assertNotNull(timeValue32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(actionRequestValidationException34);
    }

    @Test
    public void test7967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7967");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel1 = deleteRequest0.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel2 = deleteRequest0.consistencyLevel();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException3 = deleteRequest0.validate();
        java.lang.String str4 = deleteRequest0.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.version((long) 'a');
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel1 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel1.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel2 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel2.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(actionRequestValidationException3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
    }

    @Test
    public void test7968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7968");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.type("delete {[null][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = deleteRequest3.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.version((long) '4');
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy9 = deleteRequest6.getRefreshPolicy();
        java.lang.String str10 = deleteRequest6.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId18 = null;
        org.elasticsearch.tasks.Task task19 = deleteRequest14.createTask(0L, "", "", taskId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType22 = deleteRequest14.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str30 = deleteRequest29.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest29.id("hi!");
        org.elasticsearch.tasks.TaskId taskId33 = deleteRequest32.getParentTask();
        org.elasticsearch.tasks.Task task34 = deleteRequest14.createTask(10L, "delete {[hi!][null][null]}", "delete {[delete {[][][hi!]}][null][null]}", taskId33);
        org.elasticsearch.tasks.TaskId taskId35 = deleteRequest14.getParentTask();
        deleteRequest6.setParentTask(taskId35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId44 = null;
        org.elasticsearch.tasks.Task task45 = deleteRequest40.createTask(0L, "", "", taskId44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest40.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType48 = deleteRequest40.versionType();
        java.lang.String str49 = deleteRequest40.parent();
        org.elasticsearch.index.shard.ShardId shardId50 = deleteRequest40.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest51.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest51.index("");
        java.lang.String str56 = deleteRequest51.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest51.id("delete {[delete {[hi!][null][null]}][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel59 = deleteRequest58.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest40.consistencyLevel(writeConsistencyLevel59);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str65 = deleteRequest64.id();
        org.elasticsearch.index.shard.ShardId shardId66 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest64.setShardId(shardId66);
        org.elasticsearch.index.shard.ShardId shardId68 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest64.setShardId(shardId68);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest64.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str76 = deleteRequest75.id();
        org.elasticsearch.common.unit.TimeValue timeValue77 = deleteRequest75.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = deleteRequest64.timeout(timeValue77);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = deleteRequest60.timeout(timeValue77);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = deleteRequest6.timeout(timeValue77);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest82 = deleteRequest6.version(97L);
        java.lang.String str83 = deleteRequest6.toString();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(transportAddress4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + refreshPolicy9 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy9.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][delete {[null][null][null]}][null]}" + "'", str10, "delete {[][delete {[null][null][null]}][null]}");
        org.junit.Assert.assertNotNull(task19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(taskId33);
        org.junit.Assert.assertNotNull(task34);
        org.junit.Assert.assertNotNull(taskId35);
        org.junit.Assert.assertNotNull(task45);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(versionType48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(shardId50);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel59 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel59.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
        org.junit.Assert.assertNotNull(timeValue77);
        org.junit.Assert.assertNotNull(deleteRequest78);
        org.junit.Assert.assertNotNull(deleteRequest79);
        org.junit.Assert.assertNotNull(deleteRequest80);
        org.junit.Assert.assertNotNull(deleteRequest82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "delete {[][delete {[null][null][null]}][null]}" + "'", str83, "delete {[][delete {[null][null][null]}][null]}");
    }

    @Test
    public void test7969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7969");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.parent("delete {[][][]}");
        org.elasticsearch.index.VersionType versionType12 = deleteRequest11.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest8.versionType(versionType12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.parent("delete {[hi!][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue16 = deleteRequest13.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest13.type("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions19 = deleteRequest13.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest13.id("delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue22 = deleteRequest21.timeout();
        java.lang.String str23 = deleteRequest21.routing();
        org.elasticsearch.index.shard.ShardId shardId24 = deleteRequest21.shardId();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(indicesOptions19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(timeValue22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(shardId24);
    }

    @Test
    public void test7970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7970");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version(10L);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy4 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.type("delete {[delete {[delete {[][null][null]}][][]}][][]}");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "delete {[null][null][null]}" + "'", str1, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertTrue("'" + refreshPolicy4 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy4.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest6);
    }

    @Test
    public void test7971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7971");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.toString();
        long long13 = deleteRequest3.version();
        org.elasticsearch.index.VersionType versionType14 = deleteRequest3.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest3.version(52L);
        deleteRequest3.setParentTask("delete {[][][]}", 0L);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy20 = deleteRequest3.getRefreshPolicy();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][][]}" + "'", str12, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-3L) + "'", long13 == (-3L));
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertTrue("'" + refreshPolicy20 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy20.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
    }

    @Test
    public void test7972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7972");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy9 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId17 = null;
        org.elasticsearch.tasks.Task task18 = deleteRequest13.createTask(0L, "", "", taskId17);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy19 = deleteRequest13.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest3.setRefreshPolicy(refreshPolicy19);
        java.lang.String str21 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest3.id("hi!");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel24 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.type("delete {[][][]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel31 = deleteRequest30.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest3.consistencyLevel(writeConsistencyLevel31);
        java.lang.String str33 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest3.parent("delete {[][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][][]}]}");
        java.lang.String[] strArray36 = deleteRequest3.indices();
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest3.setShardId(shardId37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str40 = deleteRequest39.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue43 = deleteRequest42.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest39.timeout(timeValue43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest44.id("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest46.version((long) 10);
        org.elasticsearch.action.support.IndicesOptions indicesOptions49 = deleteRequest46.indicesOptions();
        java.lang.String str50 = deleteRequest46.type();
        deleteRequest46.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str57 = deleteRequest56.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long63 = deleteRequest62.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str65 = deleteRequest64.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue68 = deleteRequest67.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest64.timeout(timeValue68);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest69.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId72 = deleteRequest71.getParentTask();
        deleteRequest62.setParentTask(taskId72);
        org.elasticsearch.tasks.Task task74 = deleteRequest56.createTask((long) ' ', "delete {[][][hi!]}", "delete {[][][]}", taskId72);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel75 = deleteRequest56.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest46.consistencyLevel(writeConsistencyLevel75);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel77 = deleteRequest46.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = deleteRequest38.consistencyLevel(writeConsistencyLevel77);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = deleteRequest78.routing("delete {[delete {[delete {[][][hi!]}][null][null]}][hi!][hi!]}");
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertTrue("'" + refreshPolicy9 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy9.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertTrue("'" + refreshPolicy19 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy19.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[][][]}" + "'", str21, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel24 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel24.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel31 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel31.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(timeValue43);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(indicesOptions49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "delete {[][][]}" + "'", str57, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 0L + "'", long63 == 0L);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(timeValue68);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(taskId72);
        org.junit.Assert.assertNotNull(task74);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel75 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel75.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel77 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel77.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest78);
        org.junit.Assert.assertNotNull(deleteRequest80);
    }

    @Test
    public void test7973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7973");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest10.indicesOptions();
        java.lang.String str13 = deleteRequest10.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str15 = deleteRequest14.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.version((long) (short) 100);
        deleteRequest14.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str21 = deleteRequest20.parent();
        org.elasticsearch.index.VersionType versionType22 = deleteRequest20.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest14.versionType(versionType22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.versionType(versionType22);
        java.lang.String str25 = deleteRequest10.toString();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[][][]}" + "'", str13, "delete {[][][]}");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[][][]}" + "'", str25, "delete {[][][]}");
    }

    @Test
    public void test7974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7974");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue2 = deleteRequest1.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress3 = null;
        deleteRequest1.remoteAddress(transportAddress3);
        java.lang.String str5 = deleteRequest1.index();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException6 = deleteRequest1.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str11 = deleteRequest10.id();
        java.lang.String str12 = deleteRequest10.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.type("delete {[][][]}");
        java.lang.String str15 = deleteRequest14.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel18 = deleteRequest17.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest1.consistencyLevel(writeConsistencyLevel18);
        boolean boolean20 = deleteRequest1.getShouldPersistResult();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest1.timeout("delete {[hi!][hi!][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[hi!][hi!][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(timeValue2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[null][null][null]}" + "'", str5, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[][][]}" + "'", str15, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel18 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel18.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test7975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7975");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel1 = deleteRequest0.consistencyLevel();
        java.lang.String str2 = deleteRequest0.parent();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel3 = deleteRequest0.consistencyLevel();
        long long4 = deleteRequest0.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.type("delete {[][][]}");
        java.lang.String str11 = deleteRequest8.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest8.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.parent("delete {[][][]}");
        long long16 = deleteRequest15.version();
        java.lang.String str17 = deleteRequest15.toString();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest15.setShardId(shardId18);
        org.elasticsearch.tasks.TaskId taskId20 = deleteRequest15.getParentTask();
        deleteRequest0.setParentTask(taskId20);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel1 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel1.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel3 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel3.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-3L) + "'", long4 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-3L) + "'", long16 == (-3L));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[][delete {[][][]}][delete {[][][]}]}" + "'", str17, "delete {[][delete {[][][]}][delete {[][][]}]}");
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(taskId20);
    }

    @Test
    public void test7976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7976");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException2 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest4.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue9 = deleteRequest8.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest4.timeout(timeValue9);
        java.lang.String str11 = deleteRequest4.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str19 = deleteRequest18.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.type("delete {[][][]}");
        java.lang.String str26 = deleteRequest23.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest23.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId36 = null;
        org.elasticsearch.tasks.Task task37 = deleteRequest32.createTask(0L, "", "", taskId36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest32.setRefreshPolicy("");
        java.lang.String str40 = deleteRequest39.toString();
        java.lang.String[] strArray41 = deleteRequest39.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest39.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str52 = deleteRequest51.id();
        java.lang.String str53 = deleteRequest51.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str55 = deleteRequest54.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest54.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId58 = deleteRequest54.getParentTask();
        deleteRequest51.setParentTask(taskId58);
        deleteRequest47.setParentTask(taskId58);
        deleteRequest43.setParentTask(taskId58);
        deleteRequest28.setParentTask(taskId58);
        deleteRequest18.setParentTask(taskId58);
        org.elasticsearch.tasks.Task task64 = deleteRequest4.createTask((long) 100, "delete {[][][hi!]}", "hi!", taskId58);
        deleteRequest0.setParentTask(taskId58);
        org.elasticsearch.index.shard.ShardId shardId66 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest0.setShardId(shardId66);
        java.lang.String str68 = deleteRequest67.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest67.id("delete {[][delete {[][][hi!]}][delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[][][]}]}]}");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "delete {[null][null][null]}" + "'", str1, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException2);
        org.junit.Assert.assertNotNull(timeValue9);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "delete {[][][]}" + "'", str26, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(task37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "delete {[][][]}" + "'", str40, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(taskId58);
        org.junit.Assert.assertNotNull(task64);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "delete {[null][null][null]}" + "'", str68, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest70);
    }

    @Test
    public void test7977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7977");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.setShardId(shardId2);
        long long4 = deleteRequest3.primaryTerm();
        org.elasticsearch.index.VersionType versionType5 = deleteRequest3.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.consistencyLevel(writeConsistencyLevel6);
        java.lang.String str8 = deleteRequest3.getDescription();
        boolean boolean9 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str17 = deleteRequest16.id();
        java.lang.String str18 = deleteRequest16.index();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest16.getParentTask();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException20 = deleteRequest16.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue23 = deleteRequest22.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress24 = null;
        deleteRequest22.remoteAddress(transportAddress24);
        org.elasticsearch.common.unit.TimeValue timeValue26 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest22.timeout(timeValue26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest16.timeout(timeValue26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest16.version((long) ' ');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.parent("hi!");
        org.elasticsearch.tasks.TaskId taskId33 = deleteRequest32.getParentTask();
        org.elasticsearch.tasks.Task task34 = deleteRequest3.createTask((long) (byte) 1, "delete {[delete {[][null][null]}][][delete {[][][hi!]}]}", "delete {[delete {[hi!][][delete {[][][]}]}][delete {[][][]}][delete {[][][]}]}", taskId33);
        long long35 = deleteRequest3.version();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(versionType5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[hi!][null][null]}" + "'", str8, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNull(actionRequestValidationException20);
        org.junit.Assert.assertNotNull(timeValue23);
        org.junit.Assert.assertNotNull(timeValue26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(taskId33);
        org.junit.Assert.assertNotNull(task34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-3L) + "'", long35 == (-3L));
    }

    @Test
    public void test7978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7978");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        java.lang.String str9 = deleteRequest3.index();
        java.lang.String str10 = deleteRequest3.index();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test7979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7979");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][null][null]}", "delete {[hi!][null][null]}", "delete {[hi!][null][null]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy4 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.version((long) '4');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.type("delete {[null][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = deleteRequest10.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.setShardId(shardId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.version((long) '4');
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = deleteRequest15.remoteAddress();
        org.elasticsearch.index.VersionType versionType17 = deleteRequest15.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest3.versionType(versionType17);
        org.elasticsearch.action.support.IndicesOptions indicesOptions19 = deleteRequest3.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.type("delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest3.index("delete {[][delete {[null][null][null]}][delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}]}");
        org.junit.Assert.assertTrue("'" + refreshPolicy4 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy4.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(transportAddress11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(transportAddress16);
        org.junit.Assert.assertNotNull(versionType17);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(indicesOptions19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
    }

    @Test
    public void test7980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7980");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.parent("delete {[][][]}");
        java.lang.String str11 = deleteRequest10.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.type("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest10.index("delete {[delete {[hi!][null][null]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.id("delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("delete {[][][]}");
        java.lang.String str27 = deleteRequest24.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest24.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel31 = deleteRequest30.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel32 = deleteRequest30.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest24.consistencyLevel(writeConsistencyLevel32);
        deleteRequest33.setParentTask("hi!", 1L);
        java.lang.String str37 = deleteRequest33.index();
        long long38 = deleteRequest33.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId49 = null;
        org.elasticsearch.tasks.Task task50 = deleteRequest45.createTask(0L, "", "", taskId49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest45.setRefreshPolicy("");
        java.lang.String str53 = deleteRequest52.toString();
        java.lang.String str54 = deleteRequest52.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest52.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        deleteRequest56.setParentTask("delete {[delete {[delete {[][][hi!]}][null][null]}][null][null]}", (long) (short) 1);
        org.elasticsearch.index.VersionType versionType60 = deleteRequest56.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId71 = null;
        org.elasticsearch.tasks.Task task72 = deleteRequest67.createTask(0L, "", "", taskId71);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest67.setRefreshPolicy("");
        java.lang.String str75 = deleteRequest74.toString();
        java.lang.String[] strArray76 = deleteRequest74.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = deleteRequest74.index("");
        java.lang.String str79 = deleteRequest74.parent();
        java.lang.String[] strArray80 = deleteRequest74.indices();
        org.elasticsearch.tasks.TaskId taskId81 = deleteRequest74.getParentTask();
        org.elasticsearch.tasks.Task task82 = deleteRequest56.createTask(0L, "delete {[delete {[hi!][null][null]}][null][null]}", "delete {[delete {[][null][null]}][][]}", taskId81);
        org.elasticsearch.tasks.Task task83 = deleteRequest33.createTask((long) ' ', "delete {[][delete {[][][]}][]}", "delete {[delete {[null][null][null]}][null][null]}", taskId81);
        org.elasticsearch.tasks.Task task84 = deleteRequest17.createTask((-3L), "delete {[delete {[][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][delete {[][][]}]}][][delete {[delete {[delete {[][][hi!]}][null][null]}][null][null]}]}", "delete {[delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][delete {[hi!][null][null]}][hi!]}]}", taskId81);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][][]}" + "'", str27, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel31 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel31.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel32 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel32.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-3L) + "'", long38 == (-3L));
        org.junit.Assert.assertNotNull(task50);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "delete {[][][]}" + "'", str53, "delete {[][][]}");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "delete {[][][]}" + "'", str54, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(versionType60);
        org.junit.Assert.assertNotNull(task72);
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "delete {[][][]}" + "'", str75, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(deleteRequest78);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(taskId81);
        org.junit.Assert.assertNotNull(task82);
        org.junit.Assert.assertNotNull(task83);
        org.junit.Assert.assertNotNull(task84);
    }

    @Test
    public void test7981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7981");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[][][]}");
        java.lang.String str3 = deleteRequest0.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.version((long) 10);
        java.lang.String str6 = deleteRequest0.id();
        java.lang.Class<?> wildcardClass7 = deleteRequest0.getClass();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "delete {[null][null][null]}" + "'", str3, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test7982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7982");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.consistencyLevel(writeConsistencyLevel23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue27 = deleteRequest26.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress28 = null;
        deleteRequest26.remoteAddress(transportAddress28);
        org.elasticsearch.common.unit.TimeValue timeValue30 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest26.timeout(timeValue30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest10.timeout(timeValue30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.id("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel39 = deleteRequest38.consistencyLevel();
        java.lang.String str40 = deleteRequest38.parent();
        boolean boolean41 = deleteRequest38.getShouldPersistResult();
        boolean boolean42 = deleteRequest38.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId50 = null;
        org.elasticsearch.tasks.Task task51 = deleteRequest46.createTask(0L, "", "", taskId50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest46.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType54 = deleteRequest46.versionType();
        java.lang.String str55 = deleteRequest46.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress56 = deleteRequest46.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy57 = deleteRequest46.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest38.setRefreshPolicy(refreshPolicy57);
        java.lang.String str59 = deleteRequest38.toString();
        org.elasticsearch.common.unit.TimeValue timeValue60 = deleteRequest38.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest38.index("delete {[][hi!][delete {[null][null][null]}]}");
        org.elasticsearch.tasks.TaskId taskId63 = deleteRequest38.getParentTask();
        org.elasticsearch.tasks.Task task64 = deleteRequest32.createTask((long) 0, "delete {[][null][delete {[][delete {[][][hi!]}][delete {[][][]}]}]}", "delete {[][delete {[][][hi!]}][]}", taskId63);
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(timeValue27);
        org.junit.Assert.assertNotNull(timeValue30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel39 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel39.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(task51);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(versionType54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(transportAddress56);
        org.junit.Assert.assertTrue("'" + refreshPolicy57 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy57.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "delete {[null][null][null]}" + "'", str59, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(timeValue60);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(taskId63);
        org.junit.Assert.assertNotNull(task64);
    }

    @Test
    public void test7983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7983");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][null][null]}][delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}][delete {[delete {[][null][null]}][][]}]}");
    }

    @Test
    public void test7984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7984");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.id("delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        boolean boolean10 = deleteRequest9.getShouldPersistResult();
        java.lang.String str11 = deleteRequest9.parent();
        long long12 = deleteRequest9.version();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-3L) + "'", long12 == (-3L));
    }

    @Test
    public void test7985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7985");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("delete {[null][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest7.setShardId(shardId10);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException12 = deleteRequest7.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure14 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}", (java.lang.Throwable) actionRequestValidationException12, "delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure16 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][null][null]}", (java.lang.Throwable) actionRequestValidationException12, "delete {[delete {[][][hi!]}][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure18 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][delete {[][hi!][]}][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}]}", (java.lang.Throwable) actionRequestValidationException12, "delete {[][][delete {[][][hi!]}]}");
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(actionRequestValidationException12);
    }

    @Test
    public void test7986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7986");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}", "delete {[delete {[][null][null]}][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("delete {[][delete {[][][]}][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest5.remoteAddress(transportAddress6);
        java.lang.String str8 = deleteRequest5.index();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[hi!][null][null]}" + "'", str8, "delete {[hi!][null][null]}");
    }

    @Test
    public void test7987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7987");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy7 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.id("delete {[delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}][delete {[][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][][]}]}][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}]}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + refreshPolicy7 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy7.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest9);
    }

    @Test
    public void test7988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7988");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.index.shard.ShardId shardId6 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version((long) (byte) 100);
        boolean boolean9 = deleteRequest3.getShouldPersistResult();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(shardId6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test7989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7989");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][hi!]}][null][null]}", "delete {[][][]}", "");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel4 = deleteRequest3.consistencyLevel();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId14 = null;
        org.elasticsearch.tasks.Task task15 = deleteRequest10.createTask(0L, "", "", taskId14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest10.setRefreshPolicy("");
        java.lang.String[] strArray18 = deleteRequest17.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId26 = null;
        org.elasticsearch.tasks.Task task27 = deleteRequest22.createTask(0L, "", "", taskId26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel30 = deleteRequest29.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest17.consistencyLevel(writeConsistencyLevel30);
        deleteRequest31.setParentTask("hi!", (long) (short) 100);
        java.lang.String str35 = deleteRequest31.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest39.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType42 = deleteRequest41.versionType();
        java.lang.String str43 = deleteRequest41.index();
        org.elasticsearch.common.unit.TimeValue timeValue44 = deleteRequest41.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest31.timeout(timeValue44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest3.timeout(timeValue44);
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest3.setShardId(shardId47);
        java.lang.String str49 = deleteRequest3.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][hi!]}", "delete {[null][null][null]}", "");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy54 = deleteRequest53.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId62 = null;
        org.elasticsearch.tasks.Task task63 = deleteRequest58.createTask(0L, "", "", taskId62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest58.setRefreshPolicy("");
        java.lang.String[] strArray66 = deleteRequest65.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId74 = null;
        org.elasticsearch.tasks.Task task75 = deleteRequest70.createTask(0L, "", "", taskId74);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest70.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel78 = deleteRequest77.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = deleteRequest65.consistencyLevel(writeConsistencyLevel78);
        deleteRequest79.setParentTask("hi!", (long) (short) 100);
        org.elasticsearch.index.VersionType versionType83 = deleteRequest79.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = deleteRequest53.versionType(versionType83);
        org.elasticsearch.index.VersionType versionType85 = deleteRequest53.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest86 = deleteRequest3.versionType(versionType85);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput87 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.writeTo(streamOutput87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel4 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel4.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(task15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(task27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel30 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel30.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(versionType42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(timeValue44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + refreshPolicy54 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy54.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task63);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(task75);
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel78 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel78.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest79);
        org.junit.Assert.assertNotNull(versionType83);
        org.junit.Assert.assertNotNull(deleteRequest84);
        org.junit.Assert.assertNotNull(versionType85);
        org.junit.Assert.assertNotNull(deleteRequest86);
    }

    @Test
    public void test7990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7990");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str13 = deleteRequest12.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException14 = deleteRequest12.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure16 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "hi!", (java.lang.Throwable) actionRequestValidationException14, "delete {[][][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure18 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "", (java.lang.Throwable) actionRequestValidationException14, "delete {[][][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure20 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[][delete {[][][hi!]}][delete {[][][]}]}", (java.lang.Throwable) actionRequestValidationException14, "delete {[][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure22 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException14, "delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure24 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}", (java.lang.Throwable) actionRequestValidationException14, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure26 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][delete {[delete {[][delete {[delete {[][][hi!]}][null][null]}][]}][null][null]}][null]}", (java.lang.Throwable) actionRequestValidationException14, "delete {[delete {[hi!][][delete {[][][]}]}][delete {[][delete {[hi!][null][null]}][hi!]}][delete {[][][delete {[][delete {[][][hi!]}][delete {[][][]}]}]}]}");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting27 = shardFailure26.routing;
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[null][null][null]}" + "'", str13, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException14);
        org.junit.Assert.assertNull(shardRouting27);
    }

    @Test
    public void test7991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7991");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        deleteRequest0.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.setRefreshPolicy("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException6 = deleteRequest5.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.index("delete {[hi!][null][null]}");
        deleteRequest5.setParentTask("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}", 10L);
        java.lang.String str12 = deleteRequest5.parent();
        java.lang.String str13 = deleteRequest5.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.index.VersionType versionType18 = deleteRequest17.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel19 = deleteRequest17.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest5.consistencyLevel(writeConsistencyLevel19);
        org.elasticsearch.index.VersionType versionType21 = deleteRequest5.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][null][null]}", "", "delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId36 = null;
        org.elasticsearch.tasks.Task task37 = deleteRequest32.createTask(0L, "", "", taskId36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest32.setRefreshPolicy("");
        java.lang.String str40 = deleteRequest39.toString();
        java.lang.String[] strArray41 = deleteRequest39.indices();
        java.lang.String[] strArray42 = deleteRequest39.indices();
        org.elasticsearch.tasks.TaskId taskId43 = deleteRequest39.getParentTask();
        org.elasticsearch.tasks.Task task44 = deleteRequest25.createTask((long) 100, "delete {[delete {[hi!][null][null]}][null][null]}", "delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}", taskId43);
        long long45 = deleteRequest25.version();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException46 = deleteRequest25.validate();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy47 = deleteRequest25.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest5.setRefreshPolicy(refreshPolicy47);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(actionRequestValidationException6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel19 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel19.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(versionType21);
        org.junit.Assert.assertNotNull(task37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "delete {[][][]}" + "'", str40, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(taskId43);
        org.junit.Assert.assertNotNull(task44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-3L) + "'", long45 == (-3L));
        org.junit.Assert.assertNull(actionRequestValidationException46);
        org.junit.Assert.assertTrue("'" + refreshPolicy47 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy47.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest48);
    }

    @Test
    public void test7992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7992");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.index.shard.ShardId shardId9 = deleteRequest8.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str11 = deleteRequest10.parent();
        deleteRequest10.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest10.setRefreshPolicy("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException16 = deleteRequest15.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.index("delete {[hi!][null][null]}");
        deleteRequest15.setParentTask("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}", 10L);
        java.lang.String str22 = deleteRequest15.parent();
        java.lang.String str23 = deleteRequest15.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.index.VersionType versionType28 = deleteRequest27.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = deleteRequest27.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest15.consistencyLevel(writeConsistencyLevel29);
        org.elasticsearch.index.VersionType versionType31 = deleteRequest15.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest8.versionType(versionType31);
        org.elasticsearch.common.transport.TransportAddress transportAddress33 = null;
        deleteRequest8.remoteAddress(transportAddress33);
        org.elasticsearch.common.transport.TransportAddress transportAddress35 = null;
        deleteRequest8.remoteAddress(transportAddress35);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(shardId9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(actionRequestValidationException16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel29 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel29.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(versionType31);
        org.junit.Assert.assertNotNull(deleteRequest32);
    }

    @Test
    public void test7993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7993");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str7 = deleteRequest6.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException8 = deleteRequest6.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure10 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "hi!", (java.lang.Throwable) actionRequestValidationException8, "delete {[][][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure12 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", (java.lang.Throwable) actionRequestValidationException8, "delete {[][][hi!]}");
        java.lang.String str13 = shardFailure12.reason;
        java.lang.Throwable throwable14 = shardFailure12.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure16 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][null][null]}", throwable14, "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        java.lang.Throwable throwable17 = shardFailure16.cause;
        java.lang.String str18 = shardFailure16.indexUUID;
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[null][null][null]}" + "'", str7, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(throwable14);
        org.junit.Assert.assertEquals(throwable14.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable14.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable14.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable17.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}" + "'", str18, "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
    }

    @Test
    public void test7994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7994");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest2.setShardId(shardId4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str10 = deleteRequest9.id();
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.setShardId(shardId11);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest9.setShardId(shardId13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest9.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.routing("delete {[][][hi!]}");
        java.lang.String str19 = deleteRequest18.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest18.id("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.version((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str25 = deleteRequest24.parent();
        deleteRequest24.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest24.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.type("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long34 = deleteRequest33.primaryTerm();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel35 = deleteRequest33.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest31.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest23.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest2.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.index("delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}");
        java.lang.String str41 = deleteRequest38.toString();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput42 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest38.writeTo(streamOutput42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel35 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel35.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "delete {[delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}][null][null]}" + "'", str41, "delete {[delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}][null][null]}");
    }

    @Test
    public void test7995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7995");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy9 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId17 = null;
        org.elasticsearch.tasks.Task task18 = deleteRequest13.createTask(0L, "", "", taskId17);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy19 = deleteRequest13.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest3.setRefreshPolicy(refreshPolicy19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId28 = null;
        org.elasticsearch.tasks.Task task29 = deleteRequest24.createTask(0L, "", "", taskId28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest24.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType32 = deleteRequest24.versionType();
        java.lang.String str33 = deleteRequest24.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId41 = null;
        org.elasticsearch.tasks.Task task42 = deleteRequest37.createTask(0L, "", "", taskId41);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy43 = deleteRequest37.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest24.setRefreshPolicy(refreshPolicy43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest3.setRefreshPolicy(refreshPolicy43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str47 = deleteRequest46.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue50 = deleteRequest49.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest46.timeout(timeValue50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest51.id("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest53.version((long) 10);
        org.elasticsearch.action.support.IndicesOptions indicesOptions56 = deleteRequest53.indicesOptions();
        java.lang.String str57 = deleteRequest53.type();
        deleteRequest53.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest53.type("delete {[delete {[hi!][null][null]}][null][null]}");
        org.elasticsearch.tasks.TaskId taskId62 = deleteRequest61.getParentTask();
        deleteRequest45.setParentTask(taskId62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest45.parent("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest65.index("delete {[delete {[][][hi!]}][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[null][null][null]}]}");
        boolean boolean68 = deleteRequest65.getShouldPersistResult();
        org.elasticsearch.common.transport.TransportAddress transportAddress69 = deleteRequest65.remoteAddress();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertTrue("'" + refreshPolicy9 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy9.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertTrue("'" + refreshPolicy19 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy19.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(task29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(versionType32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "delete {[][][]}" + "'", str33, "delete {[][][]}");
        org.junit.Assert.assertNotNull(task42);
        org.junit.Assert.assertTrue("'" + refreshPolicy43 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy43.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(timeValue50);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(indicesOptions56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(taskId62);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(transportAddress69);
    }

    @Test
    public void test7996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7996");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest10.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId13 = null;
        deleteRequest10.setParentTask(taskId13);
        deleteRequest10.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest10.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        java.lang.String str19 = deleteRequest18.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest18.type("hi!");
        java.lang.String str22 = deleteRequest21.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId30 = null;
        org.elasticsearch.tasks.Task task31 = deleteRequest26.createTask(0L, "", "", taskId30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest26.setRefreshPolicy("");
        deleteRequest33.primaryTerm(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest33.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel39 = deleteRequest38.consistencyLevel();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy40 = deleteRequest38.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest37.setRefreshPolicy(refreshPolicy40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest21.setRefreshPolicy(refreshPolicy40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest21.parent("");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest44.timeout("delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions12);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(task31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel39 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel39.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + refreshPolicy40 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy40.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest44);
    }

    @Test
    public void test7997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7997");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest10.indicesOptions();
        java.lang.String str13 = deleteRequest10.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str15 = deleteRequest14.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.version((long) (short) 100);
        deleteRequest14.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str21 = deleteRequest20.parent();
        org.elasticsearch.index.VersionType versionType22 = deleteRequest20.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest14.versionType(versionType22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.versionType(versionType22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.id("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        java.lang.String str27 = deleteRequest24.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest24.version((long) (byte) 10);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy30 = deleteRequest24.getRefreshPolicy();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[][][]}" + "'", str13, "delete {[][][]}");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertTrue("'" + refreshPolicy30 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy30.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
    }

    @Test
    public void test7998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7998");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        deleteRequest0.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str5 = deleteRequest4.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest4.version((long) (short) 100);
        java.lang.String str8 = deleteRequest7.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.id("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long13 = deleteRequest12.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str15 = deleteRequest14.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue18 = deleteRequest17.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest14.timeout(timeValue18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId22 = deleteRequest21.getParentTask();
        deleteRequest12.setParentTask(taskId22);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel24 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest7.consistencyLevel(writeConsistencyLevel24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest0.consistencyLevel(writeConsistencyLevel24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}", "delete {[][][hi!]}", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str38 = deleteRequest37.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest37.id("hi!");
        org.elasticsearch.tasks.TaskId taskId41 = deleteRequest40.getParentTask();
        org.elasticsearch.tasks.TaskId taskId42 = deleteRequest40.getParentTask();
        org.elasticsearch.tasks.Task task43 = deleteRequest30.createTask((-1L), "", "hi!", taskId42);
        deleteRequest26.setParentTask(taskId42);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException45 = deleteRequest26.validate();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(timeValue18);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(taskId22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel24 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel24.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(taskId41);
        org.junit.Assert.assertNotNull(taskId42);
        org.junit.Assert.assertNotNull(task43);
        org.junit.Assert.assertNotNull(actionRequestValidationException45);
    }

    @Test
    public void test7999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7999");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = deleteRequest3.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.setShardId(shardId6);
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.setShardId(shardId8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.id("delete {[delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}][null][null]}");
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest11.getParentTask();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(transportAddress5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(taskId12);
    }

    @Test
    public void test8000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test8000");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.type("delete {[][][]}");
        java.lang.String str8 = deleteRequest5.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType19 = deleteRequest18.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest10.versionType(versionType19);
        java.lang.String str21 = deleteRequest10.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest10.id("hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}][delete {[delete {[][null][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}]}", deleteRequest10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[][][]}" + "'", str8, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(versionType19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[][delete {[][][]}][delete {[][][]}]}" + "'", str21, "delete {[][delete {[][][]}][delete {[][][]}]}");
        org.junit.Assert.assertNotNull(deleteRequest23);
    }
}

