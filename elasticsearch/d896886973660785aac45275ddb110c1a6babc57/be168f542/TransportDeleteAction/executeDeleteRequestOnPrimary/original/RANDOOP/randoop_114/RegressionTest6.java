import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest6 {

    public static boolean debug = false;

    @Test
    public void test3001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3001");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][hi!]}][null][delete {[][][]}]}", "delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}", "delete {[][][hi!]}");
    }

    @Test
    public void test3002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3002");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = deleteRequest0.remoteAddress();
        long long7 = deleteRequest0.version();
        boolean boolean8 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue11 = deleteRequest10.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = null;
        deleteRequest10.remoteAddress(transportAddress12);
        java.lang.String str14 = deleteRequest10.index();
        org.elasticsearch.index.VersionType versionType15 = deleteRequest10.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest0.versionType(versionType15);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.setShardId(shardId17);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel19 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest16.consistencyLevel(writeConsistencyLevel19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest16.type("hi!");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput23 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest22.writeTo(streamOutput23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(transportAddress6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-3L) + "'", long7 == (-3L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(timeValue11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[null][null][null]}" + "'", str14, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(versionType15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
    }

    @Test
    public void test3003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3003");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][null][null]}", throwable2, "delete {[][][hi!]}");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting5 = shardFailure4.routing;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = shardFailure4.routing;
        java.lang.String str7 = shardFailure4.indexUUID;
        java.lang.String str8 = shardFailure4.reason;
        java.lang.String str9 = shardFailure4.indexUUID;
        java.lang.Class<?> wildcardClass10 = shardFailure4.getClass();
        org.junit.Assert.assertNull(shardRouting5);
        org.junit.Assert.assertNull(shardRouting6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[][][hi!]}" + "'", str7, "delete {[][][hi!]}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[null][null][null]}" + "'", str8, "delete {[null][null][null]}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[][][hi!]}" + "'", str9, "delete {[][][hi!]}");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test3004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3004");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.type("delete {[][][]}");
        boolean boolean8 = deleteRequest5.getShouldPersistResult();
        java.lang.String str9 = deleteRequest5.routing();
        java.lang.String str10 = deleteRequest5.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}", deleteRequest5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][delete {[][][]}][delete {[][][]}]}" + "'", str10, "delete {[][delete {[][][]}][delete {[][][]}]}");
    }

    @Test
    public void test3005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3005");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.type("delete {[null][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = deleteRequest3.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.version((long) '4');
        long long9 = deleteRequest6.primaryTerm();
        org.elasticsearch.index.VersionType versionType10 = deleteRequest6.versionType();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(transportAddress4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNotNull(versionType10);
    }

    @Test
    public void test3006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3006");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.setRefreshPolicy("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy10 = deleteRequest6.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId18 = null;
        org.elasticsearch.tasks.Task task19 = deleteRequest14.createTask(0L, "", "", taskId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType22 = deleteRequest14.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest14.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest6.consistencyLevel(writeConsistencyLevel23);
        long long25 = deleteRequest6.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId33 = null;
        org.elasticsearch.tasks.Task task34 = deleteRequest29.createTask(0L, "", "", taskId33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest29.setRefreshPolicy("");
        java.lang.String str37 = deleteRequest36.toString();
        java.lang.String[] strArray38 = deleteRequest36.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest36.index("");
        org.elasticsearch.common.unit.TimeValue timeValue41 = deleteRequest40.timeout();
        org.elasticsearch.index.VersionType versionType42 = deleteRequest40.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest6.versionType(versionType42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest49.type("delete {[null][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress52 = deleteRequest51.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest51.setShardId(shardId53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest54.version((long) '4');
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy57 = deleteRequest54.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest47.setRefreshPolicy(refreshPolicy57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest6.setRefreshPolicy(refreshPolicy57);
        java.lang.Class<?> wildcardClass60 = deleteRequest6.getClass();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + refreshPolicy10 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy10.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(task19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-3L) + "'", long25 == (-3L));
        org.junit.Assert.assertNotNull(task34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "delete {[][][]}" + "'", str37, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(timeValue41);
        org.junit.Assert.assertNotNull(versionType42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNull(transportAddress52);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertTrue("'" + refreshPolicy57 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy57.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test3007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3007");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest7.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.id("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest12.routing("delete {[hi!][null][null]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException17 = deleteRequest16.validate();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(taskId8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(actionRequestValidationException17);
    }

    @Test
    public void test3008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3008");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        deleteRequest0.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.setRefreshPolicy("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException6 = deleteRequest5.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.index("delete {[hi!][null][null]}");
        java.lang.String str9 = deleteRequest8.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.index("delete {[][][hi!]}");
        java.lang.String str16 = deleteRequest15.parent();
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest15.getParentTask();
        org.elasticsearch.tasks.Task task18 = deleteRequest8.createTask((long) (-1), "delete {[][delete {[][][]}][delete {[][][]}]}", "delete {[hi!][null][null]}", taskId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest8.parent("delete {[delete {[][null][null]}][][]}");
        java.lang.String str21 = deleteRequest8.id();
        java.lang.String str22 = deleteRequest8.routing();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(actionRequestValidationException6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[hi!][null][null]}" + "'", str9, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test3009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3009");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][]}", "delete {[null][null][null]}", "delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][hi!]}");
        java.lang.String str6 = deleteRequest3.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel7 = deleteRequest3.consistencyLevel();
        java.lang.Class<?> wildcardClass8 = writeConsistencyLevel7.getClass();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}" + "'", str6, "delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel7 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel7.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test3010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3010");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel1 = deleteRequest0.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel2 = deleteRequest0.consistencyLevel();
        deleteRequest0.setParentTask("delete {[delete {[][][hi!]}][null][null]}", (long) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId13 = null;
        org.elasticsearch.tasks.Task task14 = deleteRequest9.createTask(0L, "", "", taskId13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest9.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType17 = deleteRequest9.versionType();
        java.lang.String str18 = deleteRequest9.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress19 = deleteRequest9.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy20 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest9.setRefreshPolicy(refreshPolicy20);
        long long22 = deleteRequest9.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue23 = deleteRequest9.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest0.timeout(timeValue23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.parent("delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId34 = null;
        org.elasticsearch.tasks.Task task35 = deleteRequest30.createTask(0L, "", "", taskId34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest30.setRefreshPolicy("");
        java.lang.String[] strArray38 = deleteRequest37.indices();
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest37.setShardId(shardId39);
        long long41 = deleteRequest37.version();
        java.lang.String[] strArray42 = deleteRequest37.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.index.VersionType versionType47 = deleteRequest46.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel48 = deleteRequest46.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId59 = null;
        org.elasticsearch.tasks.Task task60 = deleteRequest55.createTask(0L, "", "", taskId59);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest55.setRefreshPolicy("");
        java.lang.String str63 = deleteRequest62.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId74 = null;
        org.elasticsearch.tasks.Task task75 = deleteRequest70.createTask(0L, "", "", taskId74);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest70.setRefreshPolicy("");
        java.lang.String[] strArray78 = deleteRequest77.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long81 = deleteRequest80.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest82 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str83 = deleteRequest82.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest85 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue86 = deleteRequest85.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = deleteRequest82.timeout(timeValue86);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest89 = deleteRequest87.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId90 = deleteRequest89.getParentTask();
        deleteRequest80.setParentTask(taskId90);
        deleteRequest77.setParentTask(taskId90);
        org.elasticsearch.tasks.Task task93 = deleteRequest62.createTask((long) (short) 1, "delete {[delete {[][null][null]}][][]}", "delete {[][][hi!]}", taskId90);
        org.elasticsearch.tasks.Task task94 = deleteRequest46.createTask(52L, "", "delete {[][null][null]}", taskId90);
        deleteRequest37.setParentTask(taskId90);
        deleteRequest24.setParentTask(taskId90);
        java.lang.String str97 = deleteRequest24.toString();
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel1 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel1.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel2 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel2.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(task14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(versionType17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(transportAddress19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertNotNull(timeValue23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(task35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-3L) + "'", long41 == (-3L));
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(versionType47);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel48 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel48.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(task60);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "delete {[][][]}" + "'", str63, "delete {[][][]}");
        org.junit.Assert.assertNotNull(task75);
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 0L + "'", long81 == 0L);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNotNull(timeValue86);
        org.junit.Assert.assertNotNull(deleteRequest87);
        org.junit.Assert.assertNotNull(deleteRequest89);
        org.junit.Assert.assertNotNull(taskId90);
        org.junit.Assert.assertNotNull(task93);
        org.junit.Assert.assertNotNull(task94);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "delete {[null][null][null]}" + "'", str97, "delete {[null][null][null]}");
    }

    @Test
    public void test3011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3011");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.action.support.IndicesOptions indicesOptions7 = deleteRequest6.indicesOptions();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy8 = deleteRequest6.getRefreshPolicy();
        long long9 = deleteRequest6.version();
        java.lang.String str10 = deleteRequest6.type();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(indicesOptions7);
        org.junit.Assert.assertTrue("'" + refreshPolicy8 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy8.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-3L) + "'", long9 == (-3L));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test3012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3012");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest7.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.id("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.setRefreshPolicy("");
        java.lang.String str15 = deleteRequest14.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str17 = deleteRequest16.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest16.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.type("delete {[][][]}");
        java.lang.String str26 = deleteRequest23.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest23.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId38 = null;
        org.elasticsearch.tasks.Task task39 = deleteRequest34.createTask(0L, "", "", taskId38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest34.setRefreshPolicy("");
        java.lang.String[] strArray42 = deleteRequest41.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId50 = null;
        org.elasticsearch.tasks.Task task51 = deleteRequest46.createTask(0L, "", "", taskId50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest46.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel54 = deleteRequest53.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest41.consistencyLevel(writeConsistencyLevel54);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue58 = deleteRequest57.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress59 = null;
        deleteRequest57.remoteAddress(transportAddress59);
        org.elasticsearch.common.unit.TimeValue timeValue61 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest57.timeout(timeValue61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest41.timeout(timeValue61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest30.timeout(timeValue61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest19.timeout(timeValue61);
        org.elasticsearch.index.VersionType versionType66 = deleteRequest65.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest14.versionType(versionType66);
        java.lang.String str68 = deleteRequest67.toString();
        java.lang.String str69 = deleteRequest67.toString();
        deleteRequest67.setParentTask("delete {[null][delete {[][delete {[hi!][null][null]}][hi!]}][delete {[][][hi!]}]}", (long) (byte) 1);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(taskId8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "delete {[][][]}" + "'", str26, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(task39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(task51);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel54 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel54.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(timeValue58);
        org.junit.Assert.assertNotNull(timeValue61);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(versionType66);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "delete {[null][null][delete {[][][hi!]}]}" + "'", str68, "delete {[null][null][delete {[][][hi!]}]}");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "delete {[null][null][delete {[][][hi!]}]}" + "'", str69, "delete {[null][null][delete {[][][hi!]}]}");
    }

    @Test
    public void test3013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3013");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.consistencyLevel(writeConsistencyLevel23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue27 = deleteRequest26.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress28 = null;
        deleteRequest26.remoteAddress(transportAddress28);
        org.elasticsearch.common.unit.TimeValue timeValue30 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest26.timeout(timeValue30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest10.timeout(timeValue30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.parent("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][hi!]}][null][null]}", "delete {[][][]}", "");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel39 = deleteRequest38.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest34.consistencyLevel(writeConsistencyLevel39);
        java.lang.String[] strArray41 = deleteRequest40.indices();
        java.lang.Class<?> wildcardClass42 = deleteRequest40.getClass();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(timeValue27);
        org.junit.Assert.assertNotNull(timeValue30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel39 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel39.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test3014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3014");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str3 = deleteRequest2.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException4 = deleteRequest2.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure6 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][null][delete {[][][hi!]}]}", (java.lang.Throwable) actionRequestValidationException4, "delete {[delete {[hi!][null][null]}][null][null]}");
        java.lang.String str7 = shardFailure6.reason;
        java.lang.String str8 = shardFailure6.reason;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting9 = shardFailure6.routing;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "delete {[null][null][null]}" + "'", str3, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[null][null][delete {[][][hi!]}]}" + "'", str7, "delete {[null][null][delete {[][][hi!]}]}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[null][null][delete {[][][hi!]}]}" + "'", str8, "delete {[null][null][delete {[][][hi!]}]}");
        org.junit.Assert.assertNull(shardRouting9);
    }

    @Test
    public void test3015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3015");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str9 = deleteRequest8.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException10 = deleteRequest8.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure12 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "hi!", (java.lang.Throwable) actionRequestValidationException10, "delete {[][][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure14 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "", (java.lang.Throwable) actionRequestValidationException10, "delete {[][][hi!]}");
        java.lang.String str15 = shardFailure14.reason;
        java.lang.Throwable throwable16 = shardFailure14.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure18 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[hi!][null][null]}", throwable16, "delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure20 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][delete {[null][null][null]}][null]}", throwable16, "delete {[delete {[][null][null]}][null][null]}");
        java.lang.Throwable throwable21 = shardFailure20.cause;
        java.lang.String str22 = shardFailure20.indexUUID;
        java.lang.String str23 = shardFailure20.indexUUID;
        java.lang.String str24 = shardFailure20.indexUUID;
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[null][null][null]}" + "'", str9, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException10);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable16.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable21);
        org.junit.Assert.assertEquals(throwable21.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable21.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable21.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[delete {[][null][null]}][null][null]}" + "'", str22, "delete {[delete {[][null][null]}][null][null]}");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[delete {[][null][null]}][null][null]}" + "'", str23, "delete {[delete {[][null][null]}][null][null]}");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "delete {[delete {[][null][null]}][null][null]}" + "'", str24, "delete {[delete {[][null][null]}][null][null]}");
    }

    @Test
    public void test3016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3016");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version((long) (short) 100);
        boolean boolean4 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = null;
        deleteRequest3.remoteAddress(transportAddress5);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}", "delete {[delete {[hi!][null][null]}][null][null]}", "delete {[null][null][null]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy11 = deleteRequest10.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest3.setRefreshPolicy(refreshPolicy11);
        org.elasticsearch.index.shard.ShardId shardId13 = deleteRequest3.shardId();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + refreshPolicy11 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy11.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(shardId13);
    }

    @Test
    public void test3017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3017");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.type("delete {[null][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.setShardId(shardId4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long8 = deleteRequest7.primaryTerm();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy9 = deleteRequest7.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.setRefreshPolicy(refreshPolicy9);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + refreshPolicy9 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy9.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest10);
    }

    @Test
    public void test3018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3018");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.index("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        boolean boolean11 = deleteRequest10.getShouldPersistResult();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy12 = deleteRequest10.getRefreshPolicy();
        long long13 = deleteRequest10.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest10.type("delete {[][null][delete {[][delete {[][][hi!]}][delete {[][][]}]}]}");
        org.elasticsearch.index.shard.ShardId shardId16 = deleteRequest15.shardId();
        org.elasticsearch.index.shard.IndexShard indexShard17 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult18 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest15, indexShard17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + refreshPolicy12 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy12.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(shardId16);
    }

    @Test
    public void test3019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3019");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}", "delete {[delete {[null][null][null]}][null][null]}", "delete {[delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][delete {[hi!][null][null]}][hi!]}]}");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.junit.Assert.assertNull(shardId4);
    }

    @Test
    public void test3020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3020");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}", "delete {[][delete {[][][hi!]}][]}", "delete {[delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}][null][null]}");
    }

    @Test
    public void test3021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3021");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = deleteRequest0.remoteAddress();
        java.lang.String str7 = deleteRequest0.parent();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel8 = deleteRequest0.consistencyLevel();
        org.elasticsearch.common.unit.TimeValue timeValue9 = deleteRequest0.timeout();
        java.lang.String str10 = deleteRequest0.type();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(transportAddress6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel8 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel8.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(timeValue9);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test3022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3022");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.parent("delete {[][][]}");
        org.elasticsearch.index.VersionType versionType12 = deleteRequest11.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest8.versionType(versionType12);
        deleteRequest13.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel17 = deleteRequest16.consistencyLevel();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy18 = deleteRequest16.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest13.setRefreshPolicy(refreshPolicy18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest13.version((-3L));
        org.elasticsearch.common.transport.TransportAddress transportAddress22 = deleteRequest21.remoteAddress();
        deleteRequest21.setParentTask("delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}", (long) (short) 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel17 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel17.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + refreshPolicy18 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy18.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNull(transportAddress22);
    }

    @Test
    public void test3023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3023");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        java.lang.String str7 = deleteRequest3.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = null;
        deleteRequest9.remoteAddress(transportAddress11);
        java.lang.String str13 = deleteRequest9.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest9.parent("delete {[hi!][null][null]}");
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest15.getParentTask();
        deleteRequest3.setParentTask(taskId16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest3.type("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest3.routing("delete {[delete {[][][hi!]}][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress24 = deleteRequest23.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest23.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.version((long) 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[null][null][null]}" + "'", str13, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(transportAddress24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
    }

    @Test
    public void test3024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3024");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}", "delete {[][delete {[][][]}][delete {[][][]}]}", "delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        deleteRequest3.primaryTerm((long) (-1));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.type("delete {[][][hi!]}");
        java.lang.String str12 = deleteRequest9.getDescription();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy13 = deleteRequest9.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.setRefreshPolicy(refreshPolicy13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest3.version(97L);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest3.timeout("delete {[][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}][]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}][]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][delete {[][][hi!]}][delete {[][][]}]}" + "'", str12, "delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.junit.Assert.assertTrue("'" + refreshPolicy13 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy13.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
    }

    @Test
    public void test3025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3025");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.setRefreshPolicy("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy10 = deleteRequest6.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId18 = null;
        org.elasticsearch.tasks.Task task19 = deleteRequest14.createTask(0L, "", "", taskId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType22 = deleteRequest14.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest14.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest6.consistencyLevel(writeConsistencyLevel23);
        long long25 = deleteRequest6.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress26 = deleteRequest6.remoteAddress();
        java.lang.String str27 = deleteRequest6.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest6.version((-3L));
        org.elasticsearch.index.VersionType versionType30 = deleteRequest6.versionType();
        deleteRequest6.setParentTask("hi!", (long) (short) 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + refreshPolicy10 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy10.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(task19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-3L) + "'", long25 == (-3L));
        org.junit.Assert.assertNull(transportAddress26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][][hi!]}" + "'", str27, "delete {[][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(versionType30);
    }

    @Test
    public void test3026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3026");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest3.index();
        java.lang.String str12 = deleteRequest3.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest14.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue19 = deleteRequest18.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest14.timeout(timeValue19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.timeout(timeValue19);
        long long22 = deleteRequest21.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.type("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress25 = null;
        deleteRequest24.remoteAddress(transportAddress25);
        java.lang.String str27 = deleteRequest24.id();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest24.consistencyLevel();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test3027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3027");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException2 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest4.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue9 = deleteRequest8.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest4.timeout(timeValue9);
        java.lang.String str11 = deleteRequest4.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str19 = deleteRequest18.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.type("delete {[][][]}");
        java.lang.String str26 = deleteRequest23.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest23.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId36 = null;
        org.elasticsearch.tasks.Task task37 = deleteRequest32.createTask(0L, "", "", taskId36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest32.setRefreshPolicy("");
        java.lang.String str40 = deleteRequest39.toString();
        java.lang.String[] strArray41 = deleteRequest39.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest39.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str52 = deleteRequest51.id();
        java.lang.String str53 = deleteRequest51.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str55 = deleteRequest54.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest54.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId58 = deleteRequest54.getParentTask();
        deleteRequest51.setParentTask(taskId58);
        deleteRequest47.setParentTask(taskId58);
        deleteRequest43.setParentTask(taskId58);
        deleteRequest28.setParentTask(taskId58);
        deleteRequest18.setParentTask(taskId58);
        org.elasticsearch.tasks.Task task64 = deleteRequest4.createTask((long) 100, "delete {[][][hi!]}", "hi!", taskId58);
        deleteRequest0.setParentTask(taskId58);
        org.elasticsearch.index.shard.ShardId shardId66 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest0.setShardId(shardId66);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest67.index("delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress70 = deleteRequest67.remoteAddress();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "delete {[null][null][null]}" + "'", str1, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException2);
        org.junit.Assert.assertNotNull(timeValue9);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "delete {[][][]}" + "'", str26, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(task37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "delete {[][][]}" + "'", str40, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(taskId58);
        org.junit.Assert.assertNotNull(task64);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNull(transportAddress70);
    }

    @Test
    public void test3028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3028");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version((long) (short) 100);
        java.lang.String str4 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.parent("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        java.lang.String str7 = deleteRequest0.parent();
        long long8 = deleteRequest0.version();
        java.lang.String str9 = deleteRequest0.id();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}" + "'", str7, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 100L + "'", long8 == 100L);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test3029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3029");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str7 = deleteRequest6.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException8 = deleteRequest6.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure10 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "hi!", (java.lang.Throwable) actionRequestValidationException8, "delete {[][][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure12 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", (java.lang.Throwable) actionRequestValidationException8, "delete {[][][hi!]}");
        java.lang.String str13 = shardFailure12.reason;
        java.lang.Throwable throwable14 = shardFailure12.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure16 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][null][null]}", throwable14, "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting17 = shardFailure16.routing;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting18 = shardFailure16.routing;
        java.lang.String str19 = shardFailure16.indexUUID;
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[null][null][null]}" + "'", str7, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(throwable14);
        org.junit.Assert.assertEquals(throwable14.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable14.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable14.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNull(shardRouting17);
        org.junit.Assert.assertNull(shardRouting18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}" + "'", str19, "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
    }

    @Test
    public void test3030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3030");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        org.elasticsearch.index.VersionType versionType2 = deleteRequest0.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.type("delete {[][][hi!]}");
        org.elasticsearch.common.unit.TimeValue timeValue9 = deleteRequest8.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest0.timeout(timeValue9);
        long long11 = deleteRequest0.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str16 = deleteRequest15.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.parent("hi!");
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest15.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest0.createTask(1L, "delete {[hi!][][delete {[][][]}]}", "delete {[delete {[hi!][null][null]}][null][null]}", taskId19);
        org.elasticsearch.common.transport.TransportAddress transportAddress21 = deleteRequest0.remoteAddress();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(versionType2);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(timeValue9);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-3L) + "'", long11 == (-3L));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[null][null][null]}" + "'", str16, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNull(transportAddress21);
    }

    @Test
    public void test3031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3031");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("hi!");
        java.lang.String str4 = deleteRequest0.index();
        deleteRequest0.primaryTerm((long) 0);
        java.lang.String[] strArray7 = deleteRequest0.indices();
        org.elasticsearch.index.VersionType versionType8 = deleteRequest0.versionType();
        java.lang.String str9 = deleteRequest0.getDescription();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "delete {[null][null][null]}" + "'", str1, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(versionType8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[null][null][null]}" + "'", str9, "delete {[null][null][null]}");
    }

    @Test
    public void test3032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3032");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest1.setParentTask("hi!", (long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.type("delete {[][][]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy11 = deleteRequest8.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest1.setRefreshPolicy(refreshPolicy11);
        java.lang.String str13 = deleteRequest1.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest1.version((long) 10);
        deleteRequest1.primaryTerm((-1L));
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + refreshPolicy11 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy11.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(deleteRequest15);
    }

    @Test
    public void test3033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3033");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.version((long) (-1));
        deleteRequest1.primaryTerm((long) '4');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str7 = deleteRequest6.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.version((long) (short) 100);
        java.lang.String str10 = deleteRequest6.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest12.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        deleteRequest12.remoteAddress(transportAddress14);
        java.lang.String str16 = deleteRequest12.index();
        org.elasticsearch.index.VersionType versionType17 = deleteRequest12.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest6.versionType(versionType17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str20 = deleteRequest19.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException21 = deleteRequest19.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest23.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue28 = deleteRequest27.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest23.timeout(timeValue28);
        java.lang.String str30 = deleteRequest23.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str38 = deleteRequest37.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest42.type("delete {[][][]}");
        java.lang.String str45 = deleteRequest42.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest42.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId55 = null;
        org.elasticsearch.tasks.Task task56 = deleteRequest51.createTask(0L, "", "", taskId55);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest51.setRefreshPolicy("");
        java.lang.String str59 = deleteRequest58.toString();
        java.lang.String[] strArray60 = deleteRequest58.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest58.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str71 = deleteRequest70.id();
        java.lang.String str72 = deleteRequest70.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str74 = deleteRequest73.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest73.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId77 = deleteRequest73.getParentTask();
        deleteRequest70.setParentTask(taskId77);
        deleteRequest66.setParentTask(taskId77);
        deleteRequest62.setParentTask(taskId77);
        deleteRequest47.setParentTask(taskId77);
        deleteRequest37.setParentTask(taskId77);
        org.elasticsearch.tasks.Task task83 = deleteRequest23.createTask((long) 100, "delete {[][][hi!]}", "hi!", taskId77);
        deleteRequest19.setParentTask(taskId77);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest88 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}", "delete {[][][hi!]}", "hi!");
        org.elasticsearch.index.VersionType versionType89 = deleteRequest88.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest90 = deleteRequest19.versionType(versionType89);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest91 = deleteRequest6.versionType(versionType89);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest92 = deleteRequest1.versionType(versionType89);
        java.lang.Class<?> wildcardClass93 = deleteRequest1.getClass();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[null][null][null]}" + "'", str16, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(versionType17);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[null][null][null]}" + "'", str20, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException21);
        org.junit.Assert.assertNotNull(timeValue28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "delete {[][][]}" + "'", str45, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(task56);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "delete {[][][]}" + "'", str59, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertNotNull(taskId77);
        org.junit.Assert.assertNotNull(task83);
        org.junit.Assert.assertNotNull(versionType89);
        org.junit.Assert.assertNotNull(deleteRequest90);
        org.junit.Assert.assertNotNull(deleteRequest91);
        org.junit.Assert.assertNotNull(deleteRequest92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test3034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3034");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long4 = deleteRequest3.primaryTerm();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest3.consistencyLevel();
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[][hi!][delete {[][][]}]}", deleteRequest3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test3035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3035");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest1.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue6 = deleteRequest5.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.timeout(timeValue6);
        java.lang.String str8 = deleteRequest1.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException9 = deleteRequest1.validate();
        java.lang.String str10 = deleteRequest1.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long13 = deleteRequest12.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.index("");
        boolean boolean16 = deleteRequest12.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest12.version((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue19 = deleteRequest12.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest1.timeout(timeValue19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest1.id("delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        java.lang.String str23 = deleteRequest22.routing();
        org.elasticsearch.tasks.TaskId taskId24 = deleteRequest22.getParentTask();
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[][null][null]}" + "'", str8, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][null][null]}" + "'", str10, "delete {[][null][null]}");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(taskId24);
    }

    @Test
    public void test3036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3036");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        deleteRequest10.primaryTerm(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.type("hi!");
        long long15 = deleteRequest10.primaryTerm();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1L + "'", long15 == 1L);
    }

    @Test
    public void test3037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3037");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        deleteRequest0.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.type("delete {[null][null][null]}");
        java.lang.String str8 = deleteRequest5.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.index("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest5.routing("delete {[hi!][null][null]}");
        java.lang.String str13 = deleteRequest5.toString();
        long long14 = deleteRequest5.version();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[delete {[][][]}][delete {[null][null][null]}][null]}" + "'", str13, "delete {[delete {[][][]}][delete {[null][null][null]}][null]}");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-3L) + "'", long14 == (-3L));
    }

    @Test
    public void test3038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3038");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str10 = deleteRequest9.id();
        java.lang.String str11 = deleteRequest9.index();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest9.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest0.createTask((-1L), "delete {[][][hi!]}", "delete {[][delete {[][][]}][delete {[][][]}]}", taskId12);
        deleteRequest0.setParentTask("delete {[delete {[][][hi!]}][null][null]}", (long) 10);
        java.lang.String str17 = deleteRequest0.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest0.index("delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest19.timeout();
        long long21 = deleteRequest19.version();
        org.elasticsearch.index.shard.IndexShard indexShard22 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult23 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest19, indexShard22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[null][null][null]}" + "'", str17, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-3L) + "'", long21 == (-3L));
    }

    @Test
    public void test3039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3039");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][null][null]}", throwable2, "delete {[][][hi!]}");
        java.lang.String str5 = shardFailure4.reason;
        java.lang.String str6 = shardFailure4.indexUUID;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[null][null][null]}" + "'", str5, "delete {[null][null][null]}");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][hi!]}" + "'", str6, "delete {[][][hi!]}");
    }

    @Test
    public void test3040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3040");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = deleteRequest0.remoteAddress();
        java.lang.String str7 = deleteRequest0.toString();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy8 = deleteRequest0.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str10 = deleteRequest9.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.version((long) (short) 100);
        java.lang.String str13 = deleteRequest9.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue16 = deleteRequest15.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress17 = null;
        deleteRequest15.remoteAddress(transportAddress17);
        java.lang.String str19 = deleteRequest15.index();
        org.elasticsearch.index.VersionType versionType20 = deleteRequest15.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest9.versionType(versionType20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str23 = deleteRequest22.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue26 = deleteRequest25.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest22.timeout(timeValue26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId30 = deleteRequest29.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest29.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.type("delete {[][][hi!]}");
        java.lang.String str41 = deleteRequest38.getDescription();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy42 = deleteRequest38.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest32.setRefreshPolicy(refreshPolicy42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest9.setRefreshPolicy(refreshPolicy42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest0.setRefreshPolicy(refreshPolicy42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId53 = null;
        org.elasticsearch.tasks.Task task54 = deleteRequest49.createTask(0L, "", "", taskId53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest49.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType57 = deleteRequest49.versionType();
        java.lang.String str58 = deleteRequest49.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress59 = deleteRequest49.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy60 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest49.setRefreshPolicy(refreshPolicy60);
        org.elasticsearch.common.unit.TimeValue timeValue62 = deleteRequest61.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest0.timeout(timeValue62);
        java.lang.String str64 = deleteRequest0.type();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(transportAddress6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[null][null][null]}" + "'", str7, "delete {[null][null][null]}");
        org.junit.Assert.assertTrue("'" + refreshPolicy8 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy8.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[null][null][null]}" + "'", str19, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(versionType20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(timeValue26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(taskId30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "delete {[][delete {[][][hi!]}][delete {[][][]}]}" + "'", str41, "delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.junit.Assert.assertTrue("'" + refreshPolicy42 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy42.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(task54);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(versionType57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(transportAddress59);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(timeValue62);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNull(str64);
    }

    @Test
    public void test3041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3041");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][hi!]}", "delete {[null][null][null]}", "");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy4 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId12 = null;
        org.elasticsearch.tasks.Task task13 = deleteRequest8.createTask(0L, "", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest8.setRefreshPolicy("");
        java.lang.String[] strArray16 = deleteRequest15.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId24 = null;
        org.elasticsearch.tasks.Task task25 = deleteRequest20.createTask(0L, "", "", taskId24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest20.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest27.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest15.consistencyLevel(writeConsistencyLevel28);
        deleteRequest29.setParentTask("hi!", (long) (short) 100);
        org.elasticsearch.index.VersionType versionType33 = deleteRequest29.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest3.versionType(versionType33);
        java.lang.String str35 = deleteRequest34.routing();
        org.junit.Assert.assertTrue("'" + refreshPolicy4 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy4.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(task25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(versionType33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNull(str35);
    }

    @Test
    public void test3042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3042");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str7 = deleteRequest6.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest6.getParentTask();
        deleteRequest3.setParentTask(taskId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.consistencyLevel(writeConsistencyLevel14);
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest15.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.index.VersionType versionType21 = deleteRequest20.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str27 = deleteRequest26.getDescription();
        java.lang.String str28 = deleteRequest26.routing();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest15.consistencyLevel(writeConsistencyLevel29);
        org.elasticsearch.index.shard.IndexShard indexShard31 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult32 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest15, indexShard31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertNotNull(versionType21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][][]}" + "'", str27, "delete {[][][]}");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel29 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel29.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest30);
    }

    @Test
    public void test3043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3043");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.type("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        java.lang.String str9 = deleteRequest3.id();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
    }

    @Test
    public void test3044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3044");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.consistencyLevel(writeConsistencyLevel23);
        deleteRequest24.setParentTask("hi!", (long) (short) 100);
        org.elasticsearch.index.VersionType versionType28 = deleteRequest24.versionType();
        java.lang.String str29 = deleteRequest24.routing();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException30 = deleteRequest24.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str35 = deleteRequest34.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest34.id("hi!");
        java.lang.String str38 = deleteRequest37.routing();
        org.elasticsearch.common.transport.TransportAddress transportAddress39 = null;
        deleteRequest37.remoteAddress(transportAddress39);
        org.elasticsearch.common.transport.TransportAddress transportAddress41 = deleteRequest37.remoteAddress();
        java.lang.String[] strArray42 = deleteRequest37.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel43 = deleteRequest37.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest24.consistencyLevel(writeConsistencyLevel43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest44.version((long) 'a');
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest46.setShardId(shardId47);
        java.lang.String str49 = deleteRequest46.routing();
        deleteRequest46.primaryTerm(97L);
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(actionRequestValidationException30);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(transportAddress41);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel43 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel43.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNull(str49);
    }

    @Test
    public void test3045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3045");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.type("delete {[][][]}");
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue11 = deleteRequest10.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = null;
        deleteRequest10.remoteAddress(transportAddress12);
        java.lang.String str14 = deleteRequest10.index();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException15 = deleteRequest10.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId23 = null;
        org.elasticsearch.tasks.Task task24 = deleteRequest19.createTask(0L, "", "", taskId23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest19.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType27 = deleteRequest19.versionType();
        java.lang.String str28 = deleteRequest19.parent();
        org.elasticsearch.index.shard.ShardId shardId29 = deleteRequest19.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel30 = deleteRequest19.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest10.consistencyLevel(writeConsistencyLevel30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest7.consistencyLevel(writeConsistencyLevel30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest7.index("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue35 = deleteRequest34.timeout();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(timeValue11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[null][null][null]}" + "'", str14, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException15);
        org.junit.Assert.assertNotNull(task24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(versionType27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(shardId29);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel30 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel30.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(timeValue35);
    }

    @Test
    public void test3046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3046");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "hi!", throwable2, "delete {[null][null][null]}");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting5 = shardFailure4.routing;
        java.lang.String str6 = shardFailure4.indexUUID;
        java.lang.Throwable throwable7 = shardFailure4.cause;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = shardFailure4.routing;
        java.lang.String str9 = shardFailure4.indexUUID;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = shardFailure4.routing;
        org.junit.Assert.assertNull(shardRouting5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[null][null][null]}" + "'", str6, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(throwable7);
        org.junit.Assert.assertNull(shardRouting8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[null][null][null]}" + "'", str9, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(shardRouting10);
    }

    @Test
    public void test3047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3047");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str6 = deleteRequest5.id();
        java.lang.String str7 = deleteRequest5.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str9 = deleteRequest8.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest8.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest8.getParentTask();
        deleteRequest5.setParentTask(taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str15 = deleteRequest14.parent();
        deleteRequest14.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest14.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.type("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.version((long) '#');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel26 = deleteRequest24.consistencyLevel();
        deleteRequest24.setParentTask("delete {[delete {[][][hi!]}][null][null]}", (long) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId37 = null;
        org.elasticsearch.tasks.Task task38 = deleteRequest33.createTask(0L, "", "", taskId37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest33.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType41 = deleteRequest33.versionType();
        java.lang.String str42 = deleteRequest33.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress43 = deleteRequest33.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy44 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest33.setRefreshPolicy(refreshPolicy44);
        long long46 = deleteRequest33.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue47 = deleteRequest33.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest24.timeout(timeValue47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest23.timeout(timeValue47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest5.timeout(timeValue47);
        org.elasticsearch.common.transport.TransportAddress transportAddress51 = null;
        deleteRequest50.remoteAddress(transportAddress51);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}][null][null]}", deleteRequest50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel26 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel26.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(task38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(versionType41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(transportAddress43);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertNotNull(timeValue47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest50);
    }

    @Test
    public void test3048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3048");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[null][null][null]}][null]}", "", "delete {[delete {[][][hi!]}][delete {[null][null][null]}][]}");
    }

    @Test
    public void test3049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3049");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}][delete {[hi!][null][null]}][hi!]}", "delete {[null][delete {[null][null][null]}][null]}", "delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy4 = deleteRequest3.getRefreshPolicy();
        org.junit.Assert.assertTrue("'" + refreshPolicy4 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy4.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
    }

    @Test
    public void test3050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3050");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType6 = deleteRequest5.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = deleteRequest10.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy21 = deleteRequest15.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest10.setRefreshPolicy(refreshPolicy21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest5.setRefreshPolicy(refreshPolicy21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest5.id("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        boolean boolean26 = deleteRequest5.getShouldPersistResult();
        org.elasticsearch.index.VersionType versionType27 = deleteRequest5.versionType();
        org.elasticsearch.common.transport.TransportAddress transportAddress28 = deleteRequest5.remoteAddress();
        org.elasticsearch.common.transport.TransportAddress transportAddress29 = deleteRequest5.remoteAddress();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertNull(transportAddress11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertTrue("'" + refreshPolicy21 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy21.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(versionType27);
        org.junit.Assert.assertNull(transportAddress28);
        org.junit.Assert.assertNull(transportAddress29);
    }

    @Test
    public void test3051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3051");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][]}", "delete {[hi!][null][null]}", "delete {[delete {[hi!][null][null]}][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel4 = deleteRequest3.consistencyLevel();
        java.lang.String[] strArray5 = deleteRequest3.indices();
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel4 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel4.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(strArray5);
    }

    @Test
    public void test3052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3052");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str7 = deleteRequest6.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException8 = deleteRequest6.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure10 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "hi!", (java.lang.Throwable) actionRequestValidationException8, "delete {[][][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure12 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", (java.lang.Throwable) actionRequestValidationException8, "delete {[][][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure14 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][delete {[][][]}][delete {[][][]}]}", (java.lang.Throwable) actionRequestValidationException8, "");
        java.lang.Throwable throwable15 = shardFailure14.cause;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = shardFailure14.routing;
        java.lang.String str17 = shardFailure14.indexUUID;
        java.lang.String str18 = shardFailure14.reason;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting19 = shardFailure14.routing;
        java.lang.Throwable throwable20 = shardFailure14.cause;
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[null][null][null]}" + "'", str7, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException8);
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable15.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNull(shardRouting16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[][delete {[][][]}][delete {[][][]}]}" + "'", str18, "delete {[][delete {[][][]}][delete {[][][]}]}");
        org.junit.Assert.assertNull(shardRouting19);
        org.junit.Assert.assertNotNull(throwable20);
        org.junit.Assert.assertEquals(throwable20.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable20.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable20.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test3053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3053");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str11 = deleteRequest10.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException12 = deleteRequest10.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure14 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "hi!", (java.lang.Throwable) actionRequestValidationException12, "delete {[][][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure16 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "", (java.lang.Throwable) actionRequestValidationException12, "delete {[][][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure18 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[][delete {[][][]}][delete {[][][]}]}", (java.lang.Throwable) actionRequestValidationException12, "");
        java.lang.Throwable throwable19 = shardFailure18.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure21 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "hi!", throwable19, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure23 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}", throwable19, "");
        java.lang.String str24 = shardFailure23.indexUUID;
        java.lang.Throwable throwable25 = shardFailure23.cause;
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[null][null][null]}" + "'", str11, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException12);
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable19.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(throwable25);
        org.junit.Assert.assertEquals(throwable25.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable25.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable25.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test3054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3054");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest7.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.index("delete {[][][hi!]}");
        java.lang.String str13 = deleteRequest12.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.routing("delete {[delete {[hi!][null][null]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str20 = deleteRequest19.id();
        java.lang.String str21 = deleteRequest19.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str23 = deleteRequest22.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest22.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId26 = deleteRequest22.getParentTask();
        deleteRequest19.setParentTask(taskId26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = deleteRequest28.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel30 = deleteRequest28.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest19.consistencyLevel(writeConsistencyLevel30);
        org.elasticsearch.tasks.TaskId taskId32 = deleteRequest31.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.index.VersionType versionType37 = deleteRequest36.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest31.versionType(versionType37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str43 = deleteRequest42.getDescription();
        java.lang.String str44 = deleteRequest42.routing();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel45 = deleteRequest42.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest31.consistencyLevel(writeConsistencyLevel45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest15.consistencyLevel(writeConsistencyLevel45);
        java.lang.String str48 = deleteRequest15.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}", "delete {[][][hi!]}", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str60 = deleteRequest59.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest59.id("hi!");
        org.elasticsearch.tasks.TaskId taskId63 = deleteRequest62.getParentTask();
        org.elasticsearch.tasks.TaskId taskId64 = deleteRequest62.getParentTask();
        org.elasticsearch.tasks.Task task65 = deleteRequest52.createTask((-1L), "", "hi!", taskId64);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest69.type("delete {[][][]}");
        java.lang.String str72 = deleteRequest69.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest69.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest74.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = deleteRequest74.index("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest82 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = deleteRequest82.type("delete {[][][]}");
        java.lang.String str85 = deleteRequest82.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = deleteRequest82.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest89 = deleteRequest82.index("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        boolean boolean90 = deleteRequest89.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest92 = deleteRequest89.type("delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy93 = deleteRequest89.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest94 = deleteRequest78.setRefreshPolicy(refreshPolicy93);
        org.elasticsearch.common.unit.TimeValue timeValue95 = deleteRequest78.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest96 = deleteRequest52.timeout(timeValue95);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest97 = deleteRequest15.timeout(timeValue95);
        java.lang.String str98 = deleteRequest15.routing();
        java.lang.String str99 = deleteRequest15.type();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(taskId8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(taskId26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel29 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel29.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel30 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel30.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(taskId32);
        org.junit.Assert.assertNotNull(versionType37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "delete {[][][]}" + "'", str43, "delete {[][][]}");
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel45 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel45.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(taskId63);
        org.junit.Assert.assertNotNull(taskId64);
        org.junit.Assert.assertNotNull(task65);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "delete {[][][]}" + "'", str72, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertNotNull(deleteRequest78);
        org.junit.Assert.assertNotNull(deleteRequest84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "delete {[][][]}" + "'", str85, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest87);
        org.junit.Assert.assertNotNull(deleteRequest89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(deleteRequest92);
        org.junit.Assert.assertTrue("'" + refreshPolicy93 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy93.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest94);
        org.junit.Assert.assertNotNull(timeValue95);
        org.junit.Assert.assertNotNull(deleteRequest96);
        org.junit.Assert.assertNotNull(deleteRequest97);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "delete {[delete {[hi!][null][null]}][null][null]}" + "'", str98, "delete {[delete {[hi!][null][null]}][null][null]}");
        org.junit.Assert.assertNull(str99);
    }

    @Test
    public void test3055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3055");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version((long) (short) 100);
        deleteRequest0.primaryTerm(100L);
        boolean boolean6 = deleteRequest0.getShouldPersistResult();
        boolean boolean7 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.id("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.setShardId(shardId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str16 = deleteRequest15.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.id("hi!");
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest18.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest18.setRefreshPolicy("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy22 = deleteRequest18.getRefreshPolicy();
        long long23 = deleteRequest18.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest18.id("delete {[][][]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel26 = deleteRequest18.consistencyLevel();
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest18.getParentTask();
        deleteRequest9.setParentTask(taskId27);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + refreshPolicy22 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy22.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-3L) + "'", long23 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel26 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel26.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(taskId27);
    }

    @Test
    public void test3056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3056");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.setShardId(shardId2);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest1.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.id("delete {[null][delete {[null][null][null]}][null]}");
        deleteRequest1.setParentTask("delete {[delete {[][][hi!]}][null][null]}", (long) (byte) 1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
    }

    @Test
    public void test3057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3057");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress2 = deleteRequest0.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId3 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.setShardId(shardId3);
        java.lang.String str5 = deleteRequest0.id();
        java.lang.String str6 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str11 = deleteRequest10.id();
        java.lang.String str12 = deleteRequest10.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str14 = deleteRequest13.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest13.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest13.getParentTask();
        deleteRequest10.setParentTask(taskId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = deleteRequest19.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel21 = deleteRequest19.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest10.consistencyLevel(writeConsistencyLevel21);
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest22.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.index.VersionType versionType28 = deleteRequest27.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.versionType(versionType28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest0.versionType(versionType28);
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.setShardId(shardId31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest30.routing("delete {[][][delete {[][][hi!]}]}");
        boolean boolean35 = deleteRequest34.getShouldPersistResult();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(transportAddress2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel20 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel20.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel21 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel21.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test3058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3058");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel1 = deleteRequest0.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel2 = deleteRequest0.consistencyLevel();
        deleteRequest0.primaryTerm((long) (short) 10);
        long long5 = deleteRequest0.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId16 = null;
        org.elasticsearch.tasks.Task task17 = deleteRequest12.createTask(0L, "", "", taskId16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest12.setRefreshPolicy("");
        java.lang.String str20 = deleteRequest19.toString();
        java.lang.String[] strArray21 = deleteRequest19.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest19.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str32 = deleteRequest31.id();
        java.lang.String str33 = deleteRequest31.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str35 = deleteRequest34.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest34.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId38 = deleteRequest34.getParentTask();
        deleteRequest31.setParentTask(taskId38);
        deleteRequest27.setParentTask(taskId38);
        deleteRequest23.setParentTask(taskId38);
        org.elasticsearch.tasks.Task task42 = deleteRequest0.createTask((-1L), "delete {[][delete {[][][]}][delete {[][][]}]}", "delete {[][][hi!]}", taskId38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest0.parent("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel45 = deleteRequest44.consistencyLevel();
        boolean boolean46 = deleteRequest44.getShouldPersistResult();
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest44.setShardId(shardId47);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel1 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel1.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel2 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel2.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-3L) + "'", long5 == (-3L));
        org.junit.Assert.assertNotNull(task17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[][][]}" + "'", str20, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(taskId38);
        org.junit.Assert.assertNotNull(task42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel45 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel45.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(deleteRequest48);
    }

    @Test
    public void test3059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3059");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.type("delete {[null][null][null]}");
        java.lang.String str4 = deleteRequest1.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest1.index("");
        java.lang.String[] strArray7 = deleteRequest6.indices();
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.setShardId(shardId8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest6.id("delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}");
        boolean boolean12 = deleteRequest6.getShouldPersistResult();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test3060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3060");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.type("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId12 = null;
        org.elasticsearch.tasks.Task task13 = deleteRequest8.createTask(0L, "", "", taskId12);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = deleteRequest8.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId22 = null;
        org.elasticsearch.tasks.Task task23 = deleteRequest18.createTask(0L, "", "", taskId22);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy24 = deleteRequest18.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest8.setRefreshPolicy(refreshPolicy24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest4.setRefreshPolicy(refreshPolicy24);
        java.lang.String str27 = deleteRequest26.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.index("delete {[][][hi!]}");
        java.lang.String str31 = deleteRequest30.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest30.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest33.parent("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId43 = null;
        org.elasticsearch.tasks.Task task44 = deleteRequest39.createTask(0L, "", "", taskId43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest39.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType47 = deleteRequest39.versionType();
        java.lang.String str48 = deleteRequest39.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress49 = deleteRequest39.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy50 = deleteRequest39.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str52 = deleteRequest51.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest51.version((long) (short) 100);
        java.lang.String str55 = deleteRequest51.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue58 = deleteRequest57.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress59 = null;
        deleteRequest57.remoteAddress(transportAddress59);
        java.lang.String str61 = deleteRequest57.index();
        org.elasticsearch.index.VersionType versionType62 = deleteRequest57.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest51.versionType(versionType62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest39.versionType(versionType62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest35.versionType(versionType62);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy66 = deleteRequest65.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest26.setRefreshPolicy(refreshPolicy66);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][hi!]}][null][null]}", "delete {[][][]}", "");
        long long72 = deleteRequest71.primaryTerm();
        org.elasticsearch.index.shard.ShardId shardId73 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest71.setShardId(shardId73);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy75 = deleteRequest74.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest26.setRefreshPolicy(refreshPolicy75);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = deleteRequest26.type("delete {[hi!][null][null]}");
        org.elasticsearch.common.io.stream.StreamInput streamInput79 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest26.readFrom(streamInput79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertTrue("'" + refreshPolicy14 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy14.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertTrue("'" + refreshPolicy24 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy24.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(task44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(versionType47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(transportAddress49);
        org.junit.Assert.assertTrue("'" + refreshPolicy50 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy50.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(timeValue58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "delete {[null][null][null]}" + "'", str61, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(versionType62);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertTrue("'" + refreshPolicy66 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy66.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 0L + "'", long72 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertTrue("'" + refreshPolicy75 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy75.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertNotNull(deleteRequest78);
    }

    @Test
    public void test3061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3061");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel1 = deleteRequest0.consistencyLevel();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy2 = deleteRequest0.getRefreshPolicy();
        long long3 = deleteRequest0.version();
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.setShardId(shardId4);
        org.elasticsearch.tasks.TaskId taskId6 = deleteRequest0.getParentTask();
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel1 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel1.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + refreshPolicy2 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy2.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-3L) + "'", long3 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(taskId6);
    }

    @Test
    public void test3062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3062");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}", "hi!", "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str7 = deleteRequest6.parent();
        deleteRequest6.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest6.setRefreshPolicy("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy12 = deleteRequest11.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest5.setRefreshPolicy(refreshPolicy12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId24 = null;
        org.elasticsearch.tasks.Task task25 = deleteRequest20.createTask(0L, "", "", taskId24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest20.setRefreshPolicy("");
        java.lang.String[] strArray28 = deleteRequest27.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId36 = null;
        org.elasticsearch.tasks.Task task37 = deleteRequest32.createTask(0L, "", "", taskId36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest32.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel40 = deleteRequest39.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest27.consistencyLevel(writeConsistencyLevel40);
        deleteRequest41.setParentTask("hi!", (long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest41.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest41.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId56 = null;
        org.elasticsearch.tasks.Task task57 = deleteRequest52.createTask(0L, "", "", taskId56);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest52.setRefreshPolicy("");
        java.lang.String str60 = deleteRequest59.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long63 = deleteRequest62.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str65 = deleteRequest64.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue68 = deleteRequest67.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest64.timeout(timeValue68);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest69.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId72 = deleteRequest71.getParentTask();
        deleteRequest62.setParentTask(taskId72);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel74 = deleteRequest62.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest59.consistencyLevel(writeConsistencyLevel74);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest48.consistencyLevel(writeConsistencyLevel74);
        org.elasticsearch.common.unit.TimeValue timeValue77 = deleteRequest76.timeout();
        org.elasticsearch.tasks.TaskId taskId78 = deleteRequest76.getParentTask();
        org.elasticsearch.tasks.Task task79 = deleteRequest5.createTask(52L, "delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}", "delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}", taskId78);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertTrue("'" + refreshPolicy12 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy12.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(task25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(task37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel40 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel40.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(task57);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "delete {[][][]}" + "'", str60, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 0L + "'", long63 == 0L);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(timeValue68);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(taskId72);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel74 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel74.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest75);
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertNotNull(timeValue77);
        org.junit.Assert.assertNotNull(taskId78);
        org.junit.Assert.assertNotNull(task79);
    }

    @Test
    public void test3063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3063");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        deleteRequest0.setParentTask("delete {[][][hi!]}", (long) '#');
        boolean boolean5 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.action.support.IndicesOptions indicesOptions6 = deleteRequest0.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest0.version(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest10.getParentTask();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(indicesOptions6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(taskId11);
    }

    @Test
    public void test3064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3064");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.routing("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.version((long) (short) -1);
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = deleteRequest13.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest13.id("delete {[delete {[delete {[][][hi!]}][null][null]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest13.index("delete {[][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.parent("delete {[][][]}");
        java.lang.String str24 = deleteRequest21.id();
        java.lang.String[] strArray25 = deleteRequest21.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str27 = deleteRequest26.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress28 = deleteRequest26.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest26.getParentTask();
        deleteRequest21.setParentTask(taskId29);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy31 = deleteRequest21.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest20.setRefreshPolicy(refreshPolicy31);
        java.lang.String str33 = deleteRequest32.id();
        java.lang.String str34 = deleteRequest32.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId42 = null;
        org.elasticsearch.tasks.Task task43 = deleteRequest38.createTask(0L, "", "", taskId42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest38.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel46 = deleteRequest45.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions47 = deleteRequest45.indicesOptions();
        java.lang.String str48 = deleteRequest45.toString();
        java.lang.String str49 = deleteRequest45.routing();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel50 = deleteRequest45.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest32.consistencyLevel(writeConsistencyLevel50);
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(transportAddress16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(transportAddress28);
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertTrue("'" + refreshPolicy31 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy31.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "delete {[delete {[delete {[][][hi!]}][null][null]}][null][null]}" + "'", str33, "delete {[delete {[delete {[][][hi!]}][null][null]}][null][null]}");
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(task43);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel46 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel46.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "delete {[][][]}" + "'", str48, "delete {[][][]}");
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel50 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel50.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest51);
    }

    @Test
    public void test3065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3065");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        java.lang.String str9 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str11 = deleteRequest10.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.routing("delete {[][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = deleteRequest15.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str21 = deleteRequest20.id();
        java.lang.String str22 = deleteRequest20.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str24 = deleteRequest23.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest23.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest23.getParentTask();
        deleteRequest20.setParentTask(taskId27);
        deleteRequest15.setParentTask(taskId27);
        deleteRequest3.setParentTask(taskId27);
        org.elasticsearch.index.shard.ShardId shardId31 = deleteRequest3.shardId();
        org.elasticsearch.action.support.IndicesOptions indicesOptions32 = deleteRequest3.indicesOptions();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(transportAddress16);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(taskId27);
        org.junit.Assert.assertNull(shardId31);
        org.junit.Assert.assertNotNull(indicesOptions32);
    }

    @Test
    public void test3066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3066");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}", "delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.parent("");
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.setShardId(shardId6);
        deleteRequest5.primaryTerm((long) (byte) 1);
        org.elasticsearch.common.io.stream.StreamInput streamInput10 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest5.readFrom(streamInput10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
    }

    @Test
    public void test3067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3067");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.index("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.type("delete {[][][]}");
        java.lang.String str17 = deleteRequest14.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest14.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest19.type("delete {[][][]}");
        org.elasticsearch.common.unit.TimeValue timeValue24 = deleteRequest19.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest10.timeout(timeValue24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest30.setParentTask("hi!", (long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest37.type("delete {[][][]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy40 = deleteRequest37.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest30.setRefreshPolicy(refreshPolicy40);
        org.elasticsearch.tasks.TaskId taskId42 = deleteRequest30.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest47.setParentTask("hi!", (long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest54.type("delete {[][][]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy57 = deleteRequest54.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest47.setRefreshPolicy(refreshPolicy57);
        org.elasticsearch.tasks.TaskId taskId59 = deleteRequest47.getParentTask();
        org.elasticsearch.tasks.Task task60 = deleteRequest30.createTask((long) (byte) 1, "delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}", "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}", taskId59);
        org.elasticsearch.tasks.Task task61 = deleteRequest25.createTask((long) (short) 0, "delete {[][delete {[delete {[][][hi!]}][null][null]}][]}", "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][null][null]}", taskId59);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[][][]}" + "'", str17, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(timeValue24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertTrue("'" + refreshPolicy40 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy40.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(taskId42);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertTrue("'" + refreshPolicy57 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy57.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(taskId59);
        org.junit.Assert.assertNotNull(task60);
        org.junit.Assert.assertNotNull(task61);
    }

    @Test
    public void test3068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3068");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest1.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue6 = deleteRequest5.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.timeout(timeValue6);
        java.lang.String str8 = deleteRequest1.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException9 = deleteRequest1.validate();
        java.lang.String[] strArray10 = deleteRequest1.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest1.routing("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[][null][null]}" + "'", str8, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(deleteRequest12);
    }

    @Test
    public void test3069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3069");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.getDescription();
        java.lang.String str5 = deleteRequest3.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str10 = deleteRequest9.id();
        java.lang.String str11 = deleteRequest9.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str13 = deleteRequest12.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest12.getParentTask();
        deleteRequest9.setParentTask(taskId16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel19 = deleteRequest18.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = deleteRequest18.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest9.consistencyLevel(writeConsistencyLevel20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest9.type("delete {[delete {[][][hi!]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest23.routing("delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy28 = deleteRequest23.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.setRefreshPolicy(refreshPolicy28);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy30 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.common.transport.TransportAddress transportAddress31 = null;
        deleteRequest3.remoteAddress(transportAddress31);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][][]}" + "'", str4, "delete {[][][]}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel19 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel19.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel20 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel20.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertTrue("'" + refreshPolicy28 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy28.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertTrue("'" + refreshPolicy30 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy30.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
    }

    @Test
    public void test3070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3070");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest10.toString();
        java.lang.String[] strArray12 = deleteRequest10.indices();
        deleteRequest10.primaryTerm(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest10.routing("delete {[null][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.setShardId(shardId17);
        org.elasticsearch.action.support.IndicesOptions indicesOptions19 = deleteRequest16.indicesOptions();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(indicesOptions19);
    }

    @Test
    public void test3071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3071");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.index();
        org.elasticsearch.index.shard.ShardId shardId5 = deleteRequest3.shardId();
        java.lang.String[] strArray6 = deleteRequest3.indices();
        java.lang.String str7 = deleteRequest3.index();
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.setParentTask("", 0L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: 0 length nodeIds are reserved for EMPTY_TASK_ID and are otherwise invalid.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(shardId5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }

    @Test
    public void test3072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3072");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "hi!", throwable2, "delete {[null][null][null]}");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting5 = shardFailure4.routing;
        java.lang.Throwable throwable6 = shardFailure4.cause;
        java.lang.String str7 = shardFailure4.reason;
        java.lang.String str8 = shardFailure4.reason;
        java.lang.String str9 = shardFailure4.reason;
        java.lang.String str10 = shardFailure4.reason;
        org.junit.Assert.assertNull(shardRouting5);
        org.junit.Assert.assertNull(throwable6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
    }

    @Test
    public void test3073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3073");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}", throwable2, "delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting5 = shardFailure4.routing;
        java.lang.String str6 = shardFailure4.reason;
        java.lang.String str7 = shardFailure4.reason;
        org.junit.Assert.assertNull(shardRouting5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}" + "'", str6, "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}" + "'", str7, "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
    }

    @Test
    public void test3074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3074");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest7.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.id("");
        org.elasticsearch.action.support.IndicesOptions indicesOptions11 = deleteRequest7.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest7.version(1L);
        java.lang.String str14 = deleteRequest13.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = deleteRequest13.remoteAddress();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(taskId8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(indicesOptions11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(transportAddress15);
    }

    @Test
    public void test3075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3075");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str15 = deleteRequest14.id();
        org.elasticsearch.common.unit.TimeValue timeValue16 = deleteRequest14.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.timeout(timeValue16);
        org.elasticsearch.action.support.IndicesOptions indicesOptions18 = deleteRequest17.indicesOptions();
        java.lang.String str19 = deleteRequest17.type();
        java.lang.String str20 = deleteRequest17.routing();
        java.lang.String str21 = deleteRequest17.parent();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(indicesOptions18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test3076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3076");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType17 = deleteRequest16.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest8.versionType(versionType17);
        java.lang.String str19 = deleteRequest8.toString();
        deleteRequest8.setParentTask("delete {[][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}][]}", (long) ' ');
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(versionType17);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[][delete {[][][]}][delete {[][][]}]}" + "'", str19, "delete {[][delete {[][][]}][delete {[][][]}]}");
    }

    @Test
    public void test3077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3077");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][delete {[null][null][delete {[][][hi!]}]}][]}");
        boolean boolean2 = deleteRequest1.getShouldPersistResult();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test3078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3078");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.consistencyLevel(writeConsistencyLevel23);
        deleteRequest24.setParentTask("hi!", (long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest24.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest24.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest24.routing("delete {[hi!][][delete {[][][]}]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress34 = deleteRequest33.remoteAddress();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNull(transportAddress34);
    }

    @Test
    public void test3079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3079");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.setRefreshPolicy("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy10 = deleteRequest6.getRefreshPolicy();
        long long11 = deleteRequest6.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest6.version((long) 100);
        org.elasticsearch.common.io.stream.StreamInput streamInput14 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest6.readFrom(streamInput14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + refreshPolicy10 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy10.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-3L) + "'", long11 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest13);
    }

    @Test
    public void test3080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3080");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = deleteRequest3.getRefreshPolicy();
        long long15 = deleteRequest3.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType22 = deleteRequest21.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress27 = deleteRequest26.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId35 = null;
        org.elasticsearch.tasks.Task task36 = deleteRequest31.createTask(0L, "", "", taskId35);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy37 = deleteRequest31.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest26.setRefreshPolicy(refreshPolicy37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest21.setRefreshPolicy(refreshPolicy37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel41 = deleteRequest40.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel42 = deleteRequest40.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest21.consistencyLevel(writeConsistencyLevel42);
        long long44 = deleteRequest21.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest46.setShardId(shardId47);
        deleteRequest46.primaryTerm((long) 1);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy51 = deleteRequest46.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest21.setRefreshPolicy(refreshPolicy51);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest52.index("hi!");
        boolean boolean55 = deleteRequest52.getShouldPersistResult();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy56 = deleteRequest52.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest3.setRefreshPolicy(refreshPolicy56);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException58 = deleteRequest57.validate();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(transportAddress13);
        org.junit.Assert.assertTrue("'" + refreshPolicy14 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy14.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertNull(transportAddress27);
        org.junit.Assert.assertNotNull(task36);
        org.junit.Assert.assertTrue("'" + refreshPolicy37 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy37.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel41 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel41.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel42 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel42.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-3L) + "'", long44 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertTrue("'" + refreshPolicy51 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy51.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + refreshPolicy56 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy56.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNull(actionRequestValidationException58);
    }

    @Test
    public void test3081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3081");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][hi!]}");
        java.lang.String str6 = deleteRequest3.getDescription();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy7 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.type("delete {[][][]}");
        java.lang.String str14 = deleteRequest11.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId22 = null;
        org.elasticsearch.tasks.Task task23 = deleteRequest18.createTask(0L, "", "", taskId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest18.setRefreshPolicy("");
        java.lang.String str26 = deleteRequest25.toString();
        java.lang.String[] strArray27 = deleteRequest25.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest25.index("");
        org.elasticsearch.common.unit.TimeValue timeValue30 = deleteRequest29.timeout();
        org.elasticsearch.index.VersionType versionType31 = deleteRequest29.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest11.versionType(versionType31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest3.versionType(versionType31);
        java.lang.String str34 = deleteRequest3.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest3.type("delete {[][delete {[][][]}][delete {[delete {[hi!][null][null]}][null][delete {[][][hi!]}]}]}");
        deleteRequest3.setParentTask("delete {[delete {[][null][null]}][][delete {[][][hi!]}]}", (long) (byte) 100);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][delete {[][][hi!]}][delete {[][][]}]}" + "'", str6, "delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.junit.Assert.assertTrue("'" + refreshPolicy7 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy7.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[][][]}" + "'", str14, "delete {[][][]}");
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "delete {[][][]}" + "'", str26, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(timeValue30);
        org.junit.Assert.assertNotNull(versionType31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "delete {[][][hi!]}" + "'", str34, "delete {[][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest36);
    }

    @Test
    public void test3082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3082");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        org.elasticsearch.index.VersionType versionType2 = deleteRequest0.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.version((long) 'a');
        java.lang.String str5 = deleteRequest0.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.index("delete {[][delete {[][][]}][delete {[][][]}]}");
        long long8 = deleteRequest7.primaryTerm();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(versionType2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[null][null][null]}" + "'", str5, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
    }

    @Test
    public void test3083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3083");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        java.lang.String str7 = deleteRequest6.routing();
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = null;
        deleteRequest6.remoteAddress(transportAddress8);
        org.elasticsearch.common.transport.TransportAddress transportAddress10 = deleteRequest6.remoteAddress();
        java.lang.String[] strArray11 = deleteRequest6.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel12 = deleteRequest6.consistencyLevel();
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = null;
        deleteRequest6.remoteAddress(transportAddress13);
        org.elasticsearch.action.support.IndicesOptions indicesOptions15 = deleteRequest6.indicesOptions();
        java.lang.String str16 = deleteRequest6.type();
        java.lang.String str17 = deleteRequest6.index();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(transportAddress10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel12 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel12.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test3084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3084");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        java.lang.String str4 = deleteRequest2.type();
        long long5 = deleteRequest2.primaryTerm();
        long long6 = deleteRequest2.version();
        java.lang.String str7 = deleteRequest2.type();
        deleteRequest2.primaryTerm(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest2.index("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        java.lang.String str12 = deleteRequest11.toString();
        java.lang.String str13 = deleteRequest11.getDescription();
        long long14 = deleteRequest11.version();
        org.elasticsearch.common.unit.TimeValue timeValue15 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.timeout(timeValue15);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel17 = deleteRequest16.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][hi!]}", "delete {[null][null][null]}", "");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy22 = deleteRequest21.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest16.setRefreshPolicy(refreshPolicy22);
        deleteRequest23.primaryTerm((long) (short) -1);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-3L) + "'", long6 == (-3L));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}" + "'", str12, "delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}" + "'", str13, "delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-3L) + "'", long14 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel17 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel17.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + refreshPolicy22 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy22.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest23);
    }

    @Test
    public void test3085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3085");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][hi!]}][null][null]}", "delete {[][][]}", "");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel4 = deleteRequest3.consistencyLevel();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId14 = null;
        org.elasticsearch.tasks.Task task15 = deleteRequest10.createTask(0L, "", "", taskId14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest10.setRefreshPolicy("");
        java.lang.String[] strArray18 = deleteRequest17.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId26 = null;
        org.elasticsearch.tasks.Task task27 = deleteRequest22.createTask(0L, "", "", taskId26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel30 = deleteRequest29.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest17.consistencyLevel(writeConsistencyLevel30);
        deleteRequest31.setParentTask("hi!", (long) (short) 100);
        java.lang.String str35 = deleteRequest31.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest39.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType42 = deleteRequest41.versionType();
        java.lang.String str43 = deleteRequest41.index();
        org.elasticsearch.common.unit.TimeValue timeValue44 = deleteRequest41.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest31.timeout(timeValue44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest3.timeout(timeValue44);
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest3.setShardId(shardId47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest50.setParentTask("hi!", (long) (short) 1);
        java.lang.String[] strArray54 = deleteRequest50.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest56.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue61 = deleteRequest60.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest56.timeout(timeValue61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest50.timeout(timeValue61);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel64 = deleteRequest50.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest3.consistencyLevel(writeConsistencyLevel64);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest65.setRefreshPolicy("delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][null][null]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][null][null]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel4 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel4.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(task15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(task27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel30 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel30.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(versionType42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(timeValue44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(timeValue61);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel64 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel64.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest65);
    }

    @Test
    public void test3086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3086");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}", "delete {[delete {[][][hi!]}][null][delete {[][][]}]}", "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        java.lang.String str4 = deleteRequest3.getDescription();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[delete {[][][hi!]}][null][delete {[][][]}]}][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}]}" + "'", str4, "delete {[delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[delete {[][][hi!]}][null][delete {[][][]}]}][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}]}");
    }

    @Test
    public void test3087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3087");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest10.toString();
        java.lang.String str12 = deleteRequest10.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest10.index("delete {[delete {[][null][null]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest10.version(0L);
        java.lang.String[] strArray19 = deleteRequest18.indices();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput20 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest18.writeTo(streamOutput20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][][]}" + "'", str12, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(strArray19);
    }

    @Test
    public void test3088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3088");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}", "delete {[hi!][null][null]}", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.id("delete {[delete {[][null][null]}][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.parent("delete {[][delete {[hi!][null][null]}][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
    }

    @Test
    public void test3089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3089");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][null][null]}", "delete {[hi!][null][null]}", "delete {[hi!][null][null]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy4 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.version((long) '4');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.type("delete {[null][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = deleteRequest10.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.setShardId(shardId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.version((long) '4');
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = deleteRequest15.remoteAddress();
        org.elasticsearch.index.VersionType versionType17 = deleteRequest15.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest3.versionType(versionType17);
        deleteRequest18.primaryTerm((-3L));
        java.lang.String str21 = deleteRequest18.routing();
        org.junit.Assert.assertTrue("'" + refreshPolicy4 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy4.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(transportAddress11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(transportAddress16);
        org.junit.Assert.assertNotNull(versionType17);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test3090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3090");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str8 = deleteRequest7.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.type("");
        java.lang.String str11 = deleteRequest10.getDescription();
        deleteRequest10.setParentTask("delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][null][null]}", (long) (-1));
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[][][]}" + "'", str8, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
    }

    @Test
    public void test3091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3091");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException2 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest4.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue9 = deleteRequest8.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest4.timeout(timeValue9);
        java.lang.String str11 = deleteRequest4.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str19 = deleteRequest18.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.type("delete {[][][]}");
        java.lang.String str26 = deleteRequest23.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest23.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId36 = null;
        org.elasticsearch.tasks.Task task37 = deleteRequest32.createTask(0L, "", "", taskId36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest32.setRefreshPolicy("");
        java.lang.String str40 = deleteRequest39.toString();
        java.lang.String[] strArray41 = deleteRequest39.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest39.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str52 = deleteRequest51.id();
        java.lang.String str53 = deleteRequest51.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str55 = deleteRequest54.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest54.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId58 = deleteRequest54.getParentTask();
        deleteRequest51.setParentTask(taskId58);
        deleteRequest47.setParentTask(taskId58);
        deleteRequest43.setParentTask(taskId58);
        deleteRequest28.setParentTask(taskId58);
        deleteRequest18.setParentTask(taskId58);
        org.elasticsearch.tasks.Task task64 = deleteRequest4.createTask((long) 100, "delete {[][][hi!]}", "hi!", taskId58);
        deleteRequest0.setParentTask(taskId58);
        org.elasticsearch.index.shard.ShardId shardId66 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest0.setShardId(shardId66);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest67.index("delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}");
        deleteRequest67.primaryTerm((long) 0);
        deleteRequest67.setParentTask("delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[][][]}]}", (long) (short) 10);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "delete {[null][null][null]}" + "'", str1, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException2);
        org.junit.Assert.assertNotNull(timeValue9);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "delete {[][][]}" + "'", str26, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(task37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "delete {[][][]}" + "'", str40, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(taskId58);
        org.junit.Assert.assertNotNull(task64);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNotNull(deleteRequest69);
    }

    @Test
    public void test3092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3092");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str7 = deleteRequest6.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException8 = deleteRequest6.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure10 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "hi!", (java.lang.Throwable) actionRequestValidationException8, "delete {[][][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure12 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][][]}", (java.lang.Throwable) actionRequestValidationException8, "delete {[][][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure14 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}", (java.lang.Throwable) actionRequestValidationException8, "");
        java.lang.String str15 = shardFailure14.indexUUID;
        java.lang.String str16 = shardFailure14.indexUUID;
        java.lang.String str17 = shardFailure14.reason;
        java.lang.String str18 = shardFailure14.reason;
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[null][null][null]}" + "'", str7, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException8);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}" + "'", str17, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}" + "'", str18, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
    }

    @Test
    public void test3093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3093");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel12 = deleteRequest3.consistencyLevel();
        java.lang.String str13 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue16 = deleteRequest15.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress17 = null;
        deleteRequest15.remoteAddress(transportAddress17);
        java.lang.String str19 = deleteRequest15.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest15.parent("delete {[hi!][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue22 = deleteRequest15.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest3.timeout(timeValue22);
        org.elasticsearch.action.support.IndicesOptions indicesOptions24 = deleteRequest23.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest23.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest23.type("delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}][delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}][]}");
        java.lang.String str28 = deleteRequest23.id();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel12 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel12.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[][][]}" + "'", str13, "delete {[][][]}");
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[null][null][null]}" + "'", str19, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(timeValue22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(indicesOptions24);
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
    }

    @Test
    public void test3094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3094");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType6 = deleteRequest5.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = deleteRequest10.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy21 = deleteRequest15.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest10.setRefreshPolicy(refreshPolicy21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest5.setRefreshPolicy(refreshPolicy21);
        java.lang.String str24 = deleteRequest23.parent();
        org.elasticsearch.common.unit.TimeValue timeValue25 = deleteRequest23.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest23.routing("delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest23.index("delete {[][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][][]}]}");
        java.lang.String str30 = deleteRequest29.toString();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertNull(transportAddress11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertTrue("'" + refreshPolicy21 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy21.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(timeValue25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "delete {[delete {[][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][][]}]}][delete {[][][hi!]}][delete {[][][]}]}" + "'", str30, "delete {[delete {[][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][][]}]}][delete {[][][hi!]}][delete {[][][]}]}");
    }

    @Test
    public void test3095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3095");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        org.elasticsearch.action.support.IndicesOptions indicesOptions9 = deleteRequest8.indicesOptions();
        org.elasticsearch.action.support.IndicesOptions indicesOptions10 = deleteRequest8.indicesOptions();
        java.lang.String str11 = deleteRequest8.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str16 = deleteRequest15.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.id("hi!");
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest18.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId27 = null;
        org.elasticsearch.tasks.Task task28 = deleteRequest23.createTask(0L, "", "", taskId27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest23.setRefreshPolicy("");
        java.lang.String[] strArray31 = deleteRequest30.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId39 = null;
        org.elasticsearch.tasks.Task task40 = deleteRequest35.createTask(0L, "", "", taskId39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest35.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel43 = deleteRequest42.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest30.consistencyLevel(writeConsistencyLevel43);
        deleteRequest44.setParentTask("hi!", (long) (short) 100);
        org.elasticsearch.index.VersionType versionType48 = deleteRequest44.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest18.versionType(versionType48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest8.versionType(versionType48);
        java.lang.String str51 = deleteRequest8.parent();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(indicesOptions9);
        org.junit.Assert.assertNotNull(indicesOptions10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(task40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel43 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel43.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(versionType48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNull(str51);
    }

    @Test
    public void test3096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3096");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][hi!]}][null][null]}", "delete {[][][]}", "");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel4 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.type("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.index.shard.ShardId shardId7 = deleteRequest6.shardId();
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = deleteRequest6.remoteAddress();
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel4 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel4.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertNull(transportAddress8);
    }

    @Test
    public void test3097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3097");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str3 = deleteRequest2.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest2.version((long) (short) 100);
        java.lang.String str6 = deleteRequest5.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.id("delete {[hi!][null][null]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException9 = deleteRequest8.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest8.version(10L);
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.setShardId(shardId12);
        deleteRequest13.primaryTerm((long) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[][][delete {[hi!][null][null]}]}", deleteRequest13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(actionRequestValidationException9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
    }

    @Test
    public void test3098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3098");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.type("delete {[null][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = deleteRequest3.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.version((long) '4');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId16 = null;
        org.elasticsearch.tasks.Task task17 = deleteRequest12.createTask(0L, "", "", taskId16);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel18 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress23 = deleteRequest22.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId31 = null;
        org.elasticsearch.tasks.Task task32 = deleteRequest27.createTask(0L, "", "", taskId31);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy33 = deleteRequest27.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest22.setRefreshPolicy(refreshPolicy33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest12.setRefreshPolicy(refreshPolicy33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest6.setRefreshPolicy(refreshPolicy33);
        org.elasticsearch.tasks.TaskId taskId37 = deleteRequest36.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][null][null]}", "delete {[hi!][null][null]}", "delete {[hi!][null][null]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy42 = deleteRequest41.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest41.version((long) '4');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest46.type("delete {[null][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress49 = deleteRequest48.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest48.setShardId(shardId50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest51.version((long) '4');
        org.elasticsearch.common.transport.TransportAddress transportAddress54 = deleteRequest53.remoteAddress();
        org.elasticsearch.index.VersionType versionType55 = deleteRequest53.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest41.versionType(versionType55);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest36.versionType(versionType55);
        boolean boolean58 = deleteRequest36.getShouldPersistResult();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(transportAddress4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(task17);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel18 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel18.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(transportAddress23);
        org.junit.Assert.assertNotNull(task32);
        org.junit.Assert.assertTrue("'" + refreshPolicy33 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy33.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(taskId37);
        org.junit.Assert.assertTrue("'" + refreshPolicy42 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy42.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNull(transportAddress49);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNull(transportAddress54);
        org.junit.Assert.assertNotNull(versionType55);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test3099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3099");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long2 = deleteRequest1.primaryTerm();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy3 = deleteRequest1.getRefreshPolicy();
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest1.setShardId(shardId4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.type("delete {[][][hi!]}");
        boolean boolean12 = deleteRequest11.getShouldPersistResult();
        org.elasticsearch.index.shard.ShardId shardId13 = deleteRequest11.shardId();
        java.lang.String str14 = deleteRequest11.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId22 = null;
        org.elasticsearch.tasks.Task task23 = deleteRequest18.createTask(0L, "", "", taskId22);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy24 = deleteRequest18.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId32 = null;
        org.elasticsearch.tasks.Task task33 = deleteRequest28.createTask(0L, "", "", taskId32);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy34 = deleteRequest28.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest18.setRefreshPolicy(refreshPolicy34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId43 = null;
        org.elasticsearch.tasks.Task task44 = deleteRequest39.createTask(0L, "", "", taskId43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest39.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType47 = deleteRequest39.versionType();
        java.lang.String str48 = deleteRequest39.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId56 = null;
        org.elasticsearch.tasks.Task task57 = deleteRequest52.createTask(0L, "", "", taskId56);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy58 = deleteRequest52.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest39.setRefreshPolicy(refreshPolicy58);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest18.setRefreshPolicy(refreshPolicy58);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str68 = deleteRequest67.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest67.id("hi!");
        java.lang.String str71 = deleteRequest70.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str79 = deleteRequest78.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = deleteRequest78.id("hi!");
        org.elasticsearch.tasks.TaskId taskId82 = deleteRequest81.getParentTask();
        org.elasticsearch.tasks.TaskId taskId83 = deleteRequest81.getParentTask();
        org.elasticsearch.tasks.Task task84 = deleteRequest70.createTask((long) '4', "", "delete {[][][]}", taskId83);
        org.elasticsearch.tasks.Task task85 = deleteRequest60.createTask(97L, "delete {[][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}][]}", "delete {[delete {[hi!][null][null]}][delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}][delete {[delete {[][null][null]}][][]}]}", taskId83);
        deleteRequest11.setParentTask(taskId83);
        deleteRequest5.setParentTask(taskId83);
        java.lang.String str88 = deleteRequest5.index();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + refreshPolicy3 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy3.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(shardId13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[][delete {[][][hi!]}][delete {[][][]}]}" + "'", str14, "delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertTrue("'" + refreshPolicy24 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy24.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task33);
        org.junit.Assert.assertTrue("'" + refreshPolicy34 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy34.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(task44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(versionType47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "delete {[][][]}" + "'", str48, "delete {[][][]}");
        org.junit.Assert.assertNotNull(task57);
        org.junit.Assert.assertTrue("'" + refreshPolicy58 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy58.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "delete {[][][hi!]}" + "'", str71, "delete {[][][hi!]}");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
        org.junit.Assert.assertNotNull(deleteRequest81);
        org.junit.Assert.assertNotNull(taskId82);
        org.junit.Assert.assertNotNull(taskId83);
        org.junit.Assert.assertNotNull(task84);
        org.junit.Assert.assertNotNull(task85);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "" + "'", str88, "");
    }

    @Test
    public void test3100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3100");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest1.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue6 = deleteRequest5.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.timeout(timeValue6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str9 = deleteRequest8.parent();
        org.elasticsearch.index.VersionType versionType10 = deleteRequest8.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest1.versionType(versionType10);
        long long12 = deleteRequest11.version();
        deleteRequest11.primaryTerm((long) (short) 100);
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(versionType10);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-3L) + "'", long12 == (-3L));
    }

    @Test
    public void test3101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3101");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][null][null]}][null][null]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy2 = deleteRequest1.getRefreshPolicy();
        org.junit.Assert.assertTrue("'" + refreshPolicy2 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy2.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
    }

    @Test
    public void test3102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3102");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.version((long) (-1));
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.parent();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test3103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3103");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.type("delete {[hi!][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue5 = deleteRequest2.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest2.version((long) (byte) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long10 = deleteRequest9.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue11 = deleteRequest9.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest2.timeout(timeValue11);
        java.lang.Class<?> wildcardClass13 = timeValue11.getClass();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(timeValue11);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test3104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3104");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.routing("delete {[][][hi!]}");
        java.lang.String str13 = deleteRequest12.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.id("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.version((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.index("delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions20 = deleteRequest17.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.type("delete {[][][hi!]}");
        java.lang.String str26 = deleteRequest23.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest23.parent("delete {[delete {[hi!][null][null]}][null][delete {[][][hi!]}]}");
        org.elasticsearch.index.VersionType versionType29 = deleteRequest23.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest17.versionType(versionType29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.index("delete {[delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][delete {[][][]}][delete {[][][]}]}][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}]}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(indicesOptions20);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(versionType29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
    }

    @Test
    public void test3105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3105");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.setRefreshPolicy(refreshPolicy14);
        long long16 = deleteRequest3.primaryTerm();
        deleteRequest3.primaryTerm((long) '#');
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(transportAddress13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
    }

    @Test
    public void test3106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3106");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][hi!]}");
        java.lang.String str6 = deleteRequest3.getDescription();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy7 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy8 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.tasks.TaskId taskId9 = deleteRequest3.getParentTask();
        org.elasticsearch.index.VersionType versionType10 = deleteRequest3.versionType();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][delete {[][][hi!]}][delete {[][][]}]}" + "'", str6, "delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.junit.Assert.assertTrue("'" + refreshPolicy7 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy7.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertTrue("'" + refreshPolicy8 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy8.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(taskId9);
        org.junit.Assert.assertNotNull(versionType10);
    }

    @Test
    public void test3107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3107");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str3 = deleteRequest2.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException4 = deleteRequest2.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure6 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "hi!", (java.lang.Throwable) actionRequestValidationException4, "delete {[][][]}");
        java.lang.String str7 = shardFailure6.reason;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = shardFailure6.routing;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "delete {[null][null][null]}" + "'", str3, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNull(shardRouting8);
    }

    @Test
    public void test3108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3108");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.consistencyLevel(writeConsistencyLevel23);
        deleteRequest24.setParentTask("hi!", (long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest24.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest24.routing("hi!");
        long long32 = deleteRequest31.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str37 = deleteRequest36.id();
        org.elasticsearch.common.transport.TransportAddress transportAddress38 = deleteRequest36.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest36.setShardId(shardId39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest44.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType47 = deleteRequest46.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest40.versionType(versionType47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest31.versionType(versionType47);
        long long50 = deleteRequest49.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest49.version((long) 100);
        org.elasticsearch.action.support.IndicesOptions indicesOptions53 = deleteRequest49.indicesOptions();
        java.lang.String str54 = deleteRequest49.type();
        org.elasticsearch.common.unit.TimeValue timeValue55 = deleteRequest49.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}", "delete {[][delete {[][][]}][delete {[][][]}]}", "delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        org.elasticsearch.index.VersionType versionType60 = deleteRequest59.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest49.versionType(versionType60);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str63 = deleteRequest62.parent();
        org.elasticsearch.index.VersionType versionType64 = deleteRequest62.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest49.versionType(versionType64);
        org.elasticsearch.common.transport.TransportAddress transportAddress66 = null;
        deleteRequest65.remoteAddress(transportAddress66);
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(transportAddress38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(versionType47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 0L + "'", long50 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(indicesOptions53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(timeValue55);
        org.junit.Assert.assertNotNull(versionType60);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(versionType64);
        org.junit.Assert.assertNotNull(deleteRequest65);
    }

    @Test
    public void test3109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3109");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest0.remoteAddress(transportAddress6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType14 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress19 = deleteRequest18.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId27 = null;
        org.elasticsearch.tasks.Task task28 = deleteRequest23.createTask(0L, "", "", taskId27);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy29 = deleteRequest23.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest18.setRefreshPolicy(refreshPolicy29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest13.setRefreshPolicy(refreshPolicy29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel33 = deleteRequest32.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel34 = deleteRequest32.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest13.consistencyLevel(writeConsistencyLevel34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest0.consistencyLevel(writeConsistencyLevel34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str41 = deleteRequest40.id();
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest40.setShardId(shardId42);
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest40.setShardId(shardId44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest46.parent("delete {[][][]}");
        org.elasticsearch.index.VersionType versionType49 = deleteRequest48.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest45.versionType(versionType49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str55 = deleteRequest54.id();
        org.elasticsearch.common.transport.TransportAddress transportAddress56 = deleteRequest54.remoteAddress();
        org.elasticsearch.index.VersionType versionType57 = deleteRequest54.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel58 = deleteRequest54.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest50.consistencyLevel(writeConsistencyLevel58);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest0.consistencyLevel(writeConsistencyLevel58);
        java.lang.String str61 = deleteRequest0.getDescription();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput62 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest0.writeTo(streamOutput62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNull(transportAddress19);
        org.junit.Assert.assertNotNull(task28);
        org.junit.Assert.assertTrue("'" + refreshPolicy29 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy29.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel33 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel33.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel34 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel34.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(versionType49);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNull(transportAddress56);
        org.junit.Assert.assertNotNull(versionType57);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel58 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel58.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "delete {[null][null][null]}" + "'", str61, "delete {[null][null][null]}");
    }

    @Test
    public void test3110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3110");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str10 = deleteRequest9.id();
        java.lang.String str11 = deleteRequest9.index();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest9.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest0.createTask((-1L), "delete {[][][hi!]}", "delete {[][delete {[][][]}][delete {[][][]}]}", taskId12);
        deleteRequest0.setParentTask("delete {[delete {[][][hi!]}][null][null]}", (long) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest0.routing("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        org.elasticsearch.index.VersionType versionType19 = deleteRequest18.versionType();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(versionType19);
    }

    @Test
    public void test3111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3111");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest1.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue6 = deleteRequest5.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.timeout(timeValue6);
        java.lang.String str8 = deleteRequest1.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException9 = deleteRequest1.validate();
        java.lang.String str10 = deleteRequest1.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long13 = deleteRequest12.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.index("");
        boolean boolean16 = deleteRequest12.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest12.version((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue19 = deleteRequest12.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest1.timeout(timeValue19);
        deleteRequest20.primaryTerm(10L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.index.VersionType versionType27 = deleteRequest26.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest26.version((long) (short) 1);
        java.lang.String str30 = deleteRequest26.parent();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel31 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest20.consistencyLevel(writeConsistencyLevel31);
        org.elasticsearch.common.transport.TransportAddress transportAddress33 = deleteRequest20.remoteAddress();
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[][null][null]}" + "'", str8, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][null][null]}" + "'", str10, "delete {[][null][null]}");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(versionType27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel31 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel31.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNull(transportAddress33);
    }

    @Test
    public void test3112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3112");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}", "delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = deleteRequest5.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.type("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.setRefreshPolicy("");
        java.lang.String str23 = deleteRequest22.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long26 = deleteRequest25.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str28 = deleteRequest27.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue31 = deleteRequest30.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest27.timeout(timeValue31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId35 = deleteRequest34.getParentTask();
        deleteRequest25.setParentTask(taskId35);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel37 = deleteRequest25.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest22.consistencyLevel(writeConsistencyLevel37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest9.consistencyLevel(writeConsistencyLevel37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest5.consistencyLevel(writeConsistencyLevel37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest5.id("delete {[][][delete {[hi!][null][null]}]}");
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest42.setShardId(shardId43);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(transportAddress6);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[][][]}" + "'", str23, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(timeValue31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(taskId35);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel37 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel37.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest44);
    }

    @Test
    public void test3113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3113");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[hi!][null][null]}", "delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.type("delete {[][][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel9 = deleteRequest8.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.consistencyLevel(writeConsistencyLevel9);
        long long11 = deleteRequest3.version();
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel9 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel9.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-3L) + "'", long11 == (-3L));
    }

    @Test
    public void test3114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3114");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.index();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        java.lang.String str7 = deleteRequest3.getDescription();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[][][]}" + "'", str7, "delete {[][][]}");
    }

    @Test
    public void test3115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3115");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId14 = null;
        org.elasticsearch.tasks.Task task15 = deleteRequest10.createTask(0L, "", "", taskId14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest10.setRefreshPolicy("");
        java.lang.String str18 = deleteRequest17.toString();
        java.lang.String[] strArray19 = deleteRequest17.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest17.index("");
        org.elasticsearch.common.unit.TimeValue timeValue22 = deleteRequest21.timeout();
        org.elasticsearch.index.VersionType versionType23 = deleteRequest21.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest3.versionType(versionType23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest3.index("delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}");
        long long27 = deleteRequest26.version();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(task15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[][][]}" + "'", str18, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(timeValue22);
        org.junit.Assert.assertNotNull(versionType23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-3L) + "'", long27 == (-3L));
    }

    @Test
    public void test3116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3116");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str6 = deleteRequest5.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.version((long) ' ');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId16 = null;
        org.elasticsearch.tasks.Task task17 = deleteRequest12.createTask(0L, "", "", taskId16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest12.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = deleteRequest19.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions21 = deleteRequest19.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId22 = null;
        deleteRequest19.setParentTask(taskId22);
        deleteRequest19.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest19.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        java.lang.String str28 = deleteRequest27.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest27.type("hi!");
        java.lang.String str31 = deleteRequest30.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId39 = null;
        org.elasticsearch.tasks.Task task40 = deleteRequest35.createTask(0L, "", "", taskId39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest35.setRefreshPolicy("");
        deleteRequest42.primaryTerm(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest42.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel48 = deleteRequest47.consistencyLevel();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy49 = deleteRequest47.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest46.setRefreshPolicy(refreshPolicy49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest30.setRefreshPolicy(refreshPolicy49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest8.setRefreshPolicy(refreshPolicy49);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[null][null][delete {[][][hi!]}]}", deleteRequest52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(task17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel20 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel20.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions21);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(task40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel48 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel48.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + refreshPolicy49 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy49.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest52);
    }

    @Test
    public void test3117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3117");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.parent("delete {[][][]}");
        java.lang.String str11 = deleteRequest10.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.type("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest10.index("delete {[delete {[hi!][null][null]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.id("delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}");
        org.elasticsearch.common.unit.TimeValue timeValue18 = deleteRequest17.timeout();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(timeValue18);
    }

    @Test
    public void test3118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3118");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.version((long) (-1));
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.index("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.index.VersionType versionType8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.versionType(versionType8);
        org.elasticsearch.index.shard.ShardId shardId10 = deleteRequest9.shardId();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNull(shardId10);
    }

    @Test
    public void test3119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3119");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest10.toString();
        java.lang.String[] strArray12 = deleteRequest10.indices();
        deleteRequest10.primaryTerm(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest10.routing("delete {[null][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.setShardId(shardId17);
        org.elasticsearch.common.io.stream.StreamInput streamInput19 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest18.readFrom(streamInput19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
    }

    @Test
    public void test3120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3120");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest10.toString();
        java.lang.String str12 = deleteRequest10.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.type("delete {[null][null][null]}");
        java.lang.String str17 = deleteRequest14.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest14.index("");
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest19.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest10.timeout(timeValue20);
        org.elasticsearch.index.VersionType versionType22 = deleteRequest21.versionType();
        java.lang.String str23 = deleteRequest21.toString();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][][]}" + "'", str12, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[][][]}" + "'", str23, "delete {[][][]}");
    }

    @Test
    public void test3121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3121");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}]}", "delete {[null][null][null]}", "delete {[delete {[delete {[][null][null]}][][delete {[][][hi!]}]}][delete {[][null][null]}][delete {[null][null][delete {[][][hi!]}]}]}");
        java.lang.Class<?> wildcardClass4 = deleteRequest3.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test3122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3122");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}", "delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}", "delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.tasks.TaskId taskId4 = deleteRequest3.getParentTask();
        org.junit.Assert.assertNotNull(taskId4);
    }

    @Test
    public void test3123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3123");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = deleteRequest3.remoteAddress();
        org.elasticsearch.index.VersionType versionType6 = deleteRequest3.versionType();
        org.elasticsearch.common.transport.TransportAddress transportAddress7 = deleteRequest3.remoteAddress();
        org.elasticsearch.index.VersionType versionType8 = deleteRequest3.versionType();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException9 = deleteRequest3.validate();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(transportAddress5);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertNull(transportAddress7);
        org.junit.Assert.assertNotNull(versionType8);
        org.junit.Assert.assertNull(actionRequestValidationException9);
    }

    @Test
    public void test3124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3124");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.parent("delete {[][][]}");
        org.elasticsearch.index.VersionType versionType7 = deleteRequest6.versionType();
        java.lang.String str8 = deleteRequest6.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException9 = deleteRequest6.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure11 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[][delete {[delete {[][][hi!]}][null][null]}][]}][null][null]}", (java.lang.Throwable) actionRequestValidationException9, "delete {[][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][][]}]}");
        java.lang.Throwable throwable12 = shardFailure11.cause;
        java.lang.Throwable throwable13 = shardFailure11.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure15 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][null][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}]}", throwable13, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(versionType7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[null][null][null]}" + "'", str8, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException9);
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable13);
        org.junit.Assert.assertEquals(throwable13.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable13.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable13.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test3125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3125");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}", "delete {[delete {[][null][null]}][][]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest3.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.index("delete {[][][hi!]}");
        java.lang.String str8 = deleteRequest7.parent();
        java.lang.String str9 = deleteRequest7.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest7.parent("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest7.parent("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = deleteRequest7.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.setRefreshPolicy(refreshPolicy14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str17 = deleteRequest16.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest16.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId27 = null;
        org.elasticsearch.tasks.Task task28 = deleteRequest23.createTask(0L, "", "", taskId27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest23.setRefreshPolicy("");
        java.lang.String[] strArray31 = deleteRequest30.indices();
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest30.setShardId(shardId32);
        long long34 = deleteRequest30.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str36 = deleteRequest35.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest35.parent("hi!");
        org.elasticsearch.tasks.TaskId taskId39 = deleteRequest35.getParentTask();
        deleteRequest30.setParentTask(taskId39);
        deleteRequest19.setParentTask(taskId39);
        deleteRequest15.setParentTask(taskId39);
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str9, "delete {[delete {[][][hi!]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + refreshPolicy14 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy14.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[null][null][null]}" + "'", str17, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(task28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-3L) + "'", long34 == (-3L));
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "delete {[null][null][null]}" + "'", str36, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(taskId39);
    }

    @Test
    public void test3126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3126");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long2 = deleteRequest1.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.index("");
        boolean boolean5 = deleteRequest1.getShouldPersistResult();
        java.lang.String str6 = deleteRequest1.toString();
        deleteRequest1.setParentTask("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}", (long) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest1.id("delete {[hi!][null][null]}");
        deleteRequest1.setParentTask("delete {[delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[delete {[][][hi!]}][null][delete {[][][]}]}][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}]}", (long) (byte) 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][null][null]}" + "'", str6, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest11);
    }

    @Test
    public void test3127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3127");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.version((long) (-1));
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.index("delete {[][delete {[][][]}][delete {[][][]}]}");
        boolean boolean8 = deleteRequest7.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}", "delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.index("delete {[][][hi!]}");
        java.lang.String str16 = deleteRequest15.parent();
        java.lang.String str17 = deleteRequest15.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest15.version((long) (short) 100);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = deleteRequest19.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId28 = null;
        org.elasticsearch.tasks.Task task29 = deleteRequest24.createTask(0L, "", "", taskId28);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy30 = deleteRequest24.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest19.setRefreshPolicy(refreshPolicy30);
        org.elasticsearch.common.unit.TimeValue timeValue32 = deleteRequest19.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest12.timeout(timeValue32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest7.timeout(timeValue32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest35.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest37.type("delete {[hi!][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel40 = deleteRequest37.consistencyLevel();
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest37.setShardId(shardId41);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel43 = deleteRequest42.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest7.consistencyLevel(writeConsistencyLevel43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel46 = deleteRequest45.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel47 = deleteRequest45.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest44.consistencyLevel(writeConsistencyLevel47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest48.id("delete {[hi!][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel51 = deleteRequest48.consistencyLevel();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel20 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel20.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(task29);
        org.junit.Assert.assertTrue("'" + refreshPolicy30 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy30.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(timeValue32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel40 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel40.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel43 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel43.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel46 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel46.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel47 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel47.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel51 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel51.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test3128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3128");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][hi!]}", "delete {[hi!][null][null]}", "delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId6 = deleteRequest5.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId14 = null;
        org.elasticsearch.tasks.Task task15 = deleteRequest10.createTask(0L, "", "", taskId14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest10.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel18 = deleteRequest17.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions19 = deleteRequest17.indicesOptions();
        java.lang.String str20 = deleteRequest17.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str22 = deleteRequest21.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.version((long) (short) 100);
        deleteRequest21.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str28 = deleteRequest27.parent();
        org.elasticsearch.index.VersionType versionType29 = deleteRequest27.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest21.versionType(versionType29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest17.versionType(versionType29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest5.versionType(versionType29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest3.versionType(versionType29);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException34 = deleteRequest33.validate();
        java.lang.String[] strArray35 = deleteRequest33.indices();
        org.junit.Assert.assertNull(shardId6);
        org.junit.Assert.assertNotNull(task15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel18 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel18.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[][][]}" + "'", str20, "delete {[][][]}");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(versionType29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNull(actionRequestValidationException34);
        org.junit.Assert.assertNotNull(strArray35);
    }

    @Test
    public void test3129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3129");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        java.lang.String str4 = deleteRequest2.type();
        long long5 = deleteRequest2.primaryTerm();
        long long6 = deleteRequest2.version();
        java.lang.String str7 = deleteRequest2.type();
        deleteRequest2.primaryTerm(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest2.index("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        java.lang.String str12 = deleteRequest11.toString();
        java.lang.String str13 = deleteRequest11.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest11.index("delete {[][][delete {[][delete {[][][hi!]}][delete {[][][]}]}]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = deleteRequest15.remoteAddress();
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest15.timeout();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-3L) + "'", long6 == (-3L));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}" + "'", str12, "delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}" + "'", str13, "delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(transportAddress16);
        org.junit.Assert.assertNotNull(timeValue17);
    }

    @Test
    public void test3130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3130");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        deleteRequest0.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.setRefreshPolicy("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException6 = deleteRequest5.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.index("delete {[hi!][null][null]}");
        java.lang.String str9 = deleteRequest8.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.index("delete {[][][hi!]}");
        java.lang.String str16 = deleteRequest15.parent();
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest15.getParentTask();
        org.elasticsearch.tasks.Task task18 = deleteRequest8.createTask((long) (-1), "delete {[][delete {[][][]}][delete {[][][]}]}", "delete {[hi!][null][null]}", taskId17);
        boolean boolean19 = deleteRequest8.getShouldPersistResult();
        org.elasticsearch.common.transport.TransportAddress transportAddress20 = null;
        deleteRequest8.remoteAddress(transportAddress20);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(actionRequestValidationException6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[hi!][null][null]}" + "'", str9, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test3131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3131");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = deleteRequest0.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest0.index("delete {[][delete {[delete {[][][hi!]}][null][null]}][]}");
        java.lang.String str9 = deleteRequest0.getDescription();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(transportAddress6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[delete {[][delete {[delete {[][][hi!]}][null][null]}][]}][null][null]}" + "'", str9, "delete {[delete {[][delete {[delete {[][][hi!]}][null][null]}][]}][null][null]}");
    }

    @Test
    public void test3132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3132");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}", "delete {[hi!][null][null]}", "hi!");
        org.elasticsearch.tasks.TaskId taskId4 = deleteRequest3.getParentTask();
        java.lang.String[] strArray5 = deleteRequest3.indices();
        org.junit.Assert.assertNotNull(taskId4);
        org.junit.Assert.assertNotNull(strArray5);
    }

    @Test
    public void test3133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3133");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest3.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.timeout(timeValue8);
        java.lang.String str10 = deleteRequest3.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest3.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure13 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[][][hi!]}][null][null]}", (java.lang.Throwable) actionRequestValidationException11, "delete {[][null][null]}");
        java.lang.String str14 = shardFailure13.indexUUID;
        java.lang.String str15 = shardFailure13.reason;
        java.lang.String str16 = shardFailure13.reason;
        java.lang.Throwable throwable17 = shardFailure13.cause;
        java.lang.String str18 = shardFailure13.indexUUID;
        java.lang.String str19 = shardFailure13.indexUUID;
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][null][null]}" + "'", str10, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[][null][null]}" + "'", str14, "delete {[][null][null]}");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str15, "delete {[delete {[][][hi!]}][null][null]}");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str16, "delete {[delete {[][][hi!]}][null][null]}");
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable17.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[][null][null]}" + "'", str18, "delete {[][null][null]}");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[][null][null]}" + "'", str19, "delete {[][null][null]}");
    }

    @Test
    public void test3134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3134");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.consistencyLevel(writeConsistencyLevel23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue27 = deleteRequest26.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress28 = null;
        deleteRequest26.remoteAddress(transportAddress28);
        org.elasticsearch.common.unit.TimeValue timeValue30 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest26.timeout(timeValue30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest10.timeout(timeValue30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.id("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput35 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest32.writeTo(streamOutput35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(timeValue27);
        org.junit.Assert.assertNotNull(timeValue30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
    }

    @Test
    public void test3135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3135");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType6 = deleteRequest5.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = deleteRequest10.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy21 = deleteRequest15.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest10.setRefreshPolicy(refreshPolicy21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest5.setRefreshPolicy(refreshPolicy21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel26 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest5.consistencyLevel(writeConsistencyLevel26);
        long long28 = deleteRequest5.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.setShardId(shardId31);
        deleteRequest30.primaryTerm((long) 1);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy35 = deleteRequest30.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest5.setRefreshPolicy(refreshPolicy35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest36.index("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue39 = deleteRequest38.timeout();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertNull(transportAddress11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertTrue("'" + refreshPolicy21 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy21.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel26 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel26.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-3L) + "'", long28 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + refreshPolicy35 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy35.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(timeValue39);
    }

    @Test
    public void test3136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3136");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.parent("delete {[][][]}");
        java.lang.String str5 = deleteRequest2.id();
        java.lang.String[] strArray6 = deleteRequest2.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str8 = deleteRequest7.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = deleteRequest7.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest7.getParentTask();
        deleteRequest2.setParentTask(taskId10);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException12 = deleteRequest2.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure14 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}]}", (java.lang.Throwable) actionRequestValidationException12, "delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}");
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(transportAddress9);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertNotNull(actionRequestValidationException12);
    }

    @Test
    public void test3137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3137");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}", "delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}", "delete {[delete {[][null][null]}][null][null]}");
        java.lang.String[] strArray4 = deleteRequest3.indices();
        org.junit.Assert.assertNotNull(strArray4);
    }

    @Test
    public void test3138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3138");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}", "delete {[hi!][null][null]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.setRefreshPolicy("delete {[delete {[hi!][null][null]}][null][delete {[][][hi!]}]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[delete {[hi!][null][null]}][null][delete {[][][hi!]}]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test3139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3139");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.action.support.IndicesOptions indicesOptions7 = deleteRequest6.indicesOptions();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy8 = deleteRequest6.getRefreshPolicy();
        java.lang.String str9 = deleteRequest6.getDescription();
        long long10 = deleteRequest6.version();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(indicesOptions7);
        org.junit.Assert.assertTrue("'" + refreshPolicy8 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy8.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[][][]}" + "'", str9, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-3L) + "'", long10 == (-3L));
    }

    @Test
    public void test3140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3140");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest10.indicesOptions();
        java.lang.String str13 = deleteRequest10.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str15 = deleteRequest14.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.version((long) (short) 100);
        deleteRequest14.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str21 = deleteRequest20.parent();
        org.elasticsearch.index.VersionType versionType22 = deleteRequest20.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest14.versionType(versionType22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.versionType(versionType22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.id("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        java.lang.String str27 = deleteRequest24.parent();
        long long28 = deleteRequest24.primaryTerm();
        java.lang.String str29 = deleteRequest24.id();
        org.elasticsearch.common.unit.TimeValue timeValue30 = deleteRequest24.timeout();
        java.lang.String[] strArray31 = deleteRequest24.indices();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[][][]}" + "'", str13, "delete {[][][]}");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}" + "'", str29, "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.junit.Assert.assertNotNull(timeValue30);
        org.junit.Assert.assertNotNull(strArray31);
    }

    @Test
    public void test3141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3141");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.routing("delete {[][][]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException9 = deleteRequest6.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest6.id("delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}");
        java.lang.String str12 = deleteRequest11.routing();
        org.elasticsearch.action.support.IndicesOptions indicesOptions13 = deleteRequest11.indicesOptions();
        boolean boolean14 = deleteRequest11.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}", "delete {[][][hi!]}", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str26 = deleteRequest25.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest25.id("hi!");
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest28.getParentTask();
        org.elasticsearch.tasks.TaskId taskId30 = deleteRequest28.getParentTask();
        org.elasticsearch.tasks.Task task31 = deleteRequest18.createTask((-1L), "", "hi!", taskId30);
        org.elasticsearch.index.shard.ShardId shardId32 = deleteRequest18.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[][][]}][delete {[][][]}]}", "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}", "delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest37.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest37.index("");
        java.lang.String str42 = deleteRequest37.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest37.index("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue47 = deleteRequest46.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress48 = null;
        deleteRequest46.remoteAddress(transportAddress48);
        java.lang.String str50 = deleteRequest46.index();
        org.elasticsearch.index.VersionType versionType51 = deleteRequest46.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest44.versionType(versionType51);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest36.versionType(versionType51);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest18.versionType(versionType51);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest11.versionType(versionType51);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException56 = deleteRequest55.validate();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy57 = deleteRequest55.getRefreshPolicy();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(actionRequestValidationException9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][][]}" + "'", str12, "delete {[][][]}");
        org.junit.Assert.assertNotNull(indicesOptions13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(taskId30);
        org.junit.Assert.assertNotNull(task31);
        org.junit.Assert.assertNull(shardId32);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(timeValue47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "delete {[null][null][null]}" + "'", str50, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(versionType51);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNull(actionRequestValidationException56);
        org.junit.Assert.assertTrue("'" + refreshPolicy57 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy57.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
    }

    @Test
    public void test3142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3142");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest3.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.timeout(timeValue8);
        java.lang.String str10 = deleteRequest3.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest3.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure13 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[][][hi!]}][null][null]}", (java.lang.Throwable) actionRequestValidationException11, "delete {[][null][null]}");
        java.lang.String str14 = shardFailure13.indexUUID;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting15 = shardFailure13.routing;
        java.lang.Throwable throwable16 = shardFailure13.cause;
        java.lang.String str17 = shardFailure13.indexUUID;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting18 = shardFailure13.routing;
        java.lang.String str19 = shardFailure13.reason;
        java.lang.String str20 = shardFailure13.reason;
        java.lang.String str21 = shardFailure13.reason;
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][null][null]}" + "'", str10, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[][null][null]}" + "'", str14, "delete {[][null][null]}");
        org.junit.Assert.assertNull(shardRouting15);
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable16.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[][null][null]}" + "'", str17, "delete {[][null][null]}");
        org.junit.Assert.assertNull(shardRouting18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str19, "delete {[delete {[][][hi!]}][null][null]}");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str20, "delete {[delete {[][][hi!]}][null][null]}");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str21, "delete {[delete {[][][hi!]}][null][null]}");
    }

    @Test
    public void test3143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3143");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][delete {[null][null][null]}][null]}", "delete {[delete {[][delete {[][][]}][delete {[][][]}]}][delete {[][delete {[null][null][null]}][]}][null]}", "delete {[][][delete {[][null][null]}]}");
    }

    @Test
    public void test3144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3144");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][hi!]}", "delete {[null][null][null]}", "");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy4 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId12 = null;
        org.elasticsearch.tasks.Task task13 = deleteRequest8.createTask(0L, "", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest8.setRefreshPolicy("");
        java.lang.String[] strArray16 = deleteRequest15.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId24 = null;
        org.elasticsearch.tasks.Task task25 = deleteRequest20.createTask(0L, "", "", taskId24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest20.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest27.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest15.consistencyLevel(writeConsistencyLevel28);
        deleteRequest29.setParentTask("hi!", (long) (short) 100);
        org.elasticsearch.index.VersionType versionType33 = deleteRequest29.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest3.versionType(versionType33);
        org.elasticsearch.common.transport.TransportAddress transportAddress35 = deleteRequest34.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy36 = deleteRequest34.getRefreshPolicy();
        org.junit.Assert.assertTrue("'" + refreshPolicy4 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy4.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(task25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(versionType33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNull(transportAddress35);
        org.junit.Assert.assertTrue("'" + refreshPolicy36 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy36.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
    }

    @Test
    public void test3145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3145");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest1.setParentTask("hi!", (long) (short) 1);
        long long5 = deleteRequest1.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest6.index("");
        java.lang.String str11 = deleteRequest6.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest6.index("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue16 = deleteRequest15.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress17 = null;
        deleteRequest15.remoteAddress(transportAddress17);
        java.lang.String str19 = deleteRequest15.index();
        org.elasticsearch.index.VersionType versionType20 = deleteRequest15.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest13.versionType(versionType20);
        org.elasticsearch.index.shard.ShardId shardId22 = deleteRequest21.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.type("delete {[null][null][null]}");
        org.elasticsearch.index.VersionType versionType25 = deleteRequest21.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest1.versionType(versionType25);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-3L) + "'", long5 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[null][null][null]}" + "'", str19, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(versionType20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNull(shardId22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(versionType25);
        org.junit.Assert.assertNotNull(deleteRequest26);
    }

    @Test
    public void test3146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3146");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.version((long) (-1));
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = deleteRequest3.remoteAddress();
        java.lang.String str5 = deleteRequest3.index();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(transportAddress4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[][delete {[][][]}][delete {[][][]}]}" + "'", str5, "delete {[][delete {[][][]}][delete {[][][]}]}");
    }

    @Test
    public void test3147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3147");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId12 = null;
        org.elasticsearch.tasks.Task task13 = deleteRequest8.createTask(0L, "", "", taskId12);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = deleteRequest8.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.setRefreshPolicy(refreshPolicy14);
        java.lang.String str16 = deleteRequest3.index();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest3.setShardId(shardId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.type("delete {[delete {[][null][null]}][null][null]}");
        org.elasticsearch.common.io.stream.StreamInput streamInput21 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest18.readFrom(streamInput21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(transportAddress4);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertTrue("'" + refreshPolicy14 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy14.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
    }

    @Test
    public void test3148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3148");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.setRefreshPolicy("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy10 = deleteRequest6.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId18 = null;
        org.elasticsearch.tasks.Task task19 = deleteRequest14.createTask(0L, "", "", taskId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType22 = deleteRequest14.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest14.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest6.consistencyLevel(writeConsistencyLevel23);
        long long25 = deleteRequest6.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress26 = deleteRequest6.remoteAddress();
        java.lang.String str27 = deleteRequest6.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest6.version((-3L));
        java.lang.String str30 = deleteRequest6.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str35 = deleteRequest34.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest34.id("hi!");
        org.elasticsearch.tasks.TaskId taskId38 = deleteRequest37.getParentTask();
        org.elasticsearch.tasks.TaskId taskId39 = deleteRequest37.getParentTask();
        org.elasticsearch.common.unit.TimeValue timeValue40 = deleteRequest37.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest44.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest44.id("delete {[][][]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException49 = deleteRequest48.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId52 = deleteRequest51.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId60 = null;
        org.elasticsearch.tasks.Task task61 = deleteRequest56.createTask(0L, "", "", taskId60);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest56.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel64 = deleteRequest63.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions65 = deleteRequest63.indicesOptions();
        java.lang.String str66 = deleteRequest63.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str68 = deleteRequest67.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest67.version((long) (short) 100);
        deleteRequest67.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str74 = deleteRequest73.parent();
        org.elasticsearch.index.VersionType versionType75 = deleteRequest73.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest67.versionType(versionType75);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest63.versionType(versionType75);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = deleteRequest51.versionType(versionType75);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = deleteRequest48.versionType(versionType75);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = deleteRequest37.versionType(versionType75);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = deleteRequest6.versionType(versionType75);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest83 = deleteRequest81.version((-1L));
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest85 = deleteRequest81.setRefreshPolicy("delete {[delete {[hi!][][delete {[][][]}]}][delete {[][][]}][delete {[][][]}]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[delete {[hi!][][delete {[][][]}]}][delete {[][][]}][delete {[][][]}]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + refreshPolicy10 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy10.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(task19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-3L) + "'", long25 == (-3L));
        org.junit.Assert.assertNull(transportAddress26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][][hi!]}" + "'", str27, "delete {[][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(taskId38);
        org.junit.Assert.assertNotNull(taskId39);
        org.junit.Assert.assertNotNull(timeValue40);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNull(actionRequestValidationException49);
        org.junit.Assert.assertNull(shardId52);
        org.junit.Assert.assertNotNull(task61);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel64 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel64.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "delete {[][][]}" + "'", str66, "delete {[][][]}");
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(versionType75);
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertNotNull(deleteRequest78);
        org.junit.Assert.assertNotNull(deleteRequest79);
        org.junit.Assert.assertNotNull(deleteRequest80);
        org.junit.Assert.assertNotNull(deleteRequest81);
        org.junit.Assert.assertNotNull(deleteRequest83);
    }

    @Test
    public void test3149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3149");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][hi!]}][null][delete {[][][]}]}");
    }

    @Test
    public void test3150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3150");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.type("delete {[null][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = deleteRequest3.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.version((long) '4');
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy9 = deleteRequest6.getRefreshPolicy();
        java.lang.String str10 = deleteRequest6.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId18 = null;
        org.elasticsearch.tasks.Task task19 = deleteRequest14.createTask(0L, "", "", taskId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType22 = deleteRequest14.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str30 = deleteRequest29.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest29.id("hi!");
        org.elasticsearch.tasks.TaskId taskId33 = deleteRequest32.getParentTask();
        org.elasticsearch.tasks.Task task34 = deleteRequest14.createTask(10L, "delete {[hi!][null][null]}", "delete {[delete {[][][hi!]}][null][null]}", taskId33);
        org.elasticsearch.tasks.TaskId taskId35 = deleteRequest14.getParentTask();
        deleteRequest6.setParentTask(taskId35);
        org.elasticsearch.common.transport.TransportAddress transportAddress37 = null;
        deleteRequest6.remoteAddress(transportAddress37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest6.version((long) ' ');
        java.lang.String str41 = deleteRequest40.routing();
        boolean boolean42 = deleteRequest40.getShouldPersistResult();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(transportAddress4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + refreshPolicy9 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy9.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][delete {[null][null][null]}][null]}" + "'", str10, "delete {[][delete {[null][null][null]}][null]}");
        org.junit.Assert.assertNotNull(task19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(taskId33);
        org.junit.Assert.assertNotNull(task34);
        org.junit.Assert.assertNotNull(taskId35);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test3151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3151");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long2 = deleteRequest1.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.index("");
        boolean boolean5 = deleteRequest1.getShouldPersistResult();
        java.lang.String str6 = deleteRequest1.toString();
        deleteRequest1.primaryTerm((long) '4');
        java.lang.String str9 = deleteRequest1.routing();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest1.setRefreshPolicy("delete {[][][delete {[][delete {[][][hi!]}][delete {[][][]}]}]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[][][delete {[][delete {[][][hi!]}][delete {[][][]}]}]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][null][null]}" + "'", str6, "delete {[][null][null]}");
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test3152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3152");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest10.toString();
        java.lang.String[] strArray12 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str23 = deleteRequest22.id();
        java.lang.String str24 = deleteRequest22.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str26 = deleteRequest25.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest25.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest25.getParentTask();
        deleteRequest22.setParentTask(taskId29);
        deleteRequest18.setParentTask(taskId29);
        deleteRequest14.setParentTask(taskId29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest14.parent("delete {[delete {[][][hi!]}][null][null]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions35 = deleteRequest14.indicesOptions();
        boolean boolean36 = deleteRequest14.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest14.routing("delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.timeout("delete {[hi!][][delete {[hi!][null][null]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[hi!][][delete {[hi!][null][null]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(indicesOptions35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(deleteRequest38);
    }

    @Test
    public void test3153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3153");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = deleteRequest0.remoteAddress();
        long long7 = deleteRequest0.version();
        java.lang.String str8 = deleteRequest0.routing();
        org.elasticsearch.tasks.TaskId taskId9 = deleteRequest0.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.routing("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType21 = deleteRequest20.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress26 = deleteRequest25.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId34 = null;
        org.elasticsearch.tasks.Task task35 = deleteRequest30.createTask(0L, "", "", taskId34);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy36 = deleteRequest30.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest25.setRefreshPolicy(refreshPolicy36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest20.setRefreshPolicy(refreshPolicy36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest45.type("delete {[][][]}");
        java.lang.String str48 = deleteRequest45.routing();
        java.lang.String str49 = deleteRequest45.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str51 = deleteRequest50.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress52 = deleteRequest50.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId53 = deleteRequest50.getParentTask();
        deleteRequest45.setParentTask(taskId53);
        org.elasticsearch.tasks.Task task55 = deleteRequest20.createTask((long) (short) 1, "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}", "delete {[delete {[delete {[][][hi!]}][null][null]}][null][null]}", taskId53);
        org.elasticsearch.tasks.Task task56 = deleteRequest0.createTask(0L, "delete {[][delete {[null][null][null]}][]}", "delete {[][][]}", taskId53);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest0.timeout("delete {[delete {[][][]}][delete {[null][null][null]}][delete {[null][null][null]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[][][]}][delete {[null][null][null]}][delete {[null][null][null]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(transportAddress6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-3L) + "'", long7 == (-3L));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(taskId9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(versionType21);
        org.junit.Assert.assertNull(transportAddress26);
        org.junit.Assert.assertNotNull(task35);
        org.junit.Assert.assertTrue("'" + refreshPolicy36 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy36.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(transportAddress52);
        org.junit.Assert.assertNotNull(taskId53);
        org.junit.Assert.assertNotNull(task55);
        org.junit.Assert.assertNotNull(task56);
    }

    @Test
    public void test3154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3154");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest10.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId13 = null;
        deleteRequest10.setParentTask(taskId13);
        deleteRequest10.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest10.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        java.lang.String str19 = deleteRequest18.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest18.type("hi!");
        java.lang.String str22 = deleteRequest21.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId30 = null;
        org.elasticsearch.tasks.Task task31 = deleteRequest26.createTask(0L, "", "", taskId30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest26.setRefreshPolicy("");
        deleteRequest33.primaryTerm(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest33.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel39 = deleteRequest38.consistencyLevel();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy40 = deleteRequest38.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest37.setRefreshPolicy(refreshPolicy40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest21.setRefreshPolicy(refreshPolicy40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest42.parent("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        org.elasticsearch.tasks.TaskId taskId45 = deleteRequest42.getParentTask();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions12);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(task31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel39 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel39.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + refreshPolicy40 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy40.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNull(taskId45);
    }

    @Test
    public void test3155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3155");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.tasks.TaskId taskId6 = deleteRequest3.getParentTask();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest3.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = null;
        deleteRequest9.remoteAddress(transportAddress11);
        org.elasticsearch.common.unit.TimeValue timeValue13 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest9.timeout(timeValue13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.timeout(timeValue13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str23 = deleteRequest22.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.type("delete {[][][]}");
        java.lang.String str30 = deleteRequest27.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest27.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId40 = null;
        org.elasticsearch.tasks.Task task41 = deleteRequest36.createTask(0L, "", "", taskId40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest36.setRefreshPolicy("");
        java.lang.String str44 = deleteRequest43.toString();
        java.lang.String[] strArray45 = deleteRequest43.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest43.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str56 = deleteRequest55.id();
        java.lang.String str57 = deleteRequest55.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str59 = deleteRequest58.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest58.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId62 = deleteRequest58.getParentTask();
        deleteRequest55.setParentTask(taskId62);
        deleteRequest51.setParentTask(taskId62);
        deleteRequest47.setParentTask(taskId62);
        deleteRequest32.setParentTask(taskId62);
        deleteRequest22.setParentTask(taskId62);
        org.elasticsearch.tasks.Task task68 = deleteRequest15.createTask((long) (short) -1, "delete {[hi!][null][null]}", "hi!", taskId62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest15.index("delete {[][null][null]}");
        java.lang.String[] strArray71 = deleteRequest70.indices();
        java.lang.String str72 = deleteRequest70.parent();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(taskId6);
        org.junit.Assert.assertNull(actionRequestValidationException7);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "delete {[][][]}" + "'", str30, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(task41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "delete {[][][]}" + "'", str44, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(taskId62);
        org.junit.Assert.assertNotNull(task68);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNull(str72);
    }

    @Test
    public void test3156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3156");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long10 = deleteRequest9.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str12 = deleteRequest11.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest14.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest18.getParentTask();
        deleteRequest9.setParentTask(taskId19);
        org.elasticsearch.tasks.Task task21 = deleteRequest3.createTask((long) ' ', "delete {[][][hi!]}", "delete {[][][]}", taskId19);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel22 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest3.type("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.id("");
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.setShardId(shardId27);
        deleteRequest28.primaryTerm((long) 100);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][][]}" + "'", str4, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel22 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel22.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
    }

    @Test
    public void test3157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3157");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str3 = deleteRequest2.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException4 = deleteRequest2.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure6 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][null][null]}", (java.lang.Throwable) actionRequestValidationException4, "delete {[][null][null]}");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting7 = shardFailure6.routing;
        java.lang.Throwable throwable8 = shardFailure6.cause;
        java.lang.String str9 = shardFailure6.indexUUID;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "delete {[null][null][null]}" + "'", str3, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException4);
        org.junit.Assert.assertNull(shardRouting7);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable8.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[][null][null]}" + "'", str9, "delete {[][null][null]}");
    }

    @Test
    public void test3158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3158");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][null][null]}][delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}][delete {[null][delete {[][delete {[hi!][null][null]}][hi!]}][delete {[][][hi!]}]}]}", "delete {[null][delete {[null][null][null]}][null]}", "delete {[delete {[][delete {[null][null][null]}][delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}]}][delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}][]}");
    }

    @Test
    public void test3159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3159");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str7 = deleteRequest6.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest6.getParentTask();
        deleteRequest3.setParentTask(taskId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.consistencyLevel(writeConsistencyLevel14);
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest15.getParentTask();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel17 = deleteRequest15.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest15.index("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel17 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel17.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest19);
    }

    @Test
    public void test3160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3160");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][hi!]}][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue2 = deleteRequest1.timeout();
        boolean boolean3 = deleteRequest1.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.index("delete {[][][hi!]}");
        java.lang.String str7 = deleteRequest6.parent();
        java.lang.String str8 = deleteRequest6.type();
        long long9 = deleteRequest6.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest6.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest1.timeout(timeValue10);
        java.lang.String str12 = deleteRequest11.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress17 = deleteRequest16.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId25 = null;
        org.elasticsearch.tasks.Task task26 = deleteRequest21.createTask(0L, "", "", taskId25);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy27 = deleteRequest21.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest16.setRefreshPolicy(refreshPolicy27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest16.id("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest16.id("delete {[][][]}");
        org.elasticsearch.common.unit.TimeValue timeValue33 = deleteRequest32.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest11.timeout(timeValue33);
        org.junit.Assert.assertNotNull(timeValue2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(transportAddress17);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertTrue("'" + refreshPolicy27 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy27.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(timeValue33);
        org.junit.Assert.assertNotNull(deleteRequest34);
    }

    @Test
    public void test3161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3161");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress2 = deleteRequest0.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId3 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.setShardId(shardId3);
        java.lang.String str5 = deleteRequest0.id();
        java.lang.String str6 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str11 = deleteRequest10.id();
        java.lang.String str12 = deleteRequest10.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str14 = deleteRequest13.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest13.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest13.getParentTask();
        deleteRequest10.setParentTask(taskId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = deleteRequest19.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel21 = deleteRequest19.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest10.consistencyLevel(writeConsistencyLevel21);
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest22.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.index.VersionType versionType28 = deleteRequest27.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.versionType(versionType28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest0.versionType(versionType28);
        java.lang.String str31 = deleteRequest30.routing();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(transportAddress2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel20 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel20.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel21 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel21.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNull(str31);
    }

    @Test
    public void test3162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3162");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        deleteRequest0.setParentTask("delete {[][][hi!]}", (long) '#');
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest0.validate();
        long long6 = deleteRequest0.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue7 = deleteRequest0.timeout();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.timeout("delete {[delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[delete {[][][hi!]}][null][delete {[][][]}]}][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[delete {[][][hi!]}][null][delete {[][][]}]}][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(timeValue7);
    }

    @Test
    public void test3163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3163");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        java.lang.String str9 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str11 = deleteRequest10.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.routing("delete {[][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = deleteRequest15.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str21 = deleteRequest20.id();
        java.lang.String str22 = deleteRequest20.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str24 = deleteRequest23.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest23.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest23.getParentTask();
        deleteRequest20.setParentTask(taskId27);
        deleteRequest15.setParentTask(taskId27);
        deleteRequest3.setParentTask(taskId27);
        org.elasticsearch.index.shard.ShardId shardId31 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.index.VersionType versionType36 = deleteRequest35.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest3.versionType(versionType36);
        long long38 = deleteRequest3.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest3.type("");
        org.elasticsearch.index.shard.IndexShard indexShard41 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult42 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest3, indexShard41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(transportAddress16);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(taskId27);
        org.junit.Assert.assertNull(shardId31);
        org.junit.Assert.assertNotNull(versionType36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest40);
    }

    @Test
    public void test3164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3164");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.routing("delete {[][][]}");
        java.lang.String str9 = deleteRequest8.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId17 = null;
        org.elasticsearch.tasks.Task task18 = deleteRequest13.createTask(0L, "", "", taskId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest13.setRefreshPolicy("");
        java.lang.String str21 = deleteRequest20.toString();
        java.lang.String[] strArray22 = deleteRequest20.indices();
        deleteRequest20.primaryTerm(0L);
        org.elasticsearch.common.unit.TimeValue timeValue25 = deleteRequest20.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest8.timeout(timeValue25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest8.version(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str33 = deleteRequest32.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue36 = deleteRequest35.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest32.timeout(timeValue36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest37.id("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest39.version((long) 10);
        org.elasticsearch.action.support.IndicesOptions indicesOptions42 = deleteRequest39.indicesOptions();
        java.lang.String str43 = deleteRequest39.type();
        deleteRequest39.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest39.type("delete {[delete {[hi!][null][null]}][null][null]}");
        org.elasticsearch.tasks.TaskId taskId48 = deleteRequest47.getParentTask();
        org.elasticsearch.tasks.Task task49 = deleteRequest8.createTask((long) (byte) 10, "delete {[][][hi!]}", "delete {[][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][delete {[][][]}]}", taskId48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest53.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType56 = deleteRequest55.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress61 = deleteRequest60.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId69 = null;
        org.elasticsearch.tasks.Task task70 = deleteRequest65.createTask(0L, "", "", taskId69);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy71 = deleteRequest65.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest60.setRefreshPolicy(refreshPolicy71);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest55.setRefreshPolicy(refreshPolicy71);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest55.id("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        boolean boolean76 = deleteRequest55.getShouldPersistResult();
        org.elasticsearch.index.VersionType versionType77 = deleteRequest55.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = deleteRequest8.versionType(versionType77);
        org.elasticsearch.index.shard.ShardId shardId79 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = deleteRequest8.setShardId(shardId79);
        org.elasticsearch.index.shard.IndexShard indexShard81 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete82 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest8, indexShard81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[][][]}" + "'", str21, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(timeValue25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(timeValue36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(indicesOptions42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(taskId48);
        org.junit.Assert.assertNotNull(task49);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(versionType56);
        org.junit.Assert.assertNull(transportAddress61);
        org.junit.Assert.assertNotNull(task70);
        org.junit.Assert.assertTrue("'" + refreshPolicy71 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy71.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertNotNull(deleteRequest73);
        org.junit.Assert.assertNotNull(deleteRequest75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(versionType77);
        org.junit.Assert.assertNotNull(deleteRequest78);
        org.junit.Assert.assertNotNull(deleteRequest80);
    }

    @Test
    public void test3165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3165");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = deleteRequest0.remoteAddress();
        long long7 = deleteRequest0.version();
        boolean boolean8 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue11 = deleteRequest10.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = null;
        deleteRequest10.remoteAddress(transportAddress12);
        java.lang.String str14 = deleteRequest10.index();
        org.elasticsearch.index.VersionType versionType15 = deleteRequest10.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest0.versionType(versionType15);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.setShardId(shardId17);
        java.lang.String str19 = deleteRequest16.getDescription();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(transportAddress6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-3L) + "'", long7 == (-3L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(timeValue11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[null][null][null]}" + "'", str14, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(versionType15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[null][null][null]}" + "'", str19, "delete {[null][null][null]}");
    }

    @Test
    public void test3166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3166");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        deleteRequest0.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.type("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.version((long) '#');
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest7.setShardId(shardId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.index("delete {[delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}][delete {[hi!][null][null]}][hi!]}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
    }

    @Test
    public void test3167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3167");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][null][null]}", "", "delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId14 = null;
        org.elasticsearch.tasks.Task task15 = deleteRequest10.createTask(0L, "", "", taskId14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest10.setRefreshPolicy("");
        java.lang.String str18 = deleteRequest17.toString();
        java.lang.String[] strArray19 = deleteRequest17.indices();
        java.lang.String[] strArray20 = deleteRequest17.indices();
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest17.getParentTask();
        org.elasticsearch.tasks.Task task22 = deleteRequest3.createTask((long) 100, "delete {[delete {[hi!][null][null]}][null][null]}", "delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}", taskId21);
        long long23 = deleteRequest3.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest3.routing("delete {[null][delete {[][delete {[hi!][null][null]}][hi!]}][delete {[][][hi!]}]}");
        org.elasticsearch.common.unit.TimeValue timeValue26 = deleteRequest3.timeout();
        org.junit.Assert.assertNotNull(task15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[][][]}" + "'", str18, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-3L) + "'", long23 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(timeValue26);
    }

    @Test
    public void test3168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3168");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = deleteRequest0.remoteAddress();
        long long7 = deleteRequest0.version();
        boolean boolean8 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue11 = deleteRequest10.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = null;
        deleteRequest10.remoteAddress(transportAddress12);
        java.lang.String str14 = deleteRequest10.index();
        org.elasticsearch.index.VersionType versionType15 = deleteRequest10.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest0.versionType(versionType15);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.setShardId(shardId17);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel19 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest16.consistencyLevel(writeConsistencyLevel19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest16.type("hi!");
        java.lang.String str23 = deleteRequest16.id();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException24 = deleteRequest16.validate();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(transportAddress6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-3L) + "'", long7 == (-3L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(timeValue11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[null][null][null]}" + "'", str14, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(versionType15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(actionRequestValidationException24);
    }

    @Test
    public void test3169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3169");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("delete {[][][]}");
        java.lang.String str10 = deleteRequest7.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId22 = null;
        org.elasticsearch.tasks.Task task23 = deleteRequest18.createTask(0L, "", "", taskId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest18.setRefreshPolicy("");
        java.lang.String[] strArray26 = deleteRequest25.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId34 = null;
        org.elasticsearch.tasks.Task task35 = deleteRequest30.createTask(0L, "", "", taskId34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest30.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = deleteRequest37.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest25.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue42 = deleteRequest41.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress43 = null;
        deleteRequest41.remoteAddress(transportAddress43);
        org.elasticsearch.common.unit.TimeValue timeValue45 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest41.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest25.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest14.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest3.timeout(timeValue45);
        org.elasticsearch.action.support.IndicesOptions indicesOptions50 = deleteRequest49.indicesOptions();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel51 = deleteRequest49.consistencyLevel();
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest49.setShardId(shardId52);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest55.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue60 = deleteRequest59.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest55.timeout(timeValue60);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str63 = deleteRequest62.parent();
        org.elasticsearch.index.VersionType versionType64 = deleteRequest62.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest55.versionType(versionType64);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest49.versionType(versionType64);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][hi!]}", "delete {[null][null][null]}", "");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy71 = deleteRequest70.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest49.setRefreshPolicy(refreshPolicy71);
        java.lang.String str73 = deleteRequest72.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest72.id("delete {[][hi!][delete {[null][null][null]}]}");
        java.lang.String str76 = deleteRequest75.parent();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][][]}" + "'", str10, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(task35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel38 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel38.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(timeValue42);
        org.junit.Assert.assertNotNull(timeValue45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(indicesOptions50);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel51 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel51.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(timeValue60);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(versionType64);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertTrue("'" + refreshPolicy71 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy71.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(deleteRequest75);
        org.junit.Assert.assertNull(str76);
    }

    @Test
    public void test3170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3170");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.setShardId(shardId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.type("delete {[hi!][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel19 = deleteRequest16.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest13.consistencyLevel(writeConsistencyLevel19);
        java.lang.String[] strArray21 = deleteRequest13.indices();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel19 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel19.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(strArray21);
    }

    @Test
    public void test3171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3171");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str7 = deleteRequest6.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException8 = deleteRequest6.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure10 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "hi!", (java.lang.Throwable) actionRequestValidationException8, "delete {[][][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure12 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", (java.lang.Throwable) actionRequestValidationException8, "delete {[][][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure14 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][delete {[][][]}][delete {[][][]}]}", (java.lang.Throwable) actionRequestValidationException8, "");
        java.lang.Throwable throwable15 = shardFailure14.cause;
        java.lang.String str16 = shardFailure14.indexUUID;
        java.lang.Class<?> wildcardClass17 = shardFailure14.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[null][null][null]}" + "'", str7, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException8);
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable15.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test3172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3172");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.index.VersionType versionType4 = deleteRequest3.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId12 = null;
        org.elasticsearch.tasks.Task task13 = deleteRequest8.createTask(0L, "", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest8.setRefreshPolicy("");
        java.lang.String str16 = deleteRequest15.toString();
        java.lang.String str17 = deleteRequest15.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.type("delete {[null][null][null]}");
        java.lang.String str22 = deleteRequest19.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest19.index("");
        org.elasticsearch.common.unit.TimeValue timeValue25 = deleteRequest24.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest15.timeout(timeValue25);
        org.elasticsearch.index.VersionType versionType27 = deleteRequest26.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest3.versionType(versionType27);
        java.lang.String str29 = deleteRequest28.parent();
        org.junit.Assert.assertNotNull(versionType4);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[][][]}" + "'", str16, "delete {[][][]}");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[][][]}" + "'", str17, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(timeValue25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(versionType27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNull(str29);
    }

    @Test
    public void test3173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3173");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str7 = deleteRequest6.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest6.getParentTask();
        deleteRequest3.setParentTask(taskId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.consistencyLevel(writeConsistencyLevel14);
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest15.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.index.VersionType versionType21 = deleteRequest20.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.versionType(versionType21);
        java.lang.String str23 = deleteRequest15.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId31 = null;
        org.elasticsearch.tasks.Task task32 = deleteRequest27.createTask(0L, "", "", taskId31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest27.setRefreshPolicy("");
        java.lang.String[] strArray35 = deleteRequest34.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId43 = null;
        org.elasticsearch.tasks.Task task44 = deleteRequest39.createTask(0L, "", "", taskId43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest39.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel47 = deleteRequest46.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest34.consistencyLevel(writeConsistencyLevel47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue51 = deleteRequest50.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress52 = null;
        deleteRequest50.remoteAddress(transportAddress52);
        org.elasticsearch.common.unit.TimeValue timeValue54 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest50.timeout(timeValue54);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest34.timeout(timeValue54);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy57 = deleteRequest56.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest15.setRefreshPolicy(refreshPolicy57);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy59 = deleteRequest15.getRefreshPolicy();
        java.lang.String str60 = deleteRequest15.index();
        java.lang.String str61 = deleteRequest15.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest15.parent("delete {[delete {[][null][null]}][null][null]}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertNotNull(versionType21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(task32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(task44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel47 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel47.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(timeValue51);
        org.junit.Assert.assertNotNull(timeValue54);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertTrue("'" + refreshPolicy57 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy57.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertTrue("'" + refreshPolicy59 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy59.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(deleteRequest63);
    }

    @Test
    public void test3174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3174");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel1 = deleteRequest0.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel2 = deleteRequest0.consistencyLevel();
        deleteRequest0.primaryTerm((long) (short) 10);
        long long5 = deleteRequest0.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId16 = null;
        org.elasticsearch.tasks.Task task17 = deleteRequest12.createTask(0L, "", "", taskId16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest12.setRefreshPolicy("");
        java.lang.String str20 = deleteRequest19.toString();
        java.lang.String[] strArray21 = deleteRequest19.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest19.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str32 = deleteRequest31.id();
        java.lang.String str33 = deleteRequest31.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str35 = deleteRequest34.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest34.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId38 = deleteRequest34.getParentTask();
        deleteRequest31.setParentTask(taskId38);
        deleteRequest27.setParentTask(taskId38);
        deleteRequest23.setParentTask(taskId38);
        org.elasticsearch.tasks.Task task42 = deleteRequest0.createTask((-1L), "delete {[][delete {[][][]}][delete {[][][]}]}", "delete {[][][hi!]}", taskId38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest0.parent("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel45 = deleteRequest44.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest44.routing("delete {[delete {[null][null][null]}][][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel1 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel1.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel2 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel2.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-3L) + "'", long5 == (-3L));
        org.junit.Assert.assertNotNull(task17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[][][]}" + "'", str20, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(taskId38);
        org.junit.Assert.assertNotNull(task42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel45 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel45.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest47);
    }

    @Test
    public void test3175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3175");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException9 = deleteRequest3.validate();
        java.lang.String str10 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str15 = deleteRequest14.id();
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.setShardId(shardId16);
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest14.setShardId(shardId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.routing("delete {[][][hi!]}");
        java.lang.String str24 = deleteRequest23.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest23.id("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.version((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str30 = deleteRequest29.parent();
        deleteRequest29.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest29.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest34.type("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long39 = deleteRequest38.primaryTerm();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel40 = deleteRequest38.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest36.consistencyLevel(writeConsistencyLevel40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest28.consistencyLevel(writeConsistencyLevel40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest3.consistencyLevel(writeConsistencyLevel40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest43.index("delete {[delete {[][delete {[delete {[][][hi!]}][null][null]}][]}][null][null]}");
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNull(actionRequestValidationException9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][][]}" + "'", str10, "delete {[][][]}");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel40 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel40.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest45);
    }

    @Test
    public void test3176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3176");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str10 = deleteRequest9.id();
        java.lang.String str11 = deleteRequest9.index();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest9.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest0.createTask((-1L), "delete {[][][hi!]}", "delete {[][delete {[][][]}][delete {[][][]}]}", taskId12);
        deleteRequest0.setParentTask("delete {[delete {[][][hi!]}][null][null]}", (long) 10);
        java.lang.String str17 = deleteRequest0.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest0.routing("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest0.type("delete {[][delete {[hi!][null][null]}][hi!]}");
        java.lang.String str22 = deleteRequest0.index();
        boolean boolean23 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.common.unit.TimeValue timeValue24 = deleteRequest0.timeout();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[null][null][null]}" + "'", str17, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(timeValue24);
    }

    @Test
    public void test3177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3177");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest7.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.version((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.id("delete {[delete {[][][hi!]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest7.id("delete {[hi!][null][null]}");
        java.lang.String[] strArray17 = deleteRequest7.indices();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest7.setShardId(shardId18);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(taskId8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(deleteRequest19);
    }

    @Test
    public void test3178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3178");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.id("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.version((long) 10);
        org.elasticsearch.common.transport.TransportAddress transportAddress10 = deleteRequest7.remoteAddress();
        long long11 = deleteRequest7.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest7.version((-3L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest7.routing("delete {[][delete {[null][null][null]}][null]}");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput16 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest15.writeTo(streamOutput16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNull(transportAddress10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
    }

    @Test
    public void test3179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3179");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str7 = deleteRequest6.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest6.getParentTask();
        deleteRequest3.setParentTask(taskId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.consistencyLevel(writeConsistencyLevel14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.type("delete {[delete {[][][hi!]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest17.routing("delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest17.type("delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str25 = deleteRequest24.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest24.version((long) (short) 100);
        deleteRequest24.primaryTerm(100L);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy30 = deleteRequest24.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest17.setRefreshPolicy(refreshPolicy30);
        org.elasticsearch.common.transport.TransportAddress transportAddress32 = null;
        deleteRequest31.remoteAddress(transportAddress32);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertTrue("'" + refreshPolicy30 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy30.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest31);
    }

    @Test
    public void test3180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3180");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[][][hi!]}][null][null]}", throwable2, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}");
        java.lang.String str5 = shardFailure4.indexUUID;
        java.lang.String str6 = shardFailure4.reason;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}" + "'", str5, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str6, "delete {[delete {[][][hi!]}][null][null]}");
    }

    @Test
    public void test3181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3181");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest3.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.timeout(timeValue8);
        java.lang.String str10 = deleteRequest3.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest3.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure13 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][null][null]}", (java.lang.Throwable) actionRequestValidationException11, "");
        java.lang.Throwable throwable14 = shardFailure13.cause;
        java.lang.Throwable throwable15 = shardFailure13.cause;
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][null][null]}" + "'", str10, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException11);
        org.junit.Assert.assertNotNull(throwable14);
        org.junit.Assert.assertEquals(throwable14.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable14.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable14.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable15.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
    }

    @Test
    public void test3182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3182");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str5 = deleteRequest4.parent();
        deleteRequest4.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest4.setRefreshPolicy("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException10 = deleteRequest9.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure12 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", (java.lang.Throwable) actionRequestValidationException10, "delete {[][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure14 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[][][]}][delete {[null][null][null]}][null]}", (java.lang.Throwable) actionRequestValidationException10, "delete {[delete {[][][hi!]}][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[null][null][null]}]}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(actionRequestValidationException10);
    }

    @Test
    public void test3183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3183");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}", "delete {[][null][null]}", "delete {[][hi!][delete {[null][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.version((long) ' ');
        java.lang.String str8 = deleteRequest5.toString();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}][delete {[][null][null]}][delete {[][hi!][delete {[null][null][null]}]}]}" + "'", str8, "delete {[delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}][delete {[][null][null]}][delete {[][hi!][delete {[null][null][null]}]}]}");
    }

    @Test
    public void test3184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3184");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId12 = null;
        org.elasticsearch.tasks.Task task13 = deleteRequest8.createTask(0L, "", "", taskId12);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = deleteRequest8.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.setRefreshPolicy(refreshPolicy14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.id("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest19.setParentTask("hi!", (long) (short) 1);
        long long23 = deleteRequest19.version();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest19.setShardId(shardId24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest26.routing("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.common.unit.TimeValue timeValue31 = deleteRequest30.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest19.timeout(timeValue31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest17.timeout(timeValue31);
        org.elasticsearch.common.unit.TimeValue timeValue34 = deleteRequest17.timeout();
        org.elasticsearch.common.unit.TimeValue timeValue35 = deleteRequest17.timeout();
        boolean boolean36 = deleteRequest17.getShouldPersistResult();
        org.junit.Assert.assertNull(transportAddress4);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertTrue("'" + refreshPolicy14 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy14.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-3L) + "'", long23 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(timeValue31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(timeValue34);
        org.junit.Assert.assertNotNull(timeValue35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test3185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3185");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("delete {[][][]}");
        java.lang.String str10 = deleteRequest7.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId22 = null;
        org.elasticsearch.tasks.Task task23 = deleteRequest18.createTask(0L, "", "", taskId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest18.setRefreshPolicy("");
        java.lang.String[] strArray26 = deleteRequest25.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId34 = null;
        org.elasticsearch.tasks.Task task35 = deleteRequest30.createTask(0L, "", "", taskId34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest30.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = deleteRequest37.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest25.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue42 = deleteRequest41.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress43 = null;
        deleteRequest41.remoteAddress(transportAddress43);
        org.elasticsearch.common.unit.TimeValue timeValue45 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest41.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest25.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest14.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest3.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest3.parent("delete {[][delete {[delete {[][][hi!]}][null][null]}][]}");
        java.lang.String str52 = deleteRequest3.parent();
        java.lang.String str53 = deleteRequest3.getDescription();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][][]}" + "'", str10, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(task35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel38 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel38.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(timeValue42);
        org.junit.Assert.assertNotNull(timeValue45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "delete {[][delete {[delete {[][][hi!]}][null][null]}][]}" + "'", str52, "delete {[][delete {[delete {[][][hi!]}][null][null]}][]}");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "delete {[null][null][null]}" + "'", str53, "delete {[null][null][null]}");
    }

    @Test
    public void test3186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3186");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str7 = deleteRequest6.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest6.getParentTask();
        deleteRequest3.setParentTask(taskId10);
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        long long15 = deleteRequest3.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.type("delete {[hi!][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel21 = deleteRequest18.consistencyLevel();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest18.setShardId(shardId22);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel24 = deleteRequest23.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest3.consistencyLevel(writeConsistencyLevel24);
        boolean boolean26 = deleteRequest3.getShouldPersistResult();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel21 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel21.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel24 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel24.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test3187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3187");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[][][]}]}");
    }

    @Test
    public void test3188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3188");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue2 = deleteRequest1.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress3 = null;
        deleteRequest1.remoteAddress(transportAddress3);
        org.elasticsearch.common.unit.TimeValue timeValue5 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest1.timeout(timeValue5);
        java.lang.String str7 = deleteRequest1.type();
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest1.setShardId(shardId8);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy10 = deleteRequest1.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.type("delete {[][][hi!]}");
        java.lang.String str17 = deleteRequest14.getDescription();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy18 = deleteRequest14.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest1.setRefreshPolicy(refreshPolicy18);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy20 = deleteRequest1.getRefreshPolicy();
        org.junit.Assert.assertNotNull(timeValue2);
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + refreshPolicy10 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy10.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[][delete {[][][hi!]}][delete {[][][]}]}" + "'", str17, "delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.junit.Assert.assertTrue("'" + refreshPolicy18 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy18.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + refreshPolicy20 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy20.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
    }

    @Test
    public void test3189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3189");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("delete {[][][]}");
        java.lang.String str10 = deleteRequest7.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId22 = null;
        org.elasticsearch.tasks.Task task23 = deleteRequest18.createTask(0L, "", "", taskId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest18.setRefreshPolicy("");
        java.lang.String[] strArray26 = deleteRequest25.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId34 = null;
        org.elasticsearch.tasks.Task task35 = deleteRequest30.createTask(0L, "", "", taskId34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest30.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = deleteRequest37.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest25.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue42 = deleteRequest41.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress43 = null;
        deleteRequest41.remoteAddress(transportAddress43);
        org.elasticsearch.common.unit.TimeValue timeValue45 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest41.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest25.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest14.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest3.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest3.type("delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress52 = null;
        deleteRequest3.remoteAddress(transportAddress52);
        org.elasticsearch.index.shard.ShardId shardId54 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest3.setShardId(shardId54);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest55.version((long) 0);
        java.lang.String str58 = deleteRequest55.parent();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][][]}" + "'", str10, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(task35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel38 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel38.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(timeValue42);
        org.junit.Assert.assertNotNull(timeValue45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNull(str58);
    }

    @Test
    public void test3190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3190");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][delete {[null][null][delete {[][][hi!]}]}][]}", "delete {[delete {[][][]}][delete {[null][null][null]}][null]}", "delete {[][][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}]}");
    }

    @Test
    public void test3191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3191");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue2 = deleteRequest1.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress3 = null;
        deleteRequest1.remoteAddress(transportAddress3);
        java.lang.String str5 = deleteRequest1.index();
        org.elasticsearch.index.VersionType versionType6 = deleteRequest1.versionType();
        org.elasticsearch.index.shard.ShardId shardId7 = deleteRequest1.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest1.version(0L);
        long long10 = deleteRequest1.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.type("delete {[hi!][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel16 = deleteRequest13.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel17 = deleteRequest13.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest1.consistencyLevel(writeConsistencyLevel17);
        org.junit.Assert.assertNotNull(timeValue2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[null][null][null]}" + "'", str5, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel16 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel16.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel17 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel17.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest18);
    }

    @Test
    public void test3192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3192");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][hi!]}", "delete {[hi!][null][null]}", "delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId6 = deleteRequest5.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId14 = null;
        org.elasticsearch.tasks.Task task15 = deleteRequest10.createTask(0L, "", "", taskId14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest10.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel18 = deleteRequest17.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions19 = deleteRequest17.indicesOptions();
        java.lang.String str20 = deleteRequest17.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str22 = deleteRequest21.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.version((long) (short) 100);
        deleteRequest21.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str28 = deleteRequest27.parent();
        org.elasticsearch.index.VersionType versionType29 = deleteRequest27.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest21.versionType(versionType29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest17.versionType(versionType29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest5.versionType(versionType29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest3.versionType(versionType29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest35.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue40 = deleteRequest39.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest35.timeout(timeValue40);
        java.lang.String str42 = deleteRequest35.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str50 = deleteRequest49.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest54.type("delete {[][][]}");
        java.lang.String str57 = deleteRequest54.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest54.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId67 = null;
        org.elasticsearch.tasks.Task task68 = deleteRequest63.createTask(0L, "", "", taskId67);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest63.setRefreshPolicy("");
        java.lang.String str71 = deleteRequest70.toString();
        java.lang.String[] strArray72 = deleteRequest70.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest70.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest82 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str83 = deleteRequest82.id();
        java.lang.String str84 = deleteRequest82.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest85 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str86 = deleteRequest85.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest88 = deleteRequest85.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId89 = deleteRequest85.getParentTask();
        deleteRequest82.setParentTask(taskId89);
        deleteRequest78.setParentTask(taskId89);
        deleteRequest74.setParentTask(taskId89);
        deleteRequest59.setParentTask(taskId89);
        deleteRequest49.setParentTask(taskId89);
        org.elasticsearch.tasks.Task task95 = deleteRequest35.createTask((long) 100, "delete {[][][hi!]}", "hi!", taskId89);
        deleteRequest33.setParentTask(taskId89);
        org.elasticsearch.common.io.stream.StreamInput streamInput97 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest33.readFrom(streamInput97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId6);
        org.junit.Assert.assertNotNull(task15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel18 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel18.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[][][]}" + "'", str20, "delete {[][][]}");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(versionType29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(timeValue40);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "delete {[][][]}" + "'", str57, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(task68);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "delete {[][][]}" + "'", str71, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "" + "'", str83, "");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "" + "'", str84, "");
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertNotNull(deleteRequest88);
        org.junit.Assert.assertNotNull(taskId89);
        org.junit.Assert.assertNotNull(task95);
    }

    @Test
    public void test3193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3193");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel1 = deleteRequest0.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel2 = deleteRequest0.consistencyLevel();
        deleteRequest0.primaryTerm((long) (short) 10);
        long long5 = deleteRequest0.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId16 = null;
        org.elasticsearch.tasks.Task task17 = deleteRequest12.createTask(0L, "", "", taskId16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest12.setRefreshPolicy("");
        java.lang.String str20 = deleteRequest19.toString();
        java.lang.String[] strArray21 = deleteRequest19.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest19.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str32 = deleteRequest31.id();
        java.lang.String str33 = deleteRequest31.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str35 = deleteRequest34.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest34.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId38 = deleteRequest34.getParentTask();
        deleteRequest31.setParentTask(taskId38);
        deleteRequest27.setParentTask(taskId38);
        deleteRequest23.setParentTask(taskId38);
        org.elasticsearch.tasks.Task task42 = deleteRequest0.createTask((-1L), "delete {[][delete {[][][]}][delete {[][][]}]}", "delete {[][][hi!]}", taskId38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest0.parent("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel45 = deleteRequest44.consistencyLevel();
        deleteRequest44.setParentTask("delete {[delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}][][]}", 100L);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel1 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel1.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel2 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel2.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-3L) + "'", long5 == (-3L));
        org.junit.Assert.assertNotNull(task17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[][][]}" + "'", str20, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(taskId38);
        org.junit.Assert.assertNotNull(task42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel45 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel45.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test3194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3194");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException2 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest4.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue9 = deleteRequest8.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest4.timeout(timeValue9);
        java.lang.String str11 = deleteRequest4.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str19 = deleteRequest18.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.type("delete {[][][]}");
        java.lang.String str26 = deleteRequest23.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest23.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId36 = null;
        org.elasticsearch.tasks.Task task37 = deleteRequest32.createTask(0L, "", "", taskId36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest32.setRefreshPolicy("");
        java.lang.String str40 = deleteRequest39.toString();
        java.lang.String[] strArray41 = deleteRequest39.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest39.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str52 = deleteRequest51.id();
        java.lang.String str53 = deleteRequest51.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str55 = deleteRequest54.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest54.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId58 = deleteRequest54.getParentTask();
        deleteRequest51.setParentTask(taskId58);
        deleteRequest47.setParentTask(taskId58);
        deleteRequest43.setParentTask(taskId58);
        deleteRequest28.setParentTask(taskId58);
        deleteRequest18.setParentTask(taskId58);
        org.elasticsearch.tasks.Task task64 = deleteRequest4.createTask((long) 100, "delete {[][][hi!]}", "hi!", taskId58);
        deleteRequest0.setParentTask(taskId58);
        org.elasticsearch.index.shard.ShardId shardId66 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest0.setShardId(shardId66);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest67.index("delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}");
        java.lang.String str70 = deleteRequest69.type();
        java.lang.String str71 = deleteRequest69.getDescription();
        long long72 = deleteRequest69.version();
        org.elasticsearch.index.shard.IndexShard indexShard73 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult74 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest69, indexShard73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "delete {[null][null][null]}" + "'", str1, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException2);
        org.junit.Assert.assertNotNull(timeValue9);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "delete {[][][]}" + "'", str26, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(task37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "delete {[][][]}" + "'", str40, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(taskId58);
        org.junit.Assert.assertNotNull(task64);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "delete {[delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][null][null]}" + "'", str71, "delete {[delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][null][null]}");
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + (-3L) + "'", long72 == (-3L));
    }

    @Test
    public void test3195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3195");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest7.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.type("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest10.id("delete {[hi!][][delete {[][][]}]}");
        java.lang.String str17 = deleteRequest16.type();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(taskId8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[][][hi!]}" + "'", str17, "delete {[][][hi!]}");
    }

    @Test
    public void test3196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3196");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest10.toString();
        java.lang.String[] strArray12 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.index("");
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest14.timeout();
        org.elasticsearch.index.VersionType versionType16 = deleteRequest14.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest14.index("delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.id("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId28 = null;
        org.elasticsearch.tasks.Task task29 = deleteRequest24.createTask(0L, "", "", taskId28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest24.setRefreshPolicy("");
        java.lang.String str32 = deleteRequest24.index();
        java.lang.String str33 = deleteRequest24.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest35.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue40 = deleteRequest39.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest35.timeout(timeValue40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest24.timeout(timeValue40);
        long long43 = deleteRequest42.primaryTerm();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy44 = deleteRequest42.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest20.setRefreshPolicy(refreshPolicy44);
        java.lang.String[] strArray46 = deleteRequest45.indices();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput47 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest45.writeTo(streamOutput47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(versionType16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(task29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(timeValue40);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 0L + "'", long43 == 0L);
        org.junit.Assert.assertTrue("'" + refreshPolicy44 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy44.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(strArray46);
    }

    @Test
    public void test3197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3197");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue2 = deleteRequest1.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress3 = null;
        deleteRequest1.remoteAddress(transportAddress3);
        java.lang.String str5 = deleteRequest1.index();
        org.elasticsearch.index.VersionType versionType6 = deleteRequest1.versionType();
        org.elasticsearch.index.shard.ShardId shardId7 = deleteRequest1.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest1.version(0L);
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest1.setShardId(shardId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest1.version((long) (short) -1);
        org.junit.Assert.assertNotNull(timeValue2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[null][null][null]}" + "'", str5, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
    }

    @Test
    public void test3198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3198");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.parent("delete {[][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest1.setShardId(shardId4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.id("delete {[][delete {[null][null][null]}][]}");
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest5.setShardId(shardId8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str17 = deleteRequest16.id();
        org.elasticsearch.common.transport.TransportAddress transportAddress18 = deleteRequest16.remoteAddress();
        org.elasticsearch.index.VersionType versionType19 = deleteRequest16.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str24 = deleteRequest23.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest23.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.routing("delete {[][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress29 = deleteRequest28.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str34 = deleteRequest33.id();
        java.lang.String str35 = deleteRequest33.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str37 = deleteRequest36.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest36.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId40 = deleteRequest36.getParentTask();
        deleteRequest33.setParentTask(taskId40);
        deleteRequest28.setParentTask(taskId40);
        org.elasticsearch.tasks.Task task43 = deleteRequest16.createTask((long) 0, "delete {[null][null][null]}", "delete {[delete {[delete {[][][hi!]}][null][null]}][null][null]}", taskId40);
        org.elasticsearch.tasks.Task task44 = deleteRequest5.createTask(32L, "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][null][null]}", "delete {[delete {[null][null][null]}][null][null]}", taskId40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest5.id("delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[][delete {[][null][null]}][delete {[][][]}]}]}");
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(transportAddress18);
        org.junit.Assert.assertNotNull(versionType19);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNull(transportAddress29);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(taskId40);
        org.junit.Assert.assertNotNull(task43);
        org.junit.Assert.assertNotNull(task44);
        org.junit.Assert.assertNotNull(deleteRequest46);
    }

    @Test
    public void test3199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3199");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType16 = deleteRequest15.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress21 = deleteRequest20.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId29 = null;
        org.elasticsearch.tasks.Task task30 = deleteRequest25.createTask(0L, "", "", taskId29);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy31 = deleteRequest25.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest20.setRefreshPolicy(refreshPolicy31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest15.setRefreshPolicy(refreshPolicy31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest9.setRefreshPolicy(refreshPolicy31);
        java.lang.String str35 = deleteRequest9.id();
        java.lang.String str36 = deleteRequest9.id();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel37 = deleteRequest9.consistencyLevel();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest9.setRefreshPolicy("delete {[][delete {[delete {[][null][null]}][][]}][delete {[null][delete {[null][null][null]}][null]}]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[][delete {[delete {[][null][null]}][][]}][delete {[null][delete {[null][null][null]}][null]}]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(versionType16);
        org.junit.Assert.assertNull(transportAddress21);
        org.junit.Assert.assertNotNull(task30);
        org.junit.Assert.assertTrue("'" + refreshPolicy31 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy31.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel37 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel37.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test3200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3200");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = deleteRequest3.remoteAddress();
        org.elasticsearch.index.VersionType versionType6 = deleteRequest3.versionType();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest3.validate();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.setRefreshPolicy("delete {[null][delete {[null][null][delete {[][][hi!]}]}][]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[null][delete {[null][null][delete {[][][hi!]}]}][]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(transportAddress5);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertNull(actionRequestValidationException7);
    }

    @Test
    public void test3201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3201");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("delete {[][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = deleteRequest5.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.index("delete {[][][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.setShardId(shardId9);
        java.lang.String[] strArray11 = deleteRequest5.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.parent("delete {[][][]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy15 = deleteRequest12.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest5.setRefreshPolicy(refreshPolicy15);
        org.elasticsearch.common.transport.TransportAddress transportAddress17 = null;
        deleteRequest5.remoteAddress(transportAddress17);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(transportAddress6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertTrue("'" + refreshPolicy15 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy15.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest16);
    }

    @Test
    public void test3202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3202");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long10 = deleteRequest9.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str12 = deleteRequest11.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest14.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest18.getParentTask();
        deleteRequest9.setParentTask(taskId19);
        org.elasticsearch.tasks.Task task21 = deleteRequest3.createTask((long) ' ', "delete {[][][hi!]}", "delete {[][][]}", taskId19);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel22 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest3.type("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.id("");
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.setShardId(shardId27);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.timeout("delete {[delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[delete {[][][hi!]}][null][delete {[][][]}]}][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[delete {[][][hi!]}][null][delete {[][][]}]}][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][][]}" + "'", str4, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel22 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel22.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
    }

    @Test
    public void test3203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3203");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.setShardId(shardId2);
        java.lang.String str4 = deleteRequest1.routing();
        java.lang.String str5 = deleteRequest1.type();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy6 = deleteRequest1.getRefreshPolicy();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + refreshPolicy6 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy6.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
    }

    @Test
    public void test3204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3204");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][hi!]}", "delete {[null][null][null]}", "");
        boolean boolean4 = deleteRequest3.getShouldPersistResult();
        java.lang.String str5 = deleteRequest3.routing();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test3205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3205");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.setRefreshPolicy("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy10 = deleteRequest6.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId18 = null;
        org.elasticsearch.tasks.Task task19 = deleteRequest14.createTask(0L, "", "", taskId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType22 = deleteRequest14.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest14.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest6.consistencyLevel(writeConsistencyLevel23);
        org.elasticsearch.index.shard.ShardId shardId25 = deleteRequest24.shardId();
        org.elasticsearch.index.shard.ShardId shardId26 = deleteRequest24.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest24.parent("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.version((long) '4');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest34.type("delete {[][][]}");
        java.lang.String str37 = deleteRequest34.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest34.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest39.parent("delete {[][][]}");
        java.lang.String str42 = deleteRequest41.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][hi!]}", "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId54 = null;
        org.elasticsearch.tasks.Task task55 = deleteRequest50.createTask(0L, "", "", taskId54);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel56 = deleteRequest50.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest46.consistencyLevel(writeConsistencyLevel56);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest41.consistencyLevel(writeConsistencyLevel56);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest28.consistencyLevel(writeConsistencyLevel56);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest59.type("delete {[][delete {[hi!][null][null]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest59.routing("delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.index.VersionType versionType64 = deleteRequest63.versionType();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + refreshPolicy10 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy10.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(task19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNull(shardId25);
        org.junit.Assert.assertNull(shardId26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "delete {[][][]}" + "'", str37, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "delete {[][][]}" + "'", str42, "delete {[][][]}");
        org.junit.Assert.assertNotNull(task55);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel56 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel56.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(versionType64);
    }

    @Test
    public void test3206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3206");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId20 = null;
        org.elasticsearch.tasks.Task task21 = deleteRequest16.createTask(0L, "", "", taskId20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest16.setRefreshPolicy("");
        deleteRequest23.primaryTerm(1L);
        java.lang.String str26 = deleteRequest23.routing();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy27 = deleteRequest23.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest3.setRefreshPolicy(refreshPolicy27);
        org.elasticsearch.index.shard.ShardId shardId29 = deleteRequest28.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str31 = deleteRequest30.parent();
        deleteRequest30.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest30.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest35.type("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long40 = deleteRequest39.primaryTerm();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel41 = deleteRequest39.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest37.consistencyLevel(writeConsistencyLevel41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest28.consistencyLevel(writeConsistencyLevel41);
        org.elasticsearch.tasks.TaskId taskId44 = deleteRequest28.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest28.type("delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest28.index("delete {[][delete {[null][null][null]}][delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest48.id("delete {[][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest48.routing("delete {[delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[delete {[][][hi!]}][null][delete {[][][]}]}][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}]}");
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][][]}" + "'", str12, "delete {[][][]}");
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + refreshPolicy27 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy27.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNull(shardId29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel41 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel41.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(taskId44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest52);
    }

    @Test
    public void test3207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3207");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = deleteRequest3.getRefreshPolicy();
        long long15 = deleteRequest3.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType22 = deleteRequest21.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress27 = deleteRequest26.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId35 = null;
        org.elasticsearch.tasks.Task task36 = deleteRequest31.createTask(0L, "", "", taskId35);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy37 = deleteRequest31.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest26.setRefreshPolicy(refreshPolicy37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest21.setRefreshPolicy(refreshPolicy37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel41 = deleteRequest40.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel42 = deleteRequest40.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest21.consistencyLevel(writeConsistencyLevel42);
        long long44 = deleteRequest21.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest46.setShardId(shardId47);
        deleteRequest46.primaryTerm((long) 1);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy51 = deleteRequest46.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest21.setRefreshPolicy(refreshPolicy51);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest52.index("hi!");
        boolean boolean55 = deleteRequest52.getShouldPersistResult();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy56 = deleteRequest52.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest3.setRefreshPolicy(refreshPolicy56);
        org.elasticsearch.index.shard.ShardId shardId58 = deleteRequest57.shardId();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(transportAddress13);
        org.junit.Assert.assertTrue("'" + refreshPolicy14 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy14.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertNull(transportAddress27);
        org.junit.Assert.assertNotNull(task36);
        org.junit.Assert.assertTrue("'" + refreshPolicy37 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy37.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel41 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel41.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel42 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel42.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-3L) + "'", long44 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertTrue("'" + refreshPolicy51 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy51.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + refreshPolicy56 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy56.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNull(shardId58);
    }

    @Test
    public void test3208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3208");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.tasks.TaskId taskId6 = deleteRequest3.getParentTask();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest3.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = null;
        deleteRequest9.remoteAddress(transportAddress11);
        org.elasticsearch.common.unit.TimeValue timeValue13 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest9.timeout(timeValue13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.timeout(timeValue13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str23 = deleteRequest22.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.type("delete {[][][]}");
        java.lang.String str30 = deleteRequest27.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest27.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId40 = null;
        org.elasticsearch.tasks.Task task41 = deleteRequest36.createTask(0L, "", "", taskId40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest36.setRefreshPolicy("");
        java.lang.String str44 = deleteRequest43.toString();
        java.lang.String[] strArray45 = deleteRequest43.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest43.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str56 = deleteRequest55.id();
        java.lang.String str57 = deleteRequest55.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str59 = deleteRequest58.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest58.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId62 = deleteRequest58.getParentTask();
        deleteRequest55.setParentTask(taskId62);
        deleteRequest51.setParentTask(taskId62);
        deleteRequest47.setParentTask(taskId62);
        deleteRequest32.setParentTask(taskId62);
        deleteRequest22.setParentTask(taskId62);
        org.elasticsearch.tasks.Task task68 = deleteRequest15.createTask((long) (short) -1, "delete {[hi!][null][null]}", "hi!", taskId62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest15.index("delete {[][null][null]}");
        java.lang.String[] strArray71 = deleteRequest70.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest70.id("delete {[][][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}]}");
        java.lang.String str74 = deleteRequest70.toString();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(taskId6);
        org.junit.Assert.assertNull(actionRequestValidationException7);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "delete {[][][]}" + "'", str30, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(task41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "delete {[][][]}" + "'", str44, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(taskId62);
        org.junit.Assert.assertNotNull(task68);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(deleteRequest73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "delete {[delete {[][null][null]}][][delete {[][][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}]}]}" + "'", str74, "delete {[delete {[][null][null]}][][delete {[][][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}]}]}");
    }

    @Test
    public void test3209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3209");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = deleteRequest0.remoteAddress();
        long long7 = deleteRequest0.version();
        java.lang.String str8 = deleteRequest0.type();
        java.lang.String str9 = deleteRequest0.type();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(transportAddress6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-3L) + "'", long7 == (-3L));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test3210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3210");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = deleteRequest3.remoteAddress();
        java.lang.String str5 = deleteRequest3.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId16 = null;
        org.elasticsearch.tasks.Task task17 = deleteRequest12.createTask(0L, "", "", taskId16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest12.setRefreshPolicy("");
        java.lang.String[] strArray20 = deleteRequest19.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId28 = null;
        org.elasticsearch.tasks.Task task29 = deleteRequest24.createTask(0L, "", "", taskId28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest24.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel32 = deleteRequest31.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest19.consistencyLevel(writeConsistencyLevel32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue36 = deleteRequest35.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress37 = null;
        deleteRequest35.remoteAddress(transportAddress37);
        org.elasticsearch.common.unit.TimeValue timeValue39 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest35.timeout(timeValue39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest19.timeout(timeValue39);
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest41.setShardId(shardId42);
        org.elasticsearch.tasks.TaskId taskId44 = deleteRequest41.getParentTask();
        org.elasticsearch.tasks.Task task45 = deleteRequest3.createTask((long) '#', "delete {[][][]}", "delete {[][][hi!]}", taskId44);
        org.elasticsearch.index.shard.IndexShard indexShard46 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult47 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest3, indexShard46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(transportAddress4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(task17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(task29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel32 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel32.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(timeValue36);
        org.junit.Assert.assertNotNull(timeValue39);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(taskId44);
        org.junit.Assert.assertNotNull(task45);
    }

    @Test
    public void test3211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3211");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long10 = deleteRequest9.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str12 = deleteRequest11.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest14.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest18.getParentTask();
        deleteRequest9.setParentTask(taskId19);
        org.elasticsearch.tasks.Task task21 = deleteRequest3.createTask((long) ' ', "delete {[][][hi!]}", "delete {[][][]}", taskId19);
        long long22 = deleteRequest3.version();
        java.lang.String str23 = deleteRequest3.toString();
        org.elasticsearch.index.shard.ShardId shardId24 = deleteRequest3.shardId();
        long long25 = deleteRequest3.version();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][][]}" + "'", str4, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-3L) + "'", long22 == (-3L));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[][][]}" + "'", str23, "delete {[][][]}");
        org.junit.Assert.assertNull(shardId24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-3L) + "'", long25 == (-3L));
    }

    @Test
    public void test3212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3212");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        deleteRequest0.setParentTask("delete {[][][hi!]}", (long) '#');
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest0.validate();
        long long6 = deleteRequest0.primaryTerm();
        deleteRequest0.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str13 = deleteRequest12.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.id("hi!");
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest15.getParentTask();
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest15.getParentTask();
        org.elasticsearch.common.unit.TimeValue timeValue18 = deleteRequest15.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest0.timeout(timeValue18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long22 = deleteRequest21.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.index("");
        boolean boolean25 = deleteRequest21.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest21.version((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue28 = deleteRequest21.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest0.timeout(timeValue28);
        org.elasticsearch.action.support.IndicesOptions indicesOptions30 = deleteRequest0.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId31 = deleteRequest0.getParentTask();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(timeValue18);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(timeValue28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(indicesOptions30);
        org.junit.Assert.assertNotNull(taskId31);
    }

    @Test
    public void test3213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3213");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.setShardId(shardId12);
        long long14 = deleteRequest10.version();
        java.lang.String[] strArray15 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str20 = deleteRequest19.id();
        org.elasticsearch.common.transport.TransportAddress transportAddress21 = deleteRequest19.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest19.setShardId(shardId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType30 = deleteRequest29.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest23.versionType(versionType30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest10.versionType(versionType30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest10.parent("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest34.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str41 = deleteRequest40.id();
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest40.setShardId(shardId42);
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest40.setShardId(shardId44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest40.setRefreshPolicy("");
        org.elasticsearch.common.transport.TransportAddress transportAddress48 = null;
        deleteRequest47.remoteAddress(transportAddress48);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel50 = deleteRequest47.consistencyLevel();
        org.elasticsearch.index.shard.ShardId shardId51 = deleteRequest47.shardId();
        boolean boolean52 = deleteRequest47.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest47.index("delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId62 = null;
        org.elasticsearch.tasks.Task task63 = deleteRequest58.createTask(0L, "", "", taskId62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest58.setRefreshPolicy("");
        java.lang.String[] strArray66 = deleteRequest65.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId74 = null;
        org.elasticsearch.tasks.Task task75 = deleteRequest70.createTask(0L, "", "", taskId74);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest70.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel78 = deleteRequest77.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = deleteRequest65.consistencyLevel(writeConsistencyLevel78);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue82 = deleteRequest81.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress83 = null;
        deleteRequest81.remoteAddress(transportAddress83);
        org.elasticsearch.common.unit.TimeValue timeValue85 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest86 = deleteRequest81.timeout(timeValue85);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = deleteRequest65.timeout(timeValue85);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest89 = deleteRequest87.parent("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest93 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][hi!]}][null][null]}", "delete {[][][]}", "");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel94 = deleteRequest93.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest95 = deleteRequest89.consistencyLevel(writeConsistencyLevel94);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy96 = deleteRequest89.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest97 = deleteRequest54.setRefreshPolicy(refreshPolicy96);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest98 = deleteRequest34.setRefreshPolicy(refreshPolicy96);
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-3L) + "'", long14 == (-3L));
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNull(transportAddress21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(versionType30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel50 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel50.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(shardId51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(task63);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(task75);
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel78 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel78.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest79);
        org.junit.Assert.assertNotNull(timeValue82);
        org.junit.Assert.assertNotNull(timeValue85);
        org.junit.Assert.assertNotNull(deleteRequest86);
        org.junit.Assert.assertNotNull(deleteRequest87);
        org.junit.Assert.assertNotNull(deleteRequest89);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel94 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel94.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest95);
        org.junit.Assert.assertTrue("'" + refreshPolicy96 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy96.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(deleteRequest97);
        org.junit.Assert.assertNotNull(deleteRequest98);
    }

    @Test
    public void test3214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3214");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.tasks.TaskId taskId6 = deleteRequest3.getParentTask();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        boolean boolean9 = deleteRequest3.getShouldPersistResult();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(taskId6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test3215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3215");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.type("delete {[null][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = deleteRequest3.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.version((long) '4');
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy9 = deleteRequest6.getRefreshPolicy();
        java.lang.String str10 = deleteRequest6.getDescription();
        org.elasticsearch.common.unit.TimeValue timeValue11 = deleteRequest6.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest6.version(52L);
        java.lang.String str14 = deleteRequest13.routing();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(transportAddress4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + refreshPolicy9 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy9.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][delete {[null][null][null]}][null]}" + "'", str10, "delete {[][delete {[null][null][null]}][null]}");
        org.junit.Assert.assertNotNull(timeValue11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test3216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3216");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][hi!]}", "delete {[hi!][null][null]}", "delete {[null][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        java.lang.String str6 = deleteRequest3.type();
        java.lang.String str7 = deleteRequest3.getDescription();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[hi!][null][null]}" + "'", str6, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}" + "'", str7, "delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}");
    }

    @Test
    public void test3217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3217");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest9.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue14 = deleteRequest13.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest9.timeout(timeValue14);
        java.lang.String str16 = deleteRequest9.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException17 = deleteRequest9.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure19 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[delete {[][][hi!]}][null][null]}", (java.lang.Throwable) actionRequestValidationException17, "delete {[][null][null]}");
        java.lang.String str20 = shardFailure19.indexUUID;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting21 = shardFailure19.routing;
        java.lang.Throwable throwable22 = shardFailure19.cause;
        java.lang.String str23 = shardFailure19.reason;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting24 = shardFailure19.routing;
        java.lang.Throwable throwable25 = shardFailure19.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure27 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[][null][null]}][][]}", throwable25, "delete {[delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][delete {[hi!][null][null]}][hi!]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure29 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[hi!][null][null]}][null][delete {[][][hi!]}]}", throwable25, "delete {[][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][delete {[][][]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure31 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}][null][null]}", throwable25, "delete {[][][delete {[delete {[][null][null]}][][]}]}");
        org.junit.Assert.assertNotNull(timeValue14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[][null][null]}" + "'", str16, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[][null][null]}" + "'", str20, "delete {[][null][null]}");
        org.junit.Assert.assertNull(shardRouting21);
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable22.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str23, "delete {[delete {[][][hi!]}][null][null]}");
        org.junit.Assert.assertNull(shardRouting24);
        org.junit.Assert.assertNotNull(throwable25);
        org.junit.Assert.assertEquals(throwable25.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable25.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable25.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
    }

    @Test
    public void test3218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3218");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType6 = deleteRequest5.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = deleteRequest10.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy21 = deleteRequest15.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest10.setRefreshPolicy(refreshPolicy21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest5.setRefreshPolicy(refreshPolicy21);
        java.lang.String str24 = deleteRequest5.getDescription();
        java.lang.String str25 = deleteRequest5.type();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest5.timeout("delete {[][delete {[delete {[][][hi!]}][null][null]}][]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[][delete {[delete {[][][hi!]}][null][null]}][]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertNull(transportAddress11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertTrue("'" + refreshPolicy21 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy21.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "delete {[][delete {[][][hi!]}][delete {[][][]}]}" + "'", str24, "delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[][][hi!]}" + "'", str25, "delete {[][][hi!]}");
    }

    @Test
    public void test3219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3219");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str11 = deleteRequest10.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException12 = deleteRequest10.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure14 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "hi!", (java.lang.Throwable) actionRequestValidationException12, "delete {[][][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure16 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "", (java.lang.Throwable) actionRequestValidationException12, "delete {[][][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure18 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[][delete {[][][hi!]}][delete {[][][]}]}", (java.lang.Throwable) actionRequestValidationException12, "delete {[][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure20 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException12, "delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure22 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}", (java.lang.Throwable) actionRequestValidationException12, "delete {[delete {[][null][null]}][null][null]}");
        java.lang.String str23 = shardFailure22.indexUUID;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting24 = shardFailure22.routing;
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[null][null][null]}" + "'", str11, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException12);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[delete {[][null][null]}][null][null]}" + "'", str23, "delete {[delete {[][null][null]}][null][null]}");
        org.junit.Assert.assertNull(shardRouting24);
    }

    @Test
    public void test3220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3220");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue2 = deleteRequest1.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress3 = null;
        deleteRequest1.remoteAddress(transportAddress3);
        java.lang.String str5 = deleteRequest1.index();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException6 = deleteRequest1.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str11 = deleteRequest10.id();
        java.lang.String str12 = deleteRequest10.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.type("delete {[][][]}");
        java.lang.String str15 = deleteRequest14.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel18 = deleteRequest17.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest1.consistencyLevel(writeConsistencyLevel18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId27 = null;
        org.elasticsearch.tasks.Task task28 = deleteRequest23.createTask(0L, "", "", taskId27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest23.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType31 = deleteRequest23.versionType();
        java.lang.String str32 = deleteRequest23.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress33 = deleteRequest23.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy34 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest23.setRefreshPolicy(refreshPolicy34);
        long long36 = deleteRequest23.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue37 = deleteRequest23.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest39.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue44 = deleteRequest43.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest39.timeout(timeValue44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str47 = deleteRequest46.parent();
        org.elasticsearch.index.VersionType versionType48 = deleteRequest46.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest39.versionType(versionType48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest23.versionType(versionType48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest19.versionType(versionType48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId59 = null;
        org.elasticsearch.tasks.Task task60 = deleteRequest55.createTask(0L, "", "", taskId59);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest55.setRefreshPolicy("");
        java.lang.String[] strArray63 = deleteRequest62.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId71 = null;
        org.elasticsearch.tasks.Task task72 = deleteRequest67.createTask(0L, "", "", taskId71);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest67.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel75 = deleteRequest74.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest62.consistencyLevel(writeConsistencyLevel75);
        deleteRequest76.setParentTask("hi!", (long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel81 = deleteRequest80.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel82 = deleteRequest80.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest83 = deleteRequest76.consistencyLevel(writeConsistencyLevel82);
        org.elasticsearch.common.unit.TimeValue timeValue84 = deleteRequest83.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest85 = deleteRequest19.timeout(timeValue84);
        org.elasticsearch.index.VersionType versionType86 = deleteRequest85.versionType();
        org.junit.Assert.assertNotNull(timeValue2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[null][null][null]}" + "'", str5, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[][][]}" + "'", str15, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel18 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel18.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(task28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(versionType31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(transportAddress33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertNotNull(timeValue37);
        org.junit.Assert.assertNotNull(timeValue44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(versionType48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(task60);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(task72);
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel75 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel75.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel81 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel81.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel82 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel82.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest83);
        org.junit.Assert.assertNotNull(timeValue84);
        org.junit.Assert.assertNotNull(deleteRequest85);
        org.junit.Assert.assertNotNull(versionType86);
    }

    @Test
    public void test3221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3221");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}", "delete {[][delete {[][][]}][delete {[][][]}]}", "delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.id("delete {[][delete {[hi!][null][null]}][hi!]}");
        java.lang.String str6 = deleteRequest5.id();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][delete {[hi!][null][null]}][hi!]}" + "'", str6, "delete {[][delete {[hi!][null][null]}][hi!]}");
    }

    @Test
    public void test3222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3222");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest5.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest5.timeout(timeValue10);
        java.lang.String str12 = deleteRequest5.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException13 = deleteRequest5.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure15 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][null][null]}", (java.lang.Throwable) actionRequestValidationException13, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure17 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "hi!", (java.lang.Throwable) actionRequestValidationException13, "");
        java.lang.String str18 = shardFailure17.indexUUID;
        java.lang.String str19 = shardFailure17.indexUUID;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting20 = shardFailure17.routing;
        java.lang.Throwable throwable21 = shardFailure17.cause;
        java.lang.Throwable throwable22 = shardFailure17.cause;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting23 = shardFailure17.routing;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting24 = shardFailure17.routing;
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][null][null]}" + "'", str12, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException13);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNull(shardRouting20);
        org.junit.Assert.assertNotNull(throwable21);
        org.junit.Assert.assertEquals(throwable21.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable21.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable21.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable22.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertNull(shardRouting23);
        org.junit.Assert.assertNull(shardRouting24);
    }

    @Test
    public void test3223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3223");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.index("delete {[][][hi!]}");
        java.lang.String str5 = deleteRequest4.parent();
        java.lang.String str6 = deleteRequest4.type();
        long long7 = deleteRequest4.primaryTerm();
        long long8 = deleteRequest4.version();
        java.lang.String str9 = deleteRequest4.type();
        deleteRequest4.primaryTerm(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest4.index("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        java.lang.String str14 = deleteRequest13.toString();
        java.lang.String str15 = deleteRequest13.getDescription();
        long long16 = deleteRequest13.version();
        org.elasticsearch.common.unit.TimeValue timeValue17 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest13.timeout(timeValue17);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel19 = deleteRequest18.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest1.consistencyLevel(writeConsistencyLevel19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.parent("delete {[][delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[][][]}]}][delete {[null][null][null]}]}");
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-3L) + "'", long8 == (-3L));
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}" + "'", str14, "delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}" + "'", str15, "delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}");
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-3L) + "'", long16 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel19 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel19.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
    }

    @Test
    public void test3224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3224");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][hi!]}", "delete {[null][null][null]}", "");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy4 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId12 = null;
        org.elasticsearch.tasks.Task task13 = deleteRequest8.createTask(0L, "", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest8.setRefreshPolicy("");
        java.lang.String[] strArray16 = deleteRequest15.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId24 = null;
        org.elasticsearch.tasks.Task task25 = deleteRequest20.createTask(0L, "", "", taskId24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest20.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest27.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest15.consistencyLevel(writeConsistencyLevel28);
        deleteRequest29.setParentTask("hi!", (long) (short) 100);
        org.elasticsearch.index.VersionType versionType33 = deleteRequest29.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest3.versionType(versionType33);
        long long35 = deleteRequest3.version();
        org.junit.Assert.assertTrue("'" + refreshPolicy4 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy4.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(task25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(versionType33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-3L) + "'", long35 == (-3L));
    }

    @Test
    public void test3225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3225");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}", "delete {[hi!][null][null]}", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.id("delete {[delete {[][null][null]}][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.routing("delete {[null][delete {[][delete {[hi!][null][null]}][hi!]}][delete {[][][hi!]}]}");
        java.lang.String[] strArray8 = deleteRequest7.indices();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(strArray8);
    }

    @Test
    public void test3226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3226");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel1 = deleteRequest0.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel2 = deleteRequest0.consistencyLevel();
        deleteRequest0.primaryTerm((long) (short) 10);
        long long5 = deleteRequest0.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId16 = null;
        org.elasticsearch.tasks.Task task17 = deleteRequest12.createTask(0L, "", "", taskId16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest12.setRefreshPolicy("");
        java.lang.String str20 = deleteRequest19.toString();
        java.lang.String[] strArray21 = deleteRequest19.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest19.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str32 = deleteRequest31.id();
        java.lang.String str33 = deleteRequest31.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str35 = deleteRequest34.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest34.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId38 = deleteRequest34.getParentTask();
        deleteRequest31.setParentTask(taskId38);
        deleteRequest27.setParentTask(taskId38);
        deleteRequest23.setParentTask(taskId38);
        org.elasticsearch.tasks.Task task42 = deleteRequest0.createTask((-1L), "delete {[][delete {[][][]}][delete {[][][]}]}", "delete {[][][hi!]}", taskId38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest0.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest44.type("delete {[delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}][delete {[hi!][null][null]}][hi!]}");
        long long47 = deleteRequest46.version();
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel1 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel1.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel2 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel2.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-3L) + "'", long5 == (-3L));
        org.junit.Assert.assertNotNull(task17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[][][]}" + "'", str20, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(taskId38);
        org.junit.Assert.assertNotNull(task42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-3L) + "'", long47 == (-3L));
    }

    @Test
    public void test3227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3227");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.type("delete {[hi!][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest2.consistencyLevel();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest2.setShardId(shardId6);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel8 = deleteRequest7.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str10 = deleteRequest9.parent();
        org.elasticsearch.index.VersionType versionType11 = deleteRequest9.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest9.version((long) 'a');
        org.elasticsearch.index.shard.ShardId shardId14 = deleteRequest13.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.type("delete {[null][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress19 = deleteRequest18.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest18.setShardId(shardId20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.version((long) '4');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId31 = null;
        org.elasticsearch.tasks.Task task32 = deleteRequest27.createTask(0L, "", "", taskId31);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel33 = deleteRequest27.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress38 = deleteRequest37.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId46 = null;
        org.elasticsearch.tasks.Task task47 = deleteRequest42.createTask(0L, "", "", taskId46);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy48 = deleteRequest42.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest37.setRefreshPolicy(refreshPolicy48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest27.setRefreshPolicy(refreshPolicy48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest21.setRefreshPolicy(refreshPolicy48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest13.setRefreshPolicy(refreshPolicy48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest7.setRefreshPolicy(refreshPolicy48);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest53.setRefreshPolicy("delete {[null][delete {[][delete {[hi!][null][null]}][hi!]}][delete {[][][hi!]}]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[null][delete {[][delete {[hi!][null][null]}][hi!]}][delete {[][][hi!]}]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel8 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel8.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNull(shardId14);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNull(transportAddress19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(task32);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel33 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel33.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(transportAddress38);
        org.junit.Assert.assertNotNull(task47);
        org.junit.Assert.assertTrue("'" + refreshPolicy48 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy48.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest53);
    }

    @Test
    public void test3228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3228");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long10 = deleteRequest9.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str12 = deleteRequest11.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest14.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest18.getParentTask();
        deleteRequest9.setParentTask(taskId19);
        org.elasticsearch.tasks.Task task21 = deleteRequest3.createTask((long) ' ', "delete {[][][hi!]}", "delete {[][][]}", taskId19);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel22 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest3.type("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.id("");
        org.elasticsearch.common.transport.TransportAddress transportAddress27 = null;
        deleteRequest24.remoteAddress(transportAddress27);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException29 = deleteRequest24.validate();
        org.elasticsearch.index.shard.IndexShard indexShard30 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete31 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest24, indexShard30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][][]}" + "'", str4, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel22 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel22.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(actionRequestValidationException29);
    }

    @Test
    public void test3229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3229");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        java.lang.String str9 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str11 = deleteRequest10.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.routing("delete {[][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = deleteRequest15.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str21 = deleteRequest20.id();
        java.lang.String str22 = deleteRequest20.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str24 = deleteRequest23.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest23.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest23.getParentTask();
        deleteRequest20.setParentTask(taskId27);
        deleteRequest15.setParentTask(taskId27);
        deleteRequest3.setParentTask(taskId27);
        org.elasticsearch.index.shard.ShardId shardId31 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.index.VersionType versionType36 = deleteRequest35.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest3.versionType(versionType36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest3.index("delete {[delete {[][][hi!]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest3.routing("delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput42 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.writeTo(streamOutput42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(transportAddress16);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(taskId27);
        org.junit.Assert.assertNull(shardId31);
        org.junit.Assert.assertNotNull(versionType36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest41);
    }

    @Test
    public void test3230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3230");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = deleteRequest3.remoteAddress();
        java.lang.String str5 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.index("delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[][][]}]}");
        org.junit.Assert.assertNull(transportAddress4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(deleteRequest7);
    }

    @Test
    public void test3231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3231");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}", "delete {[hi!][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel4 = deleteRequest3.consistencyLevel();
        long long5 = deleteRequest3.primaryTerm();
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = deleteRequest3.remoteAddress();
        org.elasticsearch.common.unit.TimeValue timeValue7 = deleteRequest3.timeout();
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel4 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel4.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNull(transportAddress6);
        org.junit.Assert.assertNotNull(timeValue7);
    }

    @Test
    public void test3232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3232");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.index("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        deleteRequest10.setParentTask("delete {[null][null][null]}", (long) (short) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest10.index("delete {[hi!][][delete {[][][]}]}");
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest15.getParentTask();
        java.lang.String str17 = deleteRequest15.type();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest15.setShardId(shardId18);
        org.elasticsearch.common.transport.TransportAddress transportAddress20 = deleteRequest19.remoteAddress();
        deleteRequest19.primaryTerm((long) '4');
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[][][]}" + "'", str17, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNull(transportAddress20);
    }

    @Test
    public void test3233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3233");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long2 = deleteRequest1.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.index("");
        long long5 = deleteRequest1.version();
        java.lang.String str6 = deleteRequest1.index();
        org.elasticsearch.index.shard.ShardId shardId7 = deleteRequest1.shardId();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-3L) + "'", long5 == (-3L));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(shardId7);
    }

    @Test
    public void test3234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3234");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest10.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId13 = null;
        deleteRequest10.setParentTask(taskId13);
        deleteRequest10.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest10.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        java.lang.String str19 = deleteRequest18.routing();
        deleteRequest18.setParentTask("delete {[delete {[][][hi!]}][null][null]}", 10L);
        java.lang.String str23 = deleteRequest18.index();
        org.elasticsearch.tasks.TaskId taskId24 = deleteRequest18.getParentTask();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions12);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(taskId24);
    }

    @Test
    public void test3235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3235");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.setShardId(shardId4);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[][delete {[][][hi!]}][]}", deleteRequest5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
    }

    @Test
    public void test3236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3236");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress2 = deleteRequest0.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId3 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.setShardId(shardId3);
        java.lang.String str5 = deleteRequest0.id();
        org.elasticsearch.index.shard.IndexShard indexShard6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete7 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest0, indexShard6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(transportAddress2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test3237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3237");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.setRefreshPolicy("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy10 = deleteRequest6.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId18 = null;
        org.elasticsearch.tasks.Task task19 = deleteRequest14.createTask(0L, "", "", taskId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType22 = deleteRequest14.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest14.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest6.consistencyLevel(writeConsistencyLevel23);
        org.elasticsearch.index.shard.ShardId shardId25 = deleteRequest24.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest24.version((long) (short) 1);
        org.elasticsearch.index.VersionType versionType28 = deleteRequest27.versionType();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy29 = deleteRequest27.getRefreshPolicy();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + refreshPolicy10 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy10.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(task19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNull(shardId25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertTrue("'" + refreshPolicy29 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy29.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
    }

    @Test
    public void test3238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3238");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}", "delete {[][][hi!]}", "hi!");
        org.elasticsearch.index.VersionType versionType4 = deleteRequest3.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.type("delete {[null][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = deleteRequest8.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest8.setShardId(shardId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.version((long) '4');
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = deleteRequest11.getRefreshPolicy();
        java.lang.String str15 = deleteRequest11.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId23 = null;
        org.elasticsearch.tasks.Task task24 = deleteRequest19.createTask(0L, "", "", taskId23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest19.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType27 = deleteRequest19.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str35 = deleteRequest34.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest34.id("hi!");
        org.elasticsearch.tasks.TaskId taskId38 = deleteRequest37.getParentTask();
        org.elasticsearch.tasks.Task task39 = deleteRequest19.createTask(10L, "delete {[hi!][null][null]}", "delete {[delete {[][][hi!]}][null][null]}", taskId38);
        org.elasticsearch.tasks.TaskId taskId40 = deleteRequest19.getParentTask();
        deleteRequest11.setParentTask(taskId40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId49 = null;
        org.elasticsearch.tasks.Task task50 = deleteRequest45.createTask(0L, "", "", taskId49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest45.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType53 = deleteRequest45.versionType();
        java.lang.String str54 = deleteRequest45.parent();
        org.elasticsearch.index.shard.ShardId shardId55 = deleteRequest45.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest56.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest56.index("");
        java.lang.String str61 = deleteRequest56.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest56.id("delete {[delete {[hi!][null][null]}][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel64 = deleteRequest63.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest45.consistencyLevel(writeConsistencyLevel64);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str70 = deleteRequest69.id();
        org.elasticsearch.index.shard.ShardId shardId71 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest69.setShardId(shardId71);
        org.elasticsearch.index.shard.ShardId shardId73 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest69.setShardId(shardId73);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest69.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str81 = deleteRequest80.id();
        org.elasticsearch.common.unit.TimeValue timeValue82 = deleteRequest80.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest83 = deleteRequest69.timeout(timeValue82);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = deleteRequest65.timeout(timeValue82);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest85 = deleteRequest11.timeout(timeValue82);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest86 = deleteRequest3.timeout(timeValue82);
        org.elasticsearch.common.io.stream.StreamInput streamInput87 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.readFrom(streamInput87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(versionType4);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(transportAddress9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + refreshPolicy14 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy14.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[][delete {[null][null][null]}][null]}" + "'", str15, "delete {[][delete {[null][null][null]}][null]}");
        org.junit.Assert.assertNotNull(task24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(versionType27);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(taskId38);
        org.junit.Assert.assertNotNull(task39);
        org.junit.Assert.assertNotNull(taskId40);
        org.junit.Assert.assertNotNull(task50);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(versionType53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(shardId55);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel64 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel64.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
        org.junit.Assert.assertNotNull(timeValue82);
        org.junit.Assert.assertNotNull(deleteRequest83);
        org.junit.Assert.assertNotNull(deleteRequest84);
        org.junit.Assert.assertNotNull(deleteRequest85);
        org.junit.Assert.assertNotNull(deleteRequest86);
    }

    @Test
    public void test3239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3239");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel1 = deleteRequest0.consistencyLevel();
        java.lang.String str2 = deleteRequest0.parent();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel3 = deleteRequest0.consistencyLevel();
        boolean boolean4 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.type("delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}");
        deleteRequest6.setParentTask("delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}", (long) (short) 100);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel1 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel1.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel3 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel3.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(deleteRequest6);
    }

    @Test
    public void test3240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3240");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][null][null]}", "delete {[null][delete {[hi!][null][null]}][null]}", "delete {[][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][][]}]}");
    }

    @Test
    public void test3241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3241");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest10.toString();
        java.lang.String[] strArray12 = deleteRequest10.indices();
        deleteRequest10.primaryTerm(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest10.routing("delete {[null][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.setShardId(shardId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.type("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId35 = null;
        org.elasticsearch.tasks.Task task36 = deleteRequest31.createTask(0L, "", "", taskId35);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy37 = deleteRequest31.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId45 = null;
        org.elasticsearch.tasks.Task task46 = deleteRequest41.createTask(0L, "", "", taskId45);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy47 = deleteRequest41.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest31.setRefreshPolicy(refreshPolicy47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest27.setRefreshPolicy(refreshPolicy47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest27.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        deleteRequest51.setParentTask("delete {[][][hi!]}", (long) (byte) 100);
        org.elasticsearch.common.transport.TransportAddress transportAddress55 = null;
        deleteRequest51.remoteAddress(transportAddress55);
        org.elasticsearch.index.VersionType versionType57 = deleteRequest51.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest22.versionType(versionType57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest18.versionType(versionType57);
        org.elasticsearch.index.VersionType versionType60 = deleteRequest59.versionType();
        java.lang.String str61 = deleteRequest59.index();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(task36);
        org.junit.Assert.assertTrue("'" + refreshPolicy37 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy37.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task46);
        org.junit.Assert.assertTrue("'" + refreshPolicy47 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy47.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(versionType57);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(versionType60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
    }

    @Test
    public void test3242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3242");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        java.lang.String str4 = deleteRequest2.type();
        long long5 = deleteRequest2.primaryTerm();
        long long6 = deleteRequest2.version();
        java.lang.String str7 = deleteRequest2.type();
        deleteRequest2.primaryTerm(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest2.index("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        java.lang.String str12 = deleteRequest11.toString();
        java.lang.String str13 = deleteRequest11.getDescription();
        long long14 = deleteRequest11.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest11.timeout();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-3L) + "'", long6 == (-3L));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}" + "'", str12, "delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}" + "'", str13, "delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertNotNull(timeValue15);
    }

    @Test
    public void test3243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3243");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][]}][delete {[null][null][null]}][null]}");
    }

    @Test
    public void test3244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3244");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[null][null][null]}][delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}]}", "delete {[][delete {[null][null][null]}][]}", "delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}");
        deleteRequest3.setParentTask("delete {[delete {[hi!][null][null]}][delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}][delete {[delete {[][null][null]}][][]}]}", (long) 1);
    }

    @Test
    public void test3245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3245");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.setRefreshPolicy(refreshPolicy14);
        org.elasticsearch.action.support.IndicesOptions indicesOptions16 = deleteRequest3.indicesOptions();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest3.setShardId(shardId17);
        org.elasticsearch.index.VersionType versionType19 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.IndexShard indexShard20 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete21 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest3, indexShard20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(transportAddress13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(indicesOptions16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(versionType19);
    }

    @Test
    public void test3246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3246");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.type("delete {[null][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = deleteRequest3.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.version((long) '4');
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy9 = deleteRequest6.getRefreshPolicy();
        java.lang.String str10 = deleteRequest6.getDescription();
        org.elasticsearch.common.unit.TimeValue timeValue11 = deleteRequest6.timeout();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest6.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest6.routing("delete {[][][]}");
        java.lang.String str15 = deleteRequest14.routing();
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = deleteRequest14.remoteAddress();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(transportAddress4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + refreshPolicy9 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy9.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][delete {[null][null][null]}][null]}" + "'", str10, "delete {[][delete {[null][null][null]}][null]}");
        org.junit.Assert.assertNotNull(timeValue11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[][][]}" + "'", str15, "delete {[][][]}");
        org.junit.Assert.assertNull(transportAddress16);
    }

    @Test
    public void test3247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3247");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType16 = deleteRequest15.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress21 = deleteRequest20.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId29 = null;
        org.elasticsearch.tasks.Task task30 = deleteRequest25.createTask(0L, "", "", taskId29);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy31 = deleteRequest25.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest20.setRefreshPolicy(refreshPolicy31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest15.setRefreshPolicy(refreshPolicy31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest9.setRefreshPolicy(refreshPolicy31);
        org.elasticsearch.index.shard.ShardId shardId35 = deleteRequest9.shardId();
        java.lang.String str36 = deleteRequest9.type();
        boolean boolean37 = deleteRequest9.getShouldPersistResult();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(versionType16);
        org.junit.Assert.assertNull(transportAddress21);
        org.junit.Assert.assertNotNull(task30);
        org.junit.Assert.assertTrue("'" + refreshPolicy31 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy31.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNull(shardId35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test3248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3248");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        java.lang.String str4 = deleteRequest2.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest2.version((long) (short) 100);
        long long7 = deleteRequest2.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest2.version(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest2.version((long) (short) 100);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel12 = deleteRequest2.consistencyLevel();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 100L + "'", long7 == 100L);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel12 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel12.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test3249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3249");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.type("delete {[null][null][null]}");
        java.lang.String str4 = deleteRequest1.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest1.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest1.parent("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str13 = deleteRequest12.id();
        java.lang.String str14 = deleteRequest12.index();
        org.elasticsearch.tasks.TaskId taskId15 = deleteRequest12.getParentTask();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException16 = deleteRequest12.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue19 = deleteRequest18.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress20 = null;
        deleteRequest18.remoteAddress(transportAddress20);
        org.elasticsearch.common.unit.TimeValue timeValue22 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest18.timeout(timeValue22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest12.timeout(timeValue22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest12.version((long) ' ');
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy27 = deleteRequest12.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest8.setRefreshPolicy(refreshPolicy27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.type("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest28.timeout("delete {[delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][delete {[][][]}][delete {[][][]}]}][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][delete {[][][]}][delete {[][][]}]}][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(taskId15);
        org.junit.Assert.assertNull(actionRequestValidationException16);
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertNotNull(timeValue22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + refreshPolicy27 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy27.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
    }

    @Test
    public void test3250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3250");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.routing("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.common.unit.TimeValue timeValue5 = deleteRequest4.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest4.index("delete {[delete {[][][hi!]}][null][null]}");
        org.elasticsearch.index.VersionType versionType8 = deleteRequest7.versionType();
        org.elasticsearch.index.VersionType versionType9 = deleteRequest7.versionType();
        org.elasticsearch.action.support.IndicesOptions indicesOptions10 = deleteRequest7.indicesOptions();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(versionType8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(indicesOptions10);
    }

    @Test
    public void test3251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3251");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "hi!", throwable2, "delete {[null][null][null]}");
        java.lang.String str5 = shardFailure4.indexUUID;
        java.lang.String str6 = shardFailure4.reason;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[null][null][null]}" + "'", str5, "delete {[null][null][null]}");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
    }

    @Test
    public void test3252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3252");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.parent("delete {[][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest1.setShardId(shardId4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.id("delete {[][delete {[null][null][null]}][]}");
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest5.setShardId(shardId8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str17 = deleteRequest16.id();
        org.elasticsearch.common.transport.TransportAddress transportAddress18 = deleteRequest16.remoteAddress();
        org.elasticsearch.index.VersionType versionType19 = deleteRequest16.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str24 = deleteRequest23.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest23.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.routing("delete {[][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress29 = deleteRequest28.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str34 = deleteRequest33.id();
        java.lang.String str35 = deleteRequest33.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str37 = deleteRequest36.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest36.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId40 = deleteRequest36.getParentTask();
        deleteRequest33.setParentTask(taskId40);
        deleteRequest28.setParentTask(taskId40);
        org.elasticsearch.tasks.Task task43 = deleteRequest16.createTask((long) 0, "delete {[null][null][null]}", "delete {[delete {[delete {[][][hi!]}][null][null]}][null][null]}", taskId40);
        org.elasticsearch.tasks.Task task44 = deleteRequest5.createTask(32L, "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][null][null]}", "delete {[delete {[null][null][null]}][null][null]}", taskId40);
        java.lang.Class<?> wildcardClass45 = task44.getClass();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(transportAddress18);
        org.junit.Assert.assertNotNull(versionType19);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNull(transportAddress29);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(taskId40);
        org.junit.Assert.assertNotNull(task43);
        org.junit.Assert.assertNotNull(task44);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test3253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3253");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId12 = null;
        org.elasticsearch.tasks.Task task13 = deleteRequest8.createTask(0L, "", "", taskId12);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = deleteRequest8.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.setRefreshPolicy(refreshPolicy14);
        org.elasticsearch.action.support.IndicesOptions indicesOptions16 = deleteRequest3.indicesOptions();
        java.lang.String str17 = deleteRequest3.getDescription();
        org.junit.Assert.assertNull(transportAddress4);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertTrue("'" + refreshPolicy14 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy14.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(indicesOptions16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[hi!][][delete {[][][]}]}" + "'", str17, "delete {[hi!][][delete {[][][]}]}");
    }

    @Test
    public void test3254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3254");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str6 = deleteRequest5.id();
        org.elasticsearch.common.transport.TransportAddress transportAddress7 = deleteRequest5.remoteAddress();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "", deleteRequest5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(transportAddress7);
    }

    @Test
    public void test3255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3255");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][null][null]}", throwable2, "delete {[][][]}");
        java.lang.String str5 = shardFailure4.reason;
        java.lang.Throwable throwable6 = shardFailure4.cause;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting7 = shardFailure4.routing;
        java.lang.Throwable throwable8 = shardFailure4.cause;
        java.lang.Throwable throwable9 = shardFailure4.cause;
        java.lang.Throwable throwable10 = shardFailure4.cause;
        java.lang.String str11 = shardFailure4.reason;
        java.lang.Throwable throwable12 = shardFailure4.cause;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[null][null][null]}" + "'", str5, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(throwable6);
        org.junit.Assert.assertNull(shardRouting7);
        org.junit.Assert.assertNull(throwable8);
        org.junit.Assert.assertNull(throwable9);
        org.junit.Assert.assertNull(throwable10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[null][null][null]}" + "'", str11, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(throwable12);
    }

    @Test
    public void test3256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3256");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str11 = deleteRequest10.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException12 = deleteRequest10.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure14 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "hi!", (java.lang.Throwable) actionRequestValidationException12, "delete {[][][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure16 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "", (java.lang.Throwable) actionRequestValidationException12, "delete {[][][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure18 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[][delete {[][][]}][delete {[][][]}]}", (java.lang.Throwable) actionRequestValidationException12, "");
        java.lang.Throwable throwable19 = shardFailure18.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure21 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][delete {[null][null][null]}][null]}", throwable19, "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure23 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[hi!][null][null]}", throwable19, "delete {[delete {[hi!][null][null]}][null][delete {[][][hi!]}]}");
        java.lang.String str24 = shardFailure23.indexUUID;
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[null][null][null]}" + "'", str11, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException12);
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable19.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "delete {[delete {[hi!][null][null]}][null][delete {[][][hi!]}]}" + "'", str24, "delete {[delete {[hi!][null][null]}][null][delete {[][][hi!]}]}");
    }

    @Test
    public void test3257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3257");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][hi!]}][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue2 = deleteRequest1.timeout();
        boolean boolean3 = deleteRequest1.getShouldPersistResult();
        deleteRequest1.primaryTerm(10L);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException6 = deleteRequest1.validate();
        org.elasticsearch.action.support.IndicesOptions indicesOptions7 = deleteRequest1.indicesOptions();
        org.junit.Assert.assertNotNull(timeValue2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(actionRequestValidationException6);
        org.junit.Assert.assertNotNull(indicesOptions7);
    }

    @Test
    public void test3258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3258");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = deleteRequest3.remoteAddress();
        org.elasticsearch.index.VersionType versionType6 = deleteRequest3.versionType();
        boolean boolean7 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.setShardId(shardId8);
        deleteRequest9.setParentTask("delete {[null][null][delete {[][][hi!]}]}", (long) 100);
        java.lang.String str13 = deleteRequest9.type();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(transportAddress5);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test3259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3259");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType6 = deleteRequest5.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = deleteRequest10.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy21 = deleteRequest15.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest10.setRefreshPolicy(refreshPolicy21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest5.setRefreshPolicy(refreshPolicy21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest5.id("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        java.lang.String str26 = deleteRequest5.routing();
        deleteRequest5.primaryTerm((-1L));
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertNull(transportAddress11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertTrue("'" + refreshPolicy21 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy21.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test3260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3260");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.type("delete {[null][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = deleteRequest3.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.version((long) '4');
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy9 = deleteRequest6.getRefreshPolicy();
        deleteRequest6.setParentTask("delete {[][null][null]}", (long) (byte) 1);
        java.lang.String str13 = deleteRequest6.id();
        org.elasticsearch.tasks.TaskId taskId14 = deleteRequest6.getParentTask();
        java.lang.String str15 = deleteRequest6.id();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput16 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest6.writeTo(streamOutput16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(transportAddress4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + refreshPolicy9 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy9.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(taskId14);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test3261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3261");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest3.consistencyLevel(writeConsistencyLevel11);
        deleteRequest12.setParentTask("hi!", 1L);
        java.lang.String str16 = deleteRequest12.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str21 = deleteRequest20.id();
        java.lang.String str22 = deleteRequest20.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest20.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.type("delete {[hi!][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel30 = deleteRequest27.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel31 = deleteRequest27.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest24.consistencyLevel(writeConsistencyLevel31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest12.consistencyLevel(writeConsistencyLevel31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue36 = deleteRequest35.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress37 = null;
        deleteRequest35.remoteAddress(transportAddress37);
        org.elasticsearch.common.unit.TimeValue timeValue39 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest35.timeout(timeValue39);
        java.lang.String str41 = deleteRequest35.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest35.routing("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.index.VersionType versionType44 = deleteRequest35.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest12.versionType(versionType44);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel30 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel30.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel31 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel31.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(timeValue36);
        org.junit.Assert.assertNotNull(timeValue39);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(versionType44);
        org.junit.Assert.assertNotNull(deleteRequest45);
    }

    @Test
    public void test3262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3262");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest3.consistencyLevel(writeConsistencyLevel11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.type("delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.setShardId(shardId17);
        java.lang.String str19 = deleteRequest18.toString();
        org.elasticsearch.common.transport.TransportAddress transportAddress20 = null;
        deleteRequest18.remoteAddress(transportAddress20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.index.VersionType versionType26 = deleteRequest25.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest25.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest18.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = deleteRequest28.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId37 = null;
        org.elasticsearch.tasks.Task task38 = deleteRequest33.createTask(0L, "", "", taskId37);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel39 = deleteRequest33.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress44 = deleteRequest43.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId52 = null;
        org.elasticsearch.tasks.Task task53 = deleteRequest48.createTask(0L, "", "", taskId52);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy54 = deleteRequest48.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest43.setRefreshPolicy(refreshPolicy54);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest33.setRefreshPolicy(refreshPolicy54);
        deleteRequest56.primaryTerm((long) 100);
        org.elasticsearch.common.unit.TimeValue timeValue59 = deleteRequest56.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest28.timeout(timeValue59);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest14.timeout(timeValue59);
        java.lang.String[] strArray62 = deleteRequest14.indices();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[hi!][null][null]}" + "'", str19, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel29 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel29.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(task38);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel39 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel39.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(transportAddress44);
        org.junit.Assert.assertNotNull(task53);
        org.junit.Assert.assertTrue("'" + refreshPolicy54 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy54.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(timeValue59);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(strArray62);
    }

    @Test
    public void test3263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3263");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.type("delete {[null][null][null]}");
        java.lang.String str4 = deleteRequest1.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest1.index("");
        java.lang.String[] strArray7 = deleteRequest6.indices();
        java.lang.String str8 = deleteRequest6.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest6.routing("delete {[][][]}");
        java.lang.String str11 = deleteRequest10.index();
        org.elasticsearch.common.io.stream.StreamInput streamInput12 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest10.readFrom(streamInput12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[][delete {[null][null][null]}][null]}" + "'", str8, "delete {[][delete {[null][null][null]}][null]}");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test3264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3264");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[][][]}");
        java.lang.String str3 = deleteRequest0.id();
        java.lang.String[] strArray4 = deleteRequest0.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str6 = deleteRequest5.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress7 = deleteRequest5.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest5.getParentTask();
        deleteRequest0.setParentTask(taskId8);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy10 = deleteRequest0.getRefreshPolicy();
        deleteRequest0.primaryTerm((long) 1);
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = null;
        deleteRequest0.remoteAddress(transportAddress13);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(transportAddress7);
        org.junit.Assert.assertNotNull(taskId8);
        org.junit.Assert.assertTrue("'" + refreshPolicy10 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy10.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
    }

    @Test
    public void test3265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3265");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.tasks.TaskId taskId6 = deleteRequest3.getParentTask();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest3.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = null;
        deleteRequest9.remoteAddress(transportAddress11);
        org.elasticsearch.common.unit.TimeValue timeValue13 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest9.timeout(timeValue13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.timeout(timeValue13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.version((long) ' ');
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy18 = deleteRequest3.getRefreshPolicy();
        java.lang.String str19 = deleteRequest3.toString();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(taskId6);
        org.junit.Assert.assertNull(actionRequestValidationException7);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + refreshPolicy18 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy18.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[][][]}" + "'", str19, "delete {[][][]}");
    }

    @Test
    public void test3266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3266");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.consistencyLevel(writeConsistencyLevel23);
        deleteRequest24.setParentTask("hi!", (long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest24.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest24.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId39 = null;
        org.elasticsearch.tasks.Task task40 = deleteRequest35.createTask(0L, "", "", taskId39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest35.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel43 = deleteRequest42.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions44 = deleteRequest42.indicesOptions();
        java.lang.String str45 = deleteRequest42.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str47 = deleteRequest46.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest46.version((long) (short) 100);
        deleteRequest46.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str53 = deleteRequest52.parent();
        org.elasticsearch.index.VersionType versionType54 = deleteRequest52.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest46.versionType(versionType54);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest42.versionType(versionType54);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest31.versionType(versionType54);
        java.lang.String str58 = deleteRequest31.parent();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(task40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel43 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel43.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "delete {[][][]}" + "'", str45, "delete {[][][]}");
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(versionType54);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNull(str58);
    }

    @Test
    public void test3267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3267");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        deleteRequest0.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.type("delete {[null][null][null]}");
        java.lang.String str8 = deleteRequest5.parent();
        boolean boolean9 = deleteRequest5.getShouldPersistResult();
        deleteRequest5.primaryTerm((long) (short) 10);
        org.elasticsearch.index.shard.IndexShard indexShard12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete13 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest5, indexShard12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test3268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3268");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][null][null]}][delete {[hi!][null][null]}][delete {[hi!][null][null]}]}", "delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}", "delete {[][null][delete {[][delete {[][][hi!]}][delete {[][][]}]}]}");
    }

    @Test
    public void test3269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3269");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.parent("hi!");
        long long10 = deleteRequest3.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str15 = deleteRequest14.id();
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.setShardId(shardId16);
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest14.setShardId(shardId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str26 = deleteRequest25.id();
        org.elasticsearch.common.unit.TimeValue timeValue27 = deleteRequest25.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest14.timeout(timeValue27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str33 = deleteRequest32.id();
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest32.setShardId(shardId34);
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest32.setShardId(shardId36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.parent("delete {[][][]}");
        org.elasticsearch.index.VersionType versionType41 = deleteRequest40.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest37.versionType(versionType41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest42.parent("delete {[hi!][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue45 = deleteRequest42.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest28.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest3.timeout(timeValue45);
        java.lang.String str48 = deleteRequest3.type();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-3L) + "'", long10 == (-3L));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(timeValue27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(versionType41);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(timeValue45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "delete {[][][]}" + "'", str48, "delete {[][][]}");
    }

    @Test
    public void test3270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3270");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.parent("delete {[][][]}");
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest10.getParentTask();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy12 = deleteRequest10.getRefreshPolicy();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertTrue("'" + refreshPolicy12 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy12.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
    }

    @Test
    public void test3271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3271");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        deleteRequest0.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.type("delete {[null][null][null]}");
        java.lang.String str8 = deleteRequest5.parent();
        org.elasticsearch.index.VersionType versionType9 = deleteRequest5.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest5.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][]}", "delete {[null][null][null]}", "delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.type("delete {[][][hi!]}");
        java.lang.String str18 = deleteRequest15.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel19 = deleteRequest15.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest5.consistencyLevel(writeConsistencyLevel19);
        java.lang.Class<?> wildcardClass21 = deleteRequest5.getClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}" + "'", str18, "delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel19 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel19.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test3272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3272");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest1.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue6 = deleteRequest5.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.timeout(timeValue6);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException8 = deleteRequest1.validate();
        org.elasticsearch.index.VersionType versionType9 = deleteRequest1.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = deleteRequest1.shardId();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest1.timeout("delete {[delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}][null][null]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}][null][null]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(actionRequestValidationException8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNull(shardId10);
    }

    @Test
    public void test3273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3273");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][hi!]}][null][null]}", "delete {[][][]}", "");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel4 = deleteRequest3.consistencyLevel();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        java.lang.String str7 = deleteRequest3.index();
        org.elasticsearch.index.shard.ShardId shardId8 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId9 = deleteRequest3.getParentTask();
        org.elasticsearch.index.VersionType versionType10 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.IndexShard indexShard11 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult12 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest3, indexShard11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel4 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel4.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str7, "delete {[delete {[][][hi!]}][null][null]}");
        org.junit.Assert.assertNull(shardId8);
        org.junit.Assert.assertNotNull(taskId9);
        org.junit.Assert.assertNotNull(versionType10);
    }

    @Test
    public void test3274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3274");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long10 = deleteRequest9.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str12 = deleteRequest11.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest14.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest18.getParentTask();
        deleteRequest9.setParentTask(taskId19);
        org.elasticsearch.tasks.Task task21 = deleteRequest3.createTask((long) ' ', "delete {[][][hi!]}", "delete {[][][]}", taskId19);
        java.lang.String[] strArray22 = deleteRequest3.indices();
        java.lang.String[] strArray23 = deleteRequest3.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest3.id("delete {[][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.setShardId(shardId26);
        org.elasticsearch.common.transport.TransportAddress transportAddress28 = deleteRequest25.remoteAddress();
        java.lang.String str29 = deleteRequest25.id();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][][]}" + "'", str4, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNull(transportAddress28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "delete {[][null][null]}" + "'", str29, "delete {[][null][null]}");
    }

    @Test
    public void test3275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3275");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version((long) (short) 100);
        deleteRequest0.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str7 = deleteRequest6.parent();
        org.elasticsearch.index.VersionType versionType8 = deleteRequest6.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.versionType(versionType8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.version((long) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.timeout("delete {[delete {[][null][null]}][null][null]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[][null][null]}][null][null]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(versionType8);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
    }

    @Test
    public void test3276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3276");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        java.lang.String str4 = deleteRequest2.type();
        long long5 = deleteRequest2.primaryTerm();
        long long6 = deleteRequest2.version();
        java.lang.String str7 = deleteRequest2.type();
        deleteRequest2.primaryTerm(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest2.index("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        java.lang.String str12 = deleteRequest11.toString();
        java.lang.String str13 = deleteRequest11.getDescription();
        long long14 = deleteRequest11.version();
        org.elasticsearch.common.unit.TimeValue timeValue15 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.timeout(timeValue15);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel17 = deleteRequest16.consistencyLevel();
        org.elasticsearch.common.transport.TransportAddress transportAddress18 = deleteRequest16.remoteAddress();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest16.timeout("delete {[delete {[hi!][null][null]}][delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}][delete {[null][delete {[][delete {[hi!][null][null]}][hi!]}][delete {[][][hi!]}]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[hi!][null][null]}][delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}][delete {[null][delete {[][delete {[hi!][null][null]}][hi!]}][delete {[][][hi!]}]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-3L) + "'", long6 == (-3L));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}" + "'", str12, "delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}" + "'", str13, "delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-3L) + "'", long14 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel17 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel17.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(transportAddress18);
    }

    @Test
    public void test3277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3277");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest1.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue6 = deleteRequest5.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.timeout(timeValue6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str9 = deleteRequest8.parent();
        org.elasticsearch.index.VersionType versionType10 = deleteRequest8.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest1.versionType(versionType10);
        long long12 = deleteRequest11.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.type("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException15 = deleteRequest11.validate();
        boolean boolean16 = deleteRequest11.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest11.index("");
        org.elasticsearch.index.shard.IndexShard indexShard19 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult20 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest18, indexShard19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(versionType10);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(actionRequestValidationException15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(deleteRequest18);
    }

    @Test
    public void test3278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3278");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str10 = deleteRequest9.id();
        java.lang.String str11 = deleteRequest9.index();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest9.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest0.createTask((-1L), "delete {[][][hi!]}", "delete {[][delete {[][][]}][delete {[][][]}]}", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str15 = deleteRequest14.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest14.getParentTask();
        boolean boolean19 = deleteRequest14.getShouldPersistResult();
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest14.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest0.timeout(timeValue20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.version((-3L));
        org.elasticsearch.common.io.stream.StreamInput streamInput24 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest23.readFrom(streamInput24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
    }

    @Test
    public void test3279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3279");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.parent("delete {[][][]}");
        long long11 = deleteRequest10.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.routing("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType20 = deleteRequest19.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress25 = deleteRequest24.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId33 = null;
        org.elasticsearch.tasks.Task task34 = deleteRequest29.createTask(0L, "", "", taskId33);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy35 = deleteRequest29.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest24.setRefreshPolicy(refreshPolicy35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest19.setRefreshPolicy(refreshPolicy35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel39 = deleteRequest38.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel40 = deleteRequest38.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest19.consistencyLevel(writeConsistencyLevel40);
        long long42 = deleteRequest19.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest44.setShardId(shardId45);
        deleteRequest44.primaryTerm((long) 1);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy49 = deleteRequest44.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest19.setRefreshPolicy(refreshPolicy49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest13.setRefreshPolicy(refreshPolicy49);
        org.elasticsearch.index.shard.ShardId shardId52 = deleteRequest13.shardId();
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest13.setShardId(shardId53);
        org.elasticsearch.common.transport.TransportAddress transportAddress55 = null;
        deleteRequest13.remoteAddress(transportAddress55);
        org.elasticsearch.tasks.TaskId taskId57 = deleteRequest13.getParentTask();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-3L) + "'", long11 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(versionType20);
        org.junit.Assert.assertNull(transportAddress25);
        org.junit.Assert.assertNotNull(task34);
        org.junit.Assert.assertTrue("'" + refreshPolicy35 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy35.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel39 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel39.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel40 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel40.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-3L) + "'", long42 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertTrue("'" + refreshPolicy49 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy49.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNull(shardId52);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(taskId57);
    }

    @Test
    public void test3280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3280");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.setShardId(shardId4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.routing("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest7.getParentTask();
        java.lang.String str9 = deleteRequest7.type();
        java.lang.String str10 = deleteRequest7.id();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "delete {[null][null][null]}" + "'", str1, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(taskId8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test3281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3281");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.setRefreshPolicy(refreshPolicy14);
        long long16 = deleteRequest3.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest19.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue24 = deleteRequest23.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest19.timeout(timeValue24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str27 = deleteRequest26.parent();
        org.elasticsearch.index.VersionType versionType28 = deleteRequest26.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest19.versionType(versionType28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest3.versionType(versionType28);
        org.elasticsearch.common.unit.TimeValue timeValue31 = deleteRequest30.timeout();
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest30.setShardId(shardId32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest30.index("delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}");
        java.lang.String str36 = deleteRequest35.index();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(transportAddress13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(timeValue24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(timeValue31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}" + "'", str36, "delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}");
    }

    @Test
    public void test3282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3282");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue2 = deleteRequest1.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress3 = null;
        deleteRequest1.remoteAddress(transportAddress3);
        org.elasticsearch.common.unit.TimeValue timeValue5 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest1.timeout(timeValue5);
        java.lang.String str7 = deleteRequest1.type();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel8 = deleteRequest1.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest1.routing("delete {[hi!][][delete {[][][]}]}");
        org.junit.Assert.assertNotNull(timeValue2);
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel8 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel8.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest10);
    }

    @Test
    public void test3283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3283");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.tasks.TaskId taskId9 = null;
        deleteRequest3.setParentTask(taskId9);
        java.lang.String str11 = deleteRequest3.type();
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = null;
        deleteRequest3.remoteAddress(transportAddress12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId21 = null;
        org.elasticsearch.tasks.Task task22 = deleteRequest17.createTask(0L, "", "", taskId21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest17.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType25 = deleteRequest17.versionType();
        java.lang.String str26 = deleteRequest17.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId34 = null;
        org.elasticsearch.tasks.Task task35 = deleteRequest30.createTask(0L, "", "", taskId34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest30.setRefreshPolicy("");
        java.lang.String str38 = deleteRequest37.toString();
        java.lang.String[] strArray39 = deleteRequest37.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest37.index("");
        org.elasticsearch.common.unit.TimeValue timeValue42 = deleteRequest41.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest17.timeout(timeValue42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress48 = deleteRequest47.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId56 = null;
        org.elasticsearch.tasks.Task task57 = deleteRequest52.createTask(0L, "", "", taskId56);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy58 = deleteRequest52.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest47.setRefreshPolicy(refreshPolicy58);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest43.setRefreshPolicy(refreshPolicy58);
        org.elasticsearch.common.unit.TimeValue timeValue61 = deleteRequest43.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest3.timeout(timeValue61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest3.type("delete {[delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][delete {[hi!][null][null]}][hi!]}]}");
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(versionType25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(task35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "delete {[][][]}" + "'", str38, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(timeValue42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNull(transportAddress48);
        org.junit.Assert.assertNotNull(task57);
        org.junit.Assert.assertTrue("'" + refreshPolicy58 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy58.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(timeValue61);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest64);
    }

    @Test
    public void test3284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3284");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.setShardId(shardId12);
        long long14 = deleteRequest10.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str16 = deleteRequest15.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.parent("hi!");
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest15.getParentTask();
        deleteRequest10.setParentTask(taskId19);
        java.lang.String str21 = deleteRequest10.getDescription();
        java.lang.String str22 = deleteRequest10.routing();
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest10.getParentTask();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-3L) + "'", long14 == (-3L));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[null][null][null]}" + "'", str16, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[][][]}" + "'", str21, "delete {[][][]}");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(taskId23);
    }

    @Test
    public void test3285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3285");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId9 = null;
        org.elasticsearch.tasks.Task task10 = deleteRequest5.createTask(0L, "", "", taskId9);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest5.setRefreshPolicy("");
        java.lang.String[] strArray13 = deleteRequest12.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId21 = null;
        org.elasticsearch.tasks.Task task22 = deleteRequest17.createTask(0L, "", "", taskId21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest17.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest12.consistencyLevel(writeConsistencyLevel25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.type("delete {[][][]}");
        java.lang.String str33 = deleteRequest30.id();
        java.lang.String str34 = deleteRequest30.getDescription();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException35 = deleteRequest30.validate();
        org.elasticsearch.common.unit.TimeValue timeValue36 = deleteRequest30.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest12.timeout(timeValue36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue43 = deleteRequest42.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress44 = null;
        deleteRequest42.remoteAddress(transportAddress44);
        java.lang.String str46 = deleteRequest42.index();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException47 = deleteRequest42.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str52 = deleteRequest51.id();
        java.lang.String str53 = deleteRequest51.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest51.type("delete {[][][]}");
        java.lang.String str56 = deleteRequest55.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest55.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel59 = deleteRequest58.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest42.consistencyLevel(writeConsistencyLevel59);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException61 = deleteRequest42.validate();
        org.elasticsearch.tasks.TaskId taskId62 = deleteRequest42.getParentTask();
        org.elasticsearch.tasks.Task task63 = deleteRequest12.createTask(0L, "delete {[][delete {[null][null][null]}][delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}]}", "delete {[][delete {[null][null][null]}][]}", taskId62);
        deleteRequest12.setParentTask("delete {[][delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[][][]}]}][delete {[null][null][null]}]}", (long) (byte) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest12.version((long) (byte) -1);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[hi!][][delete {[][][]}]}][delete {[][delete {[hi!][null][null]}][hi!]}][delete {[][][delete {[][delete {[][][hi!]}][delete {[][][]}]}]}]}", deleteRequest12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "delete {[][][]}" + "'", str33, "delete {[][][]}");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "delete {[][delete {[][][]}][delete {[][][]}]}" + "'", str34, "delete {[][delete {[][][]}][delete {[][][]}]}");
        org.junit.Assert.assertNull(actionRequestValidationException35);
        org.junit.Assert.assertNotNull(timeValue36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(timeValue43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "delete {[null][null][null]}" + "'", str46, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException47);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "delete {[][][]}" + "'", str56, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel59 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel59.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(actionRequestValidationException61);
        org.junit.Assert.assertNotNull(taskId62);
        org.junit.Assert.assertNotNull(task63);
        org.junit.Assert.assertNotNull(deleteRequest68);
    }

    @Test
    public void test3286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3286");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId20 = null;
        org.elasticsearch.tasks.Task task21 = deleteRequest16.createTask(0L, "", "", taskId20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest16.setRefreshPolicy("");
        deleteRequest23.primaryTerm(1L);
        java.lang.String str26 = deleteRequest23.routing();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy27 = deleteRequest23.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest3.setRefreshPolicy(refreshPolicy27);
        java.lang.String str29 = deleteRequest28.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest28.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest28.version(100L);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest33.setRefreshPolicy("delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][][]}" + "'", str12, "delete {[][][]}");
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + refreshPolicy27 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy27.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "delete {[][][]}" + "'", str29, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest33);
    }

    @Test
    public void test3287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3287");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest7.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.type("delete {[][][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId15 = deleteRequest14.shardId();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.setRefreshPolicy("delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][null][null]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][null][null]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(taskId8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(shardId15);
    }

    @Test
    public void test3288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3288");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest2.indicesOptions();
        org.elasticsearch.index.VersionType versionType5 = deleteRequest2.versionType();
        java.lang.String[] strArray6 = deleteRequest2.indices();
        java.lang.Class<?> wildcardClass7 = strArray6.getClass();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertNotNull(versionType5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test3289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3289");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}][delete {[hi!][null][null]}][hi!]}", "delete {[][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][][]}]}", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.parent("delete {[delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][null][null]}");
        java.lang.String str6 = deleteRequest3.getDescription();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[delete {[delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}][delete {[hi!][null][null]}][hi!]}][delete {[][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][][]}]}][delete {[][][]}]}" + "'", str6, "delete {[delete {[delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}][delete {[hi!][null][null]}][hi!]}][delete {[][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][][]}]}][delete {[][][]}]}");
    }

    @Test
    public void test3290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3290");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version(10L);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy4 = deleteRequest3.getRefreshPolicy();
        java.lang.String str5 = deleteRequest3.index();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "delete {[null][null][null]}" + "'", str1, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertTrue("'" + refreshPolicy4 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy4.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test3291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3291");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest10.toString();
        java.lang.String[] strArray12 = deleteRequest10.indices();
        deleteRequest10.primaryTerm(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest10.routing("delete {[null][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.setShardId(shardId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.type("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId35 = null;
        org.elasticsearch.tasks.Task task36 = deleteRequest31.createTask(0L, "", "", taskId35);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy37 = deleteRequest31.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId45 = null;
        org.elasticsearch.tasks.Task task46 = deleteRequest41.createTask(0L, "", "", taskId45);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy47 = deleteRequest41.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest31.setRefreshPolicy(refreshPolicy47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest27.setRefreshPolicy(refreshPolicy47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest27.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        deleteRequest51.setParentTask("delete {[][][hi!]}", (long) (byte) 100);
        org.elasticsearch.common.transport.TransportAddress transportAddress55 = null;
        deleteRequest51.remoteAddress(transportAddress55);
        org.elasticsearch.index.VersionType versionType57 = deleteRequest51.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest22.versionType(versionType57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest18.versionType(versionType57);
        org.elasticsearch.index.shard.ShardId shardId60 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest18.setShardId(shardId60);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel62 = deleteRequest18.consistencyLevel();
        java.lang.String str63 = deleteRequest18.toString();
        org.elasticsearch.index.shard.IndexShard indexShard64 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult65 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest18, indexShard64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(task36);
        org.junit.Assert.assertTrue("'" + refreshPolicy37 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy37.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task46);
        org.junit.Assert.assertTrue("'" + refreshPolicy47 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy47.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(versionType57);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel62 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel62.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "delete {[][][]}" + "'", str63, "delete {[][][]}");
    }

    @Test
    public void test3292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3292");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.type("delete {[null][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = deleteRequest3.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.version((long) '4');
        long long9 = deleteRequest6.primaryTerm();
        org.elasticsearch.common.transport.TransportAddress transportAddress10 = deleteRequest6.remoteAddress();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(transportAddress4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNull(transportAddress10);
    }

    @Test
    public void test3293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3293");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest10.toString();
        java.lang.String[] strArray12 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str23 = deleteRequest22.id();
        java.lang.String str24 = deleteRequest22.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str26 = deleteRequest25.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest25.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest25.getParentTask();
        deleteRequest22.setParentTask(taskId29);
        deleteRequest18.setParentTask(taskId29);
        deleteRequest14.setParentTask(taskId29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest14.parent("delete {[delete {[][][hi!]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId45 = null;
        org.elasticsearch.tasks.Task task46 = deleteRequest41.createTask(0L, "", "", taskId45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest41.setRefreshPolicy("");
        java.lang.String[] strArray49 = deleteRequest48.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long52 = deleteRequest51.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str54 = deleteRequest53.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue57 = deleteRequest56.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest53.timeout(timeValue57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest58.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId61 = deleteRequest60.getParentTask();
        deleteRequest51.setParentTask(taskId61);
        deleteRequest48.setParentTask(taskId61);
        org.elasticsearch.tasks.Task task64 = deleteRequest14.createTask((long) ' ', "delete {[][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][delete {[][][]}]}", "delete {[delete {[delete {[][][hi!]}][null][null]}][null][null]}", taskId61);
        long long65 = deleteRequest14.primaryTerm();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(task46);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(timeValue57);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(taskId61);
        org.junit.Assert.assertNotNull(task64);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 0L + "'", long65 == 0L);
    }

    @Test
    public void test3294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3294");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str8 = deleteRequest7.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.type("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest7.versionType();
        java.lang.String[] strArray12 = deleteRequest7.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.routing("delete {[][null][null]}");
        org.elasticsearch.tasks.TaskId taskId15 = deleteRequest14.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.id("delete {[hi!][null][null]}");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput18 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest17.writeTo(streamOutput18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[][][]}" + "'", str8, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(taskId15);
        org.junit.Assert.assertNotNull(deleteRequest17);
    }

    @Test
    public void test3295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3295");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version((long) (short) 100);
        deleteRequest0.primaryTerm(100L);
        boolean boolean6 = deleteRequest0.getShouldPersistResult();
        long long7 = deleteRequest0.primaryTerm();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.timeout("delete {[delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[delete {[][][hi!]}][null][delete {[][][]}]}][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[delete {[][][hi!]}][null][delete {[][][]}]}][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 100L + "'", long7 == 100L);
    }

    @Test
    public void test3296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3296");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.setRefreshPolicy("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy10 = deleteRequest6.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId18 = null;
        org.elasticsearch.tasks.Task task19 = deleteRequest14.createTask(0L, "", "", taskId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType22 = deleteRequest14.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest14.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest6.consistencyLevel(writeConsistencyLevel23);
        long long25 = deleteRequest6.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId33 = null;
        org.elasticsearch.tasks.Task task34 = deleteRequest29.createTask(0L, "", "", taskId33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest29.setRefreshPolicy("");
        java.lang.String str37 = deleteRequest36.toString();
        java.lang.String[] strArray38 = deleteRequest36.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest36.index("");
        org.elasticsearch.common.unit.TimeValue timeValue41 = deleteRequest40.timeout();
        org.elasticsearch.index.VersionType versionType42 = deleteRequest40.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest6.versionType(versionType42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest49.type("delete {[null][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress52 = deleteRequest51.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest51.setShardId(shardId53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest54.version((long) '4');
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy57 = deleteRequest54.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest47.setRefreshPolicy(refreshPolicy57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest6.setRefreshPolicy(refreshPolicy57);
        deleteRequest6.setParentTask("delete {[delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][null][null]}", (long) (short) 0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + refreshPolicy10 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy10.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(task19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-3L) + "'", long25 == (-3L));
        org.junit.Assert.assertNotNull(task34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "delete {[][][]}" + "'", str37, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(timeValue41);
        org.junit.Assert.assertNotNull(versionType42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNull(transportAddress52);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertTrue("'" + refreshPolicy57 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy57.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest59);
    }

    @Test
    public void test3297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3297");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version((long) (short) 100);
        java.lang.String str4 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("delete {[hi!][null][null]}");
        java.lang.String str7 = deleteRequest6.routing();
        org.elasticsearch.index.VersionType versionType8 = deleteRequest6.versionType();
        java.lang.String str9 = deleteRequest6.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(versionType8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[null][null][delete {[hi!][null][null]}]}" + "'", str9, "delete {[null][null][delete {[hi!][null][null]}]}");
    }

    @Test
    public void test3298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3298");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.tasks.TaskId taskId6 = deleteRequest3.getParentTask();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest3.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = null;
        deleteRequest9.remoteAddress(transportAddress11);
        org.elasticsearch.common.unit.TimeValue timeValue13 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest9.timeout(timeValue13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.timeout(timeValue13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.version((long) ' ');
        long long18 = deleteRequest17.primaryTerm();
        org.elasticsearch.index.shard.IndexShard indexShard19 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult20 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest17, indexShard19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(taskId6);
        org.junit.Assert.assertNull(actionRequestValidationException7);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
    }

    @Test
    public void test3299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3299");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest5.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest5.timeout(timeValue10);
        java.lang.String str12 = deleteRequest5.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException13 = deleteRequest5.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure15 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", (java.lang.Throwable) actionRequestValidationException13, "delete {[][][]}");
        java.lang.String str16 = shardFailure15.reason;
        java.lang.String str17 = shardFailure15.indexUUID;
        java.lang.Throwable throwable18 = shardFailure15.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure20 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}][delete {[][null][null]}][delete {[][hi!][delete {[null][null][null]}]}]}", throwable18, "delete {[null][null][delete {[hi!][null][null]}]}");
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][null][null]}" + "'", str12, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[][][]}" + "'", str17, "delete {[][][]}");
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable18.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
    }

    @Test
    public void test3300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3300");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version((long) (short) 100);
        java.lang.String str4 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("delete {[hi!][null][null]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest6.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.version(10L);
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.setShardId(shardId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest9.id("delete {[delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][null][null]}");
        deleteRequest9.primaryTerm((-1L));
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(actionRequestValidationException7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
    }

    @Test
    public void test3301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3301");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.parent("delete {[][][]}");
        long long11 = deleteRequest10.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.routing("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.type("delete {[null][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress18 = deleteRequest17.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest17.setShardId(shardId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.version((long) '4');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId30 = null;
        org.elasticsearch.tasks.Task task31 = deleteRequest26.createTask(0L, "", "", taskId30);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel32 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress37 = deleteRequest36.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId45 = null;
        org.elasticsearch.tasks.Task task46 = deleteRequest41.createTask(0L, "", "", taskId45);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy47 = deleteRequest41.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest36.setRefreshPolicy(refreshPolicy47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest26.setRefreshPolicy(refreshPolicy47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest20.setRefreshPolicy(refreshPolicy47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest13.setRefreshPolicy(refreshPolicy47);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException52 = deleteRequest51.validate();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput53 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest51.writeTo(streamOutput53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-3L) + "'", long11 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(transportAddress18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(task31);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel32 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel32.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(transportAddress37);
        org.junit.Assert.assertNotNull(task46);
        org.junit.Assert.assertTrue("'" + refreshPolicy47 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy47.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNull(actionRequestValidationException52);
    }

    @Test
    public void test3302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3302");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.setRefreshPolicy("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy10 = deleteRequest6.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId18 = null;
        org.elasticsearch.tasks.Task task19 = deleteRequest14.createTask(0L, "", "", taskId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType22 = deleteRequest14.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest14.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest6.consistencyLevel(writeConsistencyLevel23);
        deleteRequest6.primaryTerm((long) '#');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str31 = deleteRequest30.id();
        org.elasticsearch.common.transport.TransportAddress transportAddress32 = deleteRequest30.remoteAddress();
        org.elasticsearch.index.VersionType versionType33 = deleteRequest30.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest6.versionType(versionType33);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel35 = deleteRequest34.consistencyLevel();
        deleteRequest34.setParentTask("delete {[delete {[][][hi!]}][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[null][null][null]}]}", (long) (short) 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + refreshPolicy10 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy10.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(task19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNull(transportAddress32);
        org.junit.Assert.assertNotNull(versionType33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel35 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel35.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test3303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3303");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest10.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long14 = deleteRequest13.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str16 = deleteRequest15.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue19 = deleteRequest18.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest15.timeout(timeValue19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest22.getParentTask();
        deleteRequest13.setParentTask(taskId23);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest13.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest10.consistencyLevel(writeConsistencyLevel25);
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.setShardId(shardId27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.index("delete {[null][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress31 = deleteRequest30.remoteAddress();
        java.lang.String str32 = deleteRequest30.getDescription();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNull(transportAddress31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[delete {[null][null][null]}][][]}" + "'", str32, "delete {[delete {[null][null][null]}][][]}");
    }

    @Test
    public void test3304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3304");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId18 = null;
        org.elasticsearch.tasks.Task task19 = deleteRequest14.createTask(0L, "", "", taskId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.setRefreshPolicy("");
        java.lang.String[] strArray22 = deleteRequest21.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId30 = null;
        org.elasticsearch.tasks.Task task31 = deleteRequest26.createTask(0L, "", "", taskId30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest26.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel34 = deleteRequest33.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest21.consistencyLevel(writeConsistencyLevel34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue38 = deleteRequest37.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress39 = null;
        deleteRequest37.remoteAddress(transportAddress39);
        org.elasticsearch.common.unit.TimeValue timeValue41 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest37.timeout(timeValue41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest21.timeout(timeValue41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest10.timeout(timeValue41);
        org.elasticsearch.index.shard.ShardId shardId45 = deleteRequest44.shardId();
        java.lang.Class<?> wildcardClass46 = deleteRequest44.getClass();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(task19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(task31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel34 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel34.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(timeValue38);
        org.junit.Assert.assertNotNull(timeValue41);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNull(shardId45);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test3305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3305");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][null][null]}", throwable2, "delete {[][][hi!]}");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting5 = shardFailure4.routing;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = shardFailure4.routing;
        java.lang.String str7 = shardFailure4.indexUUID;
        java.lang.String str8 = shardFailure4.reason;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting9 = shardFailure4.routing;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = shardFailure4.routing;
        java.lang.String str11 = shardFailure4.reason;
        java.lang.String str12 = shardFailure4.reason;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting13 = shardFailure4.routing;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = shardFailure4.routing;
        java.lang.String str15 = shardFailure4.reason;
        org.junit.Assert.assertNull(shardRouting5);
        org.junit.Assert.assertNull(shardRouting6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[][][hi!]}" + "'", str7, "delete {[][][hi!]}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[null][null][null]}" + "'", str8, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(shardRouting9);
        org.junit.Assert.assertNull(shardRouting10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[null][null][null]}" + "'", str11, "delete {[null][null][null]}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[null][null][null]}" + "'", str12, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(shardRouting13);
        org.junit.Assert.assertNull(shardRouting14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[null][null][null]}" + "'", str15, "delete {[null][null][null]}");
    }

    @Test
    public void test3306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3306");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.type();
        deleteRequest3.setParentTask("delete {[][][hi!]}", (long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.setShardId(shardId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest9.index("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = deleteRequest9.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.setRefreshPolicy(refreshPolicy14);
        java.lang.String str16 = deleteRequest15.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str21 = deleteRequest20.id();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest20.setShardId(shardId22);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest20.setShardId(shardId24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest20.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str32 = deleteRequest31.id();
        org.elasticsearch.common.unit.TimeValue timeValue33 = deleteRequest31.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest20.timeout(timeValue33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str39 = deleteRequest38.id();
        org.elasticsearch.index.shard.ShardId shardId40 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest38.setShardId(shardId40);
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest38.setShardId(shardId42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest44.parent("delete {[][][]}");
        org.elasticsearch.index.VersionType versionType47 = deleteRequest46.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest43.versionType(versionType47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest48.parent("delete {[hi!][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue51 = deleteRequest48.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest34.timeout(timeValue51);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest15.timeout(timeValue51);
        org.elasticsearch.common.io.stream.StreamInput streamInput54 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest53.readFrom(streamInput54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + refreshPolicy14 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy14.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(timeValue33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(versionType47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(timeValue51);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest53);
    }

    @Test
    public void test3307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3307");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType6 = deleteRequest5.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = deleteRequest10.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy21 = deleteRequest15.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest10.setRefreshPolicy(refreshPolicy21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest5.setRefreshPolicy(refreshPolicy21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest5.id("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        boolean boolean26 = deleteRequest5.getShouldPersistResult();
        org.elasticsearch.index.VersionType versionType27 = deleteRequest5.versionType();
        org.elasticsearch.common.transport.TransportAddress transportAddress28 = deleteRequest5.remoteAddress();
        java.lang.String str29 = deleteRequest5.parent();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertNull(transportAddress11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertTrue("'" + refreshPolicy21 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy21.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(versionType27);
        org.junit.Assert.assertNull(transportAddress28);
        org.junit.Assert.assertNull(str29);
    }

    @Test
    public void test3308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3308");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long10 = deleteRequest9.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue11 = deleteRequest9.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.timeout(timeValue11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.version((long) 1);
        org.elasticsearch.index.VersionType versionType15 = deleteRequest14.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str17 = deleteRequest16.parent();
        deleteRequest16.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest16.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.type("delete {[null][null][null]}");
        java.lang.String str24 = deleteRequest21.parent();
        boolean boolean25 = deleteRequest21.getShouldPersistResult();
        java.lang.String str26 = deleteRequest21.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId34 = null;
        org.elasticsearch.tasks.Task task35 = deleteRequest30.createTask(0L, "", "", taskId34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest30.setRefreshPolicy("");
        java.lang.String str38 = deleteRequest37.toString();
        java.lang.String[] strArray39 = deleteRequest37.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest37.index("");
        org.elasticsearch.common.unit.TimeValue timeValue42 = deleteRequest41.timeout();
        org.elasticsearch.index.VersionType versionType43 = deleteRequest41.versionType();
        java.lang.String str44 = deleteRequest41.type();
        org.elasticsearch.tasks.TaskId taskId45 = deleteRequest41.getParentTask();
        deleteRequest21.setParentTask(taskId45);
        deleteRequest14.setParentTask(taskId45);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(timeValue11);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(versionType15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(task35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "delete {[][][]}" + "'", str38, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(timeValue42);
        org.junit.Assert.assertNotNull(versionType43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNotNull(taskId45);
    }

    @Test
    public void test3309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3309");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.setRefreshPolicy(refreshPolicy14);
        long long16 = deleteRequest3.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest19.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue24 = deleteRequest23.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest19.timeout(timeValue24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str27 = deleteRequest26.parent();
        org.elasticsearch.index.VersionType versionType28 = deleteRequest26.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest19.versionType(versionType28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest3.versionType(versionType28);
        org.elasticsearch.common.unit.TimeValue timeValue31 = deleteRequest30.timeout();
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest30.setShardId(shardId32);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy34 = deleteRequest30.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str39 = deleteRequest38.id();
        org.elasticsearch.index.shard.ShardId shardId40 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest38.setShardId(shardId40);
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest38.setShardId(shardId42);
        java.lang.String str44 = deleteRequest43.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId52 = null;
        org.elasticsearch.tasks.Task task53 = deleteRequest48.createTask(0L, "", "", taskId52);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest48.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType56 = deleteRequest48.versionType();
        java.lang.String str57 = deleteRequest48.parent();
        org.elasticsearch.index.shard.ShardId shardId58 = deleteRequest48.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel59 = deleteRequest48.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest43.consistencyLevel(writeConsistencyLevel59);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest30.consistencyLevel(writeConsistencyLevel59);
        java.lang.String[] strArray62 = deleteRequest30.indices();
        java.lang.String[] strArray63 = deleteRequest30.indices();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest30.timeout("delete {[][delete {[][][]}][]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[][delete {[][][]}][]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(transportAddress13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(timeValue24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(timeValue31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNull(refreshPolicy34);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(task53);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(versionType56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(shardId58);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel59 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel59.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray63);
    }

    @Test
    public void test3310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3310");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str7 = deleteRequest6.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest6.getParentTask();
        deleteRequest3.setParentTask(taskId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.consistencyLevel(writeConsistencyLevel14);
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest15.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.index.VersionType versionType21 = deleteRequest20.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str27 = deleteRequest26.getDescription();
        java.lang.String str28 = deleteRequest26.routing();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest15.consistencyLevel(writeConsistencyLevel29);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException31 = deleteRequest15.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest15.version(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str41 = deleteRequest40.id();
        java.lang.String str42 = deleteRequest40.index();
        org.elasticsearch.tasks.TaskId taskId43 = deleteRequest40.getParentTask();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException44 = deleteRequest40.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue47 = deleteRequest46.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress48 = null;
        deleteRequest46.remoteAddress(transportAddress48);
        org.elasticsearch.common.unit.TimeValue timeValue50 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest46.timeout(timeValue50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest40.timeout(timeValue50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest40.version((long) ' ');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest54.parent("hi!");
        org.elasticsearch.tasks.TaskId taskId57 = deleteRequest56.getParentTask();
        org.elasticsearch.tasks.Task task58 = deleteRequest33.createTask((long) (short) -1, "delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}", "delete {[][delete {[delete {[][][hi!]}][null][null]}][]}", taskId57);
        org.elasticsearch.action.support.IndicesOptions indicesOptions59 = deleteRequest33.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str64 = deleteRequest63.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest63.version((long) (short) 100);
        java.lang.String str67 = deleteRequest63.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue70 = deleteRequest69.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress71 = null;
        deleteRequest69.remoteAddress(transportAddress71);
        java.lang.String str73 = deleteRequest69.index();
        org.elasticsearch.index.VersionType versionType74 = deleteRequest69.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest63.versionType(versionType74);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest75.version((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest86 = deleteRequest84.type("delete {[][][]}");
        java.lang.String str87 = deleteRequest84.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest89 = deleteRequest84.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest91 = deleteRequest89.parent("delete {[][][]}");
        java.lang.String str92 = deleteRequest89.type();
        org.elasticsearch.tasks.TaskId taskId93 = deleteRequest89.getParentTask();
        org.elasticsearch.tasks.Task task94 = deleteRequest75.createTask((long) '#', "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}", "delete {[][][null]}", taskId93);
        org.elasticsearch.tasks.Task task95 = deleteRequest33.createTask(0L, "delete {[delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][delete {[hi!][null][null]}][hi!]}]}", "delete {[][][delete {[hi!][null][null]}]}", taskId93);
        java.lang.String str96 = deleteRequest33.id();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertNotNull(versionType21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][][]}" + "'", str27, "delete {[][][]}");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel29 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel29.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNull(actionRequestValidationException31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(taskId43);
        org.junit.Assert.assertNull(actionRequestValidationException44);
        org.junit.Assert.assertNotNull(timeValue47);
        org.junit.Assert.assertNotNull(timeValue50);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(taskId57);
        org.junit.Assert.assertNotNull(task58);
        org.junit.Assert.assertNotNull(indicesOptions59);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(timeValue70);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "delete {[null][null][null]}" + "'", str73, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(versionType74);
        org.junit.Assert.assertNotNull(deleteRequest75);
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertNotNull(deleteRequest86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "delete {[][][]}" + "'", str87, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest89);
        org.junit.Assert.assertNotNull(deleteRequest91);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "delete {[][][]}" + "'", str92, "delete {[][][]}");
        org.junit.Assert.assertNotNull(taskId93);
        org.junit.Assert.assertNotNull(task94);
        org.junit.Assert.assertNotNull(task95);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "" + "'", str96, "");
    }

    @Test
    public void test3311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3311");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long2 = deleteRequest1.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.index("");
        boolean boolean5 = deleteRequest1.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.version((long) 1);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException8 = deleteRequest1.validate();
        long long9 = deleteRequest1.version();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(actionRequestValidationException8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1L + "'", long9 == 1L);
    }

    @Test
    public void test3312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3312");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest7.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue12 = deleteRequest11.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest7.timeout(timeValue12);
        java.lang.String str14 = deleteRequest7.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException15 = deleteRequest7.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure17 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[][null][null]}", (java.lang.Throwable) actionRequestValidationException15, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure19 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "hi!", (java.lang.Throwable) actionRequestValidationException15, "");
        java.lang.String str20 = shardFailure19.indexUUID;
        java.lang.String str21 = shardFailure19.reason;
        java.lang.Throwable throwable22 = shardFailure19.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure24 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}", throwable22, "delete {[][][null]}");
        java.lang.Throwable throwable25 = shardFailure24.cause;
        org.junit.Assert.assertNotNull(timeValue12);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[][null][null]}" + "'", str14, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException15);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable22.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertNotNull(throwable25);
        org.junit.Assert.assertEquals(throwable25.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable25.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable25.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
    }

    @Test
    public void test3313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3313");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.type();
        deleteRequest3.setParentTask("delete {[][][hi!]}", (long) (short) 1);
        java.lang.String str8 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str13 = deleteRequest12.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.id("hi!");
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest15.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.setRefreshPolicy("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy19 = deleteRequest15.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId27 = null;
        org.elasticsearch.tasks.Task task28 = deleteRequest23.createTask(0L, "", "", taskId27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest23.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType31 = deleteRequest23.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel32 = deleteRequest23.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest15.consistencyLevel(writeConsistencyLevel32);
        org.elasticsearch.index.shard.ShardId shardId34 = deleteRequest33.shardId();
        org.elasticsearch.index.shard.ShardId shardId35 = deleteRequest33.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest33.parent("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][null][null]}", "delete {[hi!][null][null]}", "delete {[hi!][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel42 = deleteRequest41.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest33.consistencyLevel(writeConsistencyLevel42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest3.consistencyLevel(writeConsistencyLevel42);
        long long45 = deleteRequest3.version();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertTrue("'" + refreshPolicy19 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy19.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(task28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(versionType31);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel32 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel32.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNull(shardId34);
        org.junit.Assert.assertNull(shardId35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel42 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel42.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-3L) + "'", long45 == (-3L));
    }

    @Test
    public void test3314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3314");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.type("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId12 = null;
        org.elasticsearch.tasks.Task task13 = deleteRequest8.createTask(0L, "", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest8.setRefreshPolicy("");
        java.lang.String str16 = deleteRequest15.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long19 = deleteRequest18.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str21 = deleteRequest20.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue24 = deleteRequest23.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest20.timeout(timeValue24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId28 = deleteRequest27.getParentTask();
        deleteRequest18.setParentTask(taskId28);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel30 = deleteRequest18.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest15.consistencyLevel(writeConsistencyLevel30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest2.consistencyLevel(writeConsistencyLevel30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel34 = deleteRequest33.consistencyLevel();
        java.lang.String str35 = deleteRequest33.parent();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel36 = deleteRequest33.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel37 = deleteRequest33.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest32.consistencyLevel(writeConsistencyLevel37);
        org.elasticsearch.tasks.TaskId taskId39 = deleteRequest32.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}", "delete {[delete {[][null][null]}][null][null]}", "delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}");
        org.elasticsearch.tasks.TaskId taskId47 = deleteRequest46.getParentTask();
        org.elasticsearch.tasks.Task task48 = deleteRequest32.createTask((long) 'a', "delete {[][delete {[][][hi!]}][]}", "delete {[][delete {[][][]}][]}", taskId47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest32.id("delete {[delete {[hi!][null][null]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[][][]}" + "'", str16, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(timeValue24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(taskId28);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel30 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel30.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel34 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel34.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel36 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel36.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel37 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel37.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(taskId39);
        org.junit.Assert.assertNotNull(taskId47);
        org.junit.Assert.assertNotNull(task48);
        org.junit.Assert.assertNotNull(deleteRequest50);
    }

    @Test
    public void test3315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3315");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.Class<?> wildcardClass11 = deleteRequest10.getClass();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test3316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3316");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.index.VersionType versionType4 = deleteRequest3.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId12 = null;
        org.elasticsearch.tasks.Task task13 = deleteRequest8.createTask(0L, "", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest8.setRefreshPolicy("");
        java.lang.String str16 = deleteRequest15.toString();
        java.lang.String str17 = deleteRequest15.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.type("delete {[null][null][null]}");
        java.lang.String str22 = deleteRequest19.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest19.index("");
        org.elasticsearch.common.unit.TimeValue timeValue25 = deleteRequest24.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest15.timeout(timeValue25);
        org.elasticsearch.index.VersionType versionType27 = deleteRequest26.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest3.versionType(versionType27);
        java.lang.Class<?> wildcardClass29 = deleteRequest28.getClass();
        org.junit.Assert.assertNotNull(versionType4);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[][][]}" + "'", str16, "delete {[][][]}");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[][][]}" + "'", str17, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(timeValue25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(versionType27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test3317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3317");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest2.setShardId(shardId4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str10 = deleteRequest9.id();
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.setShardId(shardId11);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest9.setShardId(shardId13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest9.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.routing("delete {[][][hi!]}");
        java.lang.String str19 = deleteRequest18.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest18.id("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.version((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str25 = deleteRequest24.parent();
        deleteRequest24.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest24.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.type("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long34 = deleteRequest33.primaryTerm();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel35 = deleteRequest33.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest31.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest23.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest2.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.index("delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}");
        org.elasticsearch.index.VersionType versionType41 = deleteRequest38.versionType();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel35 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel35.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(versionType41);
    }

    @Test
    public void test3318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3318");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.action.support.IndicesOptions indicesOptions7 = deleteRequest6.indicesOptions();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy8 = deleteRequest6.getRefreshPolicy();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest6.timeout("delete {[null][delete {[delete {[][delete {[delete {[][][hi!]}][null][null]}][]}][null][null]}][null]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[null][delete {[delete {[][delete {[delete {[][][hi!]}][null][null]}][]}][null][null]}][null]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(indicesOptions7);
        org.junit.Assert.assertTrue("'" + refreshPolicy8 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy8.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
    }

    @Test
    public void test3319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3319");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.parent("hi!");
        java.lang.String str10 = deleteRequest9.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][hi!]}][null][null]}", "delete {[][][]}", "");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel15 = deleteRequest14.consistencyLevel();
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.setShardId(shardId16);
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest17.getParentTask();
        deleteRequest9.setParentTask(taskId18);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel15 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel15.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(taskId18);
    }

    @Test
    public void test3320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3320");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.consistencyLevel(writeConsistencyLevel23);
        java.lang.String str25 = deleteRequest24.type();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput26 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest24.writeTo(streamOutput26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
    }

    @Test
    public void test3321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3321");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str10 = deleteRequest9.id();
        java.lang.String str11 = deleteRequest9.index();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest9.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest0.createTask((-1L), "delete {[][][hi!]}", "delete {[][delete {[][][]}][delete {[][][]}]}", taskId12);
        deleteRequest0.setParentTask("delete {[delete {[][][hi!]}][null][null]}", (long) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest0.parent("delete {[delete {[null][null][null]}][null][null]}");
        java.lang.String str19 = deleteRequest18.routing();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test3322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3322");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.index("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        deleteRequest10.setParentTask("delete {[null][null][null]}", (long) (short) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest10.index("delete {[hi!][][delete {[][][]}]}");
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest15.getParentTask();
        java.lang.String str17 = deleteRequest15.type();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest15.setShardId(shardId18);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest15.setRefreshPolicy("delete {[delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}][null][null]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}][null][null]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[][][]}" + "'", str17, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest19);
    }

    @Test
    public void test3323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3323");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest1.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue6 = deleteRequest5.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.timeout(timeValue6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str9 = deleteRequest8.parent();
        org.elasticsearch.index.VersionType versionType10 = deleteRequest8.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest1.versionType(versionType10);
        long long12 = deleteRequest11.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.type("");
        deleteRequest14.primaryTerm(100L);
        org.elasticsearch.common.transport.TransportAddress transportAddress17 = deleteRequest14.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy18 = deleteRequest14.getRefreshPolicy();
        org.elasticsearch.index.shard.IndexShard indexShard19 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete20 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest14, indexShard19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(versionType10);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(transportAddress17);
        org.junit.Assert.assertTrue("'" + refreshPolicy18 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy18.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
    }

    @Test
    public void test3324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3324");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        java.lang.String str4 = deleteRequest2.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest2.parent("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest2.parent("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.routing("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.index("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        java.lang.String str13 = deleteRequest10.parent();
        long long14 = deleteRequest10.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest10.id("delete {[delete {[][null][null]}][][delete {[][][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}]}]}");
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str4, "delete {[delete {[][][hi!]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}" + "'", str13, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest16);
    }

    @Test
    public void test3325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3325");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.type("delete {[null][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest1.setShardId(shardId4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.version((long) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}", "delete {[hi!][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest13.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId17 = deleteRequest16.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId25 = null;
        org.elasticsearch.tasks.Task task26 = deleteRequest21.createTask(0L, "", "", taskId25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest21.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = deleteRequest28.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions30 = deleteRequest28.indicesOptions();
        java.lang.String str31 = deleteRequest28.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str33 = deleteRequest32.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest32.version((long) (short) 100);
        deleteRequest32.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str39 = deleteRequest38.parent();
        org.elasticsearch.index.VersionType versionType40 = deleteRequest38.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest32.versionType(versionType40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest28.versionType(versionType40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest16.versionType(versionType40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest13.versionType(versionType40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest7.versionType(versionType40);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel29 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel29.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "delete {[][][]}" + "'", str31, "delete {[][][]}");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(versionType40);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest45);
    }

    @Test
    public void test3326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3326");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][delete {[delete {[][][hi!]}][null][null]}][]}][null][null]}", "delete {[][hi!][delete {[][][]}]}", "delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
    }

    @Test
    public void test3327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3327");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = deleteRequest3.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.setShardId(shardId6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType14 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest7.versionType(versionType14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str20 = deleteRequest19.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest19.parent("hi!");
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest19.getParentTask();
        org.elasticsearch.tasks.Task task24 = deleteRequest15.createTask((-3L), "delete {[][][hi!]}", "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}", taskId23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest15.type("delete {[delete {[][][]}][delete {[null][null][null]}][delete {[null][null][null]}]}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(transportAddress5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[null][null][null]}" + "'", str20, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertNotNull(task24);
        org.junit.Assert.assertNotNull(deleteRequest26);
    }

    @Test
    public void test3328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3328");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}][delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}][]}", throwable2, "delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}");
    }

    @Test
    public void test3329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3329");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        deleteRequest10.primaryTerm(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.type("hi!");
        java.lang.String str15 = deleteRequest10.type();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest10.setRefreshPolicy("delete {[delete {[][delete {[null][null][null]}][delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}]}][delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}][]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[delete {[][delete {[null][null][null]}][delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}]}][delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}][]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
    }

    @Test
    public void test3330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3330");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str7 = deleteRequest6.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest6.getParentTask();
        deleteRequest3.setParentTask(taskId10);
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.version(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest3.routing("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str21 = deleteRequest20.id();
        java.lang.String str22 = deleteRequest20.index();
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest20.getParentTask();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException24 = deleteRequest20.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue27 = deleteRequest26.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress28 = null;
        deleteRequest26.remoteAddress(transportAddress28);
        org.elasticsearch.common.unit.TimeValue timeValue30 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest26.timeout(timeValue30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest20.timeout(timeValue30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest3.timeout(timeValue30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest3.parent("delete {[null][null][delete {[][][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest35.type("delete {[delete {[hi!][null][null]}][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = deleteRequest37.consistencyLevel();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertNull(actionRequestValidationException24);
        org.junit.Assert.assertNotNull(timeValue27);
        org.junit.Assert.assertNotNull(timeValue30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel38 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel38.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test3331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3331");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        java.lang.String str4 = deleteRequest2.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest2.parent("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest2.parent("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.routing("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.index("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException13 = deleteRequest10.validate();
        java.lang.String str14 = deleteRequest10.index();
        java.lang.String str15 = deleteRequest10.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.type("delete {[][][]}");
        java.lang.String str25 = deleteRequest22.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest22.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = deleteRequest28.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel30 = deleteRequest28.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest22.consistencyLevel(writeConsistencyLevel30);
        deleteRequest31.setParentTask("hi!", 1L);
        java.lang.String str35 = deleteRequest31.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str40 = deleteRequest39.id();
        java.lang.String str41 = deleteRequest39.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest39.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest44.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest46.type("delete {[hi!][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel49 = deleteRequest46.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel50 = deleteRequest46.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest43.consistencyLevel(writeConsistencyLevel50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest31.consistencyLevel(writeConsistencyLevel50);
        org.elasticsearch.common.transport.TransportAddress transportAddress53 = null;
        deleteRequest31.remoteAddress(transportAddress53);
        org.elasticsearch.tasks.TaskId taskId55 = deleteRequest31.getParentTask();
        org.elasticsearch.tasks.Task task56 = deleteRequest10.createTask(0L, "delete {[delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][null][null]}", "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}", taskId55);
        java.lang.Class<?> wildcardClass57 = task56.getClass();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str4, "delete {[delete {[][][hi!]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(actionRequestValidationException13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}" + "'", str14, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][null][null]}" + "'", str15, "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[][][]}" + "'", str25, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel29 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel29.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel30 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel30.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel49 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel49.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel50 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel50.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(taskId55);
        org.junit.Assert.assertNotNull(task56);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test3332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3332");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        java.lang.String str4 = deleteRequest2.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest2.parent("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId14 = null;
        org.elasticsearch.tasks.Task task15 = deleteRequest10.createTask(0L, "", "", taskId14);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel16 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress21 = deleteRequest20.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId29 = null;
        org.elasticsearch.tasks.Task task30 = deleteRequest25.createTask(0L, "", "", taskId29);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy31 = deleteRequest25.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest20.setRefreshPolicy(refreshPolicy31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest10.setRefreshPolicy(refreshPolicy31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest2.setRefreshPolicy(refreshPolicy31);
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest34.setShardId(shardId35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}", "delete {[hi!][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel41 = deleteRequest40.consistencyLevel();
        java.lang.String str42 = deleteRequest40.index();
        deleteRequest40.setParentTask("delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}", (long) (short) 100);
        org.elasticsearch.index.VersionType versionType46 = deleteRequest40.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest36.versionType(versionType46);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str4, "delete {[delete {[][][hi!]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(task15);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel16 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel16.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(transportAddress21);
        org.junit.Assert.assertNotNull(task30);
        org.junit.Assert.assertTrue("'" + refreshPolicy31 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy31.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel41 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel41.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertNotNull(versionType46);
        org.junit.Assert.assertNotNull(deleteRequest47);
    }

    @Test
    public void test3333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3333");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version((long) (short) 100);
        deleteRequest0.primaryTerm(100L);
        boolean boolean6 = deleteRequest0.getShouldPersistResult();
        boolean boolean7 = deleteRequest0.getShouldPersistResult();
        boolean boolean8 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = null;
        deleteRequest0.remoteAddress(transportAddress9);
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest0.shardId();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(shardId11);
    }

    @Test
    public void test3334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3334");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[null][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.setShardId(shardId6);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException8 = deleteRequest3.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure10 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}", (java.lang.Throwable) actionRequestValidationException8, "delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        java.lang.Throwable throwable11 = shardFailure10.cause;
        java.lang.String str12 = shardFailure10.indexUUID;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting13 = shardFailure10.routing;
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(actionRequestValidationException8);
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "Validation Failed: 1: id is missing;");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "Validation Failed: 1: id is missing;");
        org.junit.Assert.assertEquals(throwable11.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: id is missing;");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}" + "'", str12, "delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        org.junit.Assert.assertNull(shardRouting13);
    }

    @Test
    public void test3335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3335");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        deleteRequest0.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.type("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.version((long) '#');
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest7.setShardId(shardId10);
        java.lang.String str12 = deleteRequest11.id();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test3336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3336");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest10.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId13 = null;
        deleteRequest10.setParentTask(taskId13);
        java.lang.String str15 = deleteRequest10.type();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy16 = deleteRequest10.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest10.version((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest10.index("");
        org.elasticsearch.common.unit.TimeValue timeValue21 = deleteRequest20.timeout();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + refreshPolicy16 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy16.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(timeValue21);
    }

    @Test
    public void test3337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3337");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType17 = deleteRequest16.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest8.versionType(versionType17);
        java.lang.String str19 = deleteRequest8.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest8.index("delete {[][delete {[][][]}][]}");
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(versionType17);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[][delete {[][][]}][delete {[][][]}]}" + "'", str19, "delete {[][delete {[][][]}][delete {[][][]}]}");
        org.junit.Assert.assertNotNull(deleteRequest21);
    }

    @Test
    public void test3338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3338");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest5.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest5.type("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest5.type("delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long16 = deleteRequest15.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.index("");
        boolean boolean19 = deleteRequest15.getShouldPersistResult();
        deleteRequest15.primaryTerm((long) 0);
        org.elasticsearch.common.unit.TimeValue timeValue22 = deleteRequest15.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest13.timeout(timeValue22);
        boolean boolean24 = deleteRequest13.getShouldPersistResult();
        java.lang.String str25 = deleteRequest13.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[][delete {[][][]}][delete {[delete {[hi!][null][null]}][null][delete {[][][hi!]}]}]}", deleteRequest13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(timeValue22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][][]}]}" + "'", str25, "delete {[][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][][]}]}");
    }

    @Test
    public void test3339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3339");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest1.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue6 = deleteRequest5.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.timeout(timeValue6);
        java.lang.String str8 = deleteRequest1.index();
        java.lang.String str9 = deleteRequest1.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest1.type("delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest1.parent("delete {[][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][][]}]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = deleteRequest1.remoteAddress();
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNull(transportAddress14);
    }

    @Test
    public void test3340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3340");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.consistencyLevel(writeConsistencyLevel23);
        deleteRequest24.setParentTask("hi!", (long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest24.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest24.routing("hi!");
        long long32 = deleteRequest31.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str37 = deleteRequest36.id();
        org.elasticsearch.common.transport.TransportAddress transportAddress38 = deleteRequest36.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest36.setShardId(shardId39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest44.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType47 = deleteRequest46.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest40.versionType(versionType47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest31.versionType(versionType47);
        long long50 = deleteRequest49.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest49.version((long) 100);
        java.lang.String str53 = deleteRequest52.type();
        java.lang.Class<?> wildcardClass54 = deleteRequest52.getClass();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(transportAddress38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(versionType47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 0L + "'", long50 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test3341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3341");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest10.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId13 = null;
        deleteRequest10.setParentTask(taskId13);
        deleteRequest10.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest10.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        java.lang.String str19 = deleteRequest18.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest18.type("hi!");
        java.lang.String str22 = deleteRequest21.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId30 = null;
        org.elasticsearch.tasks.Task task31 = deleteRequest26.createTask(0L, "", "", taskId30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest26.setRefreshPolicy("");
        deleteRequest33.primaryTerm(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest33.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel39 = deleteRequest38.consistencyLevel();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy40 = deleteRequest38.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest37.setRefreshPolicy(refreshPolicy40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest21.setRefreshPolicy(refreshPolicy40);
        java.lang.String[] strArray43 = deleteRequest42.indices();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions12);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(task31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel39 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel39.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + refreshPolicy40 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy40.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(strArray43);
    }

    @Test
    public void test3342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3342");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest1.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue6 = deleteRequest5.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.timeout(timeValue6);
        java.lang.String str8 = deleteRequest1.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException9 = deleteRequest1.validate();
        java.lang.String str10 = deleteRequest1.parent();
        java.lang.String str11 = deleteRequest1.parent();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest1.setRefreshPolicy("delete {[][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][][]}]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][][]}]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[][null][null]}" + "'", str8, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test3343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3343");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.consistencyLevel(writeConsistencyLevel23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue27 = deleteRequest26.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress28 = null;
        deleteRequest26.remoteAddress(transportAddress28);
        org.elasticsearch.common.unit.TimeValue timeValue30 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest26.timeout(timeValue30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest10.timeout(timeValue30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.parent("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId35 = deleteRequest34.getParentTask();
        long long36 = deleteRequest34.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest34.parent("delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.setRefreshPolicy("delete {[][][delete {[delete {[][null][null]}][][]}]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[][][delete {[delete {[][null][null]}][][]}]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(timeValue27);
        org.junit.Assert.assertNotNull(timeValue30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(taskId35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest38);
    }

    @Test
    public void test3344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3344");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType6 = deleteRequest5.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = deleteRequest10.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy21 = deleteRequest15.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest10.setRefreshPolicy(refreshPolicy21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest5.setRefreshPolicy(refreshPolicy21);
        java.lang.String str24 = deleteRequest23.parent();
        org.elasticsearch.common.unit.TimeValue timeValue25 = deleteRequest23.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest23.routing("delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress28 = null;
        deleteRequest27.remoteAddress(transportAddress28);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertNull(transportAddress11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertTrue("'" + refreshPolicy21 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy21.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(timeValue25);
        org.junit.Assert.assertNotNull(deleteRequest27);
    }

    @Test
    public void test3345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3345");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.consistencyLevel(writeConsistencyLevel23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue27 = deleteRequest26.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress28 = null;
        deleteRequest26.remoteAddress(transportAddress28);
        org.elasticsearch.common.unit.TimeValue timeValue30 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest26.timeout(timeValue30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest10.timeout(timeValue30);
        deleteRequest32.setParentTask("delete {[null][delete {[][delete {[hi!][null][null]}][hi!]}][delete {[][][hi!]}]}", 0L);
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(timeValue27);
        org.junit.Assert.assertNotNull(timeValue30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest32);
    }

    @Test
    public void test3346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3346");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        java.lang.String str4 = deleteRequest2.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest2.version((long) (short) 100);
        deleteRequest6.primaryTerm(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str10 = deleteRequest9.parent();
        deleteRequest9.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest9.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest9.version(10L);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel17 = deleteRequest16.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest6.consistencyLevel(writeConsistencyLevel17);
        java.lang.Class<?> wildcardClass19 = deleteRequest6.getClass();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel17 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel17.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test3347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3347");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.common.unit.TimeValue timeValue5 = deleteRequest3.timeout();
        java.lang.String str6 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str11 = deleteRequest10.getDescription();
        org.elasticsearch.index.VersionType versionType12 = deleteRequest10.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.versionType(versionType12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.version((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.type("delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput18 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest15.writeTo(streamOutput18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
    }

    @Test
    public void test3348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3348");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.routing();
        java.lang.String str7 = deleteRequest3.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str9 = deleteRequest8.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress10 = deleteRequest8.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest8.getParentTask();
        deleteRequest3.setParentTask(taskId11);
        deleteRequest3.setParentTask("delete {[][null][delete {[][delete {[][][hi!]}][delete {[][][]}]}]}", (-3L));
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(transportAddress10);
        org.junit.Assert.assertNotNull(taskId11);
    }

    @Test
    public void test3349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3349");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest7.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.version((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.id("delete {[delete {[][][hi!]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest7.id("delete {[hi!][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel17 = deleteRequest7.consistencyLevel();
        org.elasticsearch.common.transport.TransportAddress transportAddress18 = null;
        deleteRequest7.remoteAddress(transportAddress18);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(taskId8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel17 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel17.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test3350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3350");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest7.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.index("delete {[][][hi!]}");
        java.lang.String str13 = deleteRequest12.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.routing("delete {[delete {[hi!][null][null]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.parent("delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[][][]}]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy18 = deleteRequest17.getRefreshPolicy();
        boolean boolean19 = deleteRequest17.getShouldPersistResult();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(taskId8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + refreshPolicy18 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy18.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test3351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3351");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str7 = deleteRequest6.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest6.getParentTask();
        deleteRequest3.setParentTask(taskId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.consistencyLevel(writeConsistencyLevel14);
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest15.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.index.VersionType versionType21 = deleteRequest20.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str27 = deleteRequest26.getDescription();
        java.lang.String str28 = deleteRequest26.routing();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest15.consistencyLevel(writeConsistencyLevel29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.type("delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException33 = deleteRequest30.validate();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertNotNull(versionType21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][][]}" + "'", str27, "delete {[][][]}");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel29 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel29.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNull(actionRequestValidationException33);
    }

    @Test
    public void test3352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3352");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest1.setParentTask("hi!", (long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.type("delete {[][][]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy11 = deleteRequest8.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest1.setRefreshPolicy(refreshPolicy11);
        long long13 = deleteRequest1.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest1.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.id("delete {[delete {[][null][null]}][][delete {[][][hi!]}]}");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + refreshPolicy11 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy11.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-3L) + "'", long13 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
    }

    @Test
    public void test3353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3353");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][hi!]}", "delete {[hi!][null][null]}", "delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId6 = deleteRequest5.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId14 = null;
        org.elasticsearch.tasks.Task task15 = deleteRequest10.createTask(0L, "", "", taskId14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest10.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel18 = deleteRequest17.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions19 = deleteRequest17.indicesOptions();
        java.lang.String str20 = deleteRequest17.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str22 = deleteRequest21.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.version((long) (short) 100);
        deleteRequest21.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str28 = deleteRequest27.parent();
        org.elasticsearch.index.VersionType versionType29 = deleteRequest27.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest21.versionType(versionType29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest17.versionType(versionType29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest5.versionType(versionType29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest3.versionType(versionType29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest33.type("delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress36 = null;
        deleteRequest35.remoteAddress(transportAddress36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.index("delete {[][][hi!]}");
        java.lang.String str41 = deleteRequest40.parent();
        java.lang.String str42 = deleteRequest40.type();
        long long43 = deleteRequest40.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue44 = deleteRequest40.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest35.timeout(timeValue44);
        java.lang.String str46 = deleteRequest35.getDescription();
        java.lang.String str47 = deleteRequest35.type();
        org.junit.Assert.assertNull(shardId6);
        org.junit.Assert.assertNotNull(task15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel18 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel18.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[][][]}" + "'", str20, "delete {[][][]}");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(versionType29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 0L + "'", long43 == 0L);
        org.junit.Assert.assertNotNull(timeValue44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "delete {[delete {[][][hi!]}][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[null][null][null]}]}" + "'", str46, "delete {[delete {[][][hi!]}][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[null][null][null]}]}");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "delete {[][delete {[][][hi!]}][delete {[][][]}]}" + "'", str47, "delete {[][delete {[][][hi!]}][delete {[][][]}]}");
    }

    @Test
    public void test3354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3354");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.type("delete {[][][]}");
        java.lang.String str11 = deleteRequest8.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest8.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId21 = null;
        org.elasticsearch.tasks.Task task22 = deleteRequest17.createTask(0L, "", "", taskId21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest17.setRefreshPolicy("");
        java.lang.String str25 = deleteRequest24.toString();
        java.lang.String[] strArray26 = deleteRequest24.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest24.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str37 = deleteRequest36.id();
        java.lang.String str38 = deleteRequest36.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str40 = deleteRequest39.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest39.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId43 = deleteRequest39.getParentTask();
        deleteRequest36.setParentTask(taskId43);
        deleteRequest32.setParentTask(taskId43);
        deleteRequest28.setParentTask(taskId43);
        deleteRequest13.setParentTask(taskId43);
        deleteRequest3.setParentTask(taskId43);
        org.elasticsearch.common.transport.TransportAddress transportAddress49 = deleteRequest3.remoteAddress();
        org.elasticsearch.index.VersionType versionType50 = deleteRequest3.versionType();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest3.setRefreshPolicy("delete {[delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}][null][null]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}][null][null]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[][][]}" + "'", str25, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(taskId43);
        org.junit.Assert.assertNull(transportAddress49);
        org.junit.Assert.assertNotNull(versionType50);
    }

    @Test
    public void test3355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3355");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest10.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId13 = null;
        deleteRequest10.setParentTask(taskId13);
        deleteRequest10.primaryTerm((long) (-1));
        org.elasticsearch.action.support.IndicesOptions indicesOptions17 = deleteRequest10.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId25 = null;
        org.elasticsearch.tasks.Task task26 = deleteRequest21.createTask(0L, "", "", taskId25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest21.setRefreshPolicy("");
        java.lang.String[] strArray29 = deleteRequest28.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId37 = null;
        org.elasticsearch.tasks.Task task38 = deleteRequest33.createTask(0L, "", "", taskId37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest33.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel41 = deleteRequest40.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest28.consistencyLevel(writeConsistencyLevel41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue45 = deleteRequest44.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress46 = null;
        deleteRequest44.remoteAddress(transportAddress46);
        org.elasticsearch.common.unit.TimeValue timeValue48 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest44.timeout(timeValue48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest28.timeout(timeValue48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest50.parent("delete {[][][hi!]}");
        org.elasticsearch.common.unit.TimeValue timeValue53 = deleteRequest52.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest10.timeout(timeValue53);
        org.elasticsearch.tasks.TaskId taskId55 = deleteRequest54.getParentTask();
        org.elasticsearch.index.shard.IndexShard indexShard56 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete57 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest54, indexShard56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions12);
        org.junit.Assert.assertNotNull(indicesOptions17);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(task38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel41 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel41.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(timeValue45);
        org.junit.Assert.assertNotNull(timeValue48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(timeValue53);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNull(taskId55);
    }

    @Test
    public void test3356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3356");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str8 = deleteRequest7.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str16 = deleteRequest15.id();
        java.lang.String str17 = deleteRequest15.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str19 = deleteRequest18.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest18.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId22 = deleteRequest18.getParentTask();
        deleteRequest15.setParentTask(taskId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel26 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest15.consistencyLevel(writeConsistencyLevel26);
        org.elasticsearch.tasks.TaskId taskId28 = deleteRequest27.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.index.VersionType versionType33 = deleteRequest32.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest27.versionType(versionType33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str39 = deleteRequest38.getDescription();
        java.lang.String str40 = deleteRequest38.routing();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel41 = deleteRequest38.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest27.consistencyLevel(writeConsistencyLevel41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest10.consistencyLevel(writeConsistencyLevel41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest10.type("delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.index.shard.ShardId shardId46 = deleteRequest10.shardId();
        org.elasticsearch.common.transport.TransportAddress transportAddress47 = deleteRequest10.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId48 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest10.setShardId(shardId48);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[][][]}" + "'", str8, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(taskId22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel26 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel26.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(taskId28);
        org.junit.Assert.assertNotNull(versionType33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "delete {[][][]}" + "'", str39, "delete {[][][]}");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel41 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel41.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNull(shardId46);
        org.junit.Assert.assertNull(transportAddress47);
        org.junit.Assert.assertNotNull(deleteRequest49);
    }

    @Test
    public void test3357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3357");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = deleteRequest0.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest0.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.index("delete {[][hi!][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.routing("delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[][delete {[][null][null]}][delete {[][][]}]}]}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(transportAddress6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
    }

    @Test
    public void test3358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3358");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.parent("delete {[][][]}");
        long long11 = deleteRequest10.version();
        java.lang.String str12 = deleteRequest10.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str17 = deleteRequest16.id();
        java.lang.String str18 = deleteRequest16.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str20 = deleteRequest19.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest19.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest19.getParentTask();
        deleteRequest16.setParentTask(taskId23);
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest16.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest16.version(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest16.routing("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str34 = deleteRequest33.id();
        java.lang.String str35 = deleteRequest33.index();
        org.elasticsearch.tasks.TaskId taskId36 = deleteRequest33.getParentTask();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException37 = deleteRequest33.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue40 = deleteRequest39.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress41 = null;
        deleteRequest39.remoteAddress(transportAddress41);
        org.elasticsearch.common.unit.TimeValue timeValue43 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest39.timeout(timeValue43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest33.timeout(timeValue43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest16.timeout(timeValue43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest51.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest53.type("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId63 = null;
        org.elasticsearch.tasks.Task task64 = deleteRequest59.createTask(0L, "", "", taskId63);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy65 = deleteRequest59.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId73 = null;
        org.elasticsearch.tasks.Task task74 = deleteRequest69.createTask(0L, "", "", taskId73);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy75 = deleteRequest69.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest59.setRefreshPolicy(refreshPolicy75);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest55.setRefreshPolicy(refreshPolicy75);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = deleteRequest55.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        deleteRequest79.setParentTask("delete {[][][hi!]}", (long) (byte) 100);
        org.elasticsearch.common.transport.TransportAddress transportAddress83 = null;
        deleteRequest79.remoteAddress(transportAddress83);
        org.elasticsearch.index.VersionType versionType85 = deleteRequest79.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest86 = deleteRequest50.versionType(versionType85);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = deleteRequest16.versionType(versionType85);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest88 = deleteRequest10.versionType(versionType85);
        org.elasticsearch.tasks.TaskId taskId89 = deleteRequest88.getParentTask();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-3L) + "'", long11 == (-3L));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(taskId36);
        org.junit.Assert.assertNull(actionRequestValidationException37);
        org.junit.Assert.assertNotNull(timeValue40);
        org.junit.Assert.assertNotNull(timeValue43);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(task64);
        org.junit.Assert.assertTrue("'" + refreshPolicy65 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy65.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task74);
        org.junit.Assert.assertTrue("'" + refreshPolicy75 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy75.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertNotNull(deleteRequest79);
        org.junit.Assert.assertNotNull(versionType85);
        org.junit.Assert.assertNotNull(deleteRequest86);
        org.junit.Assert.assertNotNull(deleteRequest87);
        org.junit.Assert.assertNotNull(deleteRequest88);
        org.junit.Assert.assertNotNull(taskId89);
    }

    @Test
    public void test3359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3359");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId20 = null;
        org.elasticsearch.tasks.Task task21 = deleteRequest16.createTask(0L, "", "", taskId20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest16.setRefreshPolicy("");
        deleteRequest23.primaryTerm(1L);
        java.lang.String str26 = deleteRequest23.routing();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy27 = deleteRequest23.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest3.setRefreshPolicy(refreshPolicy27);
        java.lang.String str29 = deleteRequest28.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest28.routing("");
        java.lang.String str32 = deleteRequest28.id();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][][]}" + "'", str12, "delete {[][][]}");
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + refreshPolicy27 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy27.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "delete {[][][]}" + "'", str29, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
    }

    @Test
    public void test3360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3360");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long2 = deleteRequest1.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest1.parent("hi!");
        org.elasticsearch.action.support.IndicesOptions indicesOptions7 = deleteRequest1.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId15 = null;
        org.elasticsearch.tasks.Task task16 = deleteRequest11.createTask(0L, "", "", taskId15);
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest11.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest1.timeout(timeValue17);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput19 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest1.writeTo(streamOutput19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(indicesOptions7);
        org.junit.Assert.assertNotNull(task16);
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(deleteRequest18);
    }

    @Test
    public void test3361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3361");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.type("delete {[hi!][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue5 = deleteRequest2.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest2.version((long) (byte) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long10 = deleteRequest9.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue11 = deleteRequest9.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest2.timeout(timeValue11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId20 = null;
        org.elasticsearch.tasks.Task task21 = deleteRequest16.createTask(0L, "", "", taskId20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest16.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType24 = deleteRequest16.versionType();
        java.lang.String str25 = deleteRequest16.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress26 = deleteRequest16.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy27 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest16.setRefreshPolicy(refreshPolicy27);
        org.elasticsearch.action.support.IndicesOptions indicesOptions29 = deleteRequest16.indicesOptions();
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest16.setShardId(shardId30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str36 = deleteRequest35.id();
        java.lang.String str37 = deleteRequest35.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest35.type("delete {[][][]}");
        org.elasticsearch.common.unit.TimeValue timeValue40 = deleteRequest39.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest31.timeout(timeValue40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest41.routing("delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}");
        java.lang.String str44 = deleteRequest41.routing();
        org.elasticsearch.index.VersionType versionType45 = deleteRequest41.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest12.versionType(versionType45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest47.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest47.routing("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel52 = deleteRequest51.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest46.consistencyLevel(writeConsistencyLevel52);
        org.elasticsearch.index.shard.ShardId shardId54 = deleteRequest53.shardId();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(timeValue11);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(versionType24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(transportAddress26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(indicesOptions29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(timeValue40);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}" + "'", str44, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}");
        org.junit.Assert.assertNotNull(versionType45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel52 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel52.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNull(shardId54);
    }

    @Test
    public void test3362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3362");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest10.toString();
        java.lang.String[] strArray12 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.index("");
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest14.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.parent("delete {[][delete {[null][null][null]}][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest14.version((long) (byte) 100);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = deleteRequest19.consistencyLevel();
        org.elasticsearch.index.shard.IndexShard indexShard21 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult22 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest19, indexShard21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel20 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel20.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test3363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3363");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest1.setParentTask("hi!", (long) (short) 1);
        long long5 = deleteRequest1.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.type("delete {[][][]}");
        java.lang.String str12 = deleteRequest9.id();
        java.lang.String str13 = deleteRequest9.getDescription();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException14 = deleteRequest9.validate();
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest9.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest1.timeout(timeValue15);
        java.lang.String str17 = deleteRequest16.id();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel18 = deleteRequest16.consistencyLevel();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-3L) + "'", long5 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][][]}" + "'", str12, "delete {[][][]}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[][delete {[][][]}][delete {[][][]}]}" + "'", str13, "delete {[][delete {[][][]}][delete {[][][]}]}");
        org.junit.Assert.assertNull(actionRequestValidationException14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel18 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel18.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test3364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3364");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.parent("delete {[][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest1.setShardId(shardId4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.id("delete {[delete {[][][delete {[][delete {[][][hi!]}][delete {[][][]}]}]}][null][null]}");
        org.elasticsearch.index.shard.IndexShard indexShard8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete9 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest7, indexShard8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
    }

    @Test
    public void test3365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3365");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("hi!");
        java.lang.String str4 = deleteRequest0.index();
        deleteRequest0.primaryTerm((long) 0);
        java.lang.String[] strArray7 = deleteRequest0.indices();
        org.elasticsearch.index.VersionType versionType8 = deleteRequest0.versionType();
        long long9 = deleteRequest0.version();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "delete {[null][null][null]}" + "'", str1, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(versionType8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-3L) + "'", long9 == (-3L));
    }

    @Test
    public void test3366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3366");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str3 = deleteRequest2.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest2.parent("hi!");
        java.lang.String str6 = deleteRequest5.parent();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][][]}]}", deleteRequest5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "delete {[null][null][null]}" + "'", str3, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
    }

    @Test
    public void test3367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3367");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str3 = deleteRequest2.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest2.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId6 = deleteRequest2.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest2.id("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest2.index("delete {[hi!][null][null]}");
        java.lang.String str11 = deleteRequest10.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest13.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue18 = deleteRequest17.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest13.timeout(timeValue18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest10.timeout(timeValue18);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[][][]}][delete {[null][null][null]}][delete {[null][null][null]}]}", deleteRequest10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(taskId6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[delete {[hi!][null][null]}][null][delete {[][][hi!]}]}" + "'", str11, "delete {[delete {[hi!][null][null]}][null][delete {[][][hi!]}]}");
        org.junit.Assert.assertNotNull(timeValue18);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest20);
    }

    @Test
    public void test3368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3368");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}", "delete {[hi!][null][null]}", "hi!");
        org.elasticsearch.tasks.TaskId taskId4 = deleteRequest3.getParentTask();
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = null;
        deleteRequest3.remoteAddress(transportAddress5);
        org.junit.Assert.assertNotNull(taskId4);
    }

    @Test
    public void test3369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3369");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.setRefreshPolicy("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy10 = deleteRequest6.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId18 = null;
        org.elasticsearch.tasks.Task task19 = deleteRequest14.createTask(0L, "", "", taskId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType22 = deleteRequest14.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest14.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest6.consistencyLevel(writeConsistencyLevel23);
        boolean boolean25 = deleteRequest6.getShouldPersistResult();
        org.elasticsearch.action.support.IndicesOptions indicesOptions26 = deleteRequest6.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest6.getParentTask();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + refreshPolicy10 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy10.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(task19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(indicesOptions26);
        org.junit.Assert.assertNotNull(taskId27);
    }

    @Test
    public void test3370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3370");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.setRefreshPolicy("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy10 = deleteRequest6.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId18 = null;
        org.elasticsearch.tasks.Task task19 = deleteRequest14.createTask(0L, "", "", taskId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType22 = deleteRequest14.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest14.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest6.consistencyLevel(writeConsistencyLevel23);
        long long25 = deleteRequest6.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId33 = null;
        org.elasticsearch.tasks.Task task34 = deleteRequest29.createTask(0L, "", "", taskId33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest29.setRefreshPolicy("");
        java.lang.String str37 = deleteRequest36.toString();
        java.lang.String[] strArray38 = deleteRequest36.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest36.index("");
        org.elasticsearch.common.unit.TimeValue timeValue41 = deleteRequest40.timeout();
        org.elasticsearch.index.VersionType versionType42 = deleteRequest40.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest6.versionType(versionType42);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy44 = deleteRequest6.getRefreshPolicy();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy45 = deleteRequest6.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest6.routing("delete {[][delete {[][][]}][delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}]}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + refreshPolicy10 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy10.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(task19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-3L) + "'", long25 == (-3L));
        org.junit.Assert.assertNotNull(task34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "delete {[][][]}" + "'", str37, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(timeValue41);
        org.junit.Assert.assertNotNull(versionType42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertTrue("'" + refreshPolicy44 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy44.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertTrue("'" + refreshPolicy45 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy45.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(deleteRequest47);
    }

    @Test
    public void test3371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3371");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("delete {[][][]}");
        java.lang.String str8 = deleteRequest3.id();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[][][]}" + "'", str8, "delete {[][][]}");
    }

    @Test
    public void test3372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3372");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}", "delete {[][][hi!]}", "hi!");
        org.elasticsearch.index.VersionType versionType4 = deleteRequest3.versionType();
        org.elasticsearch.common.unit.TimeValue timeValue5 = deleteRequest3.timeout();
        org.junit.Assert.assertNotNull(versionType4);
        org.junit.Assert.assertNotNull(timeValue5);
    }

    @Test
    public void test3373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3373");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest10.indicesOptions();
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = deleteRequest10.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest10.setShardId(shardId14);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.timeout("delete {[][][delete {[hi!][null][null]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[][][delete {[hi!][null][null]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions12);
        org.junit.Assert.assertNull(transportAddress13);
        org.junit.Assert.assertNotNull(deleteRequest15);
    }

    @Test
    public void test3374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3374");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][hi!]}");
        boolean boolean6 = deleteRequest5.getShouldPersistResult();
        org.elasticsearch.index.shard.ShardId shardId7 = deleteRequest5.shardId();
        java.lang.String str8 = deleteRequest5.getDescription();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[][delete {[][][hi!]}][delete {[][][]}]}" + "'", str8, "delete {[][delete {[][][hi!]}][delete {[][][]}]}");
    }

    @Test
    public void test3375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3375");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.parent("delete {[][][]}");
        long long11 = deleteRequest10.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.routing("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.type("delete {[null][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress18 = deleteRequest17.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest17.setShardId(shardId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.version((long) '4');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId30 = null;
        org.elasticsearch.tasks.Task task31 = deleteRequest26.createTask(0L, "", "", taskId30);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel32 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress37 = deleteRequest36.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId45 = null;
        org.elasticsearch.tasks.Task task46 = deleteRequest41.createTask(0L, "", "", taskId45);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy47 = deleteRequest41.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest36.setRefreshPolicy(refreshPolicy47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest26.setRefreshPolicy(refreshPolicy47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest20.setRefreshPolicy(refreshPolicy47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest13.setRefreshPolicy(refreshPolicy47);
        java.lang.String str52 = deleteRequest13.getDescription();
        boolean boolean53 = deleteRequest13.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str55 = deleteRequest54.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest54.version((long) (short) 100);
        deleteRequest54.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest54.index("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress62 = deleteRequest61.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy63 = deleteRequest61.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest13.setRefreshPolicy(refreshPolicy63);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-3L) + "'", long11 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(transportAddress18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(task31);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel32 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel32.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(transportAddress37);
        org.junit.Assert.assertNotNull(task46);
        org.junit.Assert.assertTrue("'" + refreshPolicy47 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy47.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "delete {[][delete {[][][]}][delete {[][][]}]}" + "'", str52, "delete {[][delete {[][][]}][delete {[][][]}]}");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNull(transportAddress62);
        org.junit.Assert.assertTrue("'" + refreshPolicy63 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy63.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest64);
    }

    @Test
    public void test3376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3376");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.consistencyLevel(writeConsistencyLevel23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.index("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        java.lang.String str27 = deleteRequest24.id();
        org.elasticsearch.index.shard.IndexShard indexShard28 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult29 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest24, indexShard28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
    }

    @Test
    public void test3377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3377");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str3 = deleteRequest2.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest2.version((long) (short) 100);
        java.lang.String str6 = deleteRequest2.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue9 = deleteRequest8.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress10 = null;
        deleteRequest8.remoteAddress(transportAddress10);
        java.lang.String str12 = deleteRequest8.index();
        org.elasticsearch.index.VersionType versionType13 = deleteRequest8.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest2.versionType(versionType13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str16 = deleteRequest15.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue19 = deleteRequest18.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest15.timeout(timeValue19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest22.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest22.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest31.type("delete {[][][hi!]}");
        java.lang.String str34 = deleteRequest31.getDescription();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy35 = deleteRequest31.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest25.setRefreshPolicy(refreshPolicy35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest2.setRefreshPolicy(refreshPolicy35);
        long long38 = deleteRequest37.primaryTerm();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][delete {[][][]}]}", deleteRequest37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(timeValue9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[null][null][null]}" + "'", str12, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(versionType13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "delete {[][delete {[][][hi!]}][delete {[][][]}]}" + "'", str34, "delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.junit.Assert.assertTrue("'" + refreshPolicy35 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy35.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
    }

    @Test
    public void test3378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3378");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest10.toString();
        java.lang.String[] strArray12 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.index("");
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest14.timeout();
        org.elasticsearch.index.VersionType versionType16 = deleteRequest14.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest14.index("delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.id("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.version((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.routing("delete {[][delete {[null][null][null]}][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest22.routing("delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}");
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest26.getParentTask();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(versionType16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(taskId27);
    }

    @Test
    public void test3379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3379");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest10.toString();
        java.lang.String[] strArray12 = deleteRequest10.indices();
        deleteRequest10.primaryTerm(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest10.routing("delete {[null][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.setShardId(shardId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.parent("delete {[][delete {[][][]}][delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.type("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId33 = null;
        org.elasticsearch.tasks.Task task34 = deleteRequest29.createTask(0L, "", "", taskId33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest29.setRefreshPolicy("");
        java.lang.String str37 = deleteRequest36.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long40 = deleteRequest39.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str42 = deleteRequest41.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue45 = deleteRequest44.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest41.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest46.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId49 = deleteRequest48.getParentTask();
        deleteRequest39.setParentTask(taskId49);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel51 = deleteRequest39.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest36.consistencyLevel(writeConsistencyLevel51);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest23.consistencyLevel(writeConsistencyLevel51);
        org.elasticsearch.common.unit.TimeValue timeValue54 = deleteRequest53.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest20.timeout(timeValue54);
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(task34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "delete {[][][]}" + "'", str37, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(timeValue45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(taskId49);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel51 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel51.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(timeValue54);
        org.junit.Assert.assertNotNull(deleteRequest55);
    }

    @Test
    public void test3380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3380");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}", "delete {[][delete {[][][]}][delete {[][][]}]}", "delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        deleteRequest3.primaryTerm((long) (-1));
        long long6 = deleteRequest3.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.parent("delete {[delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][delete {[hi!][null][null]}][hi!]}]}");
        deleteRequest8.primaryTerm(0L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(deleteRequest8);
    }

    @Test
    public void test3381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3381");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        deleteRequest0.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.type("delete {[null][null][null]}");
        java.lang.String str8 = deleteRequest5.parent();
        boolean boolean9 = deleteRequest5.getShouldPersistResult();
        org.elasticsearch.common.transport.TransportAddress transportAddress10 = deleteRequest5.remoteAddress();
        org.elasticsearch.action.support.IndicesOptions indicesOptions11 = deleteRequest5.indicesOptions();
        org.elasticsearch.common.io.stream.StreamInput streamInput12 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest5.readFrom(streamInput12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(transportAddress10);
        org.junit.Assert.assertNotNull(indicesOptions11);
    }

    @Test
    public void test3382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3382");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("delete {[][][]}");
        java.lang.String str10 = deleteRequest7.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId22 = null;
        org.elasticsearch.tasks.Task task23 = deleteRequest18.createTask(0L, "", "", taskId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest18.setRefreshPolicy("");
        java.lang.String[] strArray26 = deleteRequest25.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId34 = null;
        org.elasticsearch.tasks.Task task35 = deleteRequest30.createTask(0L, "", "", taskId34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest30.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = deleteRequest37.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest25.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue42 = deleteRequest41.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress43 = null;
        deleteRequest41.remoteAddress(transportAddress43);
        org.elasticsearch.common.unit.TimeValue timeValue45 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest41.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest25.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest14.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest3.timeout(timeValue45);
        org.elasticsearch.index.shard.ShardId shardId50 = deleteRequest49.shardId();
        java.lang.String str51 = deleteRequest49.id();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][][]}" + "'", str10, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(task35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel38 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel38.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(timeValue42);
        org.junit.Assert.assertNotNull(timeValue45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNull(shardId50);
        org.junit.Assert.assertNull(str51);
    }

    @Test
    public void test3383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3383");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version((long) (short) 100);
        java.lang.String str4 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue7 = deleteRequest6.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = null;
        deleteRequest6.remoteAddress(transportAddress8);
        java.lang.String str10 = deleteRequest6.index();
        org.elasticsearch.index.VersionType versionType11 = deleteRequest6.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest0.versionType(versionType11);
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = deleteRequest12.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.type("delete {[null][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress21 = deleteRequest20.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest20.setShardId(shardId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.version((long) '4');
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy26 = deleteRequest23.getRefreshPolicy();
        java.lang.String str27 = deleteRequest23.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId35 = null;
        org.elasticsearch.tasks.Task task36 = deleteRequest31.createTask(0L, "", "", taskId35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest31.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType39 = deleteRequest31.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str47 = deleteRequest46.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest46.id("hi!");
        org.elasticsearch.tasks.TaskId taskId50 = deleteRequest49.getParentTask();
        org.elasticsearch.tasks.Task task51 = deleteRequest31.createTask(10L, "delete {[hi!][null][null]}", "delete {[delete {[][][hi!]}][null][null]}", taskId50);
        org.elasticsearch.tasks.TaskId taskId52 = deleteRequest31.getParentTask();
        deleteRequest23.setParentTask(taskId52);
        org.elasticsearch.tasks.Task task54 = deleteRequest12.createTask((-3L), "delete {[][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][delete {[][][]}]}", "delete {[delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}][][]}", taskId52);
        java.lang.String str55 = deleteRequest12.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest12.index("delete {[][][delete {[hi!][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard indexShard58 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult59 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest12, indexShard58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(timeValue7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[null][null][null]}" + "'", str10, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(transportAddress13);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNull(transportAddress21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertTrue("'" + refreshPolicy26 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy26.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][delete {[null][null][null]}][null]}" + "'", str27, "delete {[][delete {[null][null][null]}][null]}");
        org.junit.Assert.assertNotNull(task36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(versionType39);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(taskId50);
        org.junit.Assert.assertNotNull(task51);
        org.junit.Assert.assertNotNull(taskId52);
        org.junit.Assert.assertNotNull(task54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(deleteRequest57);
    }

    @Test
    public void test3384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3384");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.parent("delete {[][][]}");
        long long11 = deleteRequest10.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.routing("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType20 = deleteRequest19.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress25 = deleteRequest24.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId33 = null;
        org.elasticsearch.tasks.Task task34 = deleteRequest29.createTask(0L, "", "", taskId33);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy35 = deleteRequest29.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest24.setRefreshPolicy(refreshPolicy35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest19.setRefreshPolicy(refreshPolicy35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel39 = deleteRequest38.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel40 = deleteRequest38.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest19.consistencyLevel(writeConsistencyLevel40);
        long long42 = deleteRequest19.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest44.setShardId(shardId45);
        deleteRequest44.primaryTerm((long) 1);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy49 = deleteRequest44.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest19.setRefreshPolicy(refreshPolicy49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest13.setRefreshPolicy(refreshPolicy49);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException52 = deleteRequest13.validate();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-3L) + "'", long11 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(versionType20);
        org.junit.Assert.assertNull(transportAddress25);
        org.junit.Assert.assertNotNull(task34);
        org.junit.Assert.assertTrue("'" + refreshPolicy35 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy35.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel39 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel39.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel40 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel40.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-3L) + "'", long42 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertTrue("'" + refreshPolicy49 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy49.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNull(actionRequestValidationException52);
    }

    @Test
    public void test3385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3385");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType6 = deleteRequest5.versionType();
        deleteRequest5.primaryTerm((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.routing("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId18 = null;
        org.elasticsearch.tasks.Task task19 = deleteRequest14.createTask(0L, "", "", taskId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.setRefreshPolicy("");
        java.lang.String str22 = deleteRequest21.toString();
        java.lang.String[] strArray23 = deleteRequest21.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest21.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str34 = deleteRequest33.id();
        java.lang.String str35 = deleteRequest33.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str37 = deleteRequest36.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest36.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId40 = deleteRequest36.getParentTask();
        deleteRequest33.setParentTask(taskId40);
        deleteRequest29.setParentTask(taskId40);
        deleteRequest25.setParentTask(taskId40);
        deleteRequest10.setParentTask(taskId40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str49 = deleteRequest48.index();
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest48.setShardId(shardId50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId59 = null;
        org.elasticsearch.tasks.Task task60 = deleteRequest55.createTask(0L, "", "", taskId59);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy61 = deleteRequest55.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest51.setRefreshPolicy(refreshPolicy61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest10.setRefreshPolicy(refreshPolicy61);
        org.elasticsearch.common.unit.TimeValue timeValue64 = deleteRequest10.timeout();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy65 = deleteRequest10.getRefreshPolicy();
        java.lang.String str66 = deleteRequest10.type();
        org.elasticsearch.index.shard.IndexShard indexShard67 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult68 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest10, indexShard67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(task19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[][][]}" + "'", str22, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(taskId40);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(task60);
        org.junit.Assert.assertTrue("'" + refreshPolicy61 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy61.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(timeValue64);
        org.junit.Assert.assertTrue("'" + refreshPolicy65 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy65.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "delete {[][][hi!]}" + "'", str66, "delete {[][][hi!]}");
    }

    @Test
    public void test3386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3386");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest10.toString();
        java.lang.String[] strArray12 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.index("");
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest14.timeout();
        deleteRequest14.setParentTask("hi!", (long) (short) 100);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest14.setShardId(shardId19);
        java.lang.String str21 = deleteRequest14.id();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
    }

    @Test
    public void test3387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3387");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType6 = deleteRequest5.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = deleteRequest10.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy21 = deleteRequest15.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest10.setRefreshPolicy(refreshPolicy21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest5.setRefreshPolicy(refreshPolicy21);
        java.lang.String str24 = deleteRequest5.routing();
        org.elasticsearch.action.support.IndicesOptions indicesOptions25 = deleteRequest5.indicesOptions();
        org.elasticsearch.common.transport.TransportAddress transportAddress26 = deleteRequest5.remoteAddress();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertNull(transportAddress11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertTrue("'" + refreshPolicy21 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy21.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(indicesOptions25);
        org.junit.Assert.assertNull(transportAddress26);
    }

    @Test
    public void test3388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3388");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.setRefreshPolicy("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy10 = deleteRequest6.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId18 = null;
        org.elasticsearch.tasks.Task task19 = deleteRequest14.createTask(0L, "", "", taskId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType22 = deleteRequest14.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest14.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest6.consistencyLevel(writeConsistencyLevel23);
        org.elasticsearch.common.unit.TimeValue timeValue25 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.timeout(timeValue25);
        org.elasticsearch.index.shard.IndexShard indexShard27 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult28 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest26, indexShard27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + refreshPolicy10 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy10.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(task19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
    }

    @Test
    public void test3389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3389");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        deleteRequest0.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.type("delete {[null][null][null]}");
        java.lang.String str8 = deleteRequest5.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.index("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest5.routing("delete {[hi!][null][null]}");
        long long13 = deleteRequest5.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest5.version((long) (byte) 100);
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = null;
        deleteRequest15.remoteAddress(transportAddress16);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 100L + "'", long13 == 100L);
        org.junit.Assert.assertNotNull(deleteRequest15);
    }

    @Test
    public void test3390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3390");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        deleteRequest0.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.type("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.version((long) '#');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.type("delete {[delete {[hi!][null][null]}][null][null]}");
        java.lang.String[] strArray12 = deleteRequest11.indices();
        deleteRequest11.setParentTask("delete {[][null][null]}", (long) (byte) 0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test3391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3391");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}", "delete {[][delete {[delete {[][null][null]}][][]}][delete {[null][delete {[null][null][null]}][null]}]}", "delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.parent("delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.parent("delete {[][][delete {[delete {[][null][null]}][][]}]}");
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
    }

    @Test
    public void test3392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3392");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        org.elasticsearch.action.support.IndicesOptions indicesOptions9 = deleteRequest8.indicesOptions();
        org.elasticsearch.action.support.IndicesOptions indicesOptions10 = deleteRequest8.indicesOptions();
        java.lang.String str11 = deleteRequest8.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str16 = deleteRequest15.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.id("hi!");
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest18.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId27 = null;
        org.elasticsearch.tasks.Task task28 = deleteRequest23.createTask(0L, "", "", taskId27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest23.setRefreshPolicy("");
        java.lang.String[] strArray31 = deleteRequest30.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId39 = null;
        org.elasticsearch.tasks.Task task40 = deleteRequest35.createTask(0L, "", "", taskId39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest35.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel43 = deleteRequest42.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest30.consistencyLevel(writeConsistencyLevel43);
        deleteRequest44.setParentTask("hi!", (long) (short) 100);
        org.elasticsearch.index.VersionType versionType48 = deleteRequest44.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest18.versionType(versionType48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest8.versionType(versionType48);
        java.lang.String str51 = deleteRequest50.id();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(indicesOptions9);
        org.junit.Assert.assertNotNull(indicesOptions10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(task40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel43 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel43.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(versionType48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
    }

    @Test
    public void test3393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3393");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.setRefreshPolicy("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy10 = deleteRequest6.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId18 = null;
        org.elasticsearch.tasks.Task task19 = deleteRequest14.createTask(0L, "", "", taskId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType22 = deleteRequest14.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest14.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest6.consistencyLevel(writeConsistencyLevel23);
        long long25 = deleteRequest6.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId33 = null;
        org.elasticsearch.tasks.Task task34 = deleteRequest29.createTask(0L, "", "", taskId33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest29.setRefreshPolicy("");
        java.lang.String str37 = deleteRequest36.toString();
        java.lang.String[] strArray38 = deleteRequest36.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest36.index("");
        org.elasticsearch.common.unit.TimeValue timeValue41 = deleteRequest40.timeout();
        org.elasticsearch.index.VersionType versionType42 = deleteRequest40.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest6.versionType(versionType42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest49.type("delete {[null][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress52 = deleteRequest51.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest51.setShardId(shardId53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest54.version((long) '4');
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy57 = deleteRequest54.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest47.setRefreshPolicy(refreshPolicy57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest6.setRefreshPolicy(refreshPolicy57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest61.type("delete {[null][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress64 = deleteRequest63.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId65 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest63.setShardId(shardId65);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest66.version((long) '4');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId76 = null;
        org.elasticsearch.tasks.Task task77 = deleteRequest72.createTask(0L, "", "", taskId76);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel78 = deleteRequest72.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest82 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress83 = deleteRequest82.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId91 = null;
        org.elasticsearch.tasks.Task task92 = deleteRequest87.createTask(0L, "", "", taskId91);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy93 = deleteRequest87.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest94 = deleteRequest82.setRefreshPolicy(refreshPolicy93);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest95 = deleteRequest72.setRefreshPolicy(refreshPolicy93);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest96 = deleteRequest66.setRefreshPolicy(refreshPolicy93);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest97 = deleteRequest59.setRefreshPolicy(refreshPolicy93);
        java.lang.Class<?> wildcardClass98 = deleteRequest97.getClass();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + refreshPolicy10 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy10.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(task19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-3L) + "'", long25 == (-3L));
        org.junit.Assert.assertNotNull(task34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "delete {[][][]}" + "'", str37, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(timeValue41);
        org.junit.Assert.assertNotNull(versionType42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNull(transportAddress52);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertTrue("'" + refreshPolicy57 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy57.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNull(transportAddress64);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertNotNull(task77);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel78 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel78.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(transportAddress83);
        org.junit.Assert.assertNotNull(task92);
        org.junit.Assert.assertTrue("'" + refreshPolicy93 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy93.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest94);
        org.junit.Assert.assertNotNull(deleteRequest95);
        org.junit.Assert.assertNotNull(deleteRequest96);
        org.junit.Assert.assertNotNull(deleteRequest97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test3394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3394");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId12 = null;
        org.elasticsearch.tasks.Task task13 = deleteRequest8.createTask(0L, "", "", taskId12);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = deleteRequest8.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.setRefreshPolicy(refreshPolicy14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.id("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.index.shard.ShardId shardId20 = deleteRequest19.shardId();
        org.junit.Assert.assertNull(transportAddress4);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertTrue("'" + refreshPolicy14 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy14.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNull(shardId20);
    }

    @Test
    public void test3395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3395");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str7 = deleteRequest6.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest6.getParentTask();
        deleteRequest3.setParentTask(taskId10);
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.version(100L);
        java.lang.String str15 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.routing("delete {[hi!][null][null]}");
        java.lang.String str18 = deleteRequest17.type();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
    }

    @Test
    public void test3396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3396");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.setRefreshPolicy("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy10 = deleteRequest6.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId18 = null;
        org.elasticsearch.tasks.Task task19 = deleteRequest14.createTask(0L, "", "", taskId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType22 = deleteRequest14.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest14.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest6.consistencyLevel(writeConsistencyLevel23);
        org.elasticsearch.index.shard.ShardId shardId25 = deleteRequest24.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest24.version((long) (short) 1);
        java.lang.String str28 = deleteRequest24.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest24.type("delete {[null][null][null]}");
        java.lang.String str31 = deleteRequest24.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest24.type("delete {[][delete {[delete {[][null][null]}][][]}][delete {[null][delete {[null][null][null]}][null]}]}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + refreshPolicy10 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy10.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(task19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNull(shardId25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "delete {[null][null][null]}" + "'", str31, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest33);
    }

    @Test
    public void test3397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3397");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest7.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue12 = deleteRequest11.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest7.timeout(timeValue12);
        java.lang.String str14 = deleteRequest7.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException15 = deleteRequest7.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure17 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[][null][null]}", (java.lang.Throwable) actionRequestValidationException15, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure19 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "hi!", (java.lang.Throwable) actionRequestValidationException15, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure21 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}", (java.lang.Throwable) actionRequestValidationException15, "delete {[delete {[hi!][null][null]}][null][null]}");
        java.lang.String str22 = shardFailure21.indexUUID;
        java.lang.String str23 = shardFailure21.reason;
        org.junit.Assert.assertNotNull(timeValue12);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[][null][null]}" + "'", str14, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException15);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[delete {[hi!][null][null]}][null][null]}" + "'", str22, "delete {[delete {[hi!][null][null]}][null][null]}");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}" + "'", str23, "delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}");
    }

    @Test
    public void test3398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3398");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.type("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId12 = null;
        org.elasticsearch.tasks.Task task13 = deleteRequest8.createTask(0L, "", "", taskId12);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = deleteRequest8.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId22 = null;
        org.elasticsearch.tasks.Task task23 = deleteRequest18.createTask(0L, "", "", taskId22);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy24 = deleteRequest18.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest8.setRefreshPolicy(refreshPolicy24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest4.setRefreshPolicy(refreshPolicy24);
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest4.setShardId(shardId27);
        org.elasticsearch.common.transport.TransportAddress transportAddress29 = deleteRequest4.remoteAddress();
        java.lang.String[] strArray30 = deleteRequest4.indices();
        org.elasticsearch.index.shard.ShardId shardId31 = deleteRequest4.shardId();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertTrue("'" + refreshPolicy14 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy14.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertTrue("'" + refreshPolicy24 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy24.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNull(transportAddress29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNull(shardId31);
    }

    @Test
    public void test3399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3399");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str11 = deleteRequest10.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException12 = deleteRequest10.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure14 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "hi!", (java.lang.Throwable) actionRequestValidationException12, "delete {[][][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure16 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "", (java.lang.Throwable) actionRequestValidationException12, "delete {[][][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure18 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[][delete {[][][]}][delete {[][][]}]}", (java.lang.Throwable) actionRequestValidationException12, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure20 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][delete {[][][]}][delete {[][][]}]}", (java.lang.Throwable) actionRequestValidationException12, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure22 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[][null][null]}][][]}", (java.lang.Throwable) actionRequestValidationException12, "");
        java.lang.String str23 = shardFailure22.reason;
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[null][null][null]}" + "'", str11, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException12);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[delete {[][null][null]}][][]}" + "'", str23, "delete {[delete {[][null][null]}][][]}");
    }

    @Test
    public void test3400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3400");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest10.toString();
        java.lang.String[] strArray12 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.index("");
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest14.timeout();
        org.elasticsearch.index.VersionType versionType16 = deleteRequest14.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest14.index("delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.id("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId28 = null;
        org.elasticsearch.tasks.Task task29 = deleteRequest24.createTask(0L, "", "", taskId28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest24.setRefreshPolicy("");
        java.lang.String str32 = deleteRequest24.index();
        java.lang.String str33 = deleteRequest24.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest35.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue40 = deleteRequest39.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest35.timeout(timeValue40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest24.timeout(timeValue40);
        long long43 = deleteRequest42.primaryTerm();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy44 = deleteRequest42.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest20.setRefreshPolicy(refreshPolicy44);
        java.lang.String[] strArray46 = deleteRequest45.indices();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest45.setRefreshPolicy("delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][][hi!]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][][hi!]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(versionType16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(task29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(timeValue40);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 0L + "'", long43 == 0L);
        org.junit.Assert.assertTrue("'" + refreshPolicy44 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy44.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(strArray46);
    }

    @Test
    public void test3401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3401");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}", throwable2, "");
        java.lang.String str5 = shardFailure4.reason;
        java.lang.Throwable throwable6 = shardFailure4.cause;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}" + "'", str5, "delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}");
        org.junit.Assert.assertNull(throwable6);
    }

    @Test
    public void test3402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3402");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest7.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.id("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.setRefreshPolicy("");
        org.elasticsearch.tasks.TaskId taskId15 = null;
        deleteRequest14.setParentTask(taskId15);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(taskId8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
    }

    @Test
    public void test3403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3403");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.setShardId(shardId2);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = deleteRequest5.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][null][null]}", "", "delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId21 = null;
        org.elasticsearch.tasks.Task task22 = deleteRequest17.createTask(0L, "", "", taskId21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest17.setRefreshPolicy("");
        java.lang.String str25 = deleteRequest24.toString();
        java.lang.String[] strArray26 = deleteRequest24.indices();
        java.lang.String[] strArray27 = deleteRequest24.indices();
        org.elasticsearch.tasks.TaskId taskId28 = deleteRequest24.getParentTask();
        org.elasticsearch.tasks.Task task29 = deleteRequest10.createTask((long) 100, "delete {[delete {[hi!][null][null]}][null][null]}", "delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}", taskId28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[][][]}][delete {[][][]}]}", "", "delete {[][][]}");
        long long34 = deleteRequest33.version();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel35 = deleteRequest33.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel36 = deleteRequest33.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str41 = deleteRequest40.id();
        java.lang.String str42 = deleteRequest40.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str44 = deleteRequest43.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest43.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId47 = deleteRequest43.getParentTask();
        deleteRequest40.setParentTask(taskId47);
        org.elasticsearch.tasks.TaskId taskId49 = deleteRequest40.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest40.version(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest40.routing("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str58 = deleteRequest57.id();
        java.lang.String str59 = deleteRequest57.index();
        org.elasticsearch.tasks.TaskId taskId60 = deleteRequest57.getParentTask();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException61 = deleteRequest57.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue64 = deleteRequest63.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress65 = null;
        deleteRequest63.remoteAddress(transportAddress65);
        org.elasticsearch.common.unit.TimeValue timeValue67 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest63.timeout(timeValue67);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest57.timeout(timeValue67);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest40.timeout(timeValue67);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest33.timeout(timeValue67);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest10.timeout(timeValue67);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest5.timeout(timeValue67);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(transportAddress6);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[][][]}" + "'", str25, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(taskId28);
        org.junit.Assert.assertNotNull(task29);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-3L) + "'", long34 == (-3L));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel35 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel35.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel36 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel36.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(taskId47);
        org.junit.Assert.assertNotNull(taskId49);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertNotNull(taskId60);
        org.junit.Assert.assertNull(actionRequestValidationException61);
        org.junit.Assert.assertNotNull(timeValue64);
        org.junit.Assert.assertNotNull(timeValue67);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertNotNull(deleteRequest73);
    }

    @Test
    public void test3404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3404");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][hi!]}");
        java.lang.String str6 = deleteRequest3.getDescription();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy7 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy8 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.tasks.TaskId taskId9 = deleteRequest3.getParentTask();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        java.lang.String str12 = deleteRequest11.parent();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][delete {[][][hi!]}][delete {[][][]}]}" + "'", str6, "delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.junit.Assert.assertTrue("'" + refreshPolicy7 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy7.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertTrue("'" + refreshPolicy8 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy8.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(taskId9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test3405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3405");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest3.index();
        java.lang.String str12 = deleteRequest3.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest14.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue19 = deleteRequest18.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest14.timeout(timeValue19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.timeout(timeValue19);
        long long22 = deleteRequest21.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.type("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest21.getParentTask();
        org.elasticsearch.index.shard.IndexShard indexShard26 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult27 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest21, indexShard26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(taskId25);
    }

    @Test
    public void test3406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3406");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str15 = deleteRequest14.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException16 = deleteRequest14.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure18 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "hi!", (java.lang.Throwable) actionRequestValidationException16, "delete {[][][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure20 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "", (java.lang.Throwable) actionRequestValidationException16, "delete {[][][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure22 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[][delete {[][][]}][delete {[][][]}]}", (java.lang.Throwable) actionRequestValidationException16, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure24 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[][delete {[][][]}][delete {[][][]}]}", (java.lang.Throwable) actionRequestValidationException16, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure26 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[][null][null]}][][]}", (java.lang.Throwable) actionRequestValidationException16, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure28 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}", (java.lang.Throwable) actionRequestValidationException16, "delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure30 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][hi!][]}", (java.lang.Throwable) actionRequestValidationException16, "delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}");
        java.lang.String str31 = shardFailure30.indexUUID;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting32 = shardFailure30.routing;
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[null][null][null]}" + "'", str15, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException16);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}" + "'", str31, "delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}");
        org.junit.Assert.assertNull(shardRouting32);
    }

    @Test
    public void test3407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3407");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.setShardId(shardId4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.routing("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        java.lang.String str8 = deleteRequest7.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.parent("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest7.consistencyLevel();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "delete {[null][null][null]}" + "'", str1, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test3408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3408");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        java.lang.String str4 = deleteRequest2.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest2.parent("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest2.id("delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy9 = deleteRequest2.getRefreshPolicy();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str4, "delete {[delete {[][][hi!]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + refreshPolicy9 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy9.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
    }

    @Test
    public void test3409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3409");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.setShardId(shardId2);
        deleteRequest1.primaryTerm((long) 1);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy6 = deleteRequest1.getRefreshPolicy();
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest1.getParentTask();
        org.elasticsearch.index.VersionType versionType8 = deleteRequest1.versionType();
        java.lang.String str9 = deleteRequest1.index();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertTrue("'" + refreshPolicy6 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy6.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(versionType8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
    }

    @Test
    public void test3410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3410");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        deleteRequest0.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.type("delete {[null][null][null]}");
        java.lang.String str8 = deleteRequest5.parent();
        boolean boolean9 = deleteRequest5.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest5.index("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str13 = deleteRequest12.parent();
        org.elasticsearch.index.VersionType versionType14 = deleteRequest12.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.type("delete {[][][hi!]}");
        org.elasticsearch.common.unit.TimeValue timeValue21 = deleteRequest20.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest12.timeout(timeValue21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest11.timeout(timeValue21);
        deleteRequest11.primaryTerm(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest11.index("delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}");
        org.elasticsearch.index.VersionType versionType28 = deleteRequest11.versionType();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(timeValue21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(versionType28);
    }

    @Test
    public void test3411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3411");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId9 = null;
        org.elasticsearch.tasks.Task task10 = deleteRequest5.createTask(0L, "", "", taskId9);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest5.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = deleteRequest15.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId24 = null;
        org.elasticsearch.tasks.Task task25 = deleteRequest20.createTask(0L, "", "", taskId24);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy26 = deleteRequest20.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest15.setRefreshPolicy(refreshPolicy26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest5.setRefreshPolicy(refreshPolicy26);
        java.lang.String str29 = deleteRequest28.parent();
        java.lang.String[] strArray30 = deleteRequest28.indices();
        deleteRequest28.setParentTask("delete {[delete {[][null][null]}][][]}", 1L);
        java.lang.String str34 = deleteRequest28.getDescription();
        java.lang.String str35 = deleteRequest28.id();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}][delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}][]}", deleteRequest28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(transportAddress16);
        org.junit.Assert.assertNotNull(task25);
        org.junit.Assert.assertTrue("'" + refreshPolicy26 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy26.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "delete {[][][]}" + "'", str34, "delete {[][][]}");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
    }

    @Test
    public void test3412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3412");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy9 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId17 = null;
        org.elasticsearch.tasks.Task task18 = deleteRequest13.createTask(0L, "", "", taskId17);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy19 = deleteRequest13.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest3.setRefreshPolicy(refreshPolicy19);
        java.lang.String str21 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest3.id("hi!");
        deleteRequest23.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest23.index("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.index.shard.IndexShard indexShard28 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete29 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest23, indexShard28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertTrue("'" + refreshPolicy9 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy9.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertTrue("'" + refreshPolicy19 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy19.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[][][]}" + "'", str21, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest27);
    }

    @Test
    public void test3413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3413");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.consistencyLevel(writeConsistencyLevel23);
        deleteRequest24.setParentTask("hi!", (long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest24.routing("hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress30 = null;
        deleteRequest29.remoteAddress(transportAddress30);
        java.lang.String str32 = deleteRequest29.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest29.routing("delete {[delete {[][null][null]}][][]}");
        java.lang.String str35 = deleteRequest34.toString();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput36 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest34.writeTo(streamOutput36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "delete {[][][]}" + "'", str35, "delete {[][][]}");
    }

    @Test
    public void test3414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3414");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("delete {[][][]}");
        java.lang.String str10 = deleteRequest7.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId22 = null;
        org.elasticsearch.tasks.Task task23 = deleteRequest18.createTask(0L, "", "", taskId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest18.setRefreshPolicy("");
        java.lang.String[] strArray26 = deleteRequest25.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId34 = null;
        org.elasticsearch.tasks.Task task35 = deleteRequest30.createTask(0L, "", "", taskId34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest30.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = deleteRequest37.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest25.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue42 = deleteRequest41.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress43 = null;
        deleteRequest41.remoteAddress(transportAddress43);
        org.elasticsearch.common.unit.TimeValue timeValue45 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest41.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest25.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest14.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest3.timeout(timeValue45);
        org.elasticsearch.action.support.IndicesOptions indicesOptions50 = deleteRequest49.indicesOptions();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel51 = deleteRequest49.consistencyLevel();
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest49.setShardId(shardId52);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest55.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue60 = deleteRequest59.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest55.timeout(timeValue60);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str63 = deleteRequest62.parent();
        org.elasticsearch.index.VersionType versionType64 = deleteRequest62.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest55.versionType(versionType64);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest49.versionType(versionType64);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][hi!]}", "delete {[null][null][null]}", "");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy71 = deleteRequest70.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest49.setRefreshPolicy(refreshPolicy71);
        java.lang.String str73 = deleteRequest72.id();
        org.elasticsearch.index.shard.IndexShard indexShard74 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult75 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest72, indexShard74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][][]}" + "'", str10, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(task35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel38 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel38.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(timeValue42);
        org.junit.Assert.assertNotNull(timeValue45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(indicesOptions50);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel51 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel51.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(timeValue60);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(versionType64);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertTrue("'" + refreshPolicy71 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy71.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertNull(str73);
    }

    @Test
    public void test3415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3415");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType6 = deleteRequest5.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = deleteRequest10.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy21 = deleteRequest15.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest10.setRefreshPolicy(refreshPolicy21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest5.setRefreshPolicy(refreshPolicy21);
        java.lang.String str24 = deleteRequest23.parent();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy25 = deleteRequest23.getRefreshPolicy();
        boolean boolean26 = deleteRequest23.getShouldPersistResult();
        org.elasticsearch.index.shard.IndexShard indexShard27 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete28 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest23, indexShard27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertNull(transportAddress11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertTrue("'" + refreshPolicy21 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy21.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + refreshPolicy25 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy25.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test3416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3416");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.routing("delete {[][][]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException9 = deleteRequest6.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.type("delete {[][][]}");
        java.lang.String str19 = deleteRequest16.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest16.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest16.index("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        boolean boolean24 = deleteRequest23.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest23.type("delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy27 = deleteRequest23.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest34.type("delete {[][][]}");
        java.lang.String str37 = deleteRequest34.routing();
        java.lang.String str38 = deleteRequest34.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str40 = deleteRequest39.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress41 = deleteRequest39.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId42 = deleteRequest39.getParentTask();
        deleteRequest34.setParentTask(taskId42);
        org.elasticsearch.tasks.Task task44 = deleteRequest23.createTask(100L, "delete {[][delete {[null][null][null]}][null]}", "hi!", taskId42);
        org.elasticsearch.tasks.Task task45 = deleteRequest6.createTask((long) 10, "delete {[][delete {[][][]}][delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}]}", "delete {[hi!][][delete {[][][]}]}", taskId42);
        deleteRequest6.setParentTask("delete {[null][null][delete {[][][hi!]}]}", 0L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(actionRequestValidationException9);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[][][]}" + "'", str19, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + refreshPolicy27 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy27.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(transportAddress41);
        org.junit.Assert.assertNotNull(taskId42);
        org.junit.Assert.assertNotNull(task44);
        org.junit.Assert.assertNotNull(task45);
    }

    @Test
    public void test3417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3417");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest7.getParentTask();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException9 = deleteRequest7.validate();
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.parent("hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.setRefreshPolicy("delete {[][][]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[][][]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(taskId8);
        org.junit.Assert.assertNotNull(actionRequestValidationException9);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(deleteRequest12);
    }

    @Test
    public void test3418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3418");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.type("delete {[null][null][null]}");
        java.lang.String str4 = deleteRequest1.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest1.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest1.parent("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str10 = deleteRequest9.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest12.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest9.timeout(timeValue13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest16.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest16.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel21 = deleteRequest20.consistencyLevel();
        java.lang.String str22 = deleteRequest20.parent();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest20.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel24 = deleteRequest20.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest19.consistencyLevel(writeConsistencyLevel24);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel26 = deleteRequest25.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][hi!]}", "delete {[null][null][null]}", "");
        java.lang.String[] strArray31 = deleteRequest30.indices();
        java.lang.String str32 = deleteRequest30.id();
        long long33 = deleteRequest30.version();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy34 = deleteRequest30.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest25.setRefreshPolicy(refreshPolicy34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest8.setRefreshPolicy(refreshPolicy34);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel21 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel21.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel24 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel24.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel26 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel26.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-3L) + "'", long33 == (-3L));
        org.junit.Assert.assertTrue("'" + refreshPolicy34 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy34.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest36);
    }

    @Test
    public void test3419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3419");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest5.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest5.timeout(timeValue10);
        java.lang.String str12 = deleteRequest5.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException13 = deleteRequest5.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure15 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", (java.lang.Throwable) actionRequestValidationException13, "delete {[][][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure17 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][delete {[][][hi!]}][delete {[][][]}]}", (java.lang.Throwable) actionRequestValidationException13, "delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting18 = shardFailure17.routing;
        java.lang.String str19 = shardFailure17.indexUUID;
        java.lang.String str20 = shardFailure17.indexUUID;
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][null][null]}" + "'", str12, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException13);
        org.junit.Assert.assertNull(shardRouting18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[][delete {[][][]}][delete {[][][]}]}" + "'", str19, "delete {[][delete {[][][]}][delete {[][][]}]}");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[][delete {[][][]}][delete {[][][]}]}" + "'", str20, "delete {[][delete {[][][]}][delete {[][][]}]}");
    }

    @Test
    public void test3420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3420");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        java.lang.String str4 = deleteRequest2.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest2.version((long) (short) 100);
        org.elasticsearch.common.transport.TransportAddress transportAddress7 = null;
        deleteRequest6.remoteAddress(transportAddress7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest6.type("delete {[][delete {[null][null][null]}][null]}");
        deleteRequest6.setParentTask("delete {[delete {[][null][null]}][][delete {[][][hi!]}]}", (long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue14 = deleteRequest6.timeout();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(timeValue14);
    }

    @Test
    public void test3421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3421");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest10.indicesOptions();
        java.lang.String str13 = deleteRequest10.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str15 = deleteRequest14.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.version((long) (short) 100);
        deleteRequest14.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str21 = deleteRequest20.parent();
        org.elasticsearch.index.VersionType versionType22 = deleteRequest20.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest14.versionType(versionType22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.versionType(versionType22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.id("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        java.lang.String str27 = deleteRequest24.parent();
        long long28 = deleteRequest24.primaryTerm();
        org.elasticsearch.common.io.stream.StreamInput streamInput29 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest24.readFrom(streamInput29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[][][]}" + "'", str13, "delete {[][][]}");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
    }

    @Test
    public void test3422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3422");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long10 = deleteRequest9.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str12 = deleteRequest11.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest14.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest18.getParentTask();
        deleteRequest9.setParentTask(taskId19);
        org.elasticsearch.tasks.Task task21 = deleteRequest3.createTask((long) ' ', "delete {[][][hi!]}", "delete {[][][]}", taskId19);
        org.elasticsearch.common.transport.TransportAddress transportAddress22 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest3.id("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[][][]}]}");
        java.lang.String str27 = deleteRequest26.toString();
        deleteRequest26.primaryTerm(0L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][][]}" + "'", str4, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertNull(transportAddress22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[][][]}]}][delete {[null][null][null]}]}" + "'", str27, "delete {[][delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[][][]}]}][delete {[null][null][null]}]}");
    }

    @Test
    public void test3423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3423");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.index("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        boolean boolean11 = deleteRequest10.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.type("delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}");
        java.lang.String[] strArray14 = deleteRequest13.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest13.index("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}", "delete {[hi!][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel21 = deleteRequest20.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId24 = deleteRequest23.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId32 = null;
        org.elasticsearch.tasks.Task task33 = deleteRequest28.createTask(0L, "", "", taskId32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest28.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel36 = deleteRequest35.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions37 = deleteRequest35.indicesOptions();
        java.lang.String str38 = deleteRequest35.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str40 = deleteRequest39.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest39.version((long) (short) 100);
        deleteRequest39.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str46 = deleteRequest45.parent();
        org.elasticsearch.index.VersionType versionType47 = deleteRequest45.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest39.versionType(versionType47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest35.versionType(versionType47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest23.versionType(versionType47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest20.versionType(versionType47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest16.versionType(versionType47);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput53 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest52.writeTo(streamOutput53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel21 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel21.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(shardId24);
        org.junit.Assert.assertNotNull(task33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel36 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel36.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "delete {[][][]}" + "'", str38, "delete {[][][]}");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(versionType47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest52);
    }

    @Test
    public void test3424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3424");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest10.toString();
        java.lang.String[] strArray12 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.index("");
        java.lang.String str15 = deleteRequest10.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = deleteRequest10.remoteAddress();
        org.elasticsearch.common.transport.TransportAddress transportAddress17 = deleteRequest10.remoteAddress();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest10.setRefreshPolicy("delete {[][delete {[delete {[][][hi!]}][null][null]}][]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[][delete {[delete {[][][hi!]}][null][null]}][]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(transportAddress16);
        org.junit.Assert.assertNull(transportAddress17);
    }

    @Test
    public void test3425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3425");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId6 = deleteRequest5.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId14 = null;
        org.elasticsearch.tasks.Task task15 = deleteRequest10.createTask(0L, "", "", taskId14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest10.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel18 = deleteRequest17.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions19 = deleteRequest17.indicesOptions();
        java.lang.String str20 = deleteRequest17.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str22 = deleteRequest21.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.version((long) (short) 100);
        deleteRequest21.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str28 = deleteRequest27.parent();
        org.elasticsearch.index.VersionType versionType29 = deleteRequest27.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest21.versionType(versionType29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest17.versionType(versionType29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest5.versionType(versionType29);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy33 = deleteRequest5.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest3.setRefreshPolicy(refreshPolicy33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest39.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest41.type("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId51 = null;
        org.elasticsearch.tasks.Task task52 = deleteRequest47.createTask(0L, "", "", taskId51);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy53 = deleteRequest47.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId61 = null;
        org.elasticsearch.tasks.Task task62 = deleteRequest57.createTask(0L, "", "", taskId61);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy63 = deleteRequest57.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest47.setRefreshPolicy(refreshPolicy63);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest43.setRefreshPolicy(refreshPolicy63);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest43.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        deleteRequest67.setParentTask("delete {[][][hi!]}", (long) (byte) 100);
        org.elasticsearch.common.transport.TransportAddress transportAddress71 = null;
        deleteRequest67.remoteAddress(transportAddress71);
        org.elasticsearch.index.VersionType versionType73 = deleteRequest67.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest38.versionType(versionType73);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy75 = deleteRequest38.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str80 = deleteRequest79.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest82 = deleteRequest79.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = deleteRequest82.routing("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest86 = deleteRequest82.version(1L);
        java.lang.String str87 = deleteRequest86.type();
        org.elasticsearch.tasks.TaskId taskId88 = deleteRequest86.getParentTask();
        deleteRequest38.setParentTask(taskId88);
        deleteRequest34.setParentTask(taskId88);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException91 = deleteRequest34.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure93 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][delete {[hi!][null][null]}][hi!]}", (java.lang.Throwable) actionRequestValidationException91, "delete {[delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[hi!][][delete {[][][]}]}][null]}");
        org.junit.Assert.assertNull(shardId6);
        org.junit.Assert.assertNotNull(task15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel18 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel18.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[][][]}" + "'", str20, "delete {[][][]}");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(versionType29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + refreshPolicy33 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy33.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(task52);
        org.junit.Assert.assertTrue("'" + refreshPolicy53 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy53.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task62);
        org.junit.Assert.assertTrue("'" + refreshPolicy63 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy63.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNotNull(versionType73);
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertTrue("'" + refreshPolicy75 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy75.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertNotNull(deleteRequest82);
        org.junit.Assert.assertNotNull(deleteRequest84);
        org.junit.Assert.assertNotNull(deleteRequest86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
        org.junit.Assert.assertNotNull(taskId88);
        org.junit.Assert.assertNotNull(actionRequestValidationException91);
    }

    @Test
    public void test3426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3426");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str3 = deleteRequest2.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException4 = deleteRequest2.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure6 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][null][delete {[][][hi!]}]}", (java.lang.Throwable) actionRequestValidationException4, "delete {[delete {[hi!][null][null]}][null][null]}");
        java.lang.String str7 = shardFailure6.reason;
        java.lang.Throwable throwable8 = shardFailure6.cause;
        java.lang.String str9 = shardFailure6.indexUUID;
        java.lang.Throwable throwable10 = shardFailure6.cause;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting11 = shardFailure6.routing;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "delete {[null][null][null]}" + "'", str3, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[null][null][delete {[][][hi!]}]}" + "'", str7, "delete {[null][null][delete {[][][hi!]}]}");
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable8.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[delete {[hi!][null][null]}][null][null]}" + "'", str9, "delete {[delete {[hi!][null][null]}][null][null]}");
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable10.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNull(shardRouting11);
    }

    @Test
    public void test3427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3427");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest10.toString();
        java.lang.String[] strArray12 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.index("");
        java.lang.String str15 = deleteRequest10.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest10.version((long) (short) 1);
        org.elasticsearch.common.unit.TimeValue timeValue18 = deleteRequest10.timeout();
        java.lang.String str19 = deleteRequest10.parent();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(timeValue18);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test3428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3428");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str7 = deleteRequest6.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException8 = deleteRequest6.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure10 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "hi!", (java.lang.Throwable) actionRequestValidationException8, "delete {[][][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure12 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", (java.lang.Throwable) actionRequestValidationException8, "delete {[][][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure14 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][delete {[][][]}][delete {[][][]}]}", (java.lang.Throwable) actionRequestValidationException8, "");
        java.lang.Throwable throwable15 = shardFailure14.cause;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = shardFailure14.routing;
        java.lang.String str17 = shardFailure14.indexUUID;
        java.lang.String str18 = shardFailure14.reason;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting19 = shardFailure14.routing;
        java.lang.String str20 = shardFailure14.reason;
        java.lang.Class<?> wildcardClass21 = shardFailure14.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[null][null][null]}" + "'", str7, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException8);
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable15.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNull(shardRouting16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[][delete {[][][]}][delete {[][][]}]}" + "'", str18, "delete {[][delete {[][][]}][delete {[][][]}]}");
        org.junit.Assert.assertNull(shardRouting19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[][delete {[][][]}][delete {[][][]}]}" + "'", str20, "delete {[][delete {[][][]}][delete {[][][]}]}");
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test3429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3429");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][]}", "delete {[null][null][null]}", "delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][hi!]}");
        java.lang.String str6 = deleteRequest3.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel7 = deleteRequest3.consistencyLevel();
        java.lang.String str8 = deleteRequest3.parent();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}" + "'", str6, "delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel7 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel7.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test3430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3430");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.type("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        java.lang.String str14 = deleteRequest13.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest13.type("delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}");
        java.lang.String str17 = deleteRequest13.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest19.setParentTask("hi!", (long) (short) 1);
        java.lang.String[] strArray23 = deleteRequest19.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest25.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue30 = deleteRequest29.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest25.timeout(timeValue30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest19.timeout(timeValue30);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel33 = deleteRequest19.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest13.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.action.support.IndicesOptions indicesOptions35 = deleteRequest13.indicesOptions();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}][]}" + "'", str17, "delete {[][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}][]}");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(timeValue30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel33 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel33.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(indicesOptions35);
    }

    @Test
    public void test3431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3431");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType6 = deleteRequest5.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = deleteRequest10.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy21 = deleteRequest15.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest10.setRefreshPolicy(refreshPolicy21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest5.setRefreshPolicy(refreshPolicy21);
        java.lang.String str24 = deleteRequest5.routing();
        org.elasticsearch.common.unit.TimeValue timeValue25 = deleteRequest5.timeout();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertNull(transportAddress11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertTrue("'" + refreshPolicy21 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy21.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(timeValue25);
    }

    @Test
    public void test3432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3432");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[][][]}");
        org.elasticsearch.index.VersionType versionType3 = deleteRequest2.versionType();
        java.lang.String str4 = deleteRequest2.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str9 = deleteRequest8.id();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest8.setShardId(shardId10);
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest8.setShardId(shardId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.parent("delete {[][][]}");
        org.elasticsearch.index.VersionType versionType17 = deleteRequest16.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest13.versionType(versionType17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest2.versionType(versionType17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.parent("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.version((long) (byte) -1);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[null][null][null]}" + "'", str4, "delete {[null][null][null]}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(versionType17);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
    }

    @Test
    public void test3433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3433");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.version((long) (-1));
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.index("delete {[][delete {[][][]}][delete {[][][]}]}");
        boolean boolean8 = deleteRequest7.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}", "delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.index("delete {[][][hi!]}");
        java.lang.String str16 = deleteRequest15.parent();
        java.lang.String str17 = deleteRequest15.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest15.version((long) (short) 100);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = deleteRequest19.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId28 = null;
        org.elasticsearch.tasks.Task task29 = deleteRequest24.createTask(0L, "", "", taskId28);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy30 = deleteRequest24.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest19.setRefreshPolicy(refreshPolicy30);
        org.elasticsearch.common.unit.TimeValue timeValue32 = deleteRequest19.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest12.timeout(timeValue32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest7.timeout(timeValue32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest35.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest37.type("delete {[hi!][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel40 = deleteRequest37.consistencyLevel();
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest37.setShardId(shardId41);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel43 = deleteRequest42.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest7.consistencyLevel(writeConsistencyLevel43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel46 = deleteRequest45.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel47 = deleteRequest45.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest44.consistencyLevel(writeConsistencyLevel47);
        long long49 = deleteRequest44.primaryTerm();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel50 = deleteRequest44.consistencyLevel();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel20 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel20.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(task29);
        org.junit.Assert.assertTrue("'" + refreshPolicy30 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy30.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(timeValue32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel40 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel40.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel43 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel43.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel46 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel46.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel47 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel47.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 0L + "'", long49 == 0L);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel50 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel50.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test3434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3434");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str7 = deleteRequest6.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException8 = deleteRequest6.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure10 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[null][null][delete {[][][hi!]}]}", (java.lang.Throwable) actionRequestValidationException8, "delete {[delete {[hi!][null][null]}][null][null]}");
        java.lang.String str11 = shardFailure10.reason;
        java.lang.Throwable throwable12 = shardFailure10.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure14 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[null][delete {[null][null][null]}][null]}", throwable12, "delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure16 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}", throwable12, "delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[][][]}]}");
        java.lang.String str17 = shardFailure16.reason;
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[null][null][null]}" + "'", str7, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[null][null][delete {[][][hi!]}]}" + "'", str11, "delete {[null][null][delete {[][][hi!]}]}");
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}" + "'", str17, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}");
    }

    @Test
    public void test3435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3435");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.version((long) 10);
        java.lang.String[] strArray4 = deleteRequest1.indices();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(strArray4);
    }

    @Test
    public void test3436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3436");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy9 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId17 = null;
        org.elasticsearch.tasks.Task task18 = deleteRequest13.createTask(0L, "", "", taskId17);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy19 = deleteRequest13.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest3.setRefreshPolicy(refreshPolicy19);
        java.lang.String str21 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest3.id("hi!");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel24 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.type("delete {[][][]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel31 = deleteRequest30.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest3.consistencyLevel(writeConsistencyLevel31);
        java.lang.String str33 = deleteRequest3.id();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy34 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest3.parent("delete {[delete {[hi!][null][null]}][null][delete {[][][hi!]}]}");
        org.elasticsearch.tasks.TaskId taskId37 = null;
        deleteRequest3.setParentTask(taskId37);
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertTrue("'" + refreshPolicy9 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy9.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertTrue("'" + refreshPolicy19 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy19.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[][][]}" + "'", str21, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel24 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel24.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel31 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel31.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertTrue("'" + refreshPolicy34 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy34.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest36);
    }

    @Test
    public void test3437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3437");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.setShardId(shardId2);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest1.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.index("delete {[][][hi!]}");
        java.lang.String str9 = deleteRequest8.parent();
        java.lang.String str10 = deleteRequest8.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.parent("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest8.parent("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.routing("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.index("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        java.lang.String str19 = deleteRequest16.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str24 = deleteRequest23.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest23.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest23.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest23.id("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str34 = deleteRequest33.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest33.id("hi!");
        org.elasticsearch.tasks.TaskId taskId37 = deleteRequest36.getParentTask();
        org.elasticsearch.tasks.TaskId taskId38 = deleteRequest36.getParentTask();
        deleteRequest29.setParentTask(taskId38);
        org.elasticsearch.tasks.Task task40 = deleteRequest16.createTask(0L, "", "delete {[null][null][null]}", taskId38);
        deleteRequest5.setParentTask(taskId38);
        java.lang.String str42 = deleteRequest5.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest5.id("delete {[delete {[hi!][null][null]}][null][null]}");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput45 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest44.writeTo(streamOutput45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str10, "delete {[delete {[][][hi!]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}" + "'", str19, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(taskId27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(taskId37);
        org.junit.Assert.assertNotNull(taskId38);
        org.junit.Assert.assertNotNull(task40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "delete {[][null][null]}" + "'", str42, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest44);
    }

    @Test
    public void test3438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3438");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.tasks.TaskId taskId9 = null;
        deleteRequest3.setParentTask(taskId9);
        java.lang.String str11 = deleteRequest3.type();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException12 = deleteRequest3.validate();
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = null;
        deleteRequest3.remoteAddress(transportAddress13);
        java.lang.String str15 = deleteRequest3.toString();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput16 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.writeTo(streamOutput16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(actionRequestValidationException12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[][][]}" + "'", str15, "delete {[][][]}");
    }

    @Test
    public void test3439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3439");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy9 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId17 = null;
        org.elasticsearch.tasks.Task task18 = deleteRequest13.createTask(0L, "", "", taskId17);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy19 = deleteRequest13.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest3.setRefreshPolicy(refreshPolicy19);
        java.lang.String str21 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest3.id("hi!");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel24 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.type("delete {[][][]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel31 = deleteRequest30.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest3.consistencyLevel(writeConsistencyLevel31);
        java.lang.String str33 = deleteRequest32.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest34.parent("delete {[][][]}");
        java.lang.String str37 = deleteRequest34.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.index("delete {[][][hi!]}");
        java.lang.String str41 = deleteRequest40.parent();
        java.lang.String str42 = deleteRequest40.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest40.parent("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId52 = null;
        org.elasticsearch.tasks.Task task53 = deleteRequest48.createTask(0L, "", "", taskId52);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel54 = deleteRequest48.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress59 = deleteRequest58.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId67 = null;
        org.elasticsearch.tasks.Task task68 = deleteRequest63.createTask(0L, "", "", taskId67);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy69 = deleteRequest63.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest58.setRefreshPolicy(refreshPolicy69);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest48.setRefreshPolicy(refreshPolicy69);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest40.setRefreshPolicy(refreshPolicy69);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest34.setRefreshPolicy(refreshPolicy69);
        long long74 = deleteRequest34.version();
        org.elasticsearch.index.VersionType versionType75 = deleteRequest34.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest32.versionType(versionType75);
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertTrue("'" + refreshPolicy9 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy9.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertTrue("'" + refreshPolicy19 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy19.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[][][]}" + "'", str21, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel24 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel24.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel31 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel31.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "delete {[null][null][null]}" + "'", str37, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str42, "delete {[delete {[][][hi!]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(task53);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel54 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel54.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(transportAddress59);
        org.junit.Assert.assertNotNull(task68);
        org.junit.Assert.assertTrue("'" + refreshPolicy69 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy69.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertNotNull(deleteRequest73);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + (-3L) + "'", long74 == (-3L));
        org.junit.Assert.assertNotNull(versionType75);
        org.junit.Assert.assertNotNull(deleteRequest76);
    }

    @Test
    public void test3440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3440");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        java.lang.String str4 = deleteRequest2.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest2.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest2.version(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest9.consistencyLevel();
        deleteRequest9.setParentTask("delete {[delete {[][][hi!]}][null][null]}", (long) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId22 = null;
        org.elasticsearch.tasks.Task task23 = deleteRequest18.createTask(0L, "", "", taskId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest18.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType26 = deleteRequest18.versionType();
        java.lang.String str27 = deleteRequest18.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress28 = deleteRequest18.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy29 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest18.setRefreshPolicy(refreshPolicy29);
        long long31 = deleteRequest18.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue32 = deleteRequest18.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest9.timeout(timeValue32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId41 = null;
        org.elasticsearch.tasks.Task task42 = deleteRequest37.createTask(0L, "", "", taskId41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest37.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType45 = deleteRequest37.versionType();
        java.lang.String str46 = deleteRequest37.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress47 = deleteRequest37.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy48 = deleteRequest37.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest33.setRefreshPolicy(refreshPolicy48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest2.setRefreshPolicy(refreshPolicy48);
        org.elasticsearch.index.shard.ShardId shardId51 = deleteRequest2.shardId();
        org.elasticsearch.index.shard.IndexShard indexShard52 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete53 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest2, indexShard52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(transportAddress28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertNotNull(timeValue32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(task42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(versionType45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(transportAddress47);
        org.junit.Assert.assertTrue("'" + refreshPolicy48 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy48.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNull(shardId51);
    }

    @Test
    public void test3441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3441");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = deleteRequest0.remoteAddress();
        java.lang.String str7 = deleteRequest0.toString();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy8 = deleteRequest0.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str10 = deleteRequest9.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.version((long) (short) 100);
        java.lang.String str13 = deleteRequest9.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue16 = deleteRequest15.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress17 = null;
        deleteRequest15.remoteAddress(transportAddress17);
        java.lang.String str19 = deleteRequest15.index();
        org.elasticsearch.index.VersionType versionType20 = deleteRequest15.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest9.versionType(versionType20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str23 = deleteRequest22.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue26 = deleteRequest25.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest22.timeout(timeValue26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId30 = deleteRequest29.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest29.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.type("delete {[][][hi!]}");
        java.lang.String str41 = deleteRequest38.getDescription();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy42 = deleteRequest38.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest32.setRefreshPolicy(refreshPolicy42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest9.setRefreshPolicy(refreshPolicy42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest0.setRefreshPolicy(refreshPolicy42);
        boolean boolean46 = deleteRequest45.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest45.id("delete {[][delete {[][][]}][]}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(transportAddress6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[null][null][null]}" + "'", str7, "delete {[null][null][null]}");
        org.junit.Assert.assertTrue("'" + refreshPolicy8 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy8.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[null][null][null]}" + "'", str19, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(versionType20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(timeValue26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(taskId30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "delete {[][delete {[][][hi!]}][delete {[][][]}]}" + "'", str41, "delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.junit.Assert.assertTrue("'" + refreshPolicy42 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy42.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(deleteRequest48);
    }

    @Test
    public void test3442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3442");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest6.getParentTask();
        org.elasticsearch.common.unit.TimeValue timeValue9 = deleteRequest6.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest13.id("delete {[][][]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException18 = deleteRequest17.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId21 = deleteRequest20.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId29 = null;
        org.elasticsearch.tasks.Task task30 = deleteRequest25.createTask(0L, "", "", taskId29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest25.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel33 = deleteRequest32.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions34 = deleteRequest32.indicesOptions();
        java.lang.String str35 = deleteRequest32.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str37 = deleteRequest36.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest36.version((long) (short) 100);
        deleteRequest36.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str43 = deleteRequest42.parent();
        org.elasticsearch.index.VersionType versionType44 = deleteRequest42.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest36.versionType(versionType44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest32.versionType(versionType44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest20.versionType(versionType44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest17.versionType(versionType44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest6.versionType(versionType44);
        long long50 = deleteRequest6.version();
        java.lang.String str51 = deleteRequest6.type();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(taskId8);
        org.junit.Assert.assertNotNull(timeValue9);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(actionRequestValidationException18);
        org.junit.Assert.assertNull(shardId21);
        org.junit.Assert.assertNotNull(task30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel33 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel33.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "delete {[][][]}" + "'", str35, "delete {[][][]}");
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(versionType44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-3L) + "'", long50 == (-3L));
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
    }

    @Test
    public void test3443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3443");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str7 = deleteRequest6.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest6.getParentTask();
        deleteRequest3.setParentTask(taskId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.consistencyLevel(writeConsistencyLevel14);
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest15.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.index.VersionType versionType21 = deleteRequest20.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str27 = deleteRequest26.getDescription();
        java.lang.String str28 = deleteRequest26.routing();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest15.consistencyLevel(writeConsistencyLevel29);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel31 = deleteRequest30.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest30.version((long) 0);
        java.lang.String str34 = deleteRequest33.index();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertNotNull(versionType21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][][]}" + "'", str27, "delete {[][][]}");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel29 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel29.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel31 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel31.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
    }

    @Test
    public void test3444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3444");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}", "delete {[][delete {[delete {[][null][null]}][][]}][delete {[null][delete {[null][null][null]}][null]}]}", "delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput4 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.writeTo(streamOutput4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test3445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3445");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][hi!]}][null][null]}", "delete {[][][]}", "");
        long long6 = deleteRequest5.primaryTerm();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.setShardId(shardId7);
        org.elasticsearch.action.support.IndicesOptions indicesOptions9 = deleteRequest8.indicesOptions();
        java.lang.String str10 = deleteRequest8.getDescription();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[][delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[][][]}]}][delete {[null][null][null]}]}", deleteRequest8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(indicesOptions9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[delete {[delete {[][][hi!]}][null][null]}][delete {[][][]}][]}" + "'", str10, "delete {[delete {[delete {[][][hi!]}][null][null]}][delete {[][][]}][]}");
    }

    @Test
    public void test3446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3446");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str8 = deleteRequest7.type();
        java.lang.String str9 = deleteRequest7.toString();
        org.elasticsearch.index.shard.ShardId shardId10 = deleteRequest7.shardId();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[][][]}" + "'", str8, "delete {[][][]}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[][delete {[][][]}][]}" + "'", str9, "delete {[][delete {[][][]}][]}");
        org.junit.Assert.assertNull(shardId10);
    }

    @Test
    public void test3447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3447");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        deleteRequest0.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.setRefreshPolicy("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException6 = deleteRequest5.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.index("delete {[hi!][null][null]}");
        deleteRequest5.setParentTask("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}", 10L);
        java.lang.String str12 = deleteRequest5.parent();
        org.elasticsearch.tasks.TaskId taskId13 = deleteRequest5.getParentTask();
        java.lang.String[] strArray14 = deleteRequest5.indices();
        java.lang.String str15 = deleteRequest5.getDescription();
        java.lang.String str16 = deleteRequest5.parent();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(actionRequestValidationException6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(taskId13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[delete {[hi!][null][null]}][null][null]}" + "'", str15, "delete {[delete {[hi!][null][null]}][null][null]}");
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test3448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3448");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId9 = null;
        org.elasticsearch.tasks.Task task10 = deleteRequest5.createTask(0L, "", "", taskId9);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest5.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions14 = deleteRequest12.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId15 = null;
        deleteRequest12.setParentTask(taskId15);
        deleteRequest12.primaryTerm((long) (-1));
        java.lang.String str19 = deleteRequest12.type();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}", deleteRequest12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
    }

    @Test
    public void test3449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3449");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.parent("delete {[][][]}");
        org.elasticsearch.index.VersionType versionType12 = deleteRequest11.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest8.versionType(versionType12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.parent("delete {[hi!][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue16 = deleteRequest13.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.version((long) (-1));
        org.elasticsearch.common.transport.TransportAddress transportAddress21 = null;
        deleteRequest20.remoteAddress(transportAddress21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest20.index("delete {[][delete {[][][]}][delete {[][][]}]}");
        boolean boolean25 = deleteRequest24.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("", "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}", "delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.index("delete {[][][hi!]}");
        java.lang.String str33 = deleteRequest32.parent();
        java.lang.String str34 = deleteRequest32.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest32.version((long) (short) 100);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel37 = deleteRequest36.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId45 = null;
        org.elasticsearch.tasks.Task task46 = deleteRequest41.createTask(0L, "", "", taskId45);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy47 = deleteRequest41.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest36.setRefreshPolicy(refreshPolicy47);
        org.elasticsearch.common.unit.TimeValue timeValue49 = deleteRequest36.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest29.timeout(timeValue49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest24.timeout(timeValue49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest13.timeout(timeValue49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest54.setParentTask("hi!", (long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest61.type("delete {[][][]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy64 = deleteRequest61.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest54.setRefreshPolicy(refreshPolicy64);
        org.elasticsearch.tasks.TaskId taskId66 = deleteRequest54.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest71.setParentTask("hi!", (long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = deleteRequest78.type("delete {[][][]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy81 = deleteRequest78.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest82 = deleteRequest71.setRefreshPolicy(refreshPolicy81);
        org.elasticsearch.tasks.TaskId taskId83 = deleteRequest71.getParentTask();
        org.elasticsearch.tasks.Task task84 = deleteRequest54.createTask((long) (byte) 1, "delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}", "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}", taskId83);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest85 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str86 = deleteRequest85.parent();
        deleteRequest85.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest90 = deleteRequest85.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest92 = deleteRequest90.type("delete {[null][null][null]}");
        org.elasticsearch.index.VersionType versionType93 = deleteRequest92.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest94 = deleteRequest54.versionType(versionType93);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest95 = deleteRequest13.versionType(versionType93);
        java.lang.String str96 = deleteRequest95.routing();
        org.elasticsearch.common.io.stream.StreamInput streamInput97 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest95.readFrom(streamInput97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel37 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel37.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(task46);
        org.junit.Assert.assertTrue("'" + refreshPolicy47 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy47.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(timeValue49);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertTrue("'" + refreshPolicy64 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy64.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(taskId66);
        org.junit.Assert.assertNotNull(deleteRequest80);
        org.junit.Assert.assertTrue("'" + refreshPolicy81 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy81.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest82);
        org.junit.Assert.assertNotNull(taskId83);
        org.junit.Assert.assertNotNull(task84);
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertNotNull(deleteRequest90);
        org.junit.Assert.assertNotNull(deleteRequest92);
        org.junit.Assert.assertNotNull(versionType93);
        org.junit.Assert.assertNotNull(deleteRequest94);
        org.junit.Assert.assertNotNull(deleteRequest95);
        org.junit.Assert.assertNull(str96);
    }

    @Test
    public void test3450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3450");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.tasks.TaskId taskId6 = deleteRequest3.getParentTask();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest3.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = null;
        deleteRequest9.remoteAddress(transportAddress11);
        org.elasticsearch.common.unit.TimeValue timeValue13 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest9.timeout(timeValue13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.timeout(timeValue13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.version((long) ' ');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest17.index("delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}");
        org.elasticsearch.index.shard.ShardId shardId22 = deleteRequest21.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.id("delete {[][][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue25 = deleteRequest21.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest21.type("delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(taskId6);
        org.junit.Assert.assertNull(actionRequestValidationException7);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNull(shardId22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(timeValue25);
        org.junit.Assert.assertNotNull(deleteRequest27);
    }

    @Test
    public void test3451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3451");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        deleteRequest0.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.setRefreshPolicy("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException6 = deleteRequest5.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.index("delete {[hi!][null][null]}");
        deleteRequest5.setParentTask("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}", 10L);
        java.lang.String str12 = deleteRequest5.parent();
        java.lang.String[] strArray13 = deleteRequest5.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest5.index("delete {[delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][null][null]}");
        deleteRequest5.primaryTerm((long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest5.parent("delete {[delete {[hi!][null][null]}][null][delete {[][][hi!]}]}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(actionRequestValidationException6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest19);
    }

    @Test
    public void test3452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3452");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = deleteRequest3.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.setShardId(shardId6);
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.setShardId(shardId8);
        long long10 = deleteRequest9.primaryTerm();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(transportAddress5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
    }

    @Test
    public void test3453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3453");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.setRefreshPolicy(refreshPolicy14);
        org.elasticsearch.action.support.IndicesOptions indicesOptions16 = deleteRequest3.indicesOptions();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest3.setShardId(shardId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.index("delete {[delete {[][][hi!]}][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress21 = deleteRequest20.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest20.routing("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress28 = deleteRequest27.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId36 = null;
        org.elasticsearch.tasks.Task task37 = deleteRequest32.createTask(0L, "", "", taskId36);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy38 = deleteRequest32.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest27.setRefreshPolicy(refreshPolicy38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest27.id("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest27.id("delete {[][][]}");
        java.lang.String str44 = deleteRequest43.index();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel45 = deleteRequest43.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest23.consistencyLevel(writeConsistencyLevel45);
        java.lang.Class<?> wildcardClass47 = deleteRequest46.getClass();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(transportAddress13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(indicesOptions16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNull(transportAddress21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(transportAddress28);
        org.junit.Assert.assertNotNull(task37);
        org.junit.Assert.assertTrue("'" + refreshPolicy38 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy38.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel45 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel45.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test3454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3454");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.consistencyLevel(writeConsistencyLevel23);
        deleteRequest24.setParentTask("hi!", (long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest24.routing("hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress30 = null;
        deleteRequest29.remoteAddress(transportAddress30);
        deleteRequest29.primaryTerm((long) (byte) 0);
        org.elasticsearch.tasks.TaskId taskId34 = deleteRequest29.getParentTask();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput35 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest29.writeTo(streamOutput35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(taskId34);
    }

    @Test
    public void test3455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3455");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str7 = deleteRequest6.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest6.getParentTask();
        deleteRequest3.setParentTask(taskId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.consistencyLevel(writeConsistencyLevel14);
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest15.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.index.VersionType versionType21 = deleteRequest20.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel26 = deleteRequest25.consistencyLevel();
        java.lang.String str27 = deleteRequest25.parent();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest25.consistencyLevel();
        long long29 = deleteRequest25.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str37 = deleteRequest36.id();
        java.lang.String str38 = deleteRequest36.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str40 = deleteRequest39.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest39.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId43 = deleteRequest39.getParentTask();
        deleteRequest36.setParentTask(taskId43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel46 = deleteRequest45.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel47 = deleteRequest45.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest36.consistencyLevel(writeConsistencyLevel47);
        org.elasticsearch.tasks.TaskId taskId49 = deleteRequest48.getParentTask();
        org.elasticsearch.tasks.Task task50 = deleteRequest25.createTask((long) (byte) 10, "delete {[delete {[][null][null]}][null][null]}", "delete {[][delete {[][][hi!]}][delete {[][][]}]}", taskId49);
        deleteRequest22.setParentTask(taskId49);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertNotNull(versionType21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel26 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel26.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-3L) + "'", long29 == (-3L));
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(taskId43);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel46 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel46.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel47 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel47.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(taskId49);
        org.junit.Assert.assertNotNull(task50);
    }

    @Test
    public void test3456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3456");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][hi!]}][delete {[null][null][null]}][]}", "delete {[null][null][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}]}", "delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}");
        org.elasticsearch.common.io.stream.StreamInput streamInput4 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.readFrom(streamInput4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test3457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3457");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str5 = deleteRequest4.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException6 = deleteRequest4.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure8 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "hi!", (java.lang.Throwable) actionRequestValidationException6, "delete {[][][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure10 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][][]}", (java.lang.Throwable) actionRequestValidationException6, "delete {[][][]}");
        java.lang.String str11 = shardFailure10.indexUUID;
        java.lang.Throwable throwable12 = shardFailure10.cause;
        java.lang.String str13 = shardFailure10.indexUUID;
        java.lang.Throwable throwable14 = shardFailure10.cause;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[null][null][null]}" + "'", str5, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[][][]}" + "'", str13, "delete {[][][]}");
        org.junit.Assert.assertNotNull(throwable14);
        org.junit.Assert.assertEquals(throwable14.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable14.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable14.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test3458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3458");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.tasks.TaskId taskId6 = deleteRequest3.getParentTask();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest3.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = null;
        deleteRequest9.remoteAddress(transportAddress11);
        org.elasticsearch.common.unit.TimeValue timeValue13 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest9.timeout(timeValue13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.timeout(timeValue13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str23 = deleteRequest22.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.type("delete {[][][]}");
        java.lang.String str30 = deleteRequest27.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest27.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId40 = null;
        org.elasticsearch.tasks.Task task41 = deleteRequest36.createTask(0L, "", "", taskId40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest36.setRefreshPolicy("");
        java.lang.String str44 = deleteRequest43.toString();
        java.lang.String[] strArray45 = deleteRequest43.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest43.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str56 = deleteRequest55.id();
        java.lang.String str57 = deleteRequest55.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str59 = deleteRequest58.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest58.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId62 = deleteRequest58.getParentTask();
        deleteRequest55.setParentTask(taskId62);
        deleteRequest51.setParentTask(taskId62);
        deleteRequest47.setParentTask(taskId62);
        deleteRequest32.setParentTask(taskId62);
        deleteRequest22.setParentTask(taskId62);
        org.elasticsearch.tasks.Task task68 = deleteRequest15.createTask((long) (short) -1, "delete {[hi!][null][null]}", "hi!", taskId62);
        java.lang.String str69 = deleteRequest15.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId77 = null;
        org.elasticsearch.tasks.Task task78 = deleteRequest73.createTask(0L, "", "", taskId77);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = deleteRequest73.setRefreshPolicy("");
        java.lang.String str81 = deleteRequest80.toString();
        java.lang.String[] strArray82 = deleteRequest80.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = deleteRequest80.index("");
        org.elasticsearch.common.unit.TimeValue timeValue85 = deleteRequest84.timeout();
        org.elasticsearch.index.VersionType versionType86 = deleteRequest84.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = deleteRequest15.versionType(versionType86);
        long long88 = deleteRequest87.version();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(taskId6);
        org.junit.Assert.assertNull(actionRequestValidationException7);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "delete {[][][]}" + "'", str30, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(task41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "delete {[][][]}" + "'", str44, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(taskId62);
        org.junit.Assert.assertNotNull(task68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "delete {[][][]}" + "'", str69, "delete {[][][]}");
        org.junit.Assert.assertNotNull(task78);
        org.junit.Assert.assertNotNull(deleteRequest80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "delete {[][][]}" + "'", str81, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(deleteRequest84);
        org.junit.Assert.assertNotNull(timeValue85);
        org.junit.Assert.assertNotNull(versionType86);
        org.junit.Assert.assertNotNull(deleteRequest87);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + (-3L) + "'", long88 == (-3L));
    }

    @Test
    public void test3459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3459");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][hi!]}][null][null]}", "delete {[][][]}", "");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel4 = deleteRequest3.consistencyLevel();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId14 = null;
        org.elasticsearch.tasks.Task task15 = deleteRequest10.createTask(0L, "", "", taskId14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest10.setRefreshPolicy("");
        java.lang.String[] strArray18 = deleteRequest17.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId26 = null;
        org.elasticsearch.tasks.Task task27 = deleteRequest22.createTask(0L, "", "", taskId26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel30 = deleteRequest29.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest17.consistencyLevel(writeConsistencyLevel30);
        deleteRequest31.setParentTask("hi!", (long) (short) 100);
        java.lang.String str35 = deleteRequest31.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest39.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType42 = deleteRequest41.versionType();
        java.lang.String str43 = deleteRequest41.index();
        org.elasticsearch.common.unit.TimeValue timeValue44 = deleteRequest41.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest31.timeout(timeValue44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest3.timeout(timeValue44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str51 = deleteRequest50.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest50.id("hi!");
        org.elasticsearch.tasks.TaskId taskId54 = deleteRequest53.getParentTask();
        org.elasticsearch.tasks.TaskId taskId55 = deleteRequest53.getParentTask();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException56 = deleteRequest53.validate();
        java.lang.String[] strArray57 = deleteRequest53.indices();
        java.lang.String str58 = deleteRequest53.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId66 = null;
        org.elasticsearch.tasks.Task task67 = deleteRequest62.createTask(0L, "", "", taskId66);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest62.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel70 = deleteRequest69.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions71 = deleteRequest69.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId72 = null;
        deleteRequest69.setParentTask(taskId72);
        java.lang.String str74 = deleteRequest69.type();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy75 = deleteRequest69.getRefreshPolicy();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy76 = deleteRequest69.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest53.setRefreshPolicy(refreshPolicy76);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = deleteRequest46.setRefreshPolicy(refreshPolicy76);
        java.lang.String str79 = deleteRequest78.toString();
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel4 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel4.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(task15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(task27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel30 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel30.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(versionType42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(timeValue44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(taskId54);
        org.junit.Assert.assertNotNull(taskId55);
        org.junit.Assert.assertNull(actionRequestValidationException56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(task67);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel70 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel70.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions71);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertTrue("'" + refreshPolicy75 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy75.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertTrue("'" + refreshPolicy76 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy76.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertNotNull(deleteRequest78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "delete {[delete {[delete {[][][hi!]}][null][null]}][delete {[][][]}][]}" + "'", str79, "delete {[delete {[delete {[][][hi!]}][null][null]}][delete {[][][]}][]}");
    }

    @Test
    public void test3460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3460");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest10.toString();
        java.lang.String[] strArray12 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.index("");
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest14.timeout();
        org.elasticsearch.index.VersionType versionType16 = deleteRequest14.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest14.index("delete {[][null][null]}");
        java.lang.Class<?> wildcardClass19 = deleteRequest18.getClass();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(versionType16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test3461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3461");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.setRefreshPolicy("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy10 = deleteRequest6.getRefreshPolicy();
        java.lang.String str11 = deleteRequest6.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest6.parent("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        java.lang.String str14 = deleteRequest13.toString();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + refreshPolicy10 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy10.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[][][hi!]}" + "'", str14, "delete {[][][hi!]}");
    }

    @Test
    public void test3462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3462");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.index.VersionType versionType4 = deleteRequest3.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId16 = null;
        org.elasticsearch.tasks.Task task17 = deleteRequest12.createTask(0L, "", "", taskId16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest12.setRefreshPolicy("");
        java.lang.String str20 = deleteRequest19.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId31 = null;
        org.elasticsearch.tasks.Task task32 = deleteRequest27.createTask(0L, "", "", taskId31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest27.setRefreshPolicy("");
        java.lang.String[] strArray35 = deleteRequest34.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long38 = deleteRequest37.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str40 = deleteRequest39.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue43 = deleteRequest42.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest39.timeout(timeValue43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest44.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId47 = deleteRequest46.getParentTask();
        deleteRequest37.setParentTask(taskId47);
        deleteRequest34.setParentTask(taskId47);
        org.elasticsearch.tasks.Task task50 = deleteRequest19.createTask((long) (short) 1, "delete {[delete {[][null][null]}][][]}", "delete {[][][hi!]}", taskId47);
        org.elasticsearch.tasks.Task task51 = deleteRequest3.createTask(52L, "", "delete {[][null][null]}", taskId47);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput52 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.writeTo(streamOutput52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(versionType4);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(task17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[][][]}" + "'", str20, "delete {[][][]}");
        org.junit.Assert.assertNotNull(task32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(timeValue43);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(taskId47);
        org.junit.Assert.assertNotNull(task50);
        org.junit.Assert.assertNotNull(task51);
    }

    @Test
    public void test3463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3463");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.type("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.type("delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.routing("delete {[][delete {[null][null][null]}][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.index("delete {[delete {[][null][null]}][][]}");
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
    }

    @Test
    public void test3464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3464");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = deleteRequest3.remoteAddress();
        java.lang.String str14 = deleteRequest3.parent();
        java.lang.String str15 = deleteRequest3.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.setRefreshPolicy("delete {[][delete {[][][]}][delete {[delete {[hi!][null][null]}][null][delete {[][][hi!]}]}]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[][delete {[][][]}][delete {[delete {[hi!][null][null]}][null][delete {[][][hi!]}]}]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(transportAddress13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[][][]}" + "'", str15, "delete {[][][]}");
    }

    @Test
    public void test3465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3465");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.type("delete {[null][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = deleteRequest3.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.version((long) '4');
        org.elasticsearch.index.shard.ShardId shardId9 = deleteRequest6.shardId();
        java.lang.String str10 = deleteRequest6.type();
        java.lang.String str11 = deleteRequest6.routing();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(transportAddress4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(shardId9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[null][null][null]}" + "'", str10, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test3466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3466");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest11.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue16 = deleteRequest15.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest11.timeout(timeValue16);
        java.lang.String str18 = deleteRequest11.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException19 = deleteRequest11.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure21 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[delete {[][][hi!]}][null][null]}", (java.lang.Throwable) actionRequestValidationException19, "delete {[][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure23 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "", (java.lang.Throwable) actionRequestValidationException19, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure25 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "hi!", (java.lang.Throwable) actionRequestValidationException19, "delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure27 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[null][null][null]}", (java.lang.Throwable) actionRequestValidationException19, "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure29 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", (java.lang.Throwable) actionRequestValidationException19, "delete {[][][hi!]}");
        java.lang.Throwable throwable30 = shardFailure29.cause;
        java.lang.String str31 = shardFailure29.reason;
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[][null][null]}" + "'", str18, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException19);
        org.junit.Assert.assertNotNull(throwable30);
        org.junit.Assert.assertEquals(throwable30.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable30.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable30.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
    }

    @Test
    public void test3467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3467");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy9 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId17 = null;
        org.elasticsearch.tasks.Task task18 = deleteRequest13.createTask(0L, "", "", taskId17);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy19 = deleteRequest13.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest3.setRefreshPolicy(refreshPolicy19);
        java.lang.String str21 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest3.id("hi!");
        deleteRequest23.primaryTerm((long) (short) 100);
        org.elasticsearch.common.transport.TransportAddress transportAddress26 = null;
        deleteRequest23.remoteAddress(transportAddress26);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput28 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest23.writeTo(streamOutput28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertTrue("'" + refreshPolicy9 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy9.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertTrue("'" + refreshPolicy19 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy19.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[][][]}" + "'", str21, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest23);
    }

    @Test
    public void test3468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3468");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.parent("delete {[][][]}");
        org.elasticsearch.index.VersionType versionType12 = deleteRequest11.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest8.versionType(versionType12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str18 = deleteRequest17.id();
        org.elasticsearch.common.transport.TransportAddress transportAddress19 = deleteRequest17.remoteAddress();
        org.elasticsearch.index.VersionType versionType20 = deleteRequest17.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel21 = deleteRequest17.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest13.consistencyLevel(writeConsistencyLevel21);
        org.elasticsearch.index.VersionType versionType23 = deleteRequest22.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest22.id("delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNull(transportAddress19);
        org.junit.Assert.assertNotNull(versionType20);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel21 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel21.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(versionType23);
        org.junit.Assert.assertNotNull(deleteRequest25);
    }

    @Test
    public void test3469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3469");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.consistencyLevel(writeConsistencyLevel23);
        java.lang.String str25 = deleteRequest24.getDescription();
        java.lang.String str26 = deleteRequest24.routing();
        java.lang.String str27 = deleteRequest24.type();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[][][]}" + "'", str25, "delete {[][][]}");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
    }

    @Test
    public void test3470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3470");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[][][]}");
        org.elasticsearch.index.VersionType versionType3 = deleteRequest2.versionType();
        java.lang.String str4 = deleteRequest2.toString();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy5 = deleteRequest2.getRefreshPolicy();
        boolean boolean6 = deleteRequest2.getShouldPersistResult();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[null][null][null]}" + "'", str4, "delete {[null][null][null]}");
        org.junit.Assert.assertTrue("'" + refreshPolicy5 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy5.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test3471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3471");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}][delete {[hi!][null][null]}][hi!]}", "", "delete {[null][null][delete {[][][hi!]}]}");
    }

    @Test
    public void test3472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3472");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest3.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.timeout(timeValue8);
        java.lang.String str10 = deleteRequest3.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest3.validate();
        java.lang.String str12 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long15 = deleteRequest14.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.index("");
        boolean boolean18 = deleteRequest14.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest14.version((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue21 = deleteRequest14.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest3.timeout(timeValue21);
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.setShardId(shardId23);
        long long25 = deleteRequest24.version();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[][][delete {[delete {[][null][null]}][][]}]}", deleteRequest24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][null][null]}" + "'", str10, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][null][null]}" + "'", str12, "delete {[][null][null]}");
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(timeValue21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-3L) + "'", long25 == (-3L));
    }

    @Test
    public void test3473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3473");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.setShardId(shardId12);
        long long14 = deleteRequest10.version();
        org.elasticsearch.action.support.IndicesOptions indicesOptions15 = deleteRequest10.indicesOptions();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest10.setRefreshPolicy("delete {[][delete {[hi!][null][null]}][hi!]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[][delete {[hi!][null][null]}][hi!]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-3L) + "'", long14 == (-3L));
        org.junit.Assert.assertNotNull(indicesOptions15);
    }

    @Test
    public void test3474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3474");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}", "delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}", "delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy6 = deleteRequest3.getRefreshPolicy();
        org.junit.Assert.assertTrue("'" + refreshPolicy6 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy6.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
    }

    @Test
    public void test3475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3475");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.type("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId17 = null;
        org.elasticsearch.tasks.Task task18 = deleteRequest13.createTask(0L, "", "", taskId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest13.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType21 = deleteRequest13.versionType();
        java.lang.String str22 = deleteRequest13.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId30 = null;
        org.elasticsearch.tasks.Task task31 = deleteRequest26.createTask(0L, "", "", taskId30);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy32 = deleteRequest26.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest13.setRefreshPolicy(refreshPolicy32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest9.setRefreshPolicy(refreshPolicy32);
        java.lang.String str35 = deleteRequest9.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest9.index("delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest9.setRefreshPolicy("delete {[delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][null][null]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][null][null]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(versionType21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[][][]}" + "'", str22, "delete {[][][]}");
        org.junit.Assert.assertNotNull(task31);
        org.junit.Assert.assertTrue("'" + refreshPolicy32 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy32.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}" + "'", str35, "delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}");
        org.junit.Assert.assertNotNull(deleteRequest37);
    }

    @Test
    public void test3476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3476");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str15 = deleteRequest14.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException16 = deleteRequest14.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure18 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "hi!", (java.lang.Throwable) actionRequestValidationException16, "delete {[][][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure20 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "", (java.lang.Throwable) actionRequestValidationException16, "delete {[][][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure22 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[][delete {[][][hi!]}][delete {[][][]}]}", (java.lang.Throwable) actionRequestValidationException16, "delete {[][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure24 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException16, "delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure26 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}", (java.lang.Throwable) actionRequestValidationException16, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure28 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[][null][null]}][null][null]}", (java.lang.Throwable) actionRequestValidationException16, "delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure30 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}][null][null]}", (java.lang.Throwable) actionRequestValidationException16, "delete {[][delete {[][][]}][delete {[][][]}]}");
        java.lang.String str31 = shardFailure30.reason;
        java.lang.String str32 = shardFailure30.reason;
        java.lang.String str33 = shardFailure30.indexUUID;
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[null][null][null]}" + "'", str15, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException16);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "delete {[delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}][null][null]}" + "'", str31, "delete {[delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}][null][null]}");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}][null][null]}" + "'", str32, "delete {[delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}][null][null]}");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "delete {[][delete {[][][]}][delete {[][][]}]}" + "'", str33, "delete {[][delete {[][][]}][delete {[][][]}]}");
    }

    @Test
    public void test3477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3477");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.type();
        deleteRequest3.setParentTask("delete {[][][hi!]}", (long) (short) 1);
        java.lang.String str8 = deleteRequest3.parent();
        java.lang.Class<?> wildcardClass9 = deleteRequest3.getClass();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test3478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3478");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str8 = deleteRequest7.id();
        java.lang.String str9 = deleteRequest7.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str11 = deleteRequest10.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId14 = deleteRequest10.getParentTask();
        deleteRequest7.setParentTask(taskId14);
        deleteRequest3.setParentTask(taskId14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest3.type("delete {[][delete {[null][null][null]}][]}");
        java.lang.String str19 = deleteRequest18.getDescription();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(taskId14);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[][delete {[][delete {[null][null][null]}][]}][delete {[][][]}]}" + "'", str19, "delete {[][delete {[][delete {[null][null][null]}][]}][delete {[][][]}]}");
    }

    @Test
    public void test3479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3479");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}]}", "delete {[][delete {[null][null][null]}][null]}", "delete {[delete {[][][hi!]}][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.setShardId(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest5);
    }

    @Test
    public void test3480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3480");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest7.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel12 = deleteRequest11.consistencyLevel();
        java.lang.String str13 = deleteRequest11.parent();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel15 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest10.consistencyLevel(writeConsistencyLevel15);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel17 = deleteRequest16.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest16.version((long) (byte) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest16.type("delete {[null][null][delete {[][][hi!]}]}");
        org.elasticsearch.common.io.stream.StreamInput streamInput22 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest16.readFrom(streamInput22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(taskId8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel12 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel12.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel15 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel15.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel17 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel17.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
    }

    @Test
    public void test3481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3481");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.id("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.version((long) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.routing("delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput12 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest11.writeTo(streamOutput12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
    }

    @Test
    public void test3482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3482");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long10 = deleteRequest9.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str12 = deleteRequest11.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest14.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest18.getParentTask();
        deleteRequest9.setParentTask(taskId19);
        org.elasticsearch.tasks.Task task21 = deleteRequest3.createTask((long) ' ', "delete {[][][hi!]}", "delete {[][][]}", taskId19);
        java.lang.String str22 = deleteRequest3.getDescription();
        org.elasticsearch.common.unit.TimeValue timeValue23 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.type("delete {[null][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress32 = deleteRequest31.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest31.setShardId(shardId33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest34.version((long) '4');
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy37 = deleteRequest34.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest27.setRefreshPolicy(refreshPolicy37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest3.setRefreshPolicy(refreshPolicy37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str41 = deleteRequest40.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest40.parent("hi!");
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest43.setShardId(shardId44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest43.routing("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.tasks.TaskId taskId48 = deleteRequest47.getParentTask();
        deleteRequest39.setParentTask(taskId48);
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest39.setShardId(shardId50);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][][]}" + "'", str4, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[][][]}" + "'", str22, "delete {[][][]}");
        org.junit.Assert.assertNotNull(timeValue23);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNull(transportAddress32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertTrue("'" + refreshPolicy37 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy37.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "delete {[null][null][null]}" + "'", str41, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(taskId48);
        org.junit.Assert.assertNotNull(deleteRequest51);
    }

    @Test
    public void test3483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3483");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.setRefreshPolicy(refreshPolicy14);
        long long16 = deleteRequest3.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId34 = null;
        org.elasticsearch.tasks.Task task35 = deleteRequest30.createTask(0L, "", "", taskId34);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy36 = deleteRequest30.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId44 = null;
        org.elasticsearch.tasks.Task task45 = deleteRequest40.createTask(0L, "", "", taskId44);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy46 = deleteRequest40.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest30.setRefreshPolicy(refreshPolicy46);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest26.setRefreshPolicy(refreshPolicy46);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest26.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        deleteRequest50.setParentTask("delete {[][][hi!]}", (long) (byte) 100);
        org.elasticsearch.common.transport.TransportAddress transportAddress54 = null;
        deleteRequest50.remoteAddress(transportAddress54);
        org.elasticsearch.index.VersionType versionType56 = deleteRequest50.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest21.versionType(versionType56);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest3.versionType(versionType56);
        org.elasticsearch.common.unit.TimeValue timeValue59 = deleteRequest58.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId67 = null;
        org.elasticsearch.tasks.Task task68 = deleteRequest63.createTask(0L, "", "", taskId67);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest63.setRefreshPolicy("");
        deleteRequest70.primaryTerm(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest70.type("hi!");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel75 = deleteRequest74.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest58.consistencyLevel(writeConsistencyLevel75);
        boolean boolean77 = deleteRequest58.getShouldPersistResult();
        java.lang.String str78 = deleteRequest58.getDescription();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(transportAddress13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(task35);
        org.junit.Assert.assertTrue("'" + refreshPolicy36 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy36.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task45);
        org.junit.Assert.assertTrue("'" + refreshPolicy46 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy46.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(versionType56);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(timeValue59);
        org.junit.Assert.assertNotNull(task68);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel75 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel75.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "delete {[][][]}" + "'", str78, "delete {[][][]}");
    }

    @Test
    public void test3484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3484");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.setRefreshPolicy(refreshPolicy14);
        org.elasticsearch.action.support.IndicesOptions indicesOptions16 = deleteRequest3.indicesOptions();
        deleteRequest3.setParentTask("delete {[][delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[][][]}]}][delete {[null][null][null]}]}", (long) 10);
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(transportAddress13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(indicesOptions16);
    }

    @Test
    public void test3485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3485");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        java.lang.String str4 = deleteRequest2.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest2.parent("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest2.parent("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.routing("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.index("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.index.shard.IndexShard indexShard13 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete14 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest10, indexShard13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str4, "delete {[delete {[][][hi!]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
    }

    @Test
    public void test3486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3486");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest10.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId13 = null;
        deleteRequest10.setParentTask(taskId13);
        java.lang.String str15 = deleteRequest10.type();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy16 = deleteRequest10.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest10.version((-1L));
        java.lang.String str19 = deleteRequest10.id();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + refreshPolicy16 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy16.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
    }

    @Test
    public void test3487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3487");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][hi!]}", "delete {[hi!][null][null]}", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("delete {[null][null][null]}");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput6 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.writeTo(streamOutput6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
    }

    @Test
    public void test3488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3488");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str7 = deleteRequest6.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest6.getParentTask();
        deleteRequest3.setParentTask(taskId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.consistencyLevel(writeConsistencyLevel14);
        boolean boolean16 = deleteRequest15.getShouldPersistResult();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test3489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3489");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        deleteRequest0.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.version(10L);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel8 = deleteRequest7.consistencyLevel();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.setShardId(shardId9);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.parent("delete {[][null][delete {[][delete {[][][hi!]}][delete {[][][]}]}]}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel8 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel8.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
    }

    @Test
    public void test3490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3490");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("delete {[][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = deleteRequest5.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.index("delete {[][][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.setShardId(shardId9);
        java.lang.String[] strArray11 = deleteRequest5.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[hi!][null][null]}", "delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.type("delete {[][][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel21 = deleteRequest20.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.consistencyLevel(writeConsistencyLevel21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest5.consistencyLevel(writeConsistencyLevel21);
        java.lang.String str24 = deleteRequest5.parent();
        org.elasticsearch.common.io.stream.StreamInput streamInput25 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest5.readFrom(streamInput25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(transportAddress6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel21 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel21.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test3491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3491");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.type("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.type("delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long14 = deleteRequest13.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest13.index("");
        boolean boolean17 = deleteRequest13.getShouldPersistResult();
        deleteRequest13.primaryTerm((long) 0);
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest13.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest11.timeout(timeValue20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str26 = deleteRequest25.id();
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest25.setShardId(shardId27);
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest25.setShardId(shardId29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest31.parent("delete {[][][]}");
        org.elasticsearch.index.VersionType versionType34 = deleteRequest33.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest30.versionType(versionType34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest11.versionType(versionType34);
        org.elasticsearch.action.support.IndicesOptions indicesOptions37 = deleteRequest36.indicesOptions();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(versionType34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(indicesOptions37);
    }

    @Test
    public void test3492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3492");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.type("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId16 = null;
        org.elasticsearch.tasks.Task task17 = deleteRequest12.createTask(0L, "", "", taskId16);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy18 = deleteRequest12.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId26 = null;
        org.elasticsearch.tasks.Task task27 = deleteRequest22.createTask(0L, "", "", taskId26);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy28 = deleteRequest22.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest12.setRefreshPolicy(refreshPolicy28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest8.setRefreshPolicy(refreshPolicy28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest8.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        deleteRequest32.setParentTask("delete {[][][hi!]}", (long) (byte) 100);
        org.elasticsearch.common.transport.TransportAddress transportAddress36 = null;
        deleteRequest32.remoteAddress(transportAddress36);
        org.elasticsearch.index.VersionType versionType38 = deleteRequest32.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest3.versionType(versionType38);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest39.setRefreshPolicy("delete {[][delete {[][][hi!]}][]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[][delete {[][][hi!]}][]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(task17);
        org.junit.Assert.assertTrue("'" + refreshPolicy18 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy18.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task27);
        org.junit.Assert.assertTrue("'" + refreshPolicy28 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy28.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(versionType38);
        org.junit.Assert.assertNotNull(deleteRequest39);
    }

    @Test
    public void test3493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3493");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str7 = deleteRequest6.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest6.getParentTask();
        deleteRequest3.setParentTask(taskId10);
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.version(100L);
        java.lang.String str15 = deleteRequest3.parent();
        org.elasticsearch.common.io.stream.StreamInput streamInput16 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.readFrom(streamInput16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test3494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3494");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.setRefreshPolicy(refreshPolicy14);
        long long16 = deleteRequest3.primaryTerm();
        org.elasticsearch.common.transport.TransportAddress transportAddress17 = null;
        deleteRequest3.remoteAddress(transportAddress17);
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest3.getParentTask();
        org.elasticsearch.index.shard.IndexShard indexShard20 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete21 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest3, indexShard20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(transportAddress13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(taskId19);
    }

    @Test
    public void test3495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3495");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        java.lang.String str4 = deleteRequest2.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest2.parent("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest2.parent("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.routing("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.index("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException13 = deleteRequest10.validate();
        java.lang.String str14 = deleteRequest10.index();
        java.lang.String str15 = deleteRequest10.toString();
        boolean boolean16 = deleteRequest10.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest10.setRefreshPolicy("");
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str4, "delete {[delete {[][][hi!]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(actionRequestValidationException13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}" + "'", str14, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][null][null]}" + "'", str15, "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][null][null]}");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(deleteRequest18);
    }

    @Test
    public void test3496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3496");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId9 = null;
        org.elasticsearch.tasks.Task task10 = deleteRequest5.createTask(0L, "", "", taskId9);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest5.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions14 = deleteRequest12.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId15 = null;
        deleteRequest12.setParentTask(taskId15);
        java.lang.String str17 = deleteRequest12.type();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy18 = deleteRequest12.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest12.version((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest12.index("");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][null][null]}", deleteRequest22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + refreshPolicy18 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy18.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
    }

    @Test
    public void test3497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3497");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.setRefreshPolicy("");
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId21 = null;
        org.elasticsearch.tasks.Task task22 = deleteRequest17.createTask(0L, "", "", taskId21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest17.setRefreshPolicy("");
        java.lang.String[] strArray25 = deleteRequest24.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId33 = null;
        org.elasticsearch.tasks.Task task34 = deleteRequest29.createTask(0L, "", "", taskId33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest29.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel37 = deleteRequest36.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest24.consistencyLevel(writeConsistencyLevel37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue41 = deleteRequest40.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress42 = null;
        deleteRequest40.remoteAddress(transportAddress42);
        org.elasticsearch.common.unit.TimeValue timeValue44 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest40.timeout(timeValue44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest24.timeout(timeValue44);
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest46.setShardId(shardId47);
        org.elasticsearch.tasks.TaskId taskId49 = deleteRequest46.getParentTask();
        org.elasticsearch.tasks.Task task50 = deleteRequest9.createTask((long) (byte) 100, "delete {[][delete {[][][]}][delete {[][][]}]}", "delete {[][][]}", taskId49);
        java.lang.String str51 = deleteRequest9.index();
        java.lang.String str52 = deleteRequest9.parent();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(task34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel37 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel37.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(timeValue41);
        org.junit.Assert.assertNotNull(timeValue44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(taskId49);
        org.junit.Assert.assertNotNull(task50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNull(str52);
    }

    @Test
    public void test3498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3498");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.setRefreshPolicy(refreshPolicy14);
        org.elasticsearch.action.support.IndicesOptions indicesOptions16 = deleteRequest3.indicesOptions();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException17 = deleteRequest3.validate();
        java.lang.String[] strArray18 = deleteRequest3.indices();
        java.lang.String str19 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str21 = deleteRequest20.parent();
        deleteRequest20.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest20.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.type("delete {[null][null][null]}");
        org.elasticsearch.index.VersionType versionType28 = deleteRequest27.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.versionType(versionType28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest3.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest3.parent("delete {[][][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress34 = deleteRequest3.remoteAddress();
        java.lang.String str35 = deleteRequest3.routing();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput36 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.writeTo(streamOutput36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(transportAddress13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(indicesOptions16);
        org.junit.Assert.assertNull(actionRequestValidationException17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNull(transportAddress34);
        org.junit.Assert.assertNull(str35);
    }

    @Test
    public void test3499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3499");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest10.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId13 = null;
        deleteRequest10.setParentTask(taskId13);
        deleteRequest10.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest10.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        java.lang.String str19 = deleteRequest18.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest18.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest18.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest18.id("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy26 = deleteRequest18.getRefreshPolicy();
        org.elasticsearch.action.support.IndicesOptions indicesOptions27 = deleteRequest18.indicesOptions();
        org.elasticsearch.index.VersionType versionType28 = deleteRequest18.versionType();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions12);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertTrue("'" + refreshPolicy26 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy26.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(indicesOptions27);
        org.junit.Assert.assertNotNull(versionType28);
    }

    @Test
    public void test3500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3500");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest10.toString();
        java.lang.String[] strArray12 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.index("");
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest14.timeout();
        deleteRequest14.setParentTask("hi!", (long) 100);
        java.lang.String[] strArray19 = deleteRequest14.indices();
        org.elasticsearch.index.VersionType versionType20 = deleteRequest14.versionType();
        org.elasticsearch.common.transport.TransportAddress transportAddress21 = null;
        deleteRequest14.remoteAddress(transportAddress21);
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(versionType20);
    }
}

