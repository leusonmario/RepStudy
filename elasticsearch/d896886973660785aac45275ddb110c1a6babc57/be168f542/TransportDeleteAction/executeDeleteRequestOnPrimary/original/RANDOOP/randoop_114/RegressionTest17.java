import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest17 {

    public static boolean debug = false;

    @Test
    public void test8501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8501");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][null][null]}][null][delete {[][][hi!]}]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel2 = deleteRequest1.consistencyLevel();
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel2 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel2.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test8502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8502");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][null][null]}", throwable2, "delete {[][][hi!]}");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting5 = shardFailure4.routing;
        java.lang.String str6 = shardFailure4.indexUUID;
        java.lang.String str7 = shardFailure4.indexUUID;
        java.lang.Throwable throwable8 = shardFailure4.cause;
        org.junit.Assert.assertNull(shardRouting5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][hi!]}" + "'", str6, "delete {[][][hi!]}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[][][hi!]}" + "'", str7, "delete {[][][hi!]}");
        org.junit.Assert.assertNull(throwable8);
    }

    @Test
    public void test8503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8503");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.routing("delete {[][][hi!]}");
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest10.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType20 = deleteRequest19.versionType();
        deleteRequest19.primaryTerm((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest19.routing("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId32 = null;
        org.elasticsearch.tasks.Task task33 = deleteRequest28.createTask(0L, "", "", taskId32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest28.setRefreshPolicy("");
        java.lang.String str36 = deleteRequest35.toString();
        java.lang.String[] strArray37 = deleteRequest35.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest35.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str48 = deleteRequest47.id();
        java.lang.String str49 = deleteRequest47.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str51 = deleteRequest50.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest50.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId54 = deleteRequest50.getParentTask();
        deleteRequest47.setParentTask(taskId54);
        deleteRequest43.setParentTask(taskId54);
        deleteRequest39.setParentTask(taskId54);
        deleteRequest24.setParentTask(taskId54);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str63 = deleteRequest62.index();
        org.elasticsearch.index.shard.ShardId shardId64 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest62.setShardId(shardId64);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId73 = null;
        org.elasticsearch.tasks.Task task74 = deleteRequest69.createTask(0L, "", "", taskId73);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy75 = deleteRequest69.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest65.setRefreshPolicy(refreshPolicy75);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest24.setRefreshPolicy(refreshPolicy75);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = deleteRequest10.setRefreshPolicy(refreshPolicy75);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(versionType20);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(task33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "delete {[][][]}" + "'", str36, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(taskId54);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(task74);
        org.junit.Assert.assertTrue("'" + refreshPolicy75 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy75.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertNotNull(deleteRequest78);
    }

    @Test
    public void test8504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8504");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][hi!]}", "delete {[null][null][null]}", "");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy4 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        long long7 = deleteRequest3.primaryTerm();
        org.junit.Assert.assertTrue("'" + refreshPolicy4 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy4.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
    }

    @Test
    public void test8505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8505");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType17 = deleteRequest16.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest8.versionType(versionType17);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel19 = deleteRequest8.consistencyLevel();
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest8.timeout();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException21 = deleteRequest8.validate();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(versionType17);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel19 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel19.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNull(actionRequestValidationException21);
    }

    @Test
    public void test8506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8506");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str19 = deleteRequest18.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest18.version((long) ' ');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType28 = deleteRequest27.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress33 = deleteRequest32.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId41 = null;
        org.elasticsearch.tasks.Task task42 = deleteRequest37.createTask(0L, "", "", taskId41);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy43 = deleteRequest37.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest32.setRefreshPolicy(refreshPolicy43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest27.setRefreshPolicy(refreshPolicy43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest21.setRefreshPolicy(refreshPolicy43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest3.setRefreshPolicy(refreshPolicy43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest51.type("delete {[][][]}");
        java.lang.String str54 = deleteRequest51.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest51.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest56.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest62.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType65 = deleteRequest64.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest56.versionType(versionType65);
        org.elasticsearch.common.unit.TimeValue timeValue67 = deleteRequest66.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest3.timeout(timeValue67);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest72.type("delete {[][][hi!]}");
        java.lang.String str75 = deleteRequest72.getDescription();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy76 = deleteRequest72.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest3.setRefreshPolicy(refreshPolicy76);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy78 = deleteRequest3.getRefreshPolicy();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(transportAddress13);
        org.junit.Assert.assertTrue("'" + refreshPolicy14 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy14.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertNull(transportAddress33);
        org.junit.Assert.assertNotNull(task42);
        org.junit.Assert.assertTrue("'" + refreshPolicy43 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy43.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "delete {[][][]}" + "'", str54, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(versionType65);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNotNull(timeValue67);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "delete {[][delete {[][][hi!]}][delete {[][][]}]}" + "'", str75, "delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.junit.Assert.assertTrue("'" + refreshPolicy76 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy76.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertTrue("'" + refreshPolicy78 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy78.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
    }

    @Test
    public void test8507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8507");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "delete {[][hi!][delete {[][][]}]}", "delete {[][][delete {[hi!][][delete {[][][]}]}]}");
    }

    @Test
    public void test8508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8508");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest10.toString();
        java.lang.String str12 = deleteRequest10.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest10.index("delete {[delete {[][null][null]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest10.version(0L);
        org.elasticsearch.action.support.IndicesOptions indicesOptions19 = deleteRequest18.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest18.type("delete {[delete {[hi!][][delete {[][][]}]}][delete {[][][]}][delete {[][][]}]}");
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][][]}" + "'", str12, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(indicesOptions19);
        org.junit.Assert.assertNotNull(deleteRequest21);
    }

    @Test
    public void test8509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8509");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][hi!][delete {[null][null][null]}]}", "delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}", "delete {[][delete {[delete {[][null][null]}][][]}][delete {[null][delete {[null][null][null]}][null]}]}");
        java.lang.String[] strArray4 = deleteRequest3.indices();
        org.junit.Assert.assertNotNull(strArray4);
    }

    @Test
    public void test8510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8510");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = deleteRequest5.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.setShardId(shardId7);
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = deleteRequest8.remoteAddress();
        boolean boolean10 = deleteRequest8.getShouldPersistResult();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(transportAddress6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(transportAddress9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test8511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8511");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy9 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId17 = null;
        org.elasticsearch.tasks.Task task18 = deleteRequest13.createTask(0L, "", "", taskId17);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy19 = deleteRequest13.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest3.setRefreshPolicy(refreshPolicy19);
        java.lang.String str21 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest3.id("hi!");
        deleteRequest23.primaryTerm((long) (short) 100);
        org.elasticsearch.common.transport.TransportAddress transportAddress26 = null;
        deleteRequest23.remoteAddress(transportAddress26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest23.routing("");
        org.elasticsearch.common.transport.TransportAddress transportAddress30 = deleteRequest29.remoteAddress();
        org.elasticsearch.common.transport.TransportAddress transportAddress31 = null;
        deleteRequest29.remoteAddress(transportAddress31);
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertTrue("'" + refreshPolicy9 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy9.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertTrue("'" + refreshPolicy19 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy19.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[][][]}" + "'", str21, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNull(transportAddress30);
    }

    @Test
    public void test8512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8512");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        java.lang.String str4 = deleteRequest2.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest2.version((long) (short) 100);
        deleteRequest2.primaryTerm((long) (-1));
        deleteRequest2.primaryTerm((long) (short) 100);
        java.lang.String str11 = deleteRequest2.getDescription();
        long long12 = deleteRequest2.primaryTerm();
        org.elasticsearch.common.io.stream.StreamInput streamInput13 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest2.readFrom(streamInput13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str11, "delete {[delete {[][][hi!]}][null][null]}");
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 100L + "'", long12 == 100L);
    }

    @Test
    public void test8513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8513");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest3.consistencyLevel(writeConsistencyLevel11);
        deleteRequest12.setParentTask("hi!", 1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.type("delete {[][][]}");
        java.lang.String str22 = deleteRequest19.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest19.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel26 = deleteRequest25.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest25.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest19.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest12.consistencyLevel(writeConsistencyLevel27);
        java.lang.String str30 = deleteRequest12.routing();
        java.lang.Class<?> wildcardClass31 = deleteRequest12.getClass();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[][][]}" + "'", str22, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel26 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel26.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test8514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8514");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.consistencyLevel(writeConsistencyLevel23);
        deleteRequest24.setParentTask("hi!", (long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest24.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest31.id("delete {[delete {[][null][null]}][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest37.type("delete {[][][hi!]}");
        java.lang.String str40 = deleteRequest37.getDescription();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy41 = deleteRequest37.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest45.type("delete {[][][]}");
        java.lang.String str48 = deleteRequest45.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId56 = null;
        org.elasticsearch.tasks.Task task57 = deleteRequest52.createTask(0L, "", "", taskId56);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest52.setRefreshPolicy("");
        java.lang.String str60 = deleteRequest59.toString();
        java.lang.String[] strArray61 = deleteRequest59.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest59.index("");
        org.elasticsearch.common.unit.TimeValue timeValue64 = deleteRequest63.timeout();
        org.elasticsearch.index.VersionType versionType65 = deleteRequest63.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest45.versionType(versionType65);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest37.versionType(versionType65);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy68 = deleteRequest67.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest31.setRefreshPolicy(refreshPolicy68);
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "delete {[][delete {[][][hi!]}][delete {[][][]}]}" + "'", str40, "delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.junit.Assert.assertTrue("'" + refreshPolicy41 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy41.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "delete {[][][]}" + "'", str48, "delete {[][][]}");
        org.junit.Assert.assertNotNull(task57);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "delete {[][][]}" + "'", str60, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(timeValue64);
        org.junit.Assert.assertNotNull(versionType65);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertTrue("'" + refreshPolicy68 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy68.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest69);
    }

    @Test
    public void test8515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8515");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy9 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId17 = null;
        org.elasticsearch.tasks.Task task18 = deleteRequest13.createTask(0L, "", "", taskId17);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy19 = deleteRequest13.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest3.setRefreshPolicy(refreshPolicy19);
        java.lang.String str21 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest3.id("hi!");
        deleteRequest23.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest23.index("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest23.routing("delete {[][][delete {[][null][null]}]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress30 = deleteRequest29.remoteAddress();
        long long31 = deleteRequest29.primaryTerm();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertTrue("'" + refreshPolicy9 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy9.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertTrue("'" + refreshPolicy19 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy19.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[][][]}" + "'", str21, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNull(transportAddress30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 100L + "'", long31 == 100L);
    }

    @Test
    public void test8516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8516");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest5.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest5.timeout(timeValue10);
        java.lang.String str12 = deleteRequest5.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException13 = deleteRequest5.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure15 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[][][hi!]}][null][null]}", (java.lang.Throwable) actionRequestValidationException13, "delete {[][null][null]}");
        java.lang.String str16 = shardFailure15.indexUUID;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting17 = shardFailure15.routing;
        java.lang.Throwable throwable18 = shardFailure15.cause;
        java.lang.String str19 = shardFailure15.reason;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting20 = shardFailure15.routing;
        java.lang.Throwable throwable21 = shardFailure15.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure23 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[][null][null]}][][]}", throwable21, "delete {[delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][delete {[hi!][null][null]}][hi!]}]}");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting24 = shardFailure23.routing;
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][null][null]}" + "'", str12, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[][null][null]}" + "'", str16, "delete {[][null][null]}");
        org.junit.Assert.assertNull(shardRouting17);
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable18.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str19, "delete {[delete {[][][hi!]}][null][null]}");
        org.junit.Assert.assertNull(shardRouting20);
        org.junit.Assert.assertNotNull(throwable21);
        org.junit.Assert.assertEquals(throwable21.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable21.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable21.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertNull(shardRouting24);
    }

    @Test
    public void test8517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8517");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str7 = deleteRequest6.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest6.getParentTask();
        deleteRequest3.setParentTask(taskId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.consistencyLevel(writeConsistencyLevel14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.type("delete {[delete {[][][hi!]}][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest3.setShardId(shardId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.type("delete {[hi!][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest22.consistencyLevel();
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest22.setShardId(shardId26);
        org.elasticsearch.common.unit.TimeValue timeValue28 = deleteRequest22.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.timeout(timeValue28);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(timeValue28);
        org.junit.Assert.assertNotNull(deleteRequest29);
    }

    @Test
    public void test8518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8518");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId4 = deleteRequest0.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.id("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest0.index("delete {[hi!][null][null]}");
        java.lang.String str9 = deleteRequest8.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest11.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue16 = deleteRequest15.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest11.timeout(timeValue16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest8.timeout(timeValue16);
        long long19 = deleteRequest18.version();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(taskId4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[delete {[hi!][null][null]}][null][delete {[][][hi!]}]}" + "'", str9, "delete {[delete {[hi!][null][null]}][null][delete {[][][hi!]}]}");
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 100L + "'", long19 == 100L);
    }

    @Test
    public void test8519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8519");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str15 = deleteRequest14.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException16 = deleteRequest14.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure18 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "hi!", (java.lang.Throwable) actionRequestValidationException16, "delete {[][][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure20 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "", (java.lang.Throwable) actionRequestValidationException16, "delete {[][][hi!]}");
        java.lang.String str21 = shardFailure20.reason;
        java.lang.Throwable throwable22 = shardFailure20.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure24 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[hi!][null][null]}", throwable22, "delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure26 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[][delete {[null][null][null]}][null]}", throwable22, "delete {[delete {[][null][null]}][null][null]}");
        java.lang.Throwable throwable27 = shardFailure26.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure29 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[hi!][null][null]}][delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}][delete {[null][delete {[][delete {[hi!][null][null]}][hi!]}][delete {[][][hi!]}]}]}", throwable27, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure31 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "hi!", throwable27, "delete {[hi!][][delete {[][][]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure33 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][][hi!]}", throwable27, "delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[null][null][null]}" + "'", str15, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException16);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable22.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable27);
        org.junit.Assert.assertEquals(throwable27.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable27.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable27.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test8520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8520");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version((long) (short) 100);
        deleteRequest0.primaryTerm(100L);
        boolean boolean6 = deleteRequest0.getShouldPersistResult();
        java.lang.String str7 = deleteRequest0.parent();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.timeout("delete {[null][null][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[null][null][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test8521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8521");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str5 = deleteRequest4.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest4.timeout(timeValue8);
        org.elasticsearch.common.transport.TransportAddress transportAddress10 = deleteRequest4.remoteAddress();
        long long11 = deleteRequest4.version();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException12 = deleteRequest4.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure14 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[][][]}][null][null]}", (java.lang.Throwable) actionRequestValidationException12, "delete {[][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][delete {[][][]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure16 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[][][hi!]}][null][delete {[][delete {[hi!][null][null]}][hi!]}]}", (java.lang.Throwable) actionRequestValidationException12, "delete {[delete {[hi!][][delete {[][][]}]}][null][null]}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNull(transportAddress10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-3L) + "'", long11 == (-3L));
        org.junit.Assert.assertNotNull(actionRequestValidationException12);
    }

    @Test
    public void test8522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8522");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][]}", "delete {[null][null][null]}", "delete {[null][null][null]}");
        java.lang.String str4 = deleteRequest3.parent();
        deleteRequest3.setParentTask("delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}", 97L);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel8 = deleteRequest3.consistencyLevel();
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel8 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel8.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test8523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8523");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}", "delete {[][][hi!]}", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str11 = deleteRequest10.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.id("hi!");
        org.elasticsearch.tasks.TaskId taskId14 = deleteRequest13.getParentTask();
        org.elasticsearch.tasks.TaskId taskId15 = deleteRequest13.getParentTask();
        org.elasticsearch.tasks.Task task16 = deleteRequest3.createTask((-1L), "", "hi!", taskId15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest3.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType25 = deleteRequest24.versionType();
        java.lang.String str26 = deleteRequest24.index();
        org.elasticsearch.common.unit.TimeValue timeValue27 = deleteRequest24.timeout();
        org.elasticsearch.index.VersionType versionType28 = deleteRequest24.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest18.versionType(versionType28);
        java.lang.Class<?> wildcardClass30 = versionType28.getClass();
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(taskId14);
        org.junit.Assert.assertNotNull(taskId15);
        org.junit.Assert.assertNotNull(task16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(versionType25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(timeValue27);
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test8524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8524");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest7.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.id("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest12.routing("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str24 = deleteRequest23.id();
        org.elasticsearch.common.unit.TimeValue timeValue25 = deleteRequest23.timeout();
        java.lang.String str26 = deleteRequest23.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str31 = deleteRequest30.getDescription();
        org.elasticsearch.index.VersionType versionType32 = deleteRequest30.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest23.versionType(versionType32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest23.version((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest42.type("delete {[][][]}");
        java.lang.String str45 = deleteRequest42.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest42.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest47.parent("delete {[][][]}");
        java.lang.String str50 = deleteRequest47.type();
        org.elasticsearch.tasks.TaskId taskId51 = deleteRequest47.getParentTask();
        org.elasticsearch.tasks.Task task52 = deleteRequest35.createTask((long) 'a', "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}", "delete {[null][null][null]}", taskId51);
        org.elasticsearch.tasks.Task task53 = deleteRequest16.createTask((-1L), "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][][hi!]}", "delete {[][delete {[][][]}][delete {[][][]}]}", taskId51);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest16.version((long) (short) 1);
        org.elasticsearch.index.VersionType versionType56 = deleteRequest16.versionType();
        org.elasticsearch.common.transport.TransportAddress transportAddress57 = deleteRequest16.remoteAddress();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(taskId8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(timeValue25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "delete {[][][]}" + "'", str31, "delete {[][][]}");
        org.junit.Assert.assertNotNull(versionType32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "delete {[][][]}" + "'", str45, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "delete {[][][]}" + "'", str50, "delete {[][][]}");
        org.junit.Assert.assertNotNull(taskId51);
        org.junit.Assert.assertNotNull(task52);
        org.junit.Assert.assertNotNull(task53);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(versionType56);
        org.junit.Assert.assertNull(transportAddress57);
    }

    @Test
    public void test8525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8525");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][hi!][]}", "", "delete {[][delete {[delete {[][null][null]}][][]}][delete {[null][delete {[null][null][null]}][null]}]}");
    }

    @Test
    public void test8526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8526");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str10 = deleteRequest9.id();
        java.lang.String str11 = deleteRequest9.index();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest9.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest0.createTask((-1L), "delete {[][][hi!]}", "delete {[][delete {[][][]}][delete {[][][]}]}", taskId12);
        deleteRequest0.setParentTask("delete {[delete {[][][hi!]}][null][null]}", (long) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest18.setParentTask("hi!", (long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.type("delete {[][][]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy28 = deleteRequest25.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest18.setRefreshPolicy(refreshPolicy28);
        long long30 = deleteRequest18.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId33 = deleteRequest32.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId41 = null;
        org.elasticsearch.tasks.Task task42 = deleteRequest37.createTask(0L, "", "", taskId41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest37.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel45 = deleteRequest44.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions46 = deleteRequest44.indicesOptions();
        java.lang.String str47 = deleteRequest44.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str49 = deleteRequest48.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest48.version((long) (short) 100);
        deleteRequest48.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str55 = deleteRequest54.parent();
        org.elasticsearch.index.VersionType versionType56 = deleteRequest54.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest48.versionType(versionType56);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest44.versionType(versionType56);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest32.versionType(versionType56);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest18.versionType(versionType56);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest0.versionType(versionType56);
        long long62 = deleteRequest61.primaryTerm();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertTrue("'" + refreshPolicy28 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy28.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-3L) + "'", long30 == (-3L));
        org.junit.Assert.assertNull(shardId33);
        org.junit.Assert.assertNotNull(task42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel45 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel45.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "delete {[][][]}" + "'", str47, "delete {[][][]}");
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(versionType56);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 0L + "'", long62 == 0L);
    }

    @Test
    public void test8527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8527");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[][][]}][]}", "delete {[][delete {[][][]}][delete {[][][]}]}", "delete {[null][delete {[hi!][null][null]}][null]}");
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.setShardId(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest5);
    }

    @Test
    public void test8528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8528");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType6 = deleteRequest5.versionType();
        java.lang.String str7 = deleteRequest5.index();
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest5.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}", "hi!", "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.routing("delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str16 = deleteRequest15.parent();
        deleteRequest15.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest15.setRefreshPolicy("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy21 = deleteRequest20.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest14.setRefreshPolicy(refreshPolicy21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.type("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.index.VersionType versionType25 = deleteRequest24.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest5.versionType(versionType25);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertTrue("'" + refreshPolicy21 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy21.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(versionType25);
        org.junit.Assert.assertNotNull(deleteRequest26);
    }

    @Test
    public void test8529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8529");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        java.lang.String str4 = deleteRequest2.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest2.parent("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest2.parent("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        deleteRequest8.primaryTerm((long) ' ');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest14.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest14.id("delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("delete {[][][]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy27 = deleteRequest24.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest14.setRefreshPolicy(refreshPolicy27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest8.setRefreshPolicy(refreshPolicy27);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str4, "delete {[delete {[][][hi!]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + refreshPolicy27 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy27.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest29);
    }

    @Test
    public void test8530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8530");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.parent("delete {[][][]}");
        org.elasticsearch.index.VersionType versionType12 = deleteRequest11.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest8.versionType(versionType12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str18 = deleteRequest17.id();
        org.elasticsearch.common.transport.TransportAddress transportAddress19 = deleteRequest17.remoteAddress();
        org.elasticsearch.index.VersionType versionType20 = deleteRequest17.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel21 = deleteRequest17.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest13.consistencyLevel(writeConsistencyLevel21);
        org.elasticsearch.index.VersionType versionType23 = deleteRequest22.versionType();
        boolean boolean24 = deleteRequest22.getShouldPersistResult();
        org.elasticsearch.index.shard.IndexShard indexShard25 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult26 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest22, indexShard25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNull(transportAddress19);
        org.junit.Assert.assertNotNull(versionType20);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel21 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel21.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(versionType23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test8531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8531");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        java.lang.String str4 = deleteRequest2.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest2.parent("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest2.parent("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        java.lang.String str9 = deleteRequest8.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress10 = deleteRequest8.remoteAddress();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str4, "delete {[delete {[][][hi!]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}" + "'", str9, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.junit.Assert.assertNull(transportAddress10);
    }

    @Test
    public void test8532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8532");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId12 = null;
        org.elasticsearch.tasks.Task task13 = deleteRequest8.createTask(0L, "", "", taskId12);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = deleteRequest8.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.setRefreshPolicy(refreshPolicy14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.id("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest17.index("delete {[delete {[][][]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.id("delete {[delete {[][][delete {[][delete {[][][hi!]}][delete {[][][]}]}]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue26 = deleteRequest25.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress27 = null;
        deleteRequest25.remoteAddress(transportAddress27);
        org.elasticsearch.common.unit.TimeValue timeValue29 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest25.timeout(timeValue29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest23.timeout(timeValue29);
        org.junit.Assert.assertNull(transportAddress4);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertTrue("'" + refreshPolicy14 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy14.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(timeValue26);
        org.junit.Assert.assertNotNull(timeValue29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest31);
    }

    @Test
    public void test8533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8533");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest1.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue6 = deleteRequest5.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.timeout(timeValue6);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException8 = deleteRequest1.validate();
        org.elasticsearch.index.VersionType versionType9 = deleteRequest1.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest1.parent("delete {[delete {[hi!][null][null]}][null][delete {[][][hi!]}]}");
        org.elasticsearch.index.VersionType versionType12 = deleteRequest1.versionType();
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(actionRequestValidationException8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(versionType12);
    }

    @Test
    public void test8534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8534");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}", "hi!", "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId13 = null;
        org.elasticsearch.tasks.Task task14 = deleteRequest9.createTask(0L, "", "", taskId13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest9.setRefreshPolicy("");
        java.lang.String str17 = deleteRequest16.toString();
        java.lang.String str18 = deleteRequest16.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.type("delete {[null][null][null]}");
        java.lang.String str23 = deleteRequest20.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest20.index("");
        org.elasticsearch.common.unit.TimeValue timeValue26 = deleteRequest25.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest16.timeout(timeValue26);
        org.elasticsearch.index.VersionType versionType28 = deleteRequest27.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.versionType(versionType28);
        org.elasticsearch.common.unit.TimeValue timeValue30 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest3.index("delete {[delete {[hi!][null][null]}][delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}][delete {[delete {[][null][null]}][][]}]}");
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(task14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[][][]}" + "'", str17, "delete {[][][]}");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[][][]}" + "'", str18, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(timeValue26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(timeValue30);
        org.junit.Assert.assertNotNull(deleteRequest32);
    }

    @Test
    public void test8535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8535");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest10.toString();
        java.lang.String[] strArray12 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.index("");
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest14.timeout();
        deleteRequest14.setParentTask("hi!", (long) 100);
        java.lang.String[] strArray19 = deleteRequest14.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.type("delete {[][delete {[null][null][null]}][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId32 = null;
        org.elasticsearch.tasks.Task task33 = deleteRequest28.createTask(0L, "", "", taskId32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest28.setRefreshPolicy("");
        java.lang.String str36 = deleteRequest35.toString();
        java.lang.String[] strArray37 = deleteRequest35.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest35.index("");
        org.elasticsearch.common.unit.TimeValue timeValue40 = deleteRequest39.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str48 = deleteRequest47.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest52.type("delete {[][][]}");
        java.lang.String str55 = deleteRequest52.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest52.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId65 = null;
        org.elasticsearch.tasks.Task task66 = deleteRequest61.createTask(0L, "", "", taskId65);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest61.setRefreshPolicy("");
        java.lang.String str69 = deleteRequest68.toString();
        java.lang.String[] strArray70 = deleteRequest68.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest68.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str81 = deleteRequest80.id();
        java.lang.String str82 = deleteRequest80.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest83 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str84 = deleteRequest83.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest86 = deleteRequest83.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId87 = deleteRequest83.getParentTask();
        deleteRequest80.setParentTask(taskId87);
        deleteRequest76.setParentTask(taskId87);
        deleteRequest72.setParentTask(taskId87);
        deleteRequest57.setParentTask(taskId87);
        deleteRequest47.setParentTask(taskId87);
        org.elasticsearch.tasks.Task task93 = deleteRequest39.createTask((long) (short) -1, "", "delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}", taskId87);
        org.elasticsearch.tasks.Task task94 = deleteRequest21.createTask(52L, "delete {[delete {[][][hi!]}][null][]}", "delete {[][hi!][delete {[null][null][null]}]}", taskId87);
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(task33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "delete {[][][]}" + "'", str36, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(timeValue40);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "delete {[][][]}" + "'", str55, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(task66);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "delete {[][][]}" + "'", str69, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNotNull(deleteRequest86);
        org.junit.Assert.assertNotNull(taskId87);
        org.junit.Assert.assertNotNull(task93);
        org.junit.Assert.assertNotNull(task94);
    }

    @Test
    public void test8536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8536");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.parent("hi!");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.setRefreshPolicy(refreshPolicy10);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
    }

    @Test
    public void test8537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8537");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        deleteRequest10.primaryTerm(1L);
        deleteRequest10.primaryTerm((long) 0);
        java.lang.String str15 = deleteRequest10.type();
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest10.setShardId(shardId16);
        java.lang.String str18 = deleteRequest10.index();
        java.lang.String str19 = deleteRequest10.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str24 = deleteRequest23.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest23.id("hi!");
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest26.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest26.setRefreshPolicy("");
        org.elasticsearch.common.unit.TimeValue timeValue30 = deleteRequest29.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId41 = null;
        org.elasticsearch.tasks.Task task42 = deleteRequest37.createTask(0L, "", "", taskId41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest37.setRefreshPolicy("");
        java.lang.String[] strArray45 = deleteRequest44.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId53 = null;
        org.elasticsearch.tasks.Task task54 = deleteRequest49.createTask(0L, "", "", taskId53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest49.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel57 = deleteRequest56.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest44.consistencyLevel(writeConsistencyLevel57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue61 = deleteRequest60.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress62 = null;
        deleteRequest60.remoteAddress(transportAddress62);
        org.elasticsearch.common.unit.TimeValue timeValue64 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest60.timeout(timeValue64);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest44.timeout(timeValue64);
        org.elasticsearch.index.shard.ShardId shardId67 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest66.setShardId(shardId67);
        org.elasticsearch.tasks.TaskId taskId69 = deleteRequest66.getParentTask();
        org.elasticsearch.tasks.Task task70 = deleteRequest29.createTask((long) (byte) 100, "delete {[][delete {[][][]}][delete {[][][]}]}", "delete {[][][]}", taskId69);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str72 = deleteRequest71.parent();
        deleteRequest71.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest71.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = deleteRequest76.type("delete {[null][null][null]}");
        java.lang.String str79 = deleteRequest76.parent();
        boolean boolean80 = deleteRequest76.getShouldPersistResult();
        org.elasticsearch.common.unit.TimeValue timeValue81 = deleteRequest76.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest82 = deleteRequest29.timeout(timeValue81);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException83 = deleteRequest82.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest86 = deleteRequest84.index("delete {[][][hi!]}");
        java.lang.String str87 = deleteRequest86.parent();
        java.lang.String str88 = deleteRequest86.type();
        long long89 = deleteRequest86.primaryTerm();
        long long90 = deleteRequest86.version();
        java.lang.String str91 = deleteRequest86.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel92 = deleteRequest86.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest93 = deleteRequest82.consistencyLevel(writeConsistencyLevel92);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest94 = deleteRequest10.consistencyLevel(writeConsistencyLevel92);
        deleteRequest94.setParentTask("delete {[delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}][delete {[delete {[][null][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}]}", (long) 1);
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(taskId27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(timeValue30);
        org.junit.Assert.assertNotNull(task42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(task54);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel57 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel57.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(timeValue61);
        org.junit.Assert.assertNotNull(timeValue64);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertNotNull(taskId69);
        org.junit.Assert.assertNotNull(task70);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertNotNull(deleteRequest78);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(timeValue81);
        org.junit.Assert.assertNotNull(deleteRequest82);
        org.junit.Assert.assertNull(actionRequestValidationException83);
        org.junit.Assert.assertNotNull(deleteRequest86);
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + 0L + "'", long89 == 0L);
        org.junit.Assert.assertTrue("'" + long90 + "' != '" + (-3L) + "'", long90 == (-3L));
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str91, "delete {[delete {[][][hi!]}][null][null]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel92 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel92.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest93);
        org.junit.Assert.assertNotNull(deleteRequest94);
    }

    @Test
    public void test8538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8538");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.type("delete {[null][null][null]}");
        java.lang.String str4 = deleteRequest1.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest1.index("");
        java.lang.String[] strArray7 = deleteRequest6.indices();
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.setShardId(shardId8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest6.id("delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.type("delete {[][delete {[][][]}][delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest11.parent("delete {[][][delete {[][null][null]}]}");
        java.lang.String str16 = deleteRequest11.index();
        java.lang.String str17 = deleteRequest11.toString();
        org.elasticsearch.common.transport.TransportAddress transportAddress18 = null;
        deleteRequest11.remoteAddress(transportAddress18);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[][delete {[][delete {[][][]}][delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}]}][delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}]}" + "'", str17, "delete {[][delete {[][delete {[][][]}][delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}]}][delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}]}");
    }

    @Test
    public void test8539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8539");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("delete {[][][]}");
        java.lang.String str10 = deleteRequest7.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId22 = null;
        org.elasticsearch.tasks.Task task23 = deleteRequest18.createTask(0L, "", "", taskId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest18.setRefreshPolicy("");
        java.lang.String[] strArray26 = deleteRequest25.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId34 = null;
        org.elasticsearch.tasks.Task task35 = deleteRequest30.createTask(0L, "", "", taskId34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest30.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = deleteRequest37.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest25.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue42 = deleteRequest41.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress43 = null;
        deleteRequest41.remoteAddress(transportAddress43);
        org.elasticsearch.common.unit.TimeValue timeValue45 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest41.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest25.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest14.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest3.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest3.type("delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress52 = null;
        deleteRequest3.remoteAddress(transportAddress52);
        org.elasticsearch.index.shard.IndexShard indexShard54 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult55 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest3, indexShard54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][][]}" + "'", str10, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(task35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel38 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel38.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(timeValue42);
        org.junit.Assert.assertNotNull(timeValue45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest51);
    }

    @Test
    public void test8540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8540");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.consistencyLevel(writeConsistencyLevel23);
        deleteRequest24.setParentTask("hi!", (long) (short) 100);
        org.elasticsearch.index.VersionType versionType28 = deleteRequest24.versionType();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException29 = deleteRequest24.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId32 = deleteRequest31.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId40 = null;
        org.elasticsearch.tasks.Task task41 = deleteRequest36.createTask(0L, "", "", taskId40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest36.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel44 = deleteRequest43.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions45 = deleteRequest43.indicesOptions();
        java.lang.String str46 = deleteRequest43.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str48 = deleteRequest47.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest47.version((long) (short) 100);
        deleteRequest47.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str54 = deleteRequest53.parent();
        org.elasticsearch.index.VersionType versionType55 = deleteRequest53.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest47.versionType(versionType55);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest43.versionType(versionType55);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest31.versionType(versionType55);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy59 = deleteRequest31.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest24.setRefreshPolicy(refreshPolicy59);
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertNull(actionRequestValidationException29);
        org.junit.Assert.assertNull(shardId32);
        org.junit.Assert.assertNotNull(task41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel44 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel44.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "delete {[][][]}" + "'", str46, "delete {[][][]}");
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(versionType55);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertTrue("'" + refreshPolicy59 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy59.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest60);
    }

    @Test
    public void test8541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8541");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str7 = deleteRequest6.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest6.getParentTask();
        deleteRequest3.setParentTask(taskId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str13 = deleteRequest12.parent();
        deleteRequest12.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.type("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.version((long) '#');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel24 = deleteRequest22.consistencyLevel();
        deleteRequest22.setParentTask("delete {[delete {[][][hi!]}][null][null]}", (long) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId35 = null;
        org.elasticsearch.tasks.Task task36 = deleteRequest31.createTask(0L, "", "", taskId35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest31.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType39 = deleteRequest31.versionType();
        java.lang.String str40 = deleteRequest31.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress41 = deleteRequest31.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy42 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest31.setRefreshPolicy(refreshPolicy42);
        long long44 = deleteRequest31.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue45 = deleteRequest31.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest22.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest21.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest3.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest53.version((long) (-1));
        org.elasticsearch.common.transport.TransportAddress transportAddress56 = null;
        deleteRequest55.remoteAddress(transportAddress56);
        org.elasticsearch.tasks.TaskId taskId58 = deleteRequest55.getParentTask();
        org.elasticsearch.tasks.Task task59 = deleteRequest3.createTask((long) (short) 100, "delete {[][][delete {[][null][null]}]}", "delete {[delete {[delete {[][null][null]}][][delete {[][][hi!]}]}][delete {[][null][null]}][delete {[null][null][delete {[][][hi!]}]}]}", taskId58);
        org.elasticsearch.index.shard.ShardId shardId60 = deleteRequest3.shardId();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel24 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel24.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(task36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(versionType39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(transportAddress41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertNotNull(timeValue45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(taskId58);
        org.junit.Assert.assertNotNull(task59);
        org.junit.Assert.assertNull(shardId60);
    }

    @Test
    public void test8542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8542");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.setShardId(shardId2);
        deleteRequest1.primaryTerm((long) 1);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy6 = deleteRequest1.getRefreshPolicy();
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest1.getParentTask();
        org.elasticsearch.index.VersionType versionType8 = deleteRequest1.versionType();
        org.elasticsearch.action.support.IndicesOptions indicesOptions9 = deleteRequest1.indicesOptions();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertTrue("'" + refreshPolicy6 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy6.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(versionType8);
        org.junit.Assert.assertNotNull(indicesOptions9);
    }

    @Test
    public void test8543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8543");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.setShardId(shardId2);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest1.index("");
        boolean boolean6 = deleteRequest1.getShouldPersistResult();
        deleteRequest1.setParentTask("delete {[delete {[][][hi!]}][null][delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}]}", (long) 100);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test8544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8544");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel9 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = deleteRequest13.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId22 = null;
        org.elasticsearch.tasks.Task task23 = deleteRequest18.createTask(0L, "", "", taskId22);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy24 = deleteRequest18.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest13.setRefreshPolicy(refreshPolicy24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest3.setRefreshPolicy(refreshPolicy24);
        java.lang.String str27 = deleteRequest26.parent();
        java.lang.String[] strArray28 = deleteRequest26.indices();
        org.elasticsearch.index.shard.ShardId shardId29 = deleteRequest26.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str34 = deleteRequest33.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long40 = deleteRequest39.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str42 = deleteRequest41.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue45 = deleteRequest44.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest41.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest46.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId49 = deleteRequest48.getParentTask();
        deleteRequest39.setParentTask(taskId49);
        org.elasticsearch.tasks.Task task51 = deleteRequest33.createTask((long) ' ', "delete {[][][hi!]}", "delete {[][][]}", taskId49);
        java.lang.String str52 = deleteRequest33.getDescription();
        org.elasticsearch.common.unit.TimeValue timeValue53 = deleteRequest33.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest59.type("delete {[null][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress62 = deleteRequest61.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId63 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest61.setShardId(shardId63);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest64.version((long) '4');
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy67 = deleteRequest64.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest57.setRefreshPolicy(refreshPolicy67);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest33.setRefreshPolicy(refreshPolicy67);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest26.setRefreshPolicy(refreshPolicy67);
        org.elasticsearch.common.transport.TransportAddress transportAddress71 = deleteRequest26.remoteAddress();
        java.lang.String str72 = deleteRequest26.parent();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel9 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel9.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(transportAddress14);
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertTrue("'" + refreshPolicy24 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy24.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNull(shardId29);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "delete {[][][]}" + "'", str34, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(timeValue45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(taskId49);
        org.junit.Assert.assertNotNull(task51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "delete {[][][]}" + "'", str52, "delete {[][][]}");
        org.junit.Assert.assertNotNull(timeValue53);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNull(transportAddress62);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertTrue("'" + refreshPolicy67 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy67.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNull(transportAddress71);
        org.junit.Assert.assertNull(str72);
    }

    @Test
    public void test8545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8545");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[null][null][null]}][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.type("delete {[delete {[delete {[][][hi!]}][null][null]}][null][null]}");
        long long4 = deleteRequest1.primaryTerm();
        long long5 = deleteRequest1.version();
        boolean boolean6 = deleteRequest1.getShouldPersistResult();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-3L) + "'", long5 == (-3L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test8546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8546");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        deleteRequest0.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.type("delete {[null][null][null]}");
        java.lang.String str8 = deleteRequest5.parent();
        org.elasticsearch.index.VersionType versionType9 = deleteRequest5.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest5.parent("");
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.setShardId(shardId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest11.id("");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
    }

    @Test
    public void test8547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8547");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}", "delete {[hi!][null][null]}", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue5 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.type("delete {[delete {[][delete {[null][null][null]}][null]}][delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][delete {[][hi!][]}][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}]}][delete {[][delete {[][][]}][delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}]}]}");
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertNotNull(deleteRequest7);
    }

    @Test
    public void test8548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8548");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest1.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue6 = deleteRequest5.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.timeout(timeValue6);
        java.lang.String str8 = deleteRequest1.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException9 = deleteRequest1.validate();
        java.lang.String str10 = deleteRequest1.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long13 = deleteRequest12.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.index("");
        boolean boolean16 = deleteRequest12.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest12.version((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue19 = deleteRequest12.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest1.timeout(timeValue19);
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.setShardId(shardId21);
        long long23 = deleteRequest22.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest22.type("delete {[][][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue26 = deleteRequest25.timeout();
        org.elasticsearch.index.shard.IndexShard indexShard27 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult28 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest25, indexShard27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[][null][null]}" + "'", str8, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][null][null]}" + "'", str10, "delete {[][null][null]}");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-3L) + "'", long23 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(timeValue26);
    }

    @Test
    public void test8549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8549");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.index.shard.ShardId shardId6 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version((long) '#');
        org.elasticsearch.action.support.IndicesOptions indicesOptions9 = deleteRequest8.indicesOptions();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(shardId6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(indicesOptions9);
    }

    @Test
    public void test8550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8550");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][][]}]}][null][]}", "delete {[delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}][][delete {[][][null]}]}", "delete {[delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}][delete {[delete {[][null][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.id("delete {[][delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[][][]}]}][delete {[null][null][null]}]}");
        org.junit.Assert.assertNotNull(deleteRequest5);
    }

    @Test
    public void test8551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8551");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest10.toString();
        java.lang.String[] strArray12 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str23 = deleteRequest22.id();
        java.lang.String str24 = deleteRequest22.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str26 = deleteRequest25.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest25.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest25.getParentTask();
        deleteRequest22.setParentTask(taskId29);
        deleteRequest18.setParentTask(taskId29);
        deleteRequest14.setParentTask(taskId29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest14.parent("delete {[delete {[][][hi!]}][null][null]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions35 = deleteRequest14.indicesOptions();
        boolean boolean36 = deleteRequest14.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest14.id("delete {[delete {[][null][null]}][][]}");
        java.lang.String str39 = deleteRequest38.type();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(indicesOptions35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
    }

    @Test
    public void test8552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8552");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.consistencyLevel(writeConsistencyLevel23);
        deleteRequest24.setParentTask("hi!", (long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = deleteRequest28.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel30 = deleteRequest28.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest24.consistencyLevel(writeConsistencyLevel30);
        org.elasticsearch.common.unit.TimeValue timeValue32 = deleteRequest31.timeout();
        org.elasticsearch.index.VersionType versionType33 = deleteRequest31.versionType();
        org.elasticsearch.index.shard.ShardId shardId34 = deleteRequest31.shardId();
        java.lang.String[] strArray35 = deleteRequest31.indices();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel29 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel29.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel30 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel30.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(timeValue32);
        org.junit.Assert.assertNotNull(versionType33);
        org.junit.Assert.assertNull(shardId34);
        org.junit.Assert.assertNotNull(strArray35);
    }

    @Test
    public void test8553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8553");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[delete {[][null][null]}][null][null]}][]}", "delete {[delete {[][][hi!]}][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[null][null][null]}]}", "delete {[][delete {[][][]}][]}");
    }

    @Test
    public void test8554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8554");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId20 = null;
        org.elasticsearch.tasks.Task task21 = deleteRequest16.createTask(0L, "", "", taskId20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest16.setRefreshPolicy("");
        java.lang.String str24 = deleteRequest23.toString();
        java.lang.String[] strArray25 = deleteRequest23.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest23.index("");
        org.elasticsearch.common.unit.TimeValue timeValue28 = deleteRequest27.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.timeout(timeValue28);
        java.lang.String str30 = deleteRequest29.index();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "delete {[][][]}" + "'", str24, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(timeValue28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
    }

    @Test
    public void test8555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8555");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}][]}", "delete {[delete {[][][]}][delete {[][delete {[][][]}][delete {[][][]}]}][delete {[delete {[][null][null]}][][]}]}", "");
    }

    @Test
    public void test8556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8556");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.type("delete {[hi!][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest7.consistencyLevel(writeConsistencyLevel14);
        org.elasticsearch.index.shard.IndexShard indexShard16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult17 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest15, indexShard16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest15);
    }

    @Test
    public void test8557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8557");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.type("delete {[null][null][null]}");
        java.lang.String str4 = deleteRequest1.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest1.index("");
        java.lang.String[] strArray7 = deleteRequest6.indices();
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.setShardId(shardId8);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest6.consistencyLevel();
        long long11 = deleteRequest6.primaryTerm();
        java.lang.String str12 = deleteRequest6.type();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[null][null][null]}" + "'", str12, "delete {[null][null][null]}");
    }

    @Test
    public void test8558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8558");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.common.unit.TimeValue timeValue5 = deleteRequest3.timeout();
        long long6 = deleteRequest3.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.index("");
        java.lang.String str9 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.parent("hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = null;
        deleteRequest3.remoteAddress(transportAddress12);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = deleteRequest3.getRefreshPolicy();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-3L) + "'", long6 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertTrue("'" + refreshPolicy14 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy14.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
    }

    @Test
    public void test8559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8559");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str9 = deleteRequest8.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException10 = deleteRequest8.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure12 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "hi!", (java.lang.Throwable) actionRequestValidationException10, "delete {[][][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure14 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[][][]}", (java.lang.Throwable) actionRequestValidationException10, "delete {[][][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure16 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}", (java.lang.Throwable) actionRequestValidationException10, "");
        java.lang.String str17 = shardFailure16.indexUUID;
        java.lang.String str18 = shardFailure16.indexUUID;
        java.lang.Throwable throwable19 = shardFailure16.cause;
        java.lang.String str20 = shardFailure16.indexUUID;
        java.lang.Throwable throwable21 = shardFailure16.cause;
        java.lang.String str22 = shardFailure16.reason;
        java.lang.String str23 = shardFailure16.indexUUID;
        java.lang.String str24 = shardFailure16.reason;
        java.lang.Throwable throwable25 = shardFailure16.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure27 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[hi!][null][null]}][delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}][delete {[delete {[][null][null]}][][]}]}", throwable25, "delete {[][delete {[][][]}][hi!]}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[null][null][null]}" + "'", str9, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException10);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable19.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(throwable21);
        org.junit.Assert.assertEquals(throwable21.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable21.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable21.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}" + "'", str22, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}" + "'", str24, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.junit.Assert.assertNotNull(throwable25);
        org.junit.Assert.assertEquals(throwable25.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable25.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable25.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test8560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8560");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.getDescription();
        java.lang.String str5 = deleteRequest3.getDescription();
        java.lang.String str6 = deleteRequest3.type();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][][]}" + "'", str4, "delete {[][][]}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[][][]}" + "'", str5, "delete {[][][]}");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
    }

    @Test
    public void test8561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8561");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str9 = deleteRequest8.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException10 = deleteRequest8.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure12 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "hi!", (java.lang.Throwable) actionRequestValidationException10, "delete {[][][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure14 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "", (java.lang.Throwable) actionRequestValidationException10, "delete {[][][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure16 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][delete {[][][hi!]}][delete {[][][]}]}", (java.lang.Throwable) actionRequestValidationException10, "delete {[][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure18 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException10, "delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        java.lang.String str19 = shardFailure18.indexUUID;
        java.lang.String str20 = shardFailure18.indexUUID;
        java.lang.String str21 = shardFailure18.reason;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting22 = shardFailure18.routing;
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[null][null][null]}" + "'", str9, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException10);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}" + "'", str19, "delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}" + "'", str20, "delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[hi!][null][null]}" + "'", str21, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNull(shardRouting22);
    }

    @Test
    public void test8562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8562");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str11 = deleteRequest10.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException12 = deleteRequest10.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure14 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "hi!", (java.lang.Throwable) actionRequestValidationException12, "delete {[][][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure16 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "", (java.lang.Throwable) actionRequestValidationException12, "delete {[][][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure18 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[][delete {[][][]}][delete {[][][]}]}", (java.lang.Throwable) actionRequestValidationException12, "");
        java.lang.Throwable throwable19 = shardFailure18.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure21 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][delete {[null][null][null]}][null]}", throwable19, "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure23 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[hi!][null][null]}", throwable19, "delete {[delete {[hi!][null][null]}][null][delete {[][][hi!]}]}");
        java.lang.Throwable throwable24 = shardFailure23.cause;
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[null][null][null]}" + "'", str11, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException12);
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable19.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable24);
        org.junit.Assert.assertEquals(throwable24.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable24.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable24.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test8563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8563");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long2 = deleteRequest1.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest1.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.index("delete {[hi!][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue9 = deleteRequest6.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest6.version((long) (short) 10);
        java.lang.String str12 = deleteRequest11.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str14 = deleteRequest13.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = deleteRequest13.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest13.setShardId(shardId16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId25 = null;
        org.elasticsearch.tasks.Task task26 = deleteRequest21.createTask(0L, "", "", taskId25);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy27 = deleteRequest21.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest13.setRefreshPolicy(refreshPolicy27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long31 = deleteRequest30.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str33 = deleteRequest32.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue36 = deleteRequest35.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest32.timeout(timeValue36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest37.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId40 = deleteRequest39.getParentTask();
        deleteRequest30.setParentTask(taskId40);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel42 = deleteRequest30.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest13.consistencyLevel(writeConsistencyLevel42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest11.consistencyLevel(writeConsistencyLevel42);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest11.setRefreshPolicy("delete {[][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][delete {[][][]}]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][delete {[][][]}]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(timeValue9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(transportAddress15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertTrue("'" + refreshPolicy27 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy27.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(timeValue36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(taskId40);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel42 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel42.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest44);
    }

    @Test
    public void test8564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8564");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest7.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.version((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.id("delete {[delete {[][][hi!]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.index("delete {[delete {[hi!][null][null]}][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress17 = null;
        deleteRequest16.remoteAddress(transportAddress17);
        deleteRequest16.setParentTask("delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}", (long) 10);
        java.lang.String str22 = deleteRequest16.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest16.routing("delete {[delete {[][delete {[][][]}][delete {[][][]}]}][][delete {[][][]}]}");
        java.lang.String str25 = deleteRequest16.parent();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(taskId8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str22, "delete {[delete {[][][hi!]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNull(str25);
    }

    @Test
    public void test8565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8565");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        java.lang.String str4 = deleteRequest2.type();
        long long5 = deleteRequest2.primaryTerm();
        long long6 = deleteRequest2.version();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest2.setShardId(shardId7);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException9 = deleteRequest8.validate();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest8.setShardId(shardId10);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy12 = deleteRequest8.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest8.routing("delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest14.timeout();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-3L) + "'", long6 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(actionRequestValidationException9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertTrue("'" + refreshPolicy12 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy12.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(timeValue15);
    }

    @Test
    public void test8566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8566");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        deleteRequest0.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.setRefreshPolicy("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException6 = deleteRequest5.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.index("delete {[hi!][null][null]}");
        deleteRequest5.setParentTask("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}", 10L);
        java.lang.String str12 = deleteRequest5.parent();
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest5.timeout();
        boolean boolean14 = deleteRequest5.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str19 = deleteRequest18.id();
        java.lang.String str20 = deleteRequest18.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.type("delete {[][][]}");
        java.lang.String str23 = deleteRequest22.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest22.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel26 = deleteRequest25.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str31 = deleteRequest30.id();
        java.lang.String str32 = deleteRequest30.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str34 = deleteRequest33.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest33.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId37 = deleteRequest33.getParentTask();
        deleteRequest30.setParentTask(taskId37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel40 = deleteRequest39.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel41 = deleteRequest39.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest30.consistencyLevel(writeConsistencyLevel41);
        org.elasticsearch.tasks.TaskId taskId43 = deleteRequest42.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.index.VersionType versionType48 = deleteRequest47.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest42.versionType(versionType48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str54 = deleteRequest53.getDescription();
        java.lang.String str55 = deleteRequest53.routing();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel56 = deleteRequest53.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest42.consistencyLevel(writeConsistencyLevel56);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest25.consistencyLevel(writeConsistencyLevel56);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest5.consistencyLevel(writeConsistencyLevel56);
        java.lang.String str60 = deleteRequest5.type();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(actionRequestValidationException6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[][][]}" + "'", str23, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel26 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel26.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(taskId37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel40 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel40.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel41 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel41.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(taskId43);
        org.junit.Assert.assertNotNull(versionType48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "delete {[][][]}" + "'", str54, "delete {[][][]}");
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel56 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel56.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNull(str60);
    }

    @Test
    public void test8567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8567");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version((long) (short) 100);
        deleteRequest0.primaryTerm(100L);
        boolean boolean6 = deleteRequest0.getShouldPersistResult();
        java.lang.String str7 = deleteRequest0.parent();
        deleteRequest0.primaryTerm((long) (byte) 10);
        org.elasticsearch.common.transport.TransportAddress transportAddress10 = null;
        deleteRequest0.remoteAddress(transportAddress10);
        org.elasticsearch.index.shard.IndexShard indexShard12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete13 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest0, indexShard12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test8568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8568");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = deleteRequest3.remoteAddress();
        org.elasticsearch.index.VersionType versionType6 = deleteRequest3.versionType();
        boolean boolean7 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId18 = null;
        org.elasticsearch.tasks.Task task19 = deleteRequest14.createTask(0L, "", "", taskId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.setRefreshPolicy("");
        java.lang.String str22 = deleteRequest21.toString();
        java.lang.String[] strArray23 = deleteRequest21.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest21.index("");
        org.elasticsearch.common.unit.TimeValue timeValue26 = deleteRequest25.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str34 = deleteRequest33.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.type("delete {[][][]}");
        java.lang.String str41 = deleteRequest38.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest38.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId51 = null;
        org.elasticsearch.tasks.Task task52 = deleteRequest47.createTask(0L, "", "", taskId51);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest47.setRefreshPolicy("");
        java.lang.String str55 = deleteRequest54.toString();
        java.lang.String[] strArray56 = deleteRequest54.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest54.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str67 = deleteRequest66.id();
        java.lang.String str68 = deleteRequest66.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str70 = deleteRequest69.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest69.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId73 = deleteRequest69.getParentTask();
        deleteRequest66.setParentTask(taskId73);
        deleteRequest62.setParentTask(taskId73);
        deleteRequest58.setParentTask(taskId73);
        deleteRequest43.setParentTask(taskId73);
        deleteRequest33.setParentTask(taskId73);
        org.elasticsearch.tasks.Task task79 = deleteRequest25.createTask((long) (short) -1, "", "delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}", taskId73);
        org.elasticsearch.tasks.Task task80 = deleteRequest3.createTask((long) (short) 0, "delete {[][][hi!]}", "delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}", taskId73);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel81 = deleteRequest3.consistencyLevel();
        java.lang.String str82 = deleteRequest3.parent();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(transportAddress5);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(task19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[][][]}" + "'", str22, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(timeValue26);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "delete {[][][]}" + "'", str41, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(task52);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "delete {[][][]}" + "'", str55, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertNotNull(taskId73);
        org.junit.Assert.assertNotNull(task79);
        org.junit.Assert.assertNotNull(task80);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel81 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel81.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str82);
    }

    @Test
    public void test8569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8569");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][hi!]}", "delete {[delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}][delete {[hi!][null][null]}][hi!]}", "delete {[][delete {[null][null][null]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][hi!]}][null][null]}", "delete {[][][]}", "");
        long long8 = deleteRequest7.primaryTerm();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.setShardId(shardId9);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.parent("delete {[][null][null]}");
        org.elasticsearch.index.VersionType versionType13 = deleteRequest12.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.versionType(versionType13);
        java.lang.Class<?> wildcardClass15 = deleteRequest3.getClass();
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(versionType13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test8570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8570");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        java.lang.String str4 = deleteRequest2.type();
        long long5 = deleteRequest2.primaryTerm();
        long long6 = deleteRequest2.version();
        java.lang.String str7 = deleteRequest2.type();
        deleteRequest2.primaryTerm(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest2.index("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        java.lang.String str12 = deleteRequest11.toString();
        java.lang.String str13 = deleteRequest11.getDescription();
        long long14 = deleteRequest11.version();
        org.elasticsearch.common.unit.TimeValue timeValue15 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.timeout(timeValue15);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel17 = deleteRequest16.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][hi!]}", "delete {[null][null][null]}", "");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy22 = deleteRequest21.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest16.setRefreshPolicy(refreshPolicy22);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.setRefreshPolicy("delete {[hi!][null][null]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[hi!][null][null]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-3L) + "'", long6 == (-3L));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}" + "'", str12, "delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}" + "'", str13, "delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-3L) + "'", long14 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel17 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel17.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + refreshPolicy22 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy22.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest23);
    }

    @Test
    public void test8571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8571");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        java.lang.String str4 = deleteRequest2.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest2.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest2.version(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest9.consistencyLevel();
        deleteRequest9.setParentTask("delete {[delete {[][][hi!]}][null][null]}", (long) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId22 = null;
        org.elasticsearch.tasks.Task task23 = deleteRequest18.createTask(0L, "", "", taskId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest18.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType26 = deleteRequest18.versionType();
        java.lang.String str27 = deleteRequest18.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress28 = deleteRequest18.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy29 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest18.setRefreshPolicy(refreshPolicy29);
        long long31 = deleteRequest18.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue32 = deleteRequest18.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest9.timeout(timeValue32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId41 = null;
        org.elasticsearch.tasks.Task task42 = deleteRequest37.createTask(0L, "", "", taskId41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest37.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType45 = deleteRequest37.versionType();
        java.lang.String str46 = deleteRequest37.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress47 = deleteRequest37.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy48 = deleteRequest37.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest33.setRefreshPolicy(refreshPolicy48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest2.setRefreshPolicy(refreshPolicy48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest50.routing("delete {[delete {[hi!][null][null]}][null][delete {[][][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest50.index("");
        org.elasticsearch.action.support.IndicesOptions indicesOptions55 = deleteRequest54.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest56.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest58.type("delete {[][][hi!]}");
        java.lang.String str61 = deleteRequest60.id();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException62 = deleteRequest60.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest60.version((long) (short) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest66.setParentTask("hi!", (long) (short) 1);
        long long70 = deleteRequest66.version();
        org.elasticsearch.index.shard.ShardId shardId71 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest66.setShardId(shardId71);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest73.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest73.routing("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.common.unit.TimeValue timeValue78 = deleteRequest77.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = deleteRequest66.timeout(timeValue78);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = deleteRequest60.timeout(timeValue78);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = deleteRequest54.timeout(timeValue78);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(transportAddress28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertNotNull(timeValue32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(task42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(versionType45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(transportAddress47);
        org.junit.Assert.assertTrue("'" + refreshPolicy48 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy48.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(indicesOptions55);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(actionRequestValidationException62);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + (-3L) + "'", long70 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertNotNull(deleteRequest75);
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertNotNull(timeValue78);
        org.junit.Assert.assertNotNull(deleteRequest79);
        org.junit.Assert.assertNotNull(deleteRequest80);
        org.junit.Assert.assertNotNull(deleteRequest81);
    }

    @Test
    public void test8572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8572");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str7 = deleteRequest6.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException8 = deleteRequest6.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure10 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[null][null][delete {[][][hi!]}]}", (java.lang.Throwable) actionRequestValidationException8, "delete {[delete {[hi!][null][null]}][null][null]}");
        java.lang.String str11 = shardFailure10.reason;
        java.lang.Throwable throwable12 = shardFailure10.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure14 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[null][delete {[null][null][null]}][null]}", throwable12, "delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}");
        java.lang.String str15 = shardFailure14.reason;
        java.lang.Throwable throwable16 = shardFailure14.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure18 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[][delete {[][null][null]}][delete {[][][]}]}]}", throwable16, "delete {[delete {[delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}][delete {[hi!][null][null]}][hi!]}][delete {[][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][][]}]}][delete {[][][]}]}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[null][null][null]}" + "'", str7, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[null][null][delete {[][][hi!]}]}" + "'", str11, "delete {[null][null][delete {[][][hi!]}]}");
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[null][delete {[null][null][null]}][null]}" + "'", str15, "delete {[null][delete {[null][null][null]}][null]}");
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable16.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test8573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8573");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        java.lang.String str9 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str11 = deleteRequest10.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.routing("delete {[][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = deleteRequest15.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str21 = deleteRequest20.id();
        java.lang.String str22 = deleteRequest20.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str24 = deleteRequest23.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest23.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest23.getParentTask();
        deleteRequest20.setParentTask(taskId27);
        deleteRequest15.setParentTask(taskId27);
        deleteRequest3.setParentTask(taskId27);
        org.elasticsearch.index.shard.ShardId shardId31 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.index.VersionType versionType36 = deleteRequest35.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest3.versionType(versionType36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest3.index("delete {[delete {[][][hi!]}][null][null]}");
        org.elasticsearch.tasks.TaskId taskId40 = deleteRequest39.getParentTask();
        org.elasticsearch.action.support.IndicesOptions indicesOptions41 = deleteRequest39.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest42.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str52 = deleteRequest51.id();
        java.lang.String str53 = deleteRequest51.index();
        org.elasticsearch.tasks.TaskId taskId54 = deleteRequest51.getParentTask();
        org.elasticsearch.tasks.Task task55 = deleteRequest42.createTask((-1L), "delete {[][][hi!]}", "delete {[][delete {[][][]}][delete {[][][]}]}", taskId54);
        java.lang.String str56 = deleteRequest42.id();
        java.lang.String str57 = deleteRequest42.routing();
        org.elasticsearch.common.transport.TransportAddress transportAddress58 = null;
        deleteRequest42.remoteAddress(transportAddress58);
        org.elasticsearch.common.unit.TimeValue timeValue60 = deleteRequest42.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest39.timeout(timeValue60);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(transportAddress16);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(taskId27);
        org.junit.Assert.assertNull(shardId31);
        org.junit.Assert.assertNotNull(versionType36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(taskId40);
        org.junit.Assert.assertNotNull(indicesOptions41);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(taskId54);
        org.junit.Assert.assertNotNull(task55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(timeValue60);
        org.junit.Assert.assertNotNull(deleteRequest61);
    }

    @Test
    public void test8574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8574");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str11 = deleteRequest10.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException12 = deleteRequest10.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure14 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "hi!", (java.lang.Throwable) actionRequestValidationException12, "delete {[][][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure16 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "", (java.lang.Throwable) actionRequestValidationException12, "delete {[][][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure18 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[][delete {[][][]}][delete {[][][]}]}", (java.lang.Throwable) actionRequestValidationException12, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure20 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][delete {[][][]}][delete {[][][]}]}", (java.lang.Throwable) actionRequestValidationException12, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure22 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}", (java.lang.Throwable) actionRequestValidationException12, "delete {[][][]}");
        java.lang.String str23 = shardFailure22.reason;
        java.lang.String str24 = shardFailure22.indexUUID;
        java.lang.Throwable throwable25 = shardFailure22.cause;
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[null][null][null]}" + "'", str11, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException12);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}" + "'", str23, "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "delete {[][][]}" + "'", str24, "delete {[][][]}");
        org.junit.Assert.assertNotNull(throwable25);
        org.junit.Assert.assertEquals(throwable25.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable25.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable25.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test8575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8575");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("delete {[][][]}");
        java.lang.String str10 = deleteRequest7.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId22 = null;
        org.elasticsearch.tasks.Task task23 = deleteRequest18.createTask(0L, "", "", taskId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest18.setRefreshPolicy("");
        java.lang.String[] strArray26 = deleteRequest25.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId34 = null;
        org.elasticsearch.tasks.Task task35 = deleteRequest30.createTask(0L, "", "", taskId34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest30.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = deleteRequest37.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest25.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue42 = deleteRequest41.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress43 = null;
        deleteRequest41.remoteAddress(transportAddress43);
        org.elasticsearch.common.unit.TimeValue timeValue45 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest41.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest25.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest14.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest3.timeout(timeValue45);
        org.elasticsearch.action.support.IndicesOptions indicesOptions50 = deleteRequest49.indicesOptions();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel51 = deleteRequest49.consistencyLevel();
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest49.setShardId(shardId52);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest55.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue60 = deleteRequest59.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest55.timeout(timeValue60);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str63 = deleteRequest62.parent();
        org.elasticsearch.index.VersionType versionType64 = deleteRequest62.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest55.versionType(versionType64);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest49.versionType(versionType64);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest66.version(35L);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException69 = deleteRequest68.validate();
        org.elasticsearch.index.shard.ShardId shardId70 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest68.setShardId(shardId70);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][][]}" + "'", str10, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(task35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel38 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel38.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(timeValue42);
        org.junit.Assert.assertNotNull(timeValue45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(indicesOptions50);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel51 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel51.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(timeValue60);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(versionType64);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertNotNull(actionRequestValidationException69);
        org.junit.Assert.assertNotNull(deleteRequest71);
    }

    @Test
    public void test8576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8576");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.type("delete {[null][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = deleteRequest3.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.version((long) '4');
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = deleteRequest8.remoteAddress();
        deleteRequest8.setParentTask("delete {[][delete {[delete {[][][hi!]}][null][null]}][]}", (long) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest8.parent("delete {[][delete {[][][]}][delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str16 = deleteRequest15.parent();
        deleteRequest15.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest15.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.type("delete {[null][null][null]}");
        java.lang.String str23 = deleteRequest20.parent();
        boolean boolean24 = deleteRequest20.getShouldPersistResult();
        java.lang.String[] strArray25 = deleteRequest20.indices();
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest20.setShardId(shardId26);
        org.elasticsearch.common.unit.TimeValue timeValue28 = deleteRequest27.timeout();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy29 = deleteRequest27.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest8.setRefreshPolicy(refreshPolicy29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.setShardId(shardId33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest32.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest32.type("delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][null][null]}");
        org.elasticsearch.index.VersionType versionType39 = deleteRequest32.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest30.versionType(versionType39);
        long long41 = deleteRequest40.primaryTerm();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(transportAddress4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(transportAddress9);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(timeValue28);
        org.junit.Assert.assertTrue("'" + refreshPolicy29 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy29.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(versionType39);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 0L + "'", long41 == 0L);
    }

    @Test
    public void test8577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8577");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[][][]}");
        java.lang.String str3 = deleteRequest0.toString();
        java.lang.String str4 = deleteRequest0.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId12 = null;
        org.elasticsearch.tasks.Task task13 = deleteRequest8.createTask(0L, "", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest8.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType16 = deleteRequest8.versionType();
        java.lang.String str17 = deleteRequest8.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId25 = null;
        org.elasticsearch.tasks.Task task26 = deleteRequest21.createTask(0L, "", "", taskId25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest21.setRefreshPolicy("");
        java.lang.String str29 = deleteRequest28.toString();
        java.lang.String[] strArray30 = deleteRequest28.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest28.index("");
        org.elasticsearch.common.unit.TimeValue timeValue33 = deleteRequest32.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest8.timeout(timeValue33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress39 = deleteRequest38.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId47 = null;
        org.elasticsearch.tasks.Task task48 = deleteRequest43.createTask(0L, "", "", taskId47);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy49 = deleteRequest43.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest38.setRefreshPolicy(refreshPolicy49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest34.setRefreshPolicy(refreshPolicy49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest0.setRefreshPolicy(refreshPolicy49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest0.id("delete {[null][null][null]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions55 = deleteRequest54.indicesOptions();
        org.elasticsearch.index.shard.ShardId shardId56 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest54.setShardId(shardId56);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest57.id("delete {[null][delete {[hi!][null][null]}][null]}");
        org.elasticsearch.index.shard.ShardId shardId60 = deleteRequest57.shardId();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "delete {[null][null][null]}" + "'", str3, "delete {[null][null][null]}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][][]}" + "'", str4, "delete {[][][]}");
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(versionType16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "delete {[][][]}" + "'", str29, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(timeValue33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNull(transportAddress39);
        org.junit.Assert.assertNotNull(task48);
        org.junit.Assert.assertTrue("'" + refreshPolicy49 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy49.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(indicesOptions55);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNull(shardId60);
    }

    @Test
    public void test8578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8578");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        java.lang.String str4 = deleteRequest2.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest2.parent("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest2.parent("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.routing("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.index("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException13 = deleteRequest10.validate();
        java.lang.String str14 = deleteRequest10.index();
        java.lang.String[] strArray15 = deleteRequest10.indices();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str4, "delete {[delete {[][][hi!]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(actionRequestValidationException13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}" + "'", str14, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test8579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8579");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str7 = deleteRequest6.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest6.getParentTask();
        deleteRequest3.setParentTask(taskId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.consistencyLevel(writeConsistencyLevel14);
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest15.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.index.VersionType versionType21 = deleteRequest20.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.routing("delete {[delete {[hi!][null][null]}][delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}][delete {[delete {[][null][null]}][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str31 = deleteRequest30.id();
        java.lang.String str32 = deleteRequest30.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str34 = deleteRequest33.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest33.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId37 = deleteRequest33.getParentTask();
        deleteRequest30.setParentTask(taskId37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel40 = deleteRequest39.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel41 = deleteRequest39.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest30.consistencyLevel(writeConsistencyLevel41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest30.type("delete {[delete {[][][hi!]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest44.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest44.routing("delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest44.type("delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str52 = deleteRequest51.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest51.version((long) (short) 100);
        deleteRequest51.primaryTerm(100L);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy57 = deleteRequest51.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest44.setRefreshPolicy(refreshPolicy57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest26.setRefreshPolicy(refreshPolicy57);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertNotNull(versionType21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(taskId37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel40 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel40.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel41 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel41.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertTrue("'" + refreshPolicy57 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy57.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest59);
    }

    @Test
    public void test8580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8580");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest10.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long14 = deleteRequest13.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str16 = deleteRequest15.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue19 = deleteRequest18.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest15.timeout(timeValue19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest22.getParentTask();
        deleteRequest13.setParentTask(taskId23);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest13.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest10.consistencyLevel(writeConsistencyLevel25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId34 = null;
        org.elasticsearch.tasks.Task task35 = deleteRequest30.createTask(0L, "", "", taskId34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest30.setRefreshPolicy("");
        deleteRequest37.primaryTerm(1L);
        boolean boolean40 = deleteRequest37.getShouldPersistResult();
        java.lang.String str41 = deleteRequest37.id();
        org.elasticsearch.index.VersionType versionType42 = deleteRequest37.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest10.versionType(versionType42);
        org.elasticsearch.common.unit.TimeValue timeValue44 = deleteRequest10.timeout();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException45 = deleteRequest10.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest10.type("delete {[null][null][delete {[hi!][null][null]}]}");
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(task35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(versionType42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(timeValue44);
        org.junit.Assert.assertNull(actionRequestValidationException45);
        org.junit.Assert.assertNotNull(deleteRequest47);
    }

    @Test
    public void test8581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8581");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.common.unit.TimeValue timeValue5 = deleteRequest3.timeout();
        long long6 = deleteRequest3.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.index("");
        java.lang.String str9 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.parent("hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = null;
        deleteRequest3.remoteAddress(transportAddress12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest14.index("");
        java.lang.String str19 = deleteRequest14.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.index("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue24 = deleteRequest23.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress25 = null;
        deleteRequest23.remoteAddress(transportAddress25);
        java.lang.String str27 = deleteRequest23.index();
        org.elasticsearch.index.VersionType versionType28 = deleteRequest23.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest21.versionType(versionType28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest3.versionType(versionType28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.version((long) (byte) 100);
        org.elasticsearch.common.transport.TransportAddress transportAddress33 = deleteRequest30.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest30.type("delete {[][delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel40 = deleteRequest39.consistencyLevel();
        java.lang.String str41 = deleteRequest39.parent();
        boolean boolean42 = deleteRequest39.getShouldPersistResult();
        boolean boolean43 = deleteRequest39.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId51 = null;
        org.elasticsearch.tasks.Task task52 = deleteRequest47.createTask(0L, "", "", taskId51);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest47.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType55 = deleteRequest47.versionType();
        java.lang.String str56 = deleteRequest47.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress57 = deleteRequest47.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy58 = deleteRequest47.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest39.setRefreshPolicy(refreshPolicy58);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str61 = deleteRequest60.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest60.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId64 = deleteRequest60.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest60.id("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str71 = deleteRequest70.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest70.id("hi!");
        org.elasticsearch.tasks.TaskId taskId74 = deleteRequest73.getParentTask();
        org.elasticsearch.tasks.TaskId taskId75 = deleteRequest73.getParentTask();
        deleteRequest66.setParentTask(taskId75);
        deleteRequest39.setParentTask(taskId75);
        org.elasticsearch.tasks.Task task78 = deleteRequest35.createTask((long) (byte) -1, "delete {[][hi!][]}", "delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}", taskId75);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-3L) + "'", long6 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(timeValue24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[null][null][null]}" + "'", str27, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNull(transportAddress33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel40 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel40.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(task52);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(versionType55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(transportAddress57);
        org.junit.Assert.assertTrue("'" + refreshPolicy58 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy58.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(taskId64);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertNotNull(deleteRequest73);
        org.junit.Assert.assertNotNull(taskId74);
        org.junit.Assert.assertNotNull(taskId75);
        org.junit.Assert.assertNotNull(task78);
    }

    @Test
    public void test8582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8582");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest10.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId13 = null;
        deleteRequest10.setParentTask(taskId13);
        deleteRequest10.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest10.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        java.lang.String str19 = deleteRequest18.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest18.type("hi!");
        java.lang.String str22 = deleteRequest21.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId30 = null;
        org.elasticsearch.tasks.Task task31 = deleteRequest26.createTask(0L, "", "", taskId30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest26.setRefreshPolicy("");
        deleteRequest33.primaryTerm(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest33.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel39 = deleteRequest38.consistencyLevel();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy40 = deleteRequest38.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest37.setRefreshPolicy(refreshPolicy40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest21.setRefreshPolicy(refreshPolicy40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest21.type("delete {[hi!][null][null]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions45 = deleteRequest44.indicesOptions();
        java.lang.String str46 = deleteRequest44.getDescription();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions12);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(task31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel39 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel39.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + refreshPolicy40 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy40.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(indicesOptions45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "delete {[][delete {[hi!][null][null]}][]}" + "'", str46, "delete {[][delete {[hi!][null][null]}][]}");
    }

    @Test
    public void test8583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8583");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version((long) (short) 100);
        deleteRequest0.primaryTerm(100L);
        boolean boolean6 = deleteRequest0.getShouldPersistResult();
        java.lang.String str7 = deleteRequest0.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str9 = deleteRequest8.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException10 = deleteRequest8.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest12.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest16.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest12.timeout(timeValue17);
        java.lang.String str19 = deleteRequest12.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str27 = deleteRequest26.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest31.type("delete {[][][]}");
        java.lang.String str34 = deleteRequest31.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest31.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId44 = null;
        org.elasticsearch.tasks.Task task45 = deleteRequest40.createTask(0L, "", "", taskId44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest40.setRefreshPolicy("");
        java.lang.String str48 = deleteRequest47.toString();
        java.lang.String[] strArray49 = deleteRequest47.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest47.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str60 = deleteRequest59.id();
        java.lang.String str61 = deleteRequest59.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str63 = deleteRequest62.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest62.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId66 = deleteRequest62.getParentTask();
        deleteRequest59.setParentTask(taskId66);
        deleteRequest55.setParentTask(taskId66);
        deleteRequest51.setParentTask(taskId66);
        deleteRequest36.setParentTask(taskId66);
        deleteRequest26.setParentTask(taskId66);
        org.elasticsearch.tasks.Task task72 = deleteRequest12.createTask((long) 100, "delete {[][][hi!]}", "hi!", taskId66);
        deleteRequest8.setParentTask(taskId66);
        org.elasticsearch.index.shard.ShardId shardId74 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest8.setShardId(shardId74);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel76 = deleteRequest75.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str78 = deleteRequest77.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue81 = deleteRequest80.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest82 = deleteRequest77.timeout(timeValue81);
        org.elasticsearch.common.transport.TransportAddress transportAddress83 = deleteRequest77.remoteAddress();
        java.lang.String str84 = deleteRequest77.parent();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel85 = deleteRequest77.consistencyLevel();
        org.elasticsearch.common.unit.TimeValue timeValue86 = deleteRequest77.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = deleteRequest75.timeout(timeValue86);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest88 = deleteRequest0.timeout(timeValue86);
        java.lang.String str89 = deleteRequest0.id();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[null][null][null]}" + "'", str9, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException10);
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "delete {[][][]}" + "'", str34, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(task45);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "delete {[][][]}" + "'", str48, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(taskId66);
        org.junit.Assert.assertNotNull(task72);
        org.junit.Assert.assertNotNull(deleteRequest75);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel76 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel76.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNotNull(timeValue81);
        org.junit.Assert.assertNotNull(deleteRequest82);
        org.junit.Assert.assertNull(transportAddress83);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel85 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel85.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(timeValue86);
        org.junit.Assert.assertNotNull(deleteRequest87);
        org.junit.Assert.assertNotNull(deleteRequest88);
        org.junit.Assert.assertNull(str89);
    }

    @Test
    public void test8584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8584");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType6 = deleteRequest5.versionType();
        deleteRequest5.primaryTerm((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.routing("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId18 = null;
        org.elasticsearch.tasks.Task task19 = deleteRequest14.createTask(0L, "", "", taskId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.setRefreshPolicy("");
        java.lang.String str22 = deleteRequest21.toString();
        java.lang.String[] strArray23 = deleteRequest21.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest21.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str34 = deleteRequest33.id();
        java.lang.String str35 = deleteRequest33.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str37 = deleteRequest36.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest36.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId40 = deleteRequest36.getParentTask();
        deleteRequest33.setParentTask(taskId40);
        deleteRequest29.setParentTask(taskId40);
        deleteRequest25.setParentTask(taskId40);
        deleteRequest10.setParentTask(taskId40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str49 = deleteRequest48.index();
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest48.setShardId(shardId50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId59 = null;
        org.elasticsearch.tasks.Task task60 = deleteRequest55.createTask(0L, "", "", taskId59);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy61 = deleteRequest55.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest51.setRefreshPolicy(refreshPolicy61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest10.setRefreshPolicy(refreshPolicy61);
        org.elasticsearch.common.unit.TimeValue timeValue64 = deleteRequest10.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest10.routing("delete {[delete {[][null][null]}][delete {[hi!][null][null]}][delete {[hi!][null][null]}]}");
        java.lang.String str67 = deleteRequest10.id();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(task19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[][][]}" + "'", str22, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(taskId40);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(task60);
        org.junit.Assert.assertTrue("'" + refreshPolicy61 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy61.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(timeValue64);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "delete {[][][]}" + "'", str67, "delete {[][][]}");
    }

    @Test
    public void test8585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8585");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}", "hi!", "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.index("hi!");
        org.elasticsearch.action.support.IndicesOptions indicesOptions8 = deleteRequest3.indicesOptions();
        java.lang.String str9 = deleteRequest3.getDescription();
        java.lang.String str10 = deleteRequest3.getDescription();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(indicesOptions8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[hi!][hi!][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}]}" + "'", str9, "delete {[hi!][hi!][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}]}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[hi!][hi!][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}]}" + "'", str10, "delete {[hi!][hi!][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}]}");
    }

    @Test
    public void test8586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8586");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        java.lang.String str4 = deleteRequest2.type();
        java.lang.String str5 = deleteRequest2.toString();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest2.setShardId(shardId6);
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = null;
        deleteRequest2.remoteAddress(transportAddress8);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str5, "delete {[delete {[][][hi!]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest7);
    }

    @Test
    public void test8587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8587");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.type("delete {[hi!][null][null]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions5 = deleteRequest4.indicesOptions();
        java.lang.String str6 = deleteRequest4.parent();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(indicesOptions5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
    }

    @Test
    public void test8588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8588");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId14 = null;
        org.elasticsearch.tasks.Task task15 = deleteRequest10.createTask(0L, "", "", taskId14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest10.setRefreshPolicy("");
        java.lang.String str18 = deleteRequest17.toString();
        java.lang.String[] strArray19 = deleteRequest17.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest17.index("");
        org.elasticsearch.common.unit.TimeValue timeValue22 = deleteRequest21.timeout();
        org.elasticsearch.index.VersionType versionType23 = deleteRequest21.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest3.versionType(versionType23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId32 = null;
        org.elasticsearch.tasks.Task task33 = deleteRequest28.createTask(0L, "", "", taskId32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest28.setRefreshPolicy("");
        java.lang.String str36 = deleteRequest35.toString();
        java.lang.String[] strArray37 = deleteRequest35.indices();
        deleteRequest35.primaryTerm(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest35.routing("delete {[null][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest41.setShardId(shardId42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest48.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest50.type("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId60 = null;
        org.elasticsearch.tasks.Task task61 = deleteRequest56.createTask(0L, "", "", taskId60);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy62 = deleteRequest56.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId70 = null;
        org.elasticsearch.tasks.Task task71 = deleteRequest66.createTask(0L, "", "", taskId70);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy72 = deleteRequest66.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest56.setRefreshPolicy(refreshPolicy72);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest52.setRefreshPolicy(refreshPolicy72);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest52.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        deleteRequest76.setParentTask("delete {[][][hi!]}", (long) (byte) 100);
        org.elasticsearch.common.transport.TransportAddress transportAddress80 = null;
        deleteRequest76.remoteAddress(transportAddress80);
        org.elasticsearch.index.VersionType versionType82 = deleteRequest76.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest83 = deleteRequest47.versionType(versionType82);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = deleteRequest43.versionType(versionType82);
        org.elasticsearch.index.VersionType versionType85 = deleteRequest84.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest86 = deleteRequest24.versionType(versionType85);
        java.lang.String str87 = deleteRequest24.parent();
        java.lang.String str88 = deleteRequest24.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest90 = deleteRequest24.type("");
        java.lang.String str91 = deleteRequest24.id();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(task15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[][][]}" + "'", str18, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(timeValue22);
        org.junit.Assert.assertNotNull(versionType23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(task33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "delete {[][][]}" + "'", str36, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(task61);
        org.junit.Assert.assertTrue("'" + refreshPolicy62 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy62.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task71);
        org.junit.Assert.assertTrue("'" + refreshPolicy72 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy72.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest73);
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertNotNull(versionType82);
        org.junit.Assert.assertNotNull(deleteRequest83);
        org.junit.Assert.assertNotNull(deleteRequest84);
        org.junit.Assert.assertNotNull(versionType85);
        org.junit.Assert.assertNotNull(deleteRequest86);
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertNotNull(deleteRequest90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "delete {[][][]}" + "'", str91, "delete {[][][]}");
    }

    @Test
    public void test8589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8589");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest1.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue6 = deleteRequest5.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.timeout(timeValue6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str9 = deleteRequest8.parent();
        org.elasticsearch.index.VersionType versionType10 = deleteRequest8.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest1.versionType(versionType10);
        long long12 = deleteRequest11.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.type("");
        deleteRequest14.primaryTerm(100L);
        org.elasticsearch.common.transport.TransportAddress transportAddress17 = deleteRequest14.remoteAddress();
        java.lang.String str18 = deleteRequest14.routing();
        long long19 = deleteRequest14.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.id("delete {[delete {[delete {[][][hi!]}][null][null]}][delete {[][][]}][]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel22 = deleteRequest21.consistencyLevel();
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(versionType10);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(transportAddress17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 100L + "'", long19 == 100L);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel22 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel22.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test8590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8590");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str5 = deleteRequest4.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest4.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.routing("delete {[][][hi!]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException10 = deleteRequest9.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure12 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}", (java.lang.Throwable) actionRequestValidationException10, "delete {[][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure14 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[][null][null]}][][delete {[][][hi!]}]}][delete {[][null][null]}][delete {[null][null][delete {[][][hi!]}]}]}", (java.lang.Throwable) actionRequestValidationException10, "delete {[delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}][][]}");
        java.lang.String str15 = shardFailure14.indexUUID;
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(actionRequestValidationException10);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}][][]}" + "'", str15, "delete {[delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}][][]}");
    }

    @Test
    public void test8591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8591");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.consistencyLevel(writeConsistencyLevel23);
        deleteRequest24.setParentTask("hi!", (long) (short) 100);
        org.elasticsearch.index.VersionType versionType28 = deleteRequest24.versionType();
        java.lang.String str29 = deleteRequest24.index();
        boolean boolean30 = deleteRequest24.getShouldPersistResult();
        java.lang.String str31 = deleteRequest24.toString();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "delete {[][][]}" + "'", str31, "delete {[][][]}");
    }

    @Test
    public void test8592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8592");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.parent();
        org.elasticsearch.index.shard.ShardId shardId13 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest14.index("");
        java.lang.String str19 = deleteRequest14.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.id("delete {[delete {[hi!][null][null]}][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel22 = deleteRequest21.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest3.consistencyLevel(writeConsistencyLevel22);
        deleteRequest3.primaryTerm((long) (short) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest3.routing("delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.index("delete {[][null][delete {[][delete {[][][hi!]}][delete {[][][]}]}]}");
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest3.setShardId(shardId30);
        org.elasticsearch.common.transport.TransportAddress transportAddress32 = null;
        deleteRequest31.remoteAddress(transportAddress32);
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(shardId13);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel22 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel22.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
    }

    @Test
    public void test8593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8593");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][hi!]}");
        java.lang.String str6 = deleteRequest3.getDescription();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy7 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.type("delete {[][][]}");
        java.lang.String str14 = deleteRequest11.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId22 = null;
        org.elasticsearch.tasks.Task task23 = deleteRequest18.createTask(0L, "", "", taskId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest18.setRefreshPolicy("");
        java.lang.String str26 = deleteRequest25.toString();
        java.lang.String[] strArray27 = deleteRequest25.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest25.index("");
        org.elasticsearch.common.unit.TimeValue timeValue30 = deleteRequest29.timeout();
        org.elasticsearch.index.VersionType versionType31 = deleteRequest29.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest11.versionType(versionType31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest3.versionType(versionType31);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy34 = deleteRequest33.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest33.id("");
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][delete {[][][hi!]}][delete {[][][]}]}" + "'", str6, "delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.junit.Assert.assertTrue("'" + refreshPolicy7 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy7.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[][][]}" + "'", str14, "delete {[][][]}");
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "delete {[][][]}" + "'", str26, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(timeValue30);
        org.junit.Assert.assertNotNull(versionType31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertTrue("'" + refreshPolicy34 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy34.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest36);
    }

    @Test
    public void test8594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8594");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version((long) (short) 100);
        deleteRequest0.primaryTerm(100L);
        boolean boolean6 = deleteRequest0.getShouldPersistResult();
        java.lang.String str7 = deleteRequest0.parent();
        deleteRequest0.primaryTerm((long) (byte) 10);
        java.lang.String str10 = deleteRequest0.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[null][null][null]}" + "'", str10, "delete {[null][null][null]}");
    }

    @Test
    public void test8595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8595");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.consistencyLevel(writeConsistencyLevel23);
        deleteRequest24.setParentTask("hi!", (long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = deleteRequest28.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel30 = deleteRequest28.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest24.consistencyLevel(writeConsistencyLevel30);
        java.lang.String str32 = deleteRequest31.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId43 = null;
        org.elasticsearch.tasks.Task task44 = deleteRequest39.createTask(0L, "", "", taskId43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest39.setRefreshPolicy("");
        deleteRequest46.primaryTerm(1L);
        boolean boolean49 = deleteRequest46.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest46.id("delete {[][hi!][delete {[null][null][null]}]}");
        org.elasticsearch.index.VersionType versionType52 = deleteRequest51.versionType();
        org.elasticsearch.tasks.TaskId taskId53 = deleteRequest51.getParentTask();
        org.elasticsearch.tasks.Task task54 = deleteRequest31.createTask((long) (short) -1, "delete {[delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][delete {[null][null][null]}][]}][delete {[][][]}]}", "delete {[][hi!][]}", taskId53);
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel29 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel29.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel30 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel30.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[][][]}" + "'", str32, "delete {[][][]}");
        org.junit.Assert.assertNotNull(task44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(versionType52);
        org.junit.Assert.assertNotNull(taskId53);
        org.junit.Assert.assertNotNull(task54);
    }

    @Test
    public void test8596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8596");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy9 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId17 = null;
        org.elasticsearch.tasks.Task task18 = deleteRequest13.createTask(0L, "", "", taskId17);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy19 = deleteRequest13.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest3.setRefreshPolicy(refreshPolicy19);
        java.lang.String str21 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest3.id("hi!");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel24 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.type("delete {[][][]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel31 = deleteRequest30.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest3.consistencyLevel(writeConsistencyLevel31);
        java.lang.String str33 = deleteRequest3.id();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy34 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest3.parent("delete {[delete {[hi!][null][null]}][null][delete {[][][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str41 = deleteRequest40.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest40.id("hi!");
        org.elasticsearch.tasks.TaskId taskId44 = deleteRequest43.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest43.setRefreshPolicy("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy47 = deleteRequest43.getRefreshPolicy();
        java.lang.String str48 = deleteRequest43.index();
        java.lang.String str49 = deleteRequest43.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest43.index("");
        java.lang.String str52 = deleteRequest51.index();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel53 = deleteRequest51.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest36.consistencyLevel(writeConsistencyLevel53);
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertTrue("'" + refreshPolicy9 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy9.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertTrue("'" + refreshPolicy19 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy19.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[][][]}" + "'", str21, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel24 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel24.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel31 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel31.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertTrue("'" + refreshPolicy34 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy34.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(taskId44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertTrue("'" + refreshPolicy47 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy47.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel53 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel53.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest54);
    }

    @Test
    public void test8597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8597");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][]}", "delete {[null][null][null]}", "delete {[null][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel4 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId12 = null;
        org.elasticsearch.tasks.Task task13 = deleteRequest8.createTask(0L, "", "", taskId12);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = deleteRequest8.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId22 = null;
        org.elasticsearch.tasks.Task task23 = deleteRequest18.createTask(0L, "", "", taskId22);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy24 = deleteRequest18.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest8.setRefreshPolicy(refreshPolicy24);
        java.lang.String str26 = deleteRequest8.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest8.id("hi!");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = deleteRequest8.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest33.type("delete {[][][]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel36 = deleteRequest35.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest8.consistencyLevel(writeConsistencyLevel36);
        java.lang.String str38 = deleteRequest8.id();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy39 = deleteRequest8.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest3.setRefreshPolicy(refreshPolicy39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest40.index("delete {[][delete {[delete {[][][hi!]}][null][null]}][]}");
        java.lang.String str43 = deleteRequest42.type();
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel4 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel4.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertTrue("'" + refreshPolicy14 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy14.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertTrue("'" + refreshPolicy24 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy24.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "delete {[][][]}" + "'", str26, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel29 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel29.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel36 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel36.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertTrue("'" + refreshPolicy39 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy39.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "delete {[null][null][null]}" + "'", str43, "delete {[null][null][null]}");
    }

    @Test
    public void test8598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8598");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.tasks.TaskId taskId6 = deleteRequest3.getParentTask();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest3.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = null;
        deleteRequest9.remoteAddress(transportAddress11);
        org.elasticsearch.common.unit.TimeValue timeValue13 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest9.timeout(timeValue13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.timeout(timeValue13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.version((long) ' ');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest17.index("delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}");
        java.lang.String str22 = deleteRequest17.type();
        org.elasticsearch.action.support.IndicesOptions indicesOptions23 = deleteRequest17.indicesOptions();
        org.elasticsearch.common.transport.TransportAddress transportAddress24 = null;
        deleteRequest17.remoteAddress(transportAddress24);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(taskId6);
        org.junit.Assert.assertNull(actionRequestValidationException7);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(indicesOptions23);
    }

    @Test
    public void test8599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8599");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest10.toString();
        java.lang.String[] strArray12 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.index("");
        java.lang.String str15 = deleteRequest10.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest10.version((long) (short) 1);
        java.lang.String str18 = deleteRequest17.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest17.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest17.parent("delete {[][delete {[][][]}][delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}]}");
        boolean boolean23 = deleteRequest22.getShouldPersistResult();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test8600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8600");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.routing("delete {[][][hi!]}");
        java.lang.String str13 = deleteRequest12.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str18 = deleteRequest17.id();
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest17.setShardId(shardId19);
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest17.setShardId(shardId21);
        java.lang.String str23 = deleteRequest22.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId31 = null;
        org.elasticsearch.tasks.Task task32 = deleteRequest27.createTask(0L, "", "", taskId31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest27.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType35 = deleteRequest27.versionType();
        java.lang.String str36 = deleteRequest27.parent();
        org.elasticsearch.index.shard.ShardId shardId37 = deleteRequest27.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = deleteRequest27.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest22.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest12.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest12.routing("delete {[delete {[][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][][]}]}][delete {[][][hi!]}][delete {[][][]}]}");
        org.elasticsearch.index.shard.ShardId shardId43 = deleteRequest12.shardId();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest12.timeout("delete {[][][delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[][][delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(task32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(versionType35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(shardId37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel38 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel38.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNull(shardId43);
    }

    @Test
    public void test8601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8601");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.index("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        boolean boolean11 = deleteRequest10.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.type("delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = deleteRequest10.getRefreshPolicy();
        java.lang.String str15 = deleteRequest10.id();
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = null;
        deleteRequest10.remoteAddress(transportAddress16);
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest10.getParentTask();
        boolean boolean19 = deleteRequest10.getShouldPersistResult();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + refreshPolicy14 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy14.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[][][]}" + "'", str15, "delete {[][][]}");
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test8602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8602");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}", "delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}", "delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("delete {[][delete {[delete {[][null][null]}][][]}][delete {[null][delete {[null][null][null]}][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.type("delete {[hi!][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest10.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest10.version((long) (byte) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long18 = deleteRequest17.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue19 = deleteRequest17.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest10.timeout(timeValue19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId28 = null;
        org.elasticsearch.tasks.Task task29 = deleteRequest24.createTask(0L, "", "", taskId28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest24.setRefreshPolicy("");
        java.lang.String str32 = deleteRequest31.toString();
        java.lang.String[] strArray33 = deleteRequest31.indices();
        deleteRequest31.primaryTerm(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest31.routing("delete {[null][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest37.setShardId(shardId38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest44.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest46.type("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId56 = null;
        org.elasticsearch.tasks.Task task57 = deleteRequest52.createTask(0L, "", "", taskId56);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy58 = deleteRequest52.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId66 = null;
        org.elasticsearch.tasks.Task task67 = deleteRequest62.createTask(0L, "", "", taskId66);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy68 = deleteRequest62.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest52.setRefreshPolicy(refreshPolicy68);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest48.setRefreshPolicy(refreshPolicy68);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest48.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        deleteRequest72.setParentTask("delete {[][][hi!]}", (long) (byte) 100);
        org.elasticsearch.common.transport.TransportAddress transportAddress76 = null;
        deleteRequest72.remoteAddress(transportAddress76);
        org.elasticsearch.index.VersionType versionType78 = deleteRequest72.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = deleteRequest43.versionType(versionType78);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = deleteRequest39.versionType(versionType78);
        org.elasticsearch.common.unit.TimeValue timeValue81 = deleteRequest80.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest82 = deleteRequest10.timeout(timeValue81);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest83 = deleteRequest7.timeout(timeValue81);
        java.lang.String str84 = deleteRequest83.index();
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(task29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[][][]}" + "'", str32, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(task57);
        org.junit.Assert.assertTrue("'" + refreshPolicy58 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy58.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task67);
        org.junit.Assert.assertTrue("'" + refreshPolicy68 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy68.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertNotNull(versionType78);
        org.junit.Assert.assertNotNull(deleteRequest79);
        org.junit.Assert.assertNotNull(deleteRequest80);
        org.junit.Assert.assertNotNull(timeValue81);
        org.junit.Assert.assertNotNull(deleteRequest82);
        org.junit.Assert.assertNotNull(deleteRequest83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "delete {[null][null][null]}" + "'", str84, "delete {[null][null][null]}");
    }

    @Test
    public void test8603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8603");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long14 = deleteRequest13.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str16 = deleteRequest15.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue19 = deleteRequest18.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest15.timeout(timeValue19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest22.getParentTask();
        deleteRequest13.setParentTask(taskId23);
        deleteRequest10.setParentTask(taskId23);
        deleteRequest10.setParentTask("delete {[hi!][null][null]}", (long) 10);
        deleteRequest10.primaryTerm((long) (short) 1);
        deleteRequest10.setParentTask("delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[][delete {[][null][null]}][delete {[][][]}]}]}", 35L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest10.parent("delete {[][][delete {[][delete {[][][hi!]}][delete {[][][]}]}]}");
        long long36 = deleteRequest35.primaryTerm();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 1L + "'", long36 == 1L);
    }

    @Test
    public void test8604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8604");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy9 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId17 = null;
        org.elasticsearch.tasks.Task task18 = deleteRequest13.createTask(0L, "", "", taskId17);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy19 = deleteRequest13.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest3.setRefreshPolicy(refreshPolicy19);
        java.lang.String str21 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest3.id("hi!");
        deleteRequest23.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest23.index("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest23.parent("delete {[][delete {[][][]}][delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}]}");
        java.lang.String str30 = deleteRequest23.id();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertTrue("'" + refreshPolicy9 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy9.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertTrue("'" + refreshPolicy19 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy19.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[][][]}" + "'", str21, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
    }

    @Test
    public void test8605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8605");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}", "delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = deleteRequest5.remoteAddress();
        java.lang.String str7 = deleteRequest5.index();
        java.lang.String str8 = deleteRequest5.routing();
        org.elasticsearch.index.shard.ShardId shardId9 = deleteRequest5.shardId();
        java.lang.String str10 = deleteRequest5.id();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(transportAddress6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}" + "'", str8, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}");
        org.junit.Assert.assertNull(shardId9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[hi!][null][null]}" + "'", str10, "delete {[hi!][null][null]}");
    }

    @Test
    public void test8606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8606");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest7.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.id("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.setRefreshPolicy("");
        java.lang.String str15 = deleteRequest14.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str17 = deleteRequest16.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest16.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.type("delete {[][][]}");
        java.lang.String str26 = deleteRequest23.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest23.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId38 = null;
        org.elasticsearch.tasks.Task task39 = deleteRequest34.createTask(0L, "", "", taskId38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest34.setRefreshPolicy("");
        java.lang.String[] strArray42 = deleteRequest41.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId50 = null;
        org.elasticsearch.tasks.Task task51 = deleteRequest46.createTask(0L, "", "", taskId50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest46.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel54 = deleteRequest53.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest41.consistencyLevel(writeConsistencyLevel54);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue58 = deleteRequest57.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress59 = null;
        deleteRequest57.remoteAddress(transportAddress59);
        org.elasticsearch.common.unit.TimeValue timeValue61 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest57.timeout(timeValue61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest41.timeout(timeValue61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest30.timeout(timeValue61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest19.timeout(timeValue61);
        org.elasticsearch.index.VersionType versionType66 = deleteRequest65.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest14.versionType(versionType66);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest67.parent("delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId70 = deleteRequest67.shardId();
        java.lang.String str71 = deleteRequest67.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest67.routing("");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(taskId8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "delete {[][][]}" + "'", str26, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(task39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(task51);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel54 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel54.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(timeValue58);
        org.junit.Assert.assertNotNull(timeValue61);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(versionType66);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNull(shardId70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "delete {[hi!][null][null]}" + "'", str71, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest73);
    }

    @Test
    public void test8607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8607");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str5 = deleteRequest4.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException6 = deleteRequest4.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure8 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "hi!", (java.lang.Throwable) actionRequestValidationException6, "delete {[][][]}");
        java.lang.Throwable throwable9 = shardFailure8.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure11 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][null][delete {[hi!][null][null]}]}", throwable9, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[null][null][null]}" + "'", str5, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException6);
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable9.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test8608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8608");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest11.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue16 = deleteRequest15.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest11.timeout(timeValue16);
        java.lang.String str18 = deleteRequest11.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException19 = deleteRequest11.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure21 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[delete {[][][hi!]}][null][null]}", (java.lang.Throwable) actionRequestValidationException19, "delete {[][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure23 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "", (java.lang.Throwable) actionRequestValidationException19, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure25 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "hi!", (java.lang.Throwable) actionRequestValidationException19, "delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure27 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[null][null][null]}", (java.lang.Throwable) actionRequestValidationException19, "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure29 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[][][]}][null][null]}", (java.lang.Throwable) actionRequestValidationException19, "delete {[][][hi!]}");
        java.lang.String str30 = shardFailure29.indexUUID;
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[][null][null]}" + "'", str18, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException19);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "delete {[][][hi!]}" + "'", str30, "delete {[][][hi!]}");
    }

    @Test
    public void test8609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8609");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str7 = deleteRequest6.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest6.getParentTask();
        deleteRequest3.setParentTask(taskId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.consistencyLevel(writeConsistencyLevel14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.type("delete {[delete {[][][hi!]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest17.routing("delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest17.type("delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest17.index("delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}");
        java.lang.String[] strArray26 = deleteRequest25.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str28 = deleteRequest27.parent();
        org.elasticsearch.index.VersionType versionType29 = deleteRequest27.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest27.version((long) 'a');
        org.elasticsearch.index.shard.ShardId shardId32 = deleteRequest31.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest31.type("delete {[][][hi!]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy35 = deleteRequest31.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest25.setRefreshPolicy(refreshPolicy35);
        org.elasticsearch.index.VersionType versionType37 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest25.versionType(versionType37);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(versionType29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNull(shardId32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + refreshPolicy35 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy35.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
    }

    @Test
    public void test8610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8610");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = deleteRequest3.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.setShardId(shardId6);
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.setShardId(shardId8);
        java.lang.String str10 = deleteRequest9.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str15 = deleteRequest14.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.id("hi!");
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest17.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest17.setRefreshPolicy("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy21 = deleteRequest17.getRefreshPolicy();
        java.lang.String str22 = deleteRequest17.index();
        java.lang.String[] strArray23 = deleteRequest17.indices();
        java.lang.String str24 = deleteRequest17.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.type("delete {[][][]}");
        java.lang.String str31 = deleteRequest28.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest28.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest28.index("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest39.type("delete {[][][]}");
        java.lang.String str42 = deleteRequest39.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest39.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest44.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest44.type("delete {[][][]}");
        org.elasticsearch.common.unit.TimeValue timeValue49 = deleteRequest44.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest35.timeout(timeValue49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest17.timeout(timeValue49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest9.timeout(timeValue49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest52.parent("delete {[][delete {[][][]}][delete {[][delete {[][][hi!]}][delete {[][][]}]}]}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(transportAddress5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertTrue("'" + refreshPolicy21 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy21.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "delete {[][][]}" + "'", str31, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "delete {[][][]}" + "'", str42, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(timeValue49);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest54);
    }

    @Test
    public void test8611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8611");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str9 = deleteRequest8.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException10 = deleteRequest8.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure12 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "hi!", (java.lang.Throwable) actionRequestValidationException10, "delete {[][][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure14 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "", (java.lang.Throwable) actionRequestValidationException10, "delete {[][][hi!]}");
        java.lang.String str15 = shardFailure14.reason;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = shardFailure14.routing;
        java.lang.Throwable throwable17 = shardFailure14.cause;
        java.lang.Throwable throwable18 = shardFailure14.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure20 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][delete {[delete {[][][hi!]}][null][null]}][]}", throwable18, "delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure22 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}][]}", throwable18, "delete {[][][hi!]}");
        java.lang.Throwable throwable23 = shardFailure22.cause;
        java.lang.String str24 = shardFailure22.reason;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting25 = shardFailure22.routing;
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[null][null][null]}" + "'", str9, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException10);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(shardRouting16);
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable17.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable18.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable23);
        org.junit.Assert.assertEquals(throwable23.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable23.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable23.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "delete {[][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}][]}" + "'", str24, "delete {[][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}][]}");
        org.junit.Assert.assertNull(shardRouting25);
    }

    @Test
    public void test8612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8612");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str19 = deleteRequest18.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException20 = deleteRequest18.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure22 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting16, "hi!", (java.lang.Throwable) actionRequestValidationException20, "delete {[][][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure24 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "", (java.lang.Throwable) actionRequestValidationException20, "delete {[][][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure26 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "delete {[][delete {[][][]}][delete {[][][]}]}", (java.lang.Throwable) actionRequestValidationException20, "");
        java.lang.Throwable throwable27 = shardFailure26.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure29 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "hi!", throwable27, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure31 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}", throwable27, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure33 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[][delete {[hi!][null][null]}][hi!]}", throwable27, "delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure35 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}", throwable27, "delete {[][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][][]}]}");
        java.lang.String str36 = shardFailure35.reason;
        java.lang.String str37 = shardFailure35.indexUUID;
        java.lang.Throwable throwable38 = shardFailure35.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][][delete {[delete {[][null][null]}][][]}]}", throwable38, "delete {[delete {[][][hi!]}][null][delete {[delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[hi!][null][null]}][delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}][delete {[delete {[][null][null]}][][]}]}", throwable38, "delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[][][]}]}");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[null][null][null]}" + "'", str19, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException20);
        org.junit.Assert.assertNotNull(throwable27);
        org.junit.Assert.assertEquals(throwable27.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable27.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable27.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}" + "'", str36, "delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "delete {[][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][][]}]}" + "'", str37, "delete {[][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][][]}]}");
        org.junit.Assert.assertNotNull(throwable38);
        org.junit.Assert.assertEquals(throwable38.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable38.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable38.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test8613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8613");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str8 = deleteRequest7.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.type("");
        long long11 = deleteRequest10.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.type("delete {[hi!][][delete {[][][]}]}");
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest10.setShardId(shardId14);
        deleteRequest15.primaryTerm((long) 0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[][][]}" + "'", str8, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
    }

    @Test
    public void test8614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8614");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "delete {[][delete {[delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[delete {[][][hi!]}][null][delete {[][][]}]}][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}]}][]}", "delete {[][][delete {[delete {[][null][null]}][][]}]}");
    }

    @Test
    public void test8615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8615");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        java.lang.String str4 = deleteRequest2.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest2.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest2.version(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest9.consistencyLevel();
        deleteRequest9.setParentTask("delete {[delete {[][][hi!]}][null][null]}", (long) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId22 = null;
        org.elasticsearch.tasks.Task task23 = deleteRequest18.createTask(0L, "", "", taskId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest18.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType26 = deleteRequest18.versionType();
        java.lang.String str27 = deleteRequest18.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress28 = deleteRequest18.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy29 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest18.setRefreshPolicy(refreshPolicy29);
        long long31 = deleteRequest18.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue32 = deleteRequest18.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest9.timeout(timeValue32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId41 = null;
        org.elasticsearch.tasks.Task task42 = deleteRequest37.createTask(0L, "", "", taskId41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest37.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType45 = deleteRequest37.versionType();
        java.lang.String str46 = deleteRequest37.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress47 = deleteRequest37.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy48 = deleteRequest37.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest33.setRefreshPolicy(refreshPolicy48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest2.setRefreshPolicy(refreshPolicy48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest50.routing("delete {[delete {[hi!][null][null]}][null][delete {[][][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest50.index("");
        org.elasticsearch.action.support.IndicesOptions indicesOptions55 = deleteRequest54.indicesOptions();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy56 = deleteRequest54.getRefreshPolicy();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(transportAddress28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertNotNull(timeValue32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(task42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(versionType45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(transportAddress47);
        org.junit.Assert.assertTrue("'" + refreshPolicy48 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy48.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(indicesOptions55);
        org.junit.Assert.assertTrue("'" + refreshPolicy56 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy56.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
    }

    @Test
    public void test8616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8616");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.type("delete {[null][null][null]}");
        java.lang.String str4 = deleteRequest1.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest1.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest1.parent("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId16 = null;
        org.elasticsearch.tasks.Task task17 = deleteRequest12.createTask(0L, "", "", taskId16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest12.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = deleteRequest19.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions21 = deleteRequest19.indicesOptions();
        java.lang.String str22 = deleteRequest19.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str24 = deleteRequest23.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest23.version((long) (short) 100);
        deleteRequest23.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str30 = deleteRequest29.parent();
        org.elasticsearch.index.VersionType versionType31 = deleteRequest29.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest23.versionType(versionType31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest19.versionType(versionType31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest8.versionType(versionType31);
        long long35 = deleteRequest8.version();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(task17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel20 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel20.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[][][]}" + "'", str22, "delete {[][][]}");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(versionType31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-3L) + "'", long35 == (-3L));
    }

    @Test
    public void test8617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8617");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.routing("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.version((long) (short) -1);
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = deleteRequest13.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest13.id("delete {[delete {[delete {[][][hi!]}][null][null]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest13.index("delete {[][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][delete {[][][]}]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.setRefreshPolicy(refreshPolicy21);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel24 = deleteRequest22.consistencyLevel();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(transportAddress16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel24 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel24.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test8618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8618");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel12 = deleteRequest3.consistencyLevel();
        java.lang.String str13 = deleteRequest3.toString();
        org.elasticsearch.index.VersionType versionType14 = deleteRequest3.versionType();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput15 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.writeTo(streamOutput15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel12 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel12.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[][][]}" + "'", str13, "delete {[][][]}");
        org.junit.Assert.assertNotNull(versionType14);
    }

    @Test
    public void test8619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8619");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel1 = deleteRequest0.consistencyLevel();
        java.lang.String str2 = deleteRequest0.parent();
        deleteRequest0.setParentTask("delete {[null][null][null]}", (long) (byte) -1);
        org.elasticsearch.index.VersionType versionType6 = deleteRequest0.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest0.index("delete {[][][null]}");
        boolean boolean9 = deleteRequest0.getShouldPersistResult();
        long long10 = deleteRequest0.version();
        long long11 = deleteRequest0.primaryTerm();
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel1 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel1.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-3L) + "'", long10 == (-3L));
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
    }

    @Test
    public void test8620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8620");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}", "delete {[][][hi!]}", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str11 = deleteRequest10.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.id("hi!");
        org.elasticsearch.tasks.TaskId taskId14 = deleteRequest13.getParentTask();
        org.elasticsearch.tasks.TaskId taskId15 = deleteRequest13.getParentTask();
        org.elasticsearch.tasks.Task task16 = deleteRequest3.createTask((-1L), "", "hi!", taskId15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest3.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType25 = deleteRequest24.versionType();
        java.lang.String str26 = deleteRequest24.index();
        org.elasticsearch.common.unit.TimeValue timeValue27 = deleteRequest24.timeout();
        org.elasticsearch.index.VersionType versionType28 = deleteRequest24.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest18.versionType(versionType28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest18.version(97L);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(taskId14);
        org.junit.Assert.assertNotNull(taskId15);
        org.junit.Assert.assertNotNull(task16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(versionType25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(timeValue27);
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
    }

    @Test
    public void test8621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8621");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("delete {[][][]}");
        java.lang.String str10 = deleteRequest7.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId22 = null;
        org.elasticsearch.tasks.Task task23 = deleteRequest18.createTask(0L, "", "", taskId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest18.setRefreshPolicy("");
        java.lang.String[] strArray26 = deleteRequest25.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId34 = null;
        org.elasticsearch.tasks.Task task35 = deleteRequest30.createTask(0L, "", "", taskId34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest30.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = deleteRequest37.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest25.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue42 = deleteRequest41.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress43 = null;
        deleteRequest41.remoteAddress(transportAddress43);
        org.elasticsearch.common.unit.TimeValue timeValue45 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest41.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest25.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest14.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest3.timeout(timeValue45);
        org.elasticsearch.action.support.IndicesOptions indicesOptions50 = deleteRequest49.indicesOptions();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel51 = deleteRequest49.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions52 = deleteRequest49.indicesOptions();
        java.lang.String str53 = deleteRequest49.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest49.id("delete {[null][delete {[null][null][null]}][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.shard.ShardId shardId61 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest60.setShardId(shardId61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest62.routing("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy65 = deleteRequest64.getRefreshPolicy();
        org.elasticsearch.tasks.TaskId taskId66 = deleteRequest64.getParentTask();
        org.elasticsearch.tasks.Task task67 = deleteRequest49.createTask((-1L), "delete {[][delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[][][]}]}][delete {[null][null][null]}]}", "delete {[][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][delete {[][][]}]}", taskId66);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy68 = deleteRequest49.getRefreshPolicy();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException69 = deleteRequest49.validate();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][][]}" + "'", str10, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(task35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel38 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel38.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(timeValue42);
        org.junit.Assert.assertNotNull(timeValue45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(indicesOptions50);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel51 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel51.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertTrue("'" + refreshPolicy65 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy65.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(taskId66);
        org.junit.Assert.assertNotNull(task67);
        org.junit.Assert.assertTrue("'" + refreshPolicy68 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy68.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(actionRequestValidationException69);
    }

    @Test
    public void test8622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8622");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[null][null][null]}][]}");
        org.elasticsearch.index.VersionType versionType2 = deleteRequest1.versionType();
        org.junit.Assert.assertNotNull(versionType2);
    }

    @Test
    public void test8623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8623");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.toString();
        long long13 = deleteRequest3.version();
        org.elasticsearch.index.VersionType versionType14 = deleteRequest3.versionType();
        org.elasticsearch.common.io.stream.StreamInput streamInput15 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.readFrom(streamInput15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][][]}" + "'", str12, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-3L) + "'", long13 == (-3L));
        org.junit.Assert.assertNotNull(versionType14);
    }

    @Test
    public void test8624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8624");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.setRefreshPolicy("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy10 = deleteRequest6.getRefreshPolicy();
        long long11 = deleteRequest6.version();
        long long12 = deleteRequest6.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest6.type("");
        java.lang.String str15 = deleteRequest6.type();
        java.lang.String str16 = deleteRequest6.toString();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy17 = deleteRequest6.getRefreshPolicy();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + refreshPolicy10 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy10.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-3L) + "'", long11 == (-3L));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-3L) + "'", long12 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[][][hi!]}" + "'", str16, "delete {[][][hi!]}");
        org.junit.Assert.assertTrue("'" + refreshPolicy17 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy17.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
    }

    @Test
    public void test8625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8625");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("delete {[][][]}");
        java.lang.String str10 = deleteRequest7.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId22 = null;
        org.elasticsearch.tasks.Task task23 = deleteRequest18.createTask(0L, "", "", taskId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest18.setRefreshPolicy("");
        java.lang.String[] strArray26 = deleteRequest25.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId34 = null;
        org.elasticsearch.tasks.Task task35 = deleteRequest30.createTask(0L, "", "", taskId34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest30.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = deleteRequest37.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest25.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue42 = deleteRequest41.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress43 = null;
        deleteRequest41.remoteAddress(transportAddress43);
        org.elasticsearch.common.unit.TimeValue timeValue45 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest41.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest25.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest14.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest3.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest3.type("delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress52 = null;
        deleteRequest3.remoteAddress(transportAddress52);
        org.elasticsearch.index.shard.ShardId shardId54 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest3.setShardId(shardId54);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest55.version((long) 0);
        org.elasticsearch.common.unit.TimeValue timeValue58 = deleteRequest55.timeout();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][][]}" + "'", str10, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(task35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel38 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel38.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(timeValue42);
        org.junit.Assert.assertNotNull(timeValue45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(timeValue58);
    }

    @Test
    public void test8626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8626");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        java.lang.String str7 = deleteRequest6.toString();
        java.lang.String str8 = deleteRequest6.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][hi!]}", "delete {[hi!][null][null]}", "delete {[null][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = null;
        deleteRequest12.remoteAddress(transportAddress13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId22 = null;
        org.elasticsearch.tasks.Task task23 = deleteRequest18.createTask(0L, "", "", taskId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest18.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel26 = deleteRequest25.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions27 = deleteRequest25.indicesOptions();
        java.lang.String str28 = deleteRequest25.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str30 = deleteRequest29.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest29.version((long) (short) 100);
        deleteRequest29.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str36 = deleteRequest35.parent();
        org.elasticsearch.index.VersionType versionType37 = deleteRequest35.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest29.versionType(versionType37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest25.versionType(versionType37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest12.versionType(versionType37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest6.versionType(versionType37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest6.type("delete {[][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}][]}");
        org.elasticsearch.index.shard.ShardId shardId44 = deleteRequest43.shardId();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[][][hi!]}" + "'", str7, "delete {[][][hi!]}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel26 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel26.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "delete {[][][]}" + "'", str28, "delete {[][][]}");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(versionType37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNull(shardId44);
    }

    @Test
    public void test8627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8627");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.type("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId12 = null;
        org.elasticsearch.tasks.Task task13 = deleteRequest8.createTask(0L, "", "", taskId12);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = deleteRequest8.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId22 = null;
        org.elasticsearch.tasks.Task task23 = deleteRequest18.createTask(0L, "", "", taskId22);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy24 = deleteRequest18.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest8.setRefreshPolicy(refreshPolicy24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest4.setRefreshPolicy(refreshPolicy24);
        org.elasticsearch.common.unit.TimeValue timeValue27 = deleteRequest26.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId35 = null;
        org.elasticsearch.tasks.Task task36 = deleteRequest31.createTask(0L, "", "", taskId35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest31.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType39 = deleteRequest31.versionType();
        java.lang.String str40 = deleteRequest31.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress41 = deleteRequest31.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy42 = deleteRequest31.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str44 = deleteRequest43.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest43.version((long) (short) 100);
        java.lang.String str47 = deleteRequest43.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue50 = deleteRequest49.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress51 = null;
        deleteRequest49.remoteAddress(transportAddress51);
        java.lang.String str53 = deleteRequest49.index();
        org.elasticsearch.index.VersionType versionType54 = deleteRequest49.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest43.versionType(versionType54);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest31.versionType(versionType54);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest26.versionType(versionType54);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel58 = deleteRequest26.consistencyLevel();
        org.elasticsearch.index.shard.ShardId shardId59 = deleteRequest26.shardId();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertTrue("'" + refreshPolicy14 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy14.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertTrue("'" + refreshPolicy24 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy24.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(timeValue27);
        org.junit.Assert.assertNotNull(task36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(versionType39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(transportAddress41);
        org.junit.Assert.assertTrue("'" + refreshPolicy42 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy42.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(timeValue50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "delete {[null][null][null]}" + "'", str53, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(versionType54);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel58 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel58.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(shardId59);
    }

    @Test
    public void test8628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8628");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.version((long) (byte) 10);
        org.elasticsearch.tasks.TaskId taskId15 = deleteRequest12.getParentTask();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(taskId15);
    }

    @Test
    public void test8629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8629");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str6 = deleteRequest5.id();
        java.lang.String str7 = deleteRequest5.index();
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest5.getParentTask();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException9 = deleteRequest5.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue12 = deleteRequest11.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = null;
        deleteRequest11.remoteAddress(transportAddress13);
        org.elasticsearch.common.unit.TimeValue timeValue15 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest5.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str25 = deleteRequest24.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.type("delete {[][][]}");
        java.lang.String str32 = deleteRequest29.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest29.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId42 = null;
        org.elasticsearch.tasks.Task task43 = deleteRequest38.createTask(0L, "", "", taskId42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest38.setRefreshPolicy("");
        java.lang.String str46 = deleteRequest45.toString();
        java.lang.String[] strArray47 = deleteRequest45.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest45.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str58 = deleteRequest57.id();
        java.lang.String str59 = deleteRequest57.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str61 = deleteRequest60.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest60.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId64 = deleteRequest60.getParentTask();
        deleteRequest57.setParentTask(taskId64);
        deleteRequest53.setParentTask(taskId64);
        deleteRequest49.setParentTask(taskId64);
        deleteRequest34.setParentTask(taskId64);
        deleteRequest24.setParentTask(taskId64);
        org.elasticsearch.tasks.Task task70 = deleteRequest17.createTask((long) (short) -1, "delete {[hi!][null][null]}", "hi!", taskId64);
        java.lang.String str71 = deleteRequest17.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId79 = null;
        org.elasticsearch.tasks.Task task80 = deleteRequest75.createTask(0L, "", "", taskId79);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest82 = deleteRequest75.setRefreshPolicy("");
        java.lang.String str83 = deleteRequest82.toString();
        java.lang.String[] strArray84 = deleteRequest82.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest86 = deleteRequest82.index("");
        org.elasticsearch.common.unit.TimeValue timeValue87 = deleteRequest86.timeout();
        org.elasticsearch.index.VersionType versionType88 = deleteRequest86.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest89 = deleteRequest17.versionType(versionType88);
        java.lang.String str90 = deleteRequest17.getDescription();
        deleteRequest17.setParentTask("delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][null][null]}", (long) (byte) 0);
        java.lang.String str94 = deleteRequest17.index();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}][delete {[][delete {[null][null][null]}][delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}]}][delete {[delete {[hi!][null][null]}][null][null]}]}", deleteRequest17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(taskId8);
        org.junit.Assert.assertNull(actionRequestValidationException9);
        org.junit.Assert.assertNotNull(timeValue12);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[][][]}" + "'", str32, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(task43);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "delete {[][][]}" + "'", str46, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(taskId64);
        org.junit.Assert.assertNotNull(task70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "delete {[][][]}" + "'", str71, "delete {[][][]}");
        org.junit.Assert.assertNotNull(task80);
        org.junit.Assert.assertNotNull(deleteRequest82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "delete {[][][]}" + "'", str83, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(deleteRequest86);
        org.junit.Assert.assertNotNull(timeValue87);
        org.junit.Assert.assertNotNull(versionType88);
        org.junit.Assert.assertNotNull(deleteRequest89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "delete {[][][]}" + "'", str90, "delete {[][][]}");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "" + "'", str94, "");
    }

    @Test
    public void test8630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8630");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}", "delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}", "delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}");
        boolean boolean4 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.index("delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy7 = deleteRequest6.getRefreshPolicy();
        java.lang.String str8 = deleteRequest6.routing();
        boolean boolean9 = deleteRequest6.getShouldPersistResult();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + refreshPolicy7 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy7.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test8631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8631");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str19 = deleteRequest18.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest18.id("hi!");
        org.elasticsearch.tasks.TaskId taskId22 = deleteRequest21.getParentTask();
        org.elasticsearch.tasks.Task task23 = deleteRequest3.createTask(10L, "delete {[hi!][null][null]}", "delete {[delete {[][][hi!]}][null][null]}", taskId22);
        org.elasticsearch.common.transport.TransportAddress transportAddress24 = null;
        deleteRequest3.remoteAddress(transportAddress24);
        java.lang.String[] strArray26 = deleteRequest3.indices();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(taskId22);
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertNotNull(strArray26);
    }

    @Test
    public void test8632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8632");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.tasks.TaskId taskId6 = deleteRequest3.getParentTask();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest3.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = null;
        deleteRequest9.remoteAddress(transportAddress11);
        org.elasticsearch.common.unit.TimeValue timeValue13 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest9.timeout(timeValue13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.timeout(timeValue13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.version((long) ' ');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.parent("hi!");
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest17.setShardId(shardId20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest17.id("delete {[delete {[][][]}][delete {[null][null][null]}][delete {[null][null][null]}]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress24 = deleteRequest23.remoteAddress();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(taskId6);
        org.junit.Assert.assertNull(actionRequestValidationException7);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(transportAddress24);
    }

    @Test
    public void test8633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8633");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str7 = deleteRequest6.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException8 = deleteRequest6.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure10 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "hi!", (java.lang.Throwable) actionRequestValidationException8, "delete {[][][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure12 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][][]}", (java.lang.Throwable) actionRequestValidationException8, "delete {[][][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure14 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}", (java.lang.Throwable) actionRequestValidationException8, "");
        java.lang.String str15 = shardFailure14.indexUUID;
        java.lang.String str16 = shardFailure14.indexUUID;
        java.lang.Throwable throwable17 = shardFailure14.cause;
        java.lang.String str18 = shardFailure14.indexUUID;
        java.lang.Throwable throwable19 = shardFailure14.cause;
        java.lang.String str20 = shardFailure14.reason;
        java.lang.String str21 = shardFailure14.indexUUID;
        java.lang.Throwable throwable22 = shardFailure14.cause;
        java.lang.String str23 = shardFailure14.indexUUID;
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[null][null][null]}" + "'", str7, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException8);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable17.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable19.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}" + "'", str20, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable22.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
    }

    @Test
    public void test8634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8634");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest7.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.type("delete {[][][hi!]}");
        java.lang.String str19 = deleteRequest16.getDescription();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy20 = deleteRequest16.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest10.setRefreshPolicy(refreshPolicy20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest10.type("delete {[][hi!][delete {[null][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId31 = null;
        org.elasticsearch.tasks.Task task32 = deleteRequest27.createTask(0L, "", "", taskId31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest27.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType35 = deleteRequest27.versionType();
        java.lang.String str36 = deleteRequest27.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress37 = deleteRequest27.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy38 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest27.setRefreshPolicy(refreshPolicy38);
        org.elasticsearch.action.support.IndicesOptions indicesOptions40 = deleteRequest27.indicesOptions();
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest27.setShardId(shardId41);
        org.elasticsearch.index.VersionType versionType43 = deleteRequest27.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest23.versionType(versionType43);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(taskId8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[][delete {[][][hi!]}][delete {[][][]}]}" + "'", str19, "delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.junit.Assert.assertTrue("'" + refreshPolicy20 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy20.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(task32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(versionType35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(transportAddress37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(indicesOptions40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(versionType43);
        org.junit.Assert.assertNotNull(deleteRequest44);
    }

    @Test
    public void test8635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8635");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType6 = deleteRequest5.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = deleteRequest10.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy21 = deleteRequest15.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest10.setRefreshPolicy(refreshPolicy21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest5.setRefreshPolicy(refreshPolicy21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest5.id("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        boolean boolean26 = deleteRequest5.getShouldPersistResult();
        org.elasticsearch.index.VersionType versionType27 = deleteRequest5.versionType();
        org.elasticsearch.common.transport.TransportAddress transportAddress28 = deleteRequest5.remoteAddress();
        deleteRequest5.primaryTerm((long) 'a');
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertNull(transportAddress11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertTrue("'" + refreshPolicy21 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy21.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(versionType27);
        org.junit.Assert.assertNull(transportAddress28);
    }

    @Test
    public void test8636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8636");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.setRefreshPolicy(refreshPolicy14);
        org.elasticsearch.action.support.IndicesOptions indicesOptions16 = deleteRequest3.indicesOptions();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest3.setShardId(shardId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str23 = deleteRequest22.id();
        java.lang.String str24 = deleteRequest22.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest22.type("delete {[][][]}");
        org.elasticsearch.common.unit.TimeValue timeValue27 = deleteRequest26.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest18.timeout(timeValue27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.routing("delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions31 = deleteRequest30.indicesOptions();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(transportAddress13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(indicesOptions16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(timeValue27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(indicesOptions31);
    }

    @Test
    public void test8637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8637");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("delete {[][][]}");
        java.lang.String str10 = deleteRequest7.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId22 = null;
        org.elasticsearch.tasks.Task task23 = deleteRequest18.createTask(0L, "", "", taskId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest18.setRefreshPolicy("");
        java.lang.String[] strArray26 = deleteRequest25.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId34 = null;
        org.elasticsearch.tasks.Task task35 = deleteRequest30.createTask(0L, "", "", taskId34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest30.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = deleteRequest37.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest25.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue42 = deleteRequest41.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress43 = null;
        deleteRequest41.remoteAddress(transportAddress43);
        org.elasticsearch.common.unit.TimeValue timeValue45 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest41.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest25.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest14.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest3.timeout(timeValue45);
        org.elasticsearch.common.transport.TransportAddress transportAddress50 = deleteRequest49.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest49.parent("delete {[delete {[null][null][null]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest49.routing("delete {[][delete {[delete {[][][hi!]}][null][null]}][null]}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][][]}" + "'", str10, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(task35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel38 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel38.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(timeValue42);
        org.junit.Assert.assertNotNull(timeValue45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNull(transportAddress50);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest54);
    }

    @Test
    public void test8638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8638");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str17 = deleteRequest16.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException18 = deleteRequest16.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure20 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "hi!", (java.lang.Throwable) actionRequestValidationException18, "delete {[][][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure22 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "", (java.lang.Throwable) actionRequestValidationException18, "delete {[][][hi!]}");
        java.lang.String str23 = shardFailure22.reason;
        java.lang.Throwable throwable24 = shardFailure22.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure26 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[null][null][null]}", throwable24, "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure28 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}", throwable24, "delete {[][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure30 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[][delete {[][][hi!]}][delete {[][][]}]}", throwable24, "delete {[][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[][][]}]}", throwable24, "delete {[delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}][delete {[hi!][null][null]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}][delete {[hi!][null][null]}][hi!]}", throwable24, "delete {[delete {[][null][null]}][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][delete {[null][null][null]}][]}", throwable24, "delete {[delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][delete {[][][]}][delete {[][][]}]}][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}]}");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[null][null][null]}" + "'", str17, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException18);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(throwable24);
        org.junit.Assert.assertEquals(throwable24.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable24.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable24.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test8639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8639");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[][][]}");
        org.elasticsearch.index.shard.ShardId shardId3 = deleteRequest2.shardId();
        long long4 = deleteRequest2.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][null][null]}");
        java.lang.String str7 = deleteRequest6.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.setShardId(shardId10);
        deleteRequest9.primaryTerm((long) 1);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = deleteRequest9.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest6.setRefreshPolicy(refreshPolicy14);
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest15.getParentTask();
        deleteRequest2.setParentTask(taskId16);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(shardId3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[delete {[][null][null]}][null][null]}" + "'", str7, "delete {[delete {[][null][null]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertTrue("'" + refreshPolicy14 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy14.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(taskId16);
    }

    @Test
    public void test8640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8640");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        deleteRequest0.setParentTask("delete {[][][hi!]}", (long) '#');
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest0.validate();
        long long6 = deleteRequest0.primaryTerm();
        deleteRequest0.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str13 = deleteRequest12.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.id("hi!");
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest15.getParentTask();
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest15.getParentTask();
        org.elasticsearch.common.unit.TimeValue timeValue18 = deleteRequest15.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest0.timeout(timeValue18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest0.routing("delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}");
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest0.setShardId(shardId22);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(timeValue18);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
    }

    @Test
    public void test8641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8641");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId12 = null;
        org.elasticsearch.tasks.Task task13 = deleteRequest8.createTask(0L, "", "", taskId12);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = deleteRequest8.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.setRefreshPolicy(refreshPolicy14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.id("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest19.setParentTask("hi!", (long) (short) 1);
        long long23 = deleteRequest19.version();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest19.setShardId(shardId24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest26.routing("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.common.unit.TimeValue timeValue31 = deleteRequest30.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest19.timeout(timeValue31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest17.timeout(timeValue31);
        org.elasticsearch.common.unit.TimeValue timeValue34 = deleteRequest17.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest17.parent("delete {[][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][delete {[delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}][null][null]}]}");
        org.junit.Assert.assertNull(transportAddress4);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertTrue("'" + refreshPolicy14 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy14.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-3L) + "'", long23 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(timeValue31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(timeValue34);
        org.junit.Assert.assertNotNull(deleteRequest36);
    }

    @Test
    public void test8642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8642");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[][][]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy3 = deleteRequest0.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest5.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest5.timeout(timeValue10);
        java.lang.String str12 = deleteRequest5.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str20 = deleteRequest19.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("delete {[][][]}");
        java.lang.String str27 = deleteRequest24.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest24.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId37 = null;
        org.elasticsearch.tasks.Task task38 = deleteRequest33.createTask(0L, "", "", taskId37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest33.setRefreshPolicy("");
        java.lang.String str41 = deleteRequest40.toString();
        java.lang.String[] strArray42 = deleteRequest40.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest40.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str53 = deleteRequest52.id();
        java.lang.String str54 = deleteRequest52.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str56 = deleteRequest55.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest55.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId59 = deleteRequest55.getParentTask();
        deleteRequest52.setParentTask(taskId59);
        deleteRequest48.setParentTask(taskId59);
        deleteRequest44.setParentTask(taskId59);
        deleteRequest29.setParentTask(taskId59);
        deleteRequest19.setParentTask(taskId59);
        org.elasticsearch.tasks.Task task65 = deleteRequest5.createTask((long) 100, "delete {[][][hi!]}", "hi!", taskId59);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest5.routing("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.tasks.TaskId taskId68 = deleteRequest5.getParentTask();
        deleteRequest0.setParentTask(taskId68);
        org.elasticsearch.index.shard.ShardId shardId70 = deleteRequest0.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue71 = deleteRequest0.timeout();
        java.lang.String str72 = deleteRequest0.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest0.type("hi!");
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertTrue("'" + refreshPolicy3 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy3.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][][]}" + "'", str27, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(task38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "delete {[][][]}" + "'", str41, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(taskId59);
        org.junit.Assert.assertNotNull(task65);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNotNull(taskId68);
        org.junit.Assert.assertNull(shardId70);
        org.junit.Assert.assertNotNull(timeValue71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(deleteRequest74);
    }

    @Test
    public void test8643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8643");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest10.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId13 = null;
        deleteRequest10.setParentTask(taskId13);
        deleteRequest10.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest10.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        java.lang.String str19 = deleteRequest18.routing();
        deleteRequest18.setParentTask("delete {[delete {[][][hi!]}][null][null]}", 10L);
        java.lang.String str23 = deleteRequest18.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest18.index("delete {[hi!][hi!][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}]}");
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions12);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(deleteRequest25);
    }

    @Test
    public void test8644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8644");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException2 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest4.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue9 = deleteRequest8.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest4.timeout(timeValue9);
        java.lang.String str11 = deleteRequest4.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str19 = deleteRequest18.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.type("delete {[][][]}");
        java.lang.String str26 = deleteRequest23.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest23.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId36 = null;
        org.elasticsearch.tasks.Task task37 = deleteRequest32.createTask(0L, "", "", taskId36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest32.setRefreshPolicy("");
        java.lang.String str40 = deleteRequest39.toString();
        java.lang.String[] strArray41 = deleteRequest39.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest39.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str52 = deleteRequest51.id();
        java.lang.String str53 = deleteRequest51.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str55 = deleteRequest54.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest54.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId58 = deleteRequest54.getParentTask();
        deleteRequest51.setParentTask(taskId58);
        deleteRequest47.setParentTask(taskId58);
        deleteRequest43.setParentTask(taskId58);
        deleteRequest28.setParentTask(taskId58);
        deleteRequest18.setParentTask(taskId58);
        org.elasticsearch.tasks.Task task64 = deleteRequest4.createTask((long) 100, "delete {[][][hi!]}", "hi!", taskId58);
        deleteRequest0.setParentTask(taskId58);
        org.elasticsearch.index.shard.ShardId shardId66 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest0.setShardId(shardId66);
        long long68 = deleteRequest67.version();
        java.lang.String str69 = deleteRequest67.index();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "delete {[null][null][null]}" + "'", str1, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException2);
        org.junit.Assert.assertNotNull(timeValue9);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "delete {[][][]}" + "'", str26, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(task37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "delete {[][][]}" + "'", str40, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(taskId58);
        org.junit.Assert.assertNotNull(task64);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + (-3L) + "'", long68 == (-3L));
        org.junit.Assert.assertNull(str69);
    }

    @Test
    public void test8645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8645");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long2 = deleteRequest1.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.index("");
        boolean boolean5 = deleteRequest1.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.version((long) 1);
        org.elasticsearch.action.support.IndicesOptions indicesOptions8 = deleteRequest1.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest12.id("delete {[][][]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException17 = deleteRequest16.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId20 = deleteRequest19.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId28 = null;
        org.elasticsearch.tasks.Task task29 = deleteRequest24.createTask(0L, "", "", taskId28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest24.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel32 = deleteRequest31.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions33 = deleteRequest31.indicesOptions();
        java.lang.String str34 = deleteRequest31.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str36 = deleteRequest35.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest35.version((long) (short) 100);
        deleteRequest35.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str42 = deleteRequest41.parent();
        org.elasticsearch.index.VersionType versionType43 = deleteRequest41.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest35.versionType(versionType43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest31.versionType(versionType43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest19.versionType(versionType43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest16.versionType(versionType43);
        deleteRequest16.primaryTerm((long) (short) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest16.version((long) (short) -1);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException52 = deleteRequest16.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long55 = deleteRequest54.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest54.index("");
        boolean boolean58 = deleteRequest54.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest54.version((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue61 = deleteRequest54.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest16.timeout(timeValue61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest1.timeout(timeValue61);
        org.elasticsearch.index.shard.ShardId shardId64 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest1.setShardId(shardId64);
        java.lang.String str66 = deleteRequest65.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str71 = deleteRequest70.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long77 = deleteRequest76.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str79 = deleteRequest78.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue82 = deleteRequest81.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest83 = deleteRequest78.timeout(timeValue82);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest85 = deleteRequest83.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId86 = deleteRequest85.getParentTask();
        deleteRequest76.setParentTask(taskId86);
        org.elasticsearch.tasks.Task task88 = deleteRequest70.createTask((long) ' ', "delete {[][][hi!]}", "delete {[][][]}", taskId86);
        long long89 = deleteRequest70.version();
        org.elasticsearch.common.unit.TimeValue timeValue90 = deleteRequest70.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest91 = deleteRequest65.timeout(timeValue90);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest93 = deleteRequest91.id("delete {[null][delete {[null][null][null]}][null]}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(indicesOptions8);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNull(actionRequestValidationException17);
        org.junit.Assert.assertNull(shardId20);
        org.junit.Assert.assertNotNull(task29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel32 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel32.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "delete {[][][]}" + "'", str34, "delete {[][][]}");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(versionType43);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(actionRequestValidationException52);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 0L + "'", long55 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(timeValue61);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "delete {[][][]}" + "'", str71, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 0L + "'", long77 == 0L);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNotNull(timeValue82);
        org.junit.Assert.assertNotNull(deleteRequest83);
        org.junit.Assert.assertNotNull(deleteRequest85);
        org.junit.Assert.assertNotNull(taskId86);
        org.junit.Assert.assertNotNull(task88);
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + (-3L) + "'", long89 == (-3L));
        org.junit.Assert.assertNotNull(timeValue90);
        org.junit.Assert.assertNotNull(deleteRequest91);
        org.junit.Assert.assertNotNull(deleteRequest93);
    }

    @Test
    public void test8646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8646");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest5.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest5.timeout(timeValue10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str13 = deleteRequest12.parent();
        org.elasticsearch.index.VersionType versionType14 = deleteRequest12.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest5.versionType(versionType14);
        long long16 = deleteRequest15.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.type("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException19 = deleteRequest15.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure21 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][delete {[][][hi!]}][delete {[][][]}]}", (java.lang.Throwable) actionRequestValidationException19, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure23 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[][][hi!]}][null][null]}", (java.lang.Throwable) actionRequestValidationException19, "delete {[delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][delete {[hi!][null][null]}][hi!]}]}");
        java.lang.String str24 = shardFailure23.indexUUID;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting25 = shardFailure23.routing;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting26 = shardFailure23.routing;
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(actionRequestValidationException19);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "delete {[delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][delete {[hi!][null][null]}][hi!]}]}" + "'", str24, "delete {[delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][delete {[hi!][null][null]}][hi!]}]}");
        org.junit.Assert.assertNull(shardRouting25);
        org.junit.Assert.assertNull(shardRouting26);
    }

    @Test
    public void test8647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8647");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        java.lang.String str4 = deleteRequest2.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest2.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.id("delete {[][null][delete {[][delete {[][][hi!]}][delete {[][][]}]}]}");
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
    }

    @Test
    public void test8648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8648");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.routing("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.version((long) (short) -1);
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = deleteRequest13.remoteAddress();
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest13.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][null][null]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId27 = null;
        org.elasticsearch.tasks.Task task28 = deleteRequest23.createTask(0L, "", "", taskId27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest23.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel31 = deleteRequest30.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions32 = deleteRequest30.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId33 = null;
        deleteRequest30.setParentTask(taskId33);
        deleteRequest30.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest30.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        java.lang.String str39 = deleteRequest38.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest38.type("hi!");
        java.lang.String str42 = deleteRequest41.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId50 = null;
        org.elasticsearch.tasks.Task task51 = deleteRequest46.createTask(0L, "", "", taskId50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest46.setRefreshPolicy("");
        deleteRequest53.primaryTerm(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest53.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel59 = deleteRequest58.consistencyLevel();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy60 = deleteRequest58.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest57.setRefreshPolicy(refreshPolicy60);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest41.setRefreshPolicy(refreshPolicy60);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest19.setRefreshPolicy(refreshPolicy60);
        org.elasticsearch.common.unit.TimeValue timeValue64 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest63.timeout(timeValue64);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest13.timeout(timeValue64);
        org.elasticsearch.index.VersionType versionType67 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest13.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest69.routing("delete {[hi!][delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[hi!][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest71.routing("delete {[delete {[delete {[][null][null]}][][delete {[][][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}]}]}][][]}");
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(transportAddress16);
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(task28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel31 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel31.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions32);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(task51);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel59 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel59.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + refreshPolicy60 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy60.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(timeValue64);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNotNull(versionType67);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(deleteRequest73);
    }

    @Test
    public void test8649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8649");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long10 = deleteRequest9.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str12 = deleteRequest11.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest14.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest18.getParentTask();
        deleteRequest9.setParentTask(taskId19);
        org.elasticsearch.tasks.Task task21 = deleteRequest3.createTask((long) ' ', "delete {[][][hi!]}", "delete {[][][]}", taskId19);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel22 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest3.type("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.id("");
        org.elasticsearch.common.transport.TransportAddress transportAddress27 = deleteRequest24.remoteAddress();
        java.lang.String str28 = deleteRequest24.parent();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][][]}" + "'", str4, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel22 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel22.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(transportAddress27);
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test8650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8650");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType6 = deleteRequest5.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = deleteRequest10.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy21 = deleteRequest15.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest10.setRefreshPolicy(refreshPolicy21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest5.setRefreshPolicy(refreshPolicy21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest5.id("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel26 = deleteRequest25.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][null][null]}", "", "delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId41 = null;
        org.elasticsearch.tasks.Task task42 = deleteRequest37.createTask(0L, "", "", taskId41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest37.setRefreshPolicy("");
        java.lang.String str45 = deleteRequest44.toString();
        java.lang.String[] strArray46 = deleteRequest44.indices();
        java.lang.String[] strArray47 = deleteRequest44.indices();
        org.elasticsearch.tasks.TaskId taskId48 = deleteRequest44.getParentTask();
        org.elasticsearch.tasks.Task task49 = deleteRequest30.createTask((long) 100, "delete {[delete {[hi!][null][null]}][null][null]}", "delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}", taskId48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[][][]}][delete {[][][]}]}", "", "delete {[][][]}");
        long long54 = deleteRequest53.version();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel55 = deleteRequest53.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel56 = deleteRequest53.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str61 = deleteRequest60.id();
        java.lang.String str62 = deleteRequest60.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str64 = deleteRequest63.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest63.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId67 = deleteRequest63.getParentTask();
        deleteRequest60.setParentTask(taskId67);
        org.elasticsearch.tasks.TaskId taskId69 = deleteRequest60.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest60.version(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest60.routing("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str78 = deleteRequest77.id();
        java.lang.String str79 = deleteRequest77.index();
        org.elasticsearch.tasks.TaskId taskId80 = deleteRequest77.getParentTask();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException81 = deleteRequest77.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest83 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue84 = deleteRequest83.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress85 = null;
        deleteRequest83.remoteAddress(transportAddress85);
        org.elasticsearch.common.unit.TimeValue timeValue87 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest88 = deleteRequest83.timeout(timeValue87);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest89 = deleteRequest77.timeout(timeValue87);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest90 = deleteRequest60.timeout(timeValue87);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest91 = deleteRequest53.timeout(timeValue87);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest92 = deleteRequest30.timeout(timeValue87);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest93 = deleteRequest25.timeout(timeValue87);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertNull(transportAddress11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertTrue("'" + refreshPolicy21 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy21.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel26 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel26.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(task42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "delete {[][][]}" + "'", str45, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(taskId48);
        org.junit.Assert.assertNotNull(task49);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + (-3L) + "'", long54 == (-3L));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel55 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel55.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel56 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel56.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNotNull(taskId67);
        org.junit.Assert.assertNotNull(taskId69);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(deleteRequest73);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
        org.junit.Assert.assertNotNull(taskId80);
        org.junit.Assert.assertNull(actionRequestValidationException81);
        org.junit.Assert.assertNotNull(timeValue84);
        org.junit.Assert.assertNotNull(timeValue87);
        org.junit.Assert.assertNotNull(deleteRequest88);
        org.junit.Assert.assertNotNull(deleteRequest89);
        org.junit.Assert.assertNotNull(deleteRequest90);
        org.junit.Assert.assertNotNull(deleteRequest91);
        org.junit.Assert.assertNotNull(deleteRequest92);
        org.junit.Assert.assertNotNull(deleteRequest93);
    }

    @Test
    public void test8651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8651");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.type("delete {[null][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = deleteRequest7.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.setShardId(shardId9);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.version((long) '4');
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy13 = deleteRequest10.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.setRefreshPolicy(refreshPolicy13);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel15 = deleteRequest3.consistencyLevel();
        java.lang.String str16 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest3.version((long) (short) 1);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(transportAddress8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + refreshPolicy13 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy13.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel15 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel15.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[][hi!][hi!]}" + "'", str16, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest18);
    }

    @Test
    public void test8652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8652");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("hi!");
        org.elasticsearch.tasks.TaskId taskId4 = deleteRequest0.getParentTask();
        java.lang.String str5 = deleteRequest0.toString();
        deleteRequest0.setParentTask("delete {[delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[hi!][][delete {[][][]}]}][null]}", 0L);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy9 = deleteRequest0.getRefreshPolicy();
        java.lang.String str10 = deleteRequest0.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "delete {[null][null][null]}" + "'", str1, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(taskId4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[null][null][null]}" + "'", str5, "delete {[null][null][null]}");
        org.junit.Assert.assertTrue("'" + refreshPolicy9 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy9.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[null][null][null]}" + "'", str10, "delete {[null][null][null]}");
    }

    @Test
    public void test8653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8653");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType16 = deleteRequest15.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress21 = deleteRequest20.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId29 = null;
        org.elasticsearch.tasks.Task task30 = deleteRequest25.createTask(0L, "", "", taskId29);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy31 = deleteRequest25.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest20.setRefreshPolicy(refreshPolicy31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest15.setRefreshPolicy(refreshPolicy31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest9.setRefreshPolicy(refreshPolicy31);
        java.lang.String str35 = deleteRequest9.id();
        org.elasticsearch.tasks.TaskId taskId36 = deleteRequest9.getParentTask();
        org.elasticsearch.index.VersionType versionType37 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest9.versionType(versionType37);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(versionType16);
        org.junit.Assert.assertNull(transportAddress21);
        org.junit.Assert.assertNotNull(task30);
        org.junit.Assert.assertTrue("'" + refreshPolicy31 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy31.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(taskId36);
        org.junit.Assert.assertNotNull(deleteRequest38);
    }

    @Test
    public void test8654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8654");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str8 = deleteRequest7.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.type("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest7.versionType();
        java.lang.String[] strArray12 = deleteRequest7.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.routing("delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}");
        java.lang.String str15 = deleteRequest14.index();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel16 = deleteRequest14.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel18 = deleteRequest17.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel19 = deleteRequest17.consistencyLevel();
        deleteRequest17.setParentTask("delete {[delete {[][][hi!]}][null][null]}", (long) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId30 = null;
        org.elasticsearch.tasks.Task task31 = deleteRequest26.createTask(0L, "", "", taskId30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest26.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType34 = deleteRequest26.versionType();
        java.lang.String str35 = deleteRequest26.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress36 = deleteRequest26.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy37 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest26.setRefreshPolicy(refreshPolicy37);
        long long39 = deleteRequest26.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue40 = deleteRequest26.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest17.timeout(timeValue40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest41.parent("delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId44 = deleteRequest41.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest41.parent("");
        org.elasticsearch.index.VersionType versionType47 = deleteRequest41.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest14.versionType(versionType47);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[][][]}" + "'", str8, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel16 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel16.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel18 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel18.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel19 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel19.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(task31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(versionType34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(transportAddress36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertNotNull(timeValue40);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNull(shardId44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(versionType47);
        org.junit.Assert.assertNotNull(deleteRequest48);
    }

    @Test
    public void test8655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8655");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.index("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        deleteRequest10.setParentTask("delete {[null][null][null]}", (long) (short) -1);
        long long14 = deleteRequest10.version();
        deleteRequest10.setParentTask("delete {[null][delete {[][delete {[hi!][null][null]}][hi!]}][delete {[][][hi!]}]}", (long) (short) 100);
        org.elasticsearch.common.io.stream.StreamInput streamInput18 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest10.readFrom(streamInput18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-3L) + "'", long14 == (-3L));
    }

    @Test
    public void test8656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8656");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.type("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId12 = null;
        org.elasticsearch.tasks.Task task13 = deleteRequest8.createTask(0L, "", "", taskId12);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = deleteRequest8.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId22 = null;
        org.elasticsearch.tasks.Task task23 = deleteRequest18.createTask(0L, "", "", taskId22);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy24 = deleteRequest18.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest8.setRefreshPolicy(refreshPolicy24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest4.setRefreshPolicy(refreshPolicy24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest4.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        deleteRequest28.setParentTask("delete {[][][hi!]}", (long) (byte) 100);
        org.elasticsearch.index.shard.IndexShard indexShard32 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult33 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest28, indexShard32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertTrue("'" + refreshPolicy14 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy14.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertTrue("'" + refreshPolicy24 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy24.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
    }

    @Test
    public void test8657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8657");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][null][null]}][][delete {[][][hi!]}]}", "delete {[][delete {[null][null][null]}][delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}]}", "delete {[][][delete {[][delete {[][][hi!]}][delete {[][][]}]}]}");
    }

    @Test
    public void test8658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8658");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "hi!", throwable2, "delete {[null][null][null]}");
        java.lang.String str5 = shardFailure4.indexUUID;
        java.lang.Throwable throwable6 = shardFailure4.cause;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting7 = shardFailure4.routing;
        java.lang.Throwable throwable8 = shardFailure4.cause;
        java.lang.String str9 = shardFailure4.reason;
        java.lang.String str10 = shardFailure4.indexUUID;
        java.lang.Throwable throwable11 = shardFailure4.cause;
        java.lang.Throwable throwable12 = shardFailure4.cause;
        java.lang.String str13 = shardFailure4.reason;
        java.lang.String str14 = shardFailure4.reason;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[null][null][null]}" + "'", str5, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(throwable6);
        org.junit.Assert.assertNull(shardRouting7);
        org.junit.Assert.assertNull(throwable8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[null][null][null]}" + "'", str10, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(throwable11);
        org.junit.Assert.assertNull(throwable12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
    }

    @Test
    public void test8659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8659");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str3 = deleteRequest2.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException4 = deleteRequest2.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure6 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][null][delete {[][][hi!]}]}", (java.lang.Throwable) actionRequestValidationException4, "delete {[delete {[hi!][null][null]}][null][null]}");
        java.lang.String str7 = shardFailure6.reason;
        java.lang.Throwable throwable8 = shardFailure6.cause;
        java.lang.String str9 = shardFailure6.indexUUID;
        java.lang.Throwable throwable10 = shardFailure6.cause;
        java.lang.String str11 = shardFailure6.reason;
        java.lang.String str12 = shardFailure6.reason;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "delete {[null][null][null]}" + "'", str3, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[null][null][delete {[][][hi!]}]}" + "'", str7, "delete {[null][null][delete {[][][hi!]}]}");
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable8.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[delete {[hi!][null][null]}][null][null]}" + "'", str9, "delete {[delete {[hi!][null][null]}][null][null]}");
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable10.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[null][null][delete {[][][hi!]}]}" + "'", str11, "delete {[null][null][delete {[][][hi!]}]}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[null][null][delete {[][][hi!]}]}" + "'", str12, "delete {[null][null][delete {[][][hi!]}]}");
    }

    @Test
    public void test8660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8660");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str11 = deleteRequest10.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException12 = deleteRequest10.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure14 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "hi!", (java.lang.Throwable) actionRequestValidationException12, "delete {[][][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure16 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[][][]}", (java.lang.Throwable) actionRequestValidationException12, "delete {[][][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure18 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}", (java.lang.Throwable) actionRequestValidationException12, "");
        java.lang.Throwable throwable19 = shardFailure18.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure21 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][][]}", throwable19, "delete {[][][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure23 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[][null][null]}][null][null]}][][]}", throwable19, "delete {[][][]}");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting24 = shardFailure23.routing;
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[null][null][null]}" + "'", str11, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException12);
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable19.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNull(shardRouting24);
    }

    @Test
    public void test8661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8661");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        java.lang.String str6 = deleteRequest0.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str8 = deleteRequest7.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue11 = deleteRequest10.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.timeout(timeValue11);
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = deleteRequest7.remoteAddress();
        long long14 = deleteRequest7.version();
        java.lang.String str15 = deleteRequest7.routing();
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest7.getParentTask();
        deleteRequest0.setParentTask(taskId16);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy18 = deleteRequest0.getRefreshPolicy();
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest0.setShardId(shardId19);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[null][null][null]}" + "'", str6, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(timeValue11);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(transportAddress13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-3L) + "'", long14 == (-3L));
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertTrue("'" + refreshPolicy18 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy18.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest20);
    }

    @Test
    public void test8662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8662");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long2 = deleteRequest1.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str4 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue7 = deleteRequest6.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.timeout(timeValue7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest10.getParentTask();
        deleteRequest1.setParentTask(taskId11);
        java.lang.String str13 = deleteRequest1.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest1.version((long) '#');
        org.elasticsearch.index.shard.ShardId shardId16 = deleteRequest15.shardId();
        deleteRequest15.setParentTask("delete {[delete {[][][hi!]}][null][delete {[delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][null][null]}]}", 97L);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(timeValue7);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(shardId16);
    }

    @Test
    public void test8663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8663");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        java.lang.String str9 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str11 = deleteRequest10.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.routing("delete {[][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = deleteRequest15.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str21 = deleteRequest20.id();
        java.lang.String str22 = deleteRequest20.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str24 = deleteRequest23.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest23.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest23.getParentTask();
        deleteRequest20.setParentTask(taskId27);
        deleteRequest15.setParentTask(taskId27);
        deleteRequest3.setParentTask(taskId27);
        org.elasticsearch.action.support.IndicesOptions indicesOptions31 = deleteRequest3.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest3.type("delete {[hi!][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress34 = deleteRequest33.remoteAddress();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(transportAddress16);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(taskId27);
        org.junit.Assert.assertNotNull(indicesOptions31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNull(transportAddress34);
    }

    @Test
    public void test8664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8664");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.consistencyLevel(writeConsistencyLevel23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue27 = deleteRequest26.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress28 = null;
        deleteRequest26.remoteAddress(transportAddress28);
        org.elasticsearch.common.unit.TimeValue timeValue30 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest26.timeout(timeValue30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest10.timeout(timeValue30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.parent("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId35 = deleteRequest34.getParentTask();
        org.elasticsearch.action.support.IndicesOptions indicesOptions36 = deleteRequest34.indicesOptions();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(timeValue27);
        org.junit.Assert.assertNotNull(timeValue30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(taskId35);
        org.junit.Assert.assertNotNull(indicesOptions36);
    }

    @Test
    public void test8665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8665");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.parent("delete {[][][]}");
        java.lang.String str11 = deleteRequest10.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.type("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        deleteRequest13.setParentTask("delete {[][delete {[][][hi!]}][delete {[][][]}]}", (long) (short) 10);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy17 = deleteRequest13.getRefreshPolicy();
        java.lang.String str18 = deleteRequest13.routing();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + refreshPolicy17 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy17.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test8666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8666");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest1.setParentTask("hi!", (long) (short) 1);
        java.lang.String[] strArray5 = deleteRequest1.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest7.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue12 = deleteRequest11.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest7.timeout(timeValue12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest1.timeout(timeValue12);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel15 = deleteRequest1.consistencyLevel();
        java.lang.String str16 = deleteRequest1.getDescription();
        java.lang.String[] strArray17 = deleteRequest1.indices();
        deleteRequest1.setParentTask("delete {[delete {[delete {[][null][null]}][][]}][][]}", (long) (short) 100);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(timeValue12);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel15 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel15.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[][null][null]}" + "'", str16, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(strArray17);
    }

    @Test
    public void test8667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8667");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.type("delete {[][][hi!]}");
        java.lang.String str5 = deleteRequest2.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest2.parent("delete {[delete {[hi!][null][null]}][null][delete {[][][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.index("delete {[][][hi!]}");
        java.lang.String str11 = deleteRequest10.parent();
        java.lang.String str12 = deleteRequest10.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.parent("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest10.parent("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.routing("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.index("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException21 = deleteRequest18.validate();
        java.lang.String str22 = deleteRequest18.index();
        java.lang.String str23 = deleteRequest18.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str25 = deleteRequest24.index();
        deleteRequest24.setParentTask("delete {[][][hi!]}", (long) '#');
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException29 = deleteRequest24.validate();
        long long30 = deleteRequest24.primaryTerm();
        deleteRequest24.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str37 = deleteRequest36.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest36.id("hi!");
        org.elasticsearch.tasks.TaskId taskId40 = deleteRequest39.getParentTask();
        org.elasticsearch.tasks.TaskId taskId41 = deleteRequest39.getParentTask();
        org.elasticsearch.common.unit.TimeValue timeValue42 = deleteRequest39.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest24.timeout(timeValue42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long46 = deleteRequest45.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest45.index("");
        boolean boolean49 = deleteRequest45.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest45.version((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue52 = deleteRequest45.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest24.timeout(timeValue52);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest18.timeout(timeValue52);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest2.timeout(timeValue52);
        org.elasticsearch.tasks.TaskId taskId56 = deleteRequest55.getParentTask();
        boolean boolean57 = deleteRequest55.getShouldPersistResult();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str12, "delete {[delete {[][][hi!]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(actionRequestValidationException21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}" + "'", str22, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][null][null]}" + "'", str23, "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][null][null]}");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(actionRequestValidationException29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(taskId40);
        org.junit.Assert.assertNotNull(taskId41);
        org.junit.Assert.assertNotNull(timeValue42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(timeValue52);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(taskId56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test8668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8668");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy9 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId17 = null;
        org.elasticsearch.tasks.Task task18 = deleteRequest13.createTask(0L, "", "", taskId17);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy19 = deleteRequest13.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest3.setRefreshPolicy(refreshPolicy19);
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest20.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest20.version((long) (short) -1);
        deleteRequest23.setParentTask("delete {[][][delete {[][delete {[][][hi!]}][delete {[][][]}]}]}", (long) ' ');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest23.index("delete {[delete {[][null][null]}][][delete {[][][hi!]}]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = deleteRequest28.consistencyLevel();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertTrue("'" + refreshPolicy9 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy9.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertTrue("'" + refreshPolicy19 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy19.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel29 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel29.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test8669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8669");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        deleteRequest0.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.setRefreshPolicy("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException6 = deleteRequest5.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.index("delete {[hi!][null][null]}");
        deleteRequest5.setParentTask("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}", 10L);
        java.lang.String str12 = deleteRequest5.parent();
        java.lang.String str13 = deleteRequest5.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest5.type("delete {[null][hi!][null]}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(actionRequestValidationException6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(deleteRequest15);
    }

    @Test
    public void test8670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8670");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}", "", "delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.version(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = null;
        deleteRequest7.remoteAddress(transportAddress9);
        java.lang.String str11 = deleteRequest7.index();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException12 = deleteRequest7.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId20 = null;
        org.elasticsearch.tasks.Task task21 = deleteRequest16.createTask(0L, "", "", taskId20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest16.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType24 = deleteRequest16.versionType();
        java.lang.String str25 = deleteRequest16.parent();
        org.elasticsearch.index.shard.ShardId shardId26 = deleteRequest16.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest16.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest7.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.index.shard.ShardId shardId30 = deleteRequest29.shardId();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[null][null][null]}" + "'", str11, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException12);
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(versionType24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(shardId26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNull(shardId30);
    }

    @Test
    public void test8671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8671");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        java.lang.String str9 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str11 = deleteRequest10.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.routing("delete {[][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = deleteRequest15.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str21 = deleteRequest20.id();
        java.lang.String str22 = deleteRequest20.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str24 = deleteRequest23.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest23.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest23.getParentTask();
        deleteRequest20.setParentTask(taskId27);
        deleteRequest15.setParentTask(taskId27);
        deleteRequest3.setParentTask(taskId27);
        org.elasticsearch.index.shard.ShardId shardId31 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.index.VersionType versionType36 = deleteRequest35.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest3.versionType(versionType36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest3.index("delete {[delete {[][][hi!]}][null][null]}");
        deleteRequest3.primaryTerm(32L);
        boolean boolean42 = deleteRequest3.getShouldPersistResult();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest3.timeout("delete {[][][hi!]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[][][hi!]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(transportAddress16);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(taskId27);
        org.junit.Assert.assertNull(shardId31);
        org.junit.Assert.assertNotNull(versionType36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test8672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8672");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType6 = deleteRequest5.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = deleteRequest10.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy21 = deleteRequest15.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest10.setRefreshPolicy(refreshPolicy21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest5.setRefreshPolicy(refreshPolicy21);
        java.lang.String str24 = deleteRequest5.routing();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput25 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest5.writeTo(streamOutput25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertNull(transportAddress11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertTrue("'" + refreshPolicy21 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy21.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test8673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8673");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId12 = null;
        org.elasticsearch.tasks.Task task13 = deleteRequest8.createTask(0L, "", "", taskId12);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = deleteRequest8.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.setRefreshPolicy(refreshPolicy14);
        java.lang.String str16 = deleteRequest3.index();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest3.setShardId(shardId17);
        java.lang.String str19 = deleteRequest18.parent();
        java.lang.String str20 = deleteRequest18.index();
        java.lang.String str21 = deleteRequest18.routing();
        org.junit.Assert.assertNull(transportAddress4);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertTrue("'" + refreshPolicy14 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy14.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test8674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8674");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.setRefreshPolicy(refreshPolicy14);
        long long16 = deleteRequest3.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest19.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue24 = deleteRequest23.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest19.timeout(timeValue24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str27 = deleteRequest26.parent();
        org.elasticsearch.index.VersionType versionType28 = deleteRequest26.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest19.versionType(versionType28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest3.versionType(versionType28);
        java.lang.String str31 = deleteRequest3.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest3.type("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.index.shard.ShardId shardId34 = deleteRequest3.shardId();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(transportAddress13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(timeValue24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNull(shardId34);
    }

    @Test
    public void test8675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8675");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.common.unit.TimeValue timeValue5 = deleteRequest3.timeout();
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.support.IndicesOptions indicesOptions7 = deleteRequest3.indicesOptions();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(indicesOptions7);
    }

    @Test
    public void test8676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8676");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}", "delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}", "delete {[delete {[][null][null]}][null][null]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException4 = deleteRequest3.validate();
        java.lang.String[] strArray5 = deleteRequest3.indices();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException6 = deleteRequest3.validate();
        org.junit.Assert.assertNull(actionRequestValidationException4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNull(actionRequestValidationException6);
    }

    @Test
    public void test8677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8677");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][hi!]}][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue2 = deleteRequest1.timeout();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy3 = deleteRequest1.getRefreshPolicy();
        org.elasticsearch.index.shard.IndexShard indexShard4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult5 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest1, indexShard4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(timeValue2);
        org.junit.Assert.assertTrue("'" + refreshPolicy3 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy3.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
    }

    @Test
    public void test8678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8678");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][null][null]}][delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}][delete {[][][]}]}");
    }

    @Test
    public void test8679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8679");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str7 = deleteRequest6.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest6.getParentTask();
        deleteRequest3.setParentTask(taskId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.consistencyLevel(writeConsistencyLevel14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.type("delete {[delete {[][][hi!]}][null][null]}");
        deleteRequest3.primaryTerm((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str21 = deleteRequest20.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest20.parent("hi!");
        deleteRequest23.primaryTerm(0L);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel26 = deleteRequest23.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest23.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest3.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.common.transport.TransportAddress transportAddress29 = deleteRequest3.remoteAddress();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[null][null][null]}" + "'", str21, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel26 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel26.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNull(transportAddress29);
    }

    @Test
    public void test8680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8680");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        java.lang.String str4 = deleteRequest2.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest2.version((long) (short) 100);
        org.elasticsearch.common.transport.TransportAddress transportAddress7 = null;
        deleteRequest6.remoteAddress(transportAddress7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest6.type("delete {[][delete {[null][null][null]}][null]}");
        org.elasticsearch.common.io.stream.StreamInput streamInput11 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest10.readFrom(streamInput11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest10);
    }

    @Test
    public void test8681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8681");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.version((long) (-1));
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.index("delete {[][delete {[][][]}][delete {[][][]}]}");
        boolean boolean8 = deleteRequest7.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.type("delete {[][delete {[null][null][null]}][]}");
        java.lang.String str11 = deleteRequest7.routing();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test8682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8682");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest3.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.timeout(timeValue8);
        java.lang.String str10 = deleteRequest3.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest3.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure13 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", (java.lang.Throwable) actionRequestValidationException11, "delete {[][][]}");
        java.lang.String str14 = shardFailure13.reason;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting15 = shardFailure13.routing;
        java.lang.String str16 = shardFailure13.reason;
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][null][null]}" + "'", str10, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNull(shardRouting15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test8683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8683");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long2 = deleteRequest1.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.index("");
        boolean boolean5 = deleteRequest1.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.version((long) 1);
        org.elasticsearch.action.support.IndicesOptions indicesOptions8 = deleteRequest1.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest12.id("delete {[][][]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException17 = deleteRequest16.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId20 = deleteRequest19.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId28 = null;
        org.elasticsearch.tasks.Task task29 = deleteRequest24.createTask(0L, "", "", taskId28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest24.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel32 = deleteRequest31.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions33 = deleteRequest31.indicesOptions();
        java.lang.String str34 = deleteRequest31.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str36 = deleteRequest35.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest35.version((long) (short) 100);
        deleteRequest35.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str42 = deleteRequest41.parent();
        org.elasticsearch.index.VersionType versionType43 = deleteRequest41.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest35.versionType(versionType43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest31.versionType(versionType43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest19.versionType(versionType43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest16.versionType(versionType43);
        deleteRequest16.primaryTerm((long) (short) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest16.version((long) (short) -1);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException52 = deleteRequest16.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long55 = deleteRequest54.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest54.index("");
        boolean boolean58 = deleteRequest54.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest54.version((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue61 = deleteRequest54.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest16.timeout(timeValue61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest1.timeout(timeValue61);
        org.elasticsearch.index.shard.ShardId shardId64 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest1.setShardId(shardId64);
        java.lang.String str66 = deleteRequest65.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str71 = deleteRequest70.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long77 = deleteRequest76.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str79 = deleteRequest78.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue82 = deleteRequest81.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest83 = deleteRequest78.timeout(timeValue82);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest85 = deleteRequest83.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId86 = deleteRequest85.getParentTask();
        deleteRequest76.setParentTask(taskId86);
        org.elasticsearch.tasks.Task task88 = deleteRequest70.createTask((long) ' ', "delete {[][][hi!]}", "delete {[][][]}", taskId86);
        long long89 = deleteRequest70.version();
        org.elasticsearch.common.unit.TimeValue timeValue90 = deleteRequest70.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest91 = deleteRequest65.timeout(timeValue90);
        org.elasticsearch.common.transport.TransportAddress transportAddress92 = deleteRequest65.remoteAddress();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(indicesOptions8);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNull(actionRequestValidationException17);
        org.junit.Assert.assertNull(shardId20);
        org.junit.Assert.assertNotNull(task29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel32 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel32.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "delete {[][][]}" + "'", str34, "delete {[][][]}");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(versionType43);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(actionRequestValidationException52);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 0L + "'", long55 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(timeValue61);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "delete {[][][]}" + "'", str71, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 0L + "'", long77 == 0L);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNotNull(timeValue82);
        org.junit.Assert.assertNotNull(deleteRequest83);
        org.junit.Assert.assertNotNull(deleteRequest85);
        org.junit.Assert.assertNotNull(taskId86);
        org.junit.Assert.assertNotNull(task88);
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + (-3L) + "'", long89 == (-3L));
        org.junit.Assert.assertNotNull(timeValue90);
        org.junit.Assert.assertNotNull(deleteRequest91);
        org.junit.Assert.assertNull(transportAddress92);
    }

    @Test
    public void test8684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8684");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = deleteRequest0.remoteAddress();
        long long7 = deleteRequest0.version();
        boolean boolean8 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue11 = deleteRequest10.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = null;
        deleteRequest10.remoteAddress(transportAddress12);
        java.lang.String str14 = deleteRequest10.index();
        org.elasticsearch.index.VersionType versionType15 = deleteRequest10.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest0.versionType(versionType15);
        java.lang.String str17 = deleteRequest16.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest16.index("delete {[delete {[][][]}][null][null]}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(transportAddress6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-3L) + "'", long7 == (-3L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(timeValue11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[null][null][null]}" + "'", str14, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(versionType15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[null][null][null]}" + "'", str17, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest19);
    }

    @Test
    public void test8685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8685");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest1.setParentTask("hi!", (long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.type("delete {[][][]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy11 = deleteRequest8.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest1.setRefreshPolicy(refreshPolicy11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.type("delete {[][][]}");
        java.lang.String str19 = deleteRequest16.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest16.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel24 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest16.consistencyLevel(writeConsistencyLevel24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest12.consistencyLevel(writeConsistencyLevel24);
        org.elasticsearch.common.transport.TransportAddress transportAddress27 = null;
        deleteRequest12.remoteAddress(transportAddress27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue31 = deleteRequest30.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress32 = null;
        deleteRequest30.remoteAddress(transportAddress32);
        java.lang.String str34 = deleteRequest30.index();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException35 = deleteRequest30.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str40 = deleteRequest39.id();
        java.lang.String str41 = deleteRequest39.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest39.type("delete {[][][]}");
        java.lang.String str44 = deleteRequest43.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest43.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel47 = deleteRequest46.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest30.consistencyLevel(writeConsistencyLevel47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest12.consistencyLevel(writeConsistencyLevel47);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + refreshPolicy11 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy11.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[][][]}" + "'", str19, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel24 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel24.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(timeValue31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "delete {[null][null][null]}" + "'", str34, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException35);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "delete {[][][]}" + "'", str44, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel47 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel47.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest49);
    }

    @Test
    public void test8686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8686");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long10 = deleteRequest9.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue11 = deleteRequest9.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.timeout(timeValue11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.version((long) 1);
        org.elasticsearch.index.VersionType versionType15 = deleteRequest14.versionType();
        org.elasticsearch.index.shard.IndexShard indexShard16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete17 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest14, indexShard16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(timeValue11);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(versionType15);
    }

    @Test
    public void test8687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8687");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.setShardId(shardId12);
        long long14 = deleteRequest10.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str16 = deleteRequest15.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.parent("hi!");
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest15.getParentTask();
        deleteRequest10.setParentTask(taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.setShardId(shardId23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest22.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.index("delete {[][][hi!]}");
        java.lang.String str33 = deleteRequest32.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest32.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest32.index("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        long long38 = deleteRequest32.primaryTerm();
        org.elasticsearch.tasks.TaskId taskId39 = deleteRequest32.getParentTask();
        org.elasticsearch.tasks.Task task40 = deleteRequest22.createTask((long) 1, "delete {[null][delete {[null][null][null]}][null]}", "delete {[][delete {[][][]}][delete {[][][]}]}", taskId39);
        deleteRequest10.setParentTask(taskId39);
        java.lang.String str42 = deleteRequest10.type();
        org.elasticsearch.action.support.IndicesOptions indicesOptions43 = deleteRequest10.indicesOptions();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-3L) + "'", long14 == (-3L));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[null][null][null]}" + "'", str16, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
        org.junit.Assert.assertNotNull(taskId39);
        org.junit.Assert.assertNotNull(task40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(indicesOptions43);
    }

    @Test
    public void test8688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8688");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.parent("delete {[][][]}");
        java.lang.String str11 = deleteRequest10.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.type("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest10.index("delete {[delete {[hi!][null][null]}][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel16 = deleteRequest10.consistencyLevel();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel16 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel16.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test8689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8689");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.setRefreshPolicy("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy10 = deleteRequest6.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId18 = null;
        org.elasticsearch.tasks.Task task19 = deleteRequest14.createTask(0L, "", "", taskId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType22 = deleteRequest14.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest14.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest6.consistencyLevel(writeConsistencyLevel23);
        deleteRequest6.primaryTerm((long) '#');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str31 = deleteRequest30.id();
        org.elasticsearch.common.transport.TransportAddress transportAddress32 = deleteRequest30.remoteAddress();
        org.elasticsearch.index.VersionType versionType33 = deleteRequest30.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest6.versionType(versionType33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest6.id("delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str41 = deleteRequest40.id();
        java.lang.String str42 = deleteRequest40.index();
        org.elasticsearch.tasks.TaskId taskId43 = deleteRequest40.getParentTask();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException44 = deleteRequest40.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue47 = deleteRequest46.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress48 = null;
        deleteRequest46.remoteAddress(transportAddress48);
        org.elasticsearch.common.unit.TimeValue timeValue50 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest46.timeout(timeValue50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest40.timeout(timeValue50);
        java.lang.String str53 = deleteRequest40.toString();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy54 = deleteRequest40.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest36.setRefreshPolicy(refreshPolicy54);
        org.elasticsearch.common.unit.TimeValue timeValue56 = deleteRequest55.timeout();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + refreshPolicy10 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy10.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(task19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNull(transportAddress32);
        org.junit.Assert.assertNotNull(versionType33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(taskId43);
        org.junit.Assert.assertNull(actionRequestValidationException44);
        org.junit.Assert.assertNotNull(timeValue47);
        org.junit.Assert.assertNotNull(timeValue50);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "delete {[][][]}" + "'", str53, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + refreshPolicy54 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy54.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(timeValue56);
    }

    @Test
    public void test8690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8690");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][hi!]}", "delete {[hi!][null][null]}", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("delete {[null][null][null]}");
        java.lang.String str6 = deleteRequest3.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId14 = null;
        org.elasticsearch.tasks.Task task15 = deleteRequest10.createTask(0L, "", "", taskId14);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel16 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress21 = deleteRequest20.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId29 = null;
        org.elasticsearch.tasks.Task task30 = deleteRequest25.createTask(0L, "", "", taskId29);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy31 = deleteRequest25.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest20.setRefreshPolicy(refreshPolicy31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest10.setRefreshPolicy(refreshPolicy31);
        deleteRequest33.primaryTerm((long) 100);
        org.elasticsearch.common.unit.TimeValue timeValue36 = deleteRequest33.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest3.timeout(timeValue36);
        org.elasticsearch.index.shard.IndexShard indexShard38 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult39 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest37, indexShard38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[hi!][null][null]}" + "'", str6, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(task15);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel16 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel16.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(transportAddress21);
        org.junit.Assert.assertNotNull(task30);
        org.junit.Assert.assertTrue("'" + refreshPolicy31 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy31.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(timeValue36);
        org.junit.Assert.assertNotNull(deleteRequest37);
    }

    @Test
    public void test8691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8691");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest3.indicesOptions();
        java.lang.String str5 = deleteRequest3.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.index("delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.routing("delete {[delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}][delete {[delete {[][null][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}]}");
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
    }

    @Test
    public void test8692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8692");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.setShardId(shardId12);
        long long14 = deleteRequest10.version();
        org.elasticsearch.action.support.IndicesOptions indicesOptions15 = deleteRequest10.indicesOptions();
        org.elasticsearch.action.support.IndicesOptions indicesOptions16 = deleteRequest10.indicesOptions();
        long long17 = deleteRequest10.version();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-3L) + "'", long14 == (-3L));
        org.junit.Assert.assertNotNull(indicesOptions15);
        org.junit.Assert.assertNotNull(indicesOptions16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-3L) + "'", long17 == (-3L));
    }

    @Test
    public void test8693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8693");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        java.lang.String str4 = deleteRequest2.type();
        long long5 = deleteRequest2.primaryTerm();
        long long6 = deleteRequest2.version();
        java.lang.String str7 = deleteRequest2.type();
        java.lang.String str8 = deleteRequest2.getDescription();
        java.lang.String str9 = deleteRequest2.index();
        java.lang.String str10 = deleteRequest2.routing();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-3L) + "'", long6 == (-3L));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str8, "delete {[delete {[][][hi!]}][null][null]}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[][][hi!]}" + "'", str9, "delete {[][][hi!]}");
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test8694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8694");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("hi!");
        org.elasticsearch.tasks.TaskId taskId4 = deleteRequest0.getParentTask();
        java.lang.String str5 = deleteRequest0.toString();
        java.lang.String[] strArray6 = deleteRequest0.indices();
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest0.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.type("delete {[null][delete {[][delete {[hi!][null][null]}][hi!]}][delete {[][][hi!]}]}");
        java.lang.String[] strArray10 = deleteRequest9.indices();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "delete {[null][null][null]}" + "'", str1, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(taskId4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[null][null][null]}" + "'", str5, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(strArray10);
    }

    @Test
    public void test8695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8695");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[][null][null]}][][delete {[][][hi!]}]}][delete {[][null][null]}][delete {[null][null][delete {[][][hi!]}]}]}", "delete {[delete {[][delete {[][][]}][delete {[][][]}]}][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[null][null][null]}]}", "delete {[delete {[][null][null]}][][delete {[][][hi!]}]}");
    }

    @Test
    public void test8696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8696");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.id("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.version((long) 10);
        org.elasticsearch.common.transport.TransportAddress transportAddress10 = deleteRequest7.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str15 = deleteRequest14.id();
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.setShardId(shardId16);
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest14.setShardId(shardId18);
        java.lang.String str20 = deleteRequest14.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str22 = deleteRequest21.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.routing("delete {[][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress27 = deleteRequest26.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str32 = deleteRequest31.id();
        java.lang.String str33 = deleteRequest31.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str35 = deleteRequest34.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest34.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId38 = deleteRequest34.getParentTask();
        deleteRequest31.setParentTask(taskId38);
        deleteRequest26.setParentTask(taskId38);
        deleteRequest14.setParentTask(taskId38);
        org.elasticsearch.index.shard.ShardId shardId42 = deleteRequest14.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.index.VersionType versionType47 = deleteRequest46.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest14.versionType(versionType47);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel49 = deleteRequest14.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest7.consistencyLevel(writeConsistencyLevel49);
        java.lang.String str51 = deleteRequest50.getDescription();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNull(transportAddress10);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(transportAddress27);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(taskId38);
        org.junit.Assert.assertNull(shardId42);
        org.junit.Assert.assertNotNull(versionType47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel49 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel49.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "delete {[null][null][delete {[][][hi!]}]}" + "'", str51, "delete {[null][null][delete {[][][hi!]}]}");
    }

    @Test
    public void test8697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8697");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.type("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId12 = null;
        org.elasticsearch.tasks.Task task13 = deleteRequest8.createTask(0L, "", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest8.setRefreshPolicy("");
        java.lang.String str16 = deleteRequest15.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long19 = deleteRequest18.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str21 = deleteRequest20.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue24 = deleteRequest23.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest20.timeout(timeValue24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId28 = deleteRequest27.getParentTask();
        deleteRequest18.setParentTask(taskId28);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel30 = deleteRequest18.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest15.consistencyLevel(writeConsistencyLevel30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest2.consistencyLevel(writeConsistencyLevel30);
        deleteRequest32.primaryTerm((long) (-1));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest32.type("delete {[delete {[][null][null]}][][delete {[][][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}]}]}");
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[][][]}" + "'", str16, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(timeValue24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(taskId28);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel30 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel30.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest36);
    }

    @Test
    public void test8698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8698");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str17 = deleteRequest16.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException18 = deleteRequest16.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure20 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "hi!", (java.lang.Throwable) actionRequestValidationException18, "delete {[][][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure22 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "", (java.lang.Throwable) actionRequestValidationException18, "delete {[][][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure24 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[][delete {[][][]}][delete {[][][]}]}", (java.lang.Throwable) actionRequestValidationException18, "");
        java.lang.Throwable throwable25 = shardFailure24.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure27 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}", throwable25, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure29 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[][delete {[][][hi!]}][delete {[][][]}]}", throwable25, "delete {[][][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure31 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[hi!][null][null]}][delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}][delete {[null][delete {[][delete {[hi!][null][null]}][hi!]}][delete {[][][hi!]}]}]}", throwable25, "delete {[][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][delete {[][][]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure33 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[hi!][null][null]}][null][null]}", throwable25, "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure35 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][][delete {[delete {[][null][null]}][][]}]}", throwable25, "delete {[delete {[delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}][null][null]}][null][null]}");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[null][null][null]}" + "'", str17, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException18);
        org.junit.Assert.assertNotNull(throwable25);
        org.junit.Assert.assertEquals(throwable25.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable25.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable25.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test8699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8699");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest5.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest5.timeout(timeValue10);
        java.lang.String str12 = deleteRequest5.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException13 = deleteRequest5.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure15 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][null][null]}", (java.lang.Throwable) actionRequestValidationException13, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure17 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "hi!", (java.lang.Throwable) actionRequestValidationException13, "");
        java.lang.String str18 = shardFailure17.indexUUID;
        java.lang.String str19 = shardFailure17.indexUUID;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting20 = shardFailure17.routing;
        java.lang.Throwable throwable21 = shardFailure17.cause;
        java.lang.Throwable throwable22 = shardFailure17.cause;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting23 = shardFailure17.routing;
        java.lang.Throwable throwable24 = shardFailure17.cause;
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][null][null]}" + "'", str12, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException13);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNull(shardRouting20);
        org.junit.Assert.assertNotNull(throwable21);
        org.junit.Assert.assertEquals(throwable21.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable21.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable21.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable22.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertNull(shardRouting23);
        org.junit.Assert.assertNotNull(throwable24);
        org.junit.Assert.assertEquals(throwable24.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable24.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable24.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
    }

    @Test
    public void test8700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8700");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.setRefreshPolicy("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy10 = deleteRequest6.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId18 = null;
        org.elasticsearch.tasks.Task task19 = deleteRequest14.createTask(0L, "", "", taskId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType22 = deleteRequest14.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest14.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest6.consistencyLevel(writeConsistencyLevel23);
        long long25 = deleteRequest24.version();
        java.lang.String[] strArray26 = deleteRequest24.indices();
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest24.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest24.type("delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest24.setShardId(shardId30);
        java.lang.Class<?> wildcardClass32 = deleteRequest24.getClass();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + refreshPolicy10 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy10.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(task19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-3L) + "'", long25 == (-3L));
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(taskId27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test8701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8701");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId20 = null;
        org.elasticsearch.tasks.Task task21 = deleteRequest16.createTask(0L, "", "", taskId20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest16.setRefreshPolicy("");
        deleteRequest23.primaryTerm(1L);
        java.lang.String str26 = deleteRequest23.routing();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy27 = deleteRequest23.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest3.setRefreshPolicy(refreshPolicy27);
        java.lang.String[] strArray29 = deleteRequest3.indices();
        org.elasticsearch.index.VersionType versionType30 = deleteRequest3.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str35 = deleteRequest34.id();
        org.elasticsearch.common.unit.TimeValue timeValue36 = deleteRequest34.timeout();
        java.lang.String str37 = deleteRequest34.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str42 = deleteRequest41.getDescription();
        org.elasticsearch.index.VersionType versionType43 = deleteRequest41.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest34.versionType(versionType43);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel45 = deleteRequest34.consistencyLevel();
        java.lang.String str46 = deleteRequest34.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress54 = deleteRequest53.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId62 = null;
        org.elasticsearch.tasks.Task task63 = deleteRequest58.createTask(0L, "", "", taskId62);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy64 = deleteRequest58.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest53.setRefreshPolicy(refreshPolicy64);
        java.lang.String str66 = deleteRequest53.index();
        org.elasticsearch.index.shard.ShardId shardId67 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest53.setShardId(shardId67);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest68.version(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest74.type("delete {[][][]}");
        java.lang.String str77 = deleteRequest74.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = deleteRequest74.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str81 = deleteRequest80.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest83 = deleteRequest80.parent("hi!");
        org.elasticsearch.index.shard.ShardId shardId84 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest85 = deleteRequest83.setShardId(shardId84);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = deleteRequest83.routing("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.tasks.TaskId taskId88 = deleteRequest87.getParentTask();
        deleteRequest79.setParentTask(taskId88);
        deleteRequest70.setParentTask(taskId88);
        org.elasticsearch.tasks.Task task91 = deleteRequest34.createTask((long) 'a', "delete {[][delete {[null][null][null]}][]}", "delete {[][][delete {[][null][null]}]}", taskId88);
        deleteRequest3.setParentTask(taskId88);
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][][]}" + "'", str12, "delete {[][][]}");
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + refreshPolicy27 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy27.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(versionType30);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(timeValue36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "delete {[][][]}" + "'", str42, "delete {[][][]}");
        org.junit.Assert.assertNotNull(versionType43);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel45 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel45.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(transportAddress54);
        org.junit.Assert.assertNotNull(task63);
        org.junit.Assert.assertTrue("'" + refreshPolicy64 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy64.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "delete {[][][]}" + "'", str77, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest79);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "delete {[null][null][null]}" + "'", str81, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest83);
        org.junit.Assert.assertNotNull(deleteRequest85);
        org.junit.Assert.assertNotNull(deleteRequest87);
        org.junit.Assert.assertNotNull(taskId88);
        org.junit.Assert.assertNotNull(task91);
    }

    @Test
    public void test8702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8702");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.type("delete {[hi!][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest2.consistencyLevel();
        org.elasticsearch.index.shard.ShardId shardId6 = deleteRequest2.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId14 = null;
        org.elasticsearch.tasks.Task task15 = deleteRequest10.createTask(0L, "", "", taskId14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest10.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel18 = deleteRequest17.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions19 = deleteRequest17.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId20 = null;
        deleteRequest17.setParentTask(taskId20);
        deleteRequest17.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest17.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        java.lang.String str26 = deleteRequest25.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest25.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str33 = deleteRequest32.id();
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest32.setShardId(shardId34);
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest32.setShardId(shardId36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest32.setRefreshPolicy("");
        org.elasticsearch.common.transport.TransportAddress transportAddress40 = null;
        deleteRequest39.remoteAddress(transportAddress40);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel42 = deleteRequest39.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest25.consistencyLevel(writeConsistencyLevel42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest2.consistencyLevel(writeConsistencyLevel42);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest2.setRefreshPolicy("delete {[delete {[][null][delete {[][delete {[][][hi!]}][delete {[][][]}]}]}][null][null]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[delete {[][null][delete {[][delete {[][][hi!]}][delete {[][][]}]}]}][null][null]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(shardId6);
        org.junit.Assert.assertNotNull(task15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel18 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel18.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions19);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel42 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel42.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest44);
    }

    @Test
    public void test8703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8703");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId14 = null;
        org.elasticsearch.tasks.Task task15 = deleteRequest10.createTask(0L, "", "", taskId14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest10.setRefreshPolicy("");
        java.lang.String str18 = deleteRequest17.toString();
        java.lang.String[] strArray19 = deleteRequest17.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest17.index("");
        org.elasticsearch.common.unit.TimeValue timeValue22 = deleteRequest21.timeout();
        org.elasticsearch.index.VersionType versionType23 = deleteRequest21.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest3.versionType(versionType23);
        org.elasticsearch.action.support.IndicesOptions indicesOptions25 = deleteRequest24.indicesOptions();
        java.lang.String str26 = deleteRequest24.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str31 = deleteRequest30.id();
        java.lang.String str32 = deleteRequest30.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest30.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long37 = deleteRequest36.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue38 = deleteRequest36.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest34.timeout(timeValue38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest24.timeout(timeValue38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest40.parent("delete {[null][delete {[][][null]}][null]}");
        java.lang.String str43 = deleteRequest40.type();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(task15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[][][]}" + "'", str18, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(timeValue22);
        org.junit.Assert.assertNotNull(versionType23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(indicesOptions25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertNotNull(timeValue38);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "delete {[][][]}" + "'", str43, "delete {[][][]}");
    }

    @Test
    public void test8704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8704");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[hi!][null][null]}][null][null]}][null][delete {[delete {[][][hi!]}][null][null]}]}", "delete {[hi!][][delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}]}", "delete {[][delete {[hi!][null][null]}][delete {[][][]}]}");
    }

    @Test
    public void test8705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8705");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = deleteRequest5.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        deleteRequest8.primaryTerm((long) 'a');
        java.lang.String str11 = deleteRequest8.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest8.type("delete {[delete {[delete {[][][hi!]}][null][null]}][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest13.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest5.consistencyLevel(writeConsistencyLevel14);
        deleteRequest15.primaryTerm(35L);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(transportAddress6);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest15);
    }

    @Test
    public void test8706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8706");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        deleteRequest5.setParentTask("hi!", 1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.type("delete {[][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId18 = null;
        org.elasticsearch.tasks.Task task19 = deleteRequest14.createTask(0L, "", "", taskId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.setRefreshPolicy("");
        deleteRequest21.primaryTerm(1L);
        boolean boolean24 = deleteRequest21.getShouldPersistResult();
        java.lang.String str25 = deleteRequest21.id();
        org.elasticsearch.index.VersionType versionType26 = deleteRequest21.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest5.versionType(versionType26);
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest5.setShardId(shardId28);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.timeout("delete {[][null][delete {[][delete {[][][hi!]}][delete {[][][]}]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[][null][delete {[][delete {[][][hi!]}][delete {[][][]}]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(task19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
    }

    @Test
    public void test8707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8707");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue2 = deleteRequest1.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress3 = null;
        deleteRequest1.remoteAddress(transportAddress3);
        org.elasticsearch.common.unit.TimeValue timeValue5 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest1.timeout(timeValue5);
        java.lang.String str7 = deleteRequest1.type();
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest1.setShardId(shardId8);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy10 = deleteRequest1.getRefreshPolicy();
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest1.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest1.id("delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}");
        long long14 = deleteRequest13.version();
        org.elasticsearch.tasks.TaskId taskId15 = deleteRequest13.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest13.index("delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}");
        org.elasticsearch.common.unit.TimeValue timeValue18 = deleteRequest17.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest17.type("delete {[delete {[][null][null]}][][]}");
        org.junit.Assert.assertNotNull(timeValue2);
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + refreshPolicy10 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy10.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-3L) + "'", long14 == (-3L));
        org.junit.Assert.assertNotNull(taskId15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(timeValue18);
        org.junit.Assert.assertNotNull(deleteRequest20);
    }

    @Test
    public void test8708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8708");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        java.lang.String str9 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str17 = deleteRequest16.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long23 = deleteRequest22.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str25 = deleteRequest24.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue28 = deleteRequest27.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest24.timeout(timeValue28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId32 = deleteRequest31.getParentTask();
        deleteRequest22.setParentTask(taskId32);
        org.elasticsearch.tasks.Task task34 = deleteRequest16.createTask((long) ' ', "delete {[][][hi!]}", "delete {[][][]}", taskId32);
        org.elasticsearch.tasks.Task task35 = deleteRequest3.createTask((long) (byte) 1, "delete {[][][]}", "delete {[delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}][null][null]}", taskId32);
        org.elasticsearch.index.shard.ShardId shardId36 = deleteRequest3.shardId();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[][][]}" + "'", str17, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(timeValue28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(taskId32);
        org.junit.Assert.assertNotNull(task34);
        org.junit.Assert.assertNotNull(task35);
        org.junit.Assert.assertNull(shardId36);
    }

    @Test
    public void test8709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8709");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException2 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest4.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue9 = deleteRequest8.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest4.timeout(timeValue9);
        java.lang.String str11 = deleteRequest4.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str19 = deleteRequest18.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.type("delete {[][][]}");
        java.lang.String str26 = deleteRequest23.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest23.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId36 = null;
        org.elasticsearch.tasks.Task task37 = deleteRequest32.createTask(0L, "", "", taskId36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest32.setRefreshPolicy("");
        java.lang.String str40 = deleteRequest39.toString();
        java.lang.String[] strArray41 = deleteRequest39.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest39.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str52 = deleteRequest51.id();
        java.lang.String str53 = deleteRequest51.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str55 = deleteRequest54.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest54.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId58 = deleteRequest54.getParentTask();
        deleteRequest51.setParentTask(taskId58);
        deleteRequest47.setParentTask(taskId58);
        deleteRequest43.setParentTask(taskId58);
        deleteRequest28.setParentTask(taskId58);
        deleteRequest18.setParentTask(taskId58);
        org.elasticsearch.tasks.Task task64 = deleteRequest4.createTask((long) 100, "delete {[][][hi!]}", "hi!", taskId58);
        deleteRequest0.setParentTask(taskId58);
        org.elasticsearch.index.shard.ShardId shardId66 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest0.setShardId(shardId66);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest0.type("delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest0.type("delete {[delete {[][delete {[delete {[][][hi!]}][null][null]}][]}][null][null]}");
        java.lang.String str72 = deleteRequest71.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest71.routing("delete {[delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}][delete {[hi!][null][null]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest71.parent("delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue77 = deleteRequest71.timeout();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "delete {[null][null][null]}" + "'", str1, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException2);
        org.junit.Assert.assertNotNull(timeValue9);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "delete {[][][]}" + "'", str26, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(task37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "delete {[][][]}" + "'", str40, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(taskId58);
        org.junit.Assert.assertNotNull(task64);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "delete {[null][delete {[delete {[][delete {[delete {[][][hi!]}][null][null]}][]}][null][null]}][null]}" + "'", str72, "delete {[null][delete {[delete {[][delete {[delete {[][][hi!]}][null][null]}][]}][null][null]}][null]}");
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertNotNull(timeValue77);
    }

    @Test
    public void test8710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8710");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException2 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest4.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue9 = deleteRequest8.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest4.timeout(timeValue9);
        java.lang.String str11 = deleteRequest4.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str19 = deleteRequest18.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.type("delete {[][][]}");
        java.lang.String str26 = deleteRequest23.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest23.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId36 = null;
        org.elasticsearch.tasks.Task task37 = deleteRequest32.createTask(0L, "", "", taskId36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest32.setRefreshPolicy("");
        java.lang.String str40 = deleteRequest39.toString();
        java.lang.String[] strArray41 = deleteRequest39.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest39.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str52 = deleteRequest51.id();
        java.lang.String str53 = deleteRequest51.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str55 = deleteRequest54.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest54.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId58 = deleteRequest54.getParentTask();
        deleteRequest51.setParentTask(taskId58);
        deleteRequest47.setParentTask(taskId58);
        deleteRequest43.setParentTask(taskId58);
        deleteRequest28.setParentTask(taskId58);
        deleteRequest18.setParentTask(taskId58);
        org.elasticsearch.tasks.Task task64 = deleteRequest4.createTask((long) 100, "delete {[][][hi!]}", "hi!", taskId58);
        deleteRequest0.setParentTask(taskId58);
        org.elasticsearch.index.shard.ShardId shardId66 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest0.setShardId(shardId66);
        org.elasticsearch.common.unit.TimeValue timeValue68 = deleteRequest67.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str73 = deleteRequest72.id();
        org.elasticsearch.index.shard.ShardId shardId74 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest72.setShardId(shardId74);
        org.elasticsearch.action.support.IndicesOptions indicesOptions76 = deleteRequest75.indicesOptions();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy77 = deleteRequest75.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = deleteRequest67.setRefreshPolicy(refreshPolicy77);
        org.elasticsearch.common.transport.TransportAddress transportAddress79 = null;
        deleteRequest78.remoteAddress(transportAddress79);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "delete {[null][null][null]}" + "'", str1, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException2);
        org.junit.Assert.assertNotNull(timeValue9);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "delete {[][][]}" + "'", str26, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(task37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "delete {[][][]}" + "'", str40, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(taskId58);
        org.junit.Assert.assertNotNull(task64);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNotNull(timeValue68);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertNotNull(deleteRequest75);
        org.junit.Assert.assertNotNull(indicesOptions76);
        org.junit.Assert.assertTrue("'" + refreshPolicy77 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy77.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest78);
    }

    @Test
    public void test8711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8711");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.type("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId12 = null;
        org.elasticsearch.tasks.Task task13 = deleteRequest8.createTask(0L, "", "", taskId12);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = deleteRequest8.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId22 = null;
        org.elasticsearch.tasks.Task task23 = deleteRequest18.createTask(0L, "", "", taskId22);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy24 = deleteRequest18.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest8.setRefreshPolicy(refreshPolicy24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest4.setRefreshPolicy(refreshPolicy24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest4.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        deleteRequest4.primaryTerm((long) ' ');
        org.elasticsearch.common.unit.TimeValue timeValue31 = deleteRequest4.timeout();
        java.lang.String str32 = deleteRequest4.parent();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertTrue("'" + refreshPolicy14 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy14.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertTrue("'" + refreshPolicy24 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy24.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(timeValue31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[][delete {[][][]}][delete {[][][]}]}" + "'", str32, "delete {[][delete {[][][]}][delete {[][][]}]}");
    }

    @Test
    public void test8712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8712");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][delete {[][][]}][delete {[][][]}]}][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}]}", "delete {[][delete {[delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}][delete {[hi!][null][null]}][hi!]}][]}", "delete {[][][hi!]}");
    }

    @Test
    public void test8713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8713");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException8 = deleteRequest7.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions24 = deleteRequest22.indicesOptions();
        java.lang.String str25 = deleteRequest22.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str27 = deleteRequest26.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest26.version((long) (short) 100);
        deleteRequest26.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str33 = deleteRequest32.parent();
        org.elasticsearch.index.VersionType versionType34 = deleteRequest32.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest26.versionType(versionType34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest22.versionType(versionType34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest10.versionType(versionType34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest7.versionType(versionType34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.type("delete {[hi!][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel41 = deleteRequest38.consistencyLevel();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(actionRequestValidationException8);
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[][][]}" + "'", str25, "delete {[][][]}");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(versionType34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel41 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel41.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test8714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8714");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        deleteRequest0.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.type("delete {[null][null][null]}");
        java.lang.String str8 = deleteRequest5.parent();
        boolean boolean9 = deleteRequest5.getShouldPersistResult();
        java.lang.String str10 = deleteRequest5.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId18 = null;
        org.elasticsearch.tasks.Task task19 = deleteRequest14.createTask(0L, "", "", taskId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.setRefreshPolicy("");
        java.lang.String str22 = deleteRequest21.toString();
        java.lang.String[] strArray23 = deleteRequest21.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest21.index("");
        org.elasticsearch.common.unit.TimeValue timeValue26 = deleteRequest25.timeout();
        org.elasticsearch.index.VersionType versionType27 = deleteRequest25.versionType();
        java.lang.String str28 = deleteRequest25.type();
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest25.getParentTask();
        deleteRequest5.setParentTask(taskId29);
        org.elasticsearch.action.support.IndicesOptions indicesOptions31 = deleteRequest5.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest5.index("delete {[delete {[null][delete {[null][null][null]}][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[hi!][null][null]}]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest5.setRefreshPolicy("delete {[][delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[][][]}]}][delete {[null][null][null]}]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[][delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[][][]}]}][delete {[null][null][null]}]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(task19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[][][]}" + "'", str22, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(timeValue26);
        org.junit.Assert.assertNotNull(versionType27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(indicesOptions31);
        org.junit.Assert.assertNotNull(deleteRequest33);
    }

    @Test
    public void test8715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8715");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = deleteRequest0.remoteAddress();
        java.lang.String str7 = deleteRequest0.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException8 = deleteRequest0.validate();
        java.lang.String str9 = deleteRequest0.type();
        java.lang.String[] strArray10 = deleteRequest0.indices();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(transportAddress6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[null][null][null]}" + "'", str7, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strArray10);
    }

    @Test
    public void test8716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8716");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest5.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest5.timeout(timeValue10);
        java.lang.String str12 = deleteRequest5.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException13 = deleteRequest5.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure15 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][null][null]}", (java.lang.Throwable) actionRequestValidationException13, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure17 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "hi!", (java.lang.Throwable) actionRequestValidationException13, "");
        java.lang.String str18 = shardFailure17.indexUUID;
        java.lang.String str19 = shardFailure17.reason;
        java.lang.Throwable throwable20 = shardFailure17.cause;
        java.lang.String str21 = shardFailure17.reason;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting22 = shardFailure17.routing;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting23 = shardFailure17.routing;
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][null][null]}" + "'", str12, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException13);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(throwable20);
        org.junit.Assert.assertEquals(throwable20.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable20.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable20.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNull(shardRouting22);
        org.junit.Assert.assertNull(shardRouting23);
    }

    @Test
    public void test8717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8717");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.parent("delete {[][][]}");
        org.elasticsearch.index.VersionType versionType12 = deleteRequest11.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest8.versionType(versionType12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.parent("delete {[hi!][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue16 = deleteRequest13.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest13.type("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions19 = deleteRequest13.indicesOptions();
        deleteRequest13.primaryTerm((long) (short) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest13.type("delete {[][delete {[][][]}][delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}]}");
        org.elasticsearch.index.shard.ShardId shardId24 = deleteRequest13.shardId();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(indicesOptions19);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(shardId24);
    }

    @Test
    public void test8718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8718");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        java.lang.String str4 = deleteRequest2.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest2.version((long) (short) 100);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel7 = deleteRequest6.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId15 = null;
        org.elasticsearch.tasks.Task task16 = deleteRequest11.createTask(0L, "", "", taskId15);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy17 = deleteRequest11.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest6.setRefreshPolicy(refreshPolicy17);
        org.elasticsearch.common.transport.TransportAddress transportAddress19 = null;
        deleteRequest6.remoteAddress(transportAddress19);
        org.elasticsearch.common.io.stream.StreamInput streamInput21 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest6.readFrom(streamInput21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel7 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel7.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(task16);
        org.junit.Assert.assertTrue("'" + refreshPolicy17 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy17.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest18);
    }

    @Test
    public void test8719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8719");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.parent("delete {[][][]}");
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest10.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.setRefreshPolicy("");
        java.lang.String str14 = deleteRequest13.id();
        java.lang.String str15 = deleteRequest13.toString();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[][][]}" + "'", str14, "delete {[][][]}");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[][delete {[][][]}][delete {[][][]}]}" + "'", str15, "delete {[][delete {[][][]}][delete {[][][]}]}");
    }

    @Test
    public void test8720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8720");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "delete {[][][hi!]}", "delete {[][][]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException4 = deleteRequest3.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.routing("delete {[delete {[][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][][]}]}][delete {[][][hi!]}][delete {[][][]}]}");
        org.junit.Assert.assertNull(actionRequestValidationException4);
        org.junit.Assert.assertNotNull(deleteRequest6);
    }

    @Test
    public void test8721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8721");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        deleteRequest0.setParentTask("delete {[][][hi!]}", (long) '#');
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest0.validate();
        long long6 = deleteRequest0.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest0.routing("delete {[delete {[][][]}][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest0.setShardId(shardId9);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest0.index("delete {[][delete {[][][]}][delete {[delete {[hi!][null][null]}][null][delete {[][][hi!]}]}]}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
    }

    @Test
    public void test8722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8722");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress2 = deleteRequest0.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId3 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.setShardId(shardId3);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId12 = null;
        org.elasticsearch.tasks.Task task13 = deleteRequest8.createTask(0L, "", "", taskId12);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = deleteRequest8.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest0.setRefreshPolicy(refreshPolicy14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest0.routing("delete {[][null][null]}");
        java.lang.String[] strArray18 = deleteRequest17.indices();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(transportAddress2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertTrue("'" + refreshPolicy14 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy14.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(strArray18);
    }

    @Test
    public void test8723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8723");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str10 = deleteRequest9.id();
        java.lang.String str11 = deleteRequest9.index();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest9.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest0.createTask((-1L), "delete {[][][hi!]}", "delete {[][delete {[][][]}][delete {[][][]}]}", taskId12);
        deleteRequest0.setParentTask("delete {[delete {[][][hi!]}][null][null]}", (long) 10);
        java.lang.String str17 = deleteRequest0.getDescription();
        java.lang.String str18 = deleteRequest0.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest0.routing("delete {[null][delete {[null][null][delete {[][][hi!]}]}][]}");
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[null][null][null]}" + "'", str17, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(deleteRequest20);
    }

    @Test
    public void test8724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8724");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel9 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = deleteRequest13.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId22 = null;
        org.elasticsearch.tasks.Task task23 = deleteRequest18.createTask(0L, "", "", taskId22);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy24 = deleteRequest18.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest13.setRefreshPolicy(refreshPolicy24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest3.setRefreshPolicy(refreshPolicy24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.parent("delete {[delete {[][null][null]}][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue29 = deleteRequest28.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress30 = deleteRequest28.remoteAddress();
        org.elasticsearch.common.transport.TransportAddress transportAddress31 = deleteRequest28.remoteAddress();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel9 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel9.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(transportAddress14);
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertTrue("'" + refreshPolicy24 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy24.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(timeValue29);
        org.junit.Assert.assertNull(transportAddress30);
        org.junit.Assert.assertNull(transportAddress31);
    }

    @Test
    public void test8725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8725");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest7.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.version((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.id("delete {[delete {[][][hi!]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.index("delete {[delete {[hi!][null][null]}][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest14.setShardId(shardId17);
        java.lang.String str19 = deleteRequest14.type();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(taskId8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test8726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8726");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest7.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue12 = deleteRequest11.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest7.timeout(timeValue12);
        java.lang.String str14 = deleteRequest7.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException15 = deleteRequest7.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure17 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[][null][null]}", (java.lang.Throwable) actionRequestValidationException15, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure19 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "hi!", (java.lang.Throwable) actionRequestValidationException15, "");
        java.lang.String str20 = shardFailure19.indexUUID;
        java.lang.String str21 = shardFailure19.indexUUID;
        java.lang.Throwable throwable22 = shardFailure19.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure24 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][delete {[delete {[][delete {[delete {[][][hi!]}][null][null]}][]}][null][null]}][null]}", throwable22, "delete {[][delete {[delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[delete {[][][hi!]}][null][delete {[][][]}]}][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}]}][]}");
        org.junit.Assert.assertNotNull(timeValue12);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[][null][null]}" + "'", str14, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException15);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable22.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
    }

    @Test
    public void test8727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8727");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "delete {[delete {[][null][null]}][][]}", "delete {[null][delete {[null][null][null]}][null]}");
        java.lang.String str4 = deleteRequest3.parent();
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test8728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8728");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId20 = null;
        org.elasticsearch.tasks.Task task21 = deleteRequest16.createTask(0L, "", "", taskId20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest16.setRefreshPolicy("");
        deleteRequest23.primaryTerm(1L);
        java.lang.String str26 = deleteRequest23.routing();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy27 = deleteRequest23.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest3.setRefreshPolicy(refreshPolicy27);
        org.elasticsearch.index.shard.ShardId shardId29 = deleteRequest28.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest28.id("delete {[hi!][][delete {[][][]}]}");
        java.lang.String str32 = deleteRequest31.toString();
        java.lang.String str33 = deleteRequest31.toString();
        long long34 = deleteRequest31.primaryTerm();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][][]}" + "'", str12, "delete {[][][]}");
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + refreshPolicy27 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy27.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNull(shardId29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[][][delete {[hi!][][delete {[][][]}]}]}" + "'", str32, "delete {[][][delete {[hi!][][delete {[][][]}]}]}");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "delete {[][][delete {[hi!][][delete {[][][]}]}]}" + "'", str33, "delete {[][][delete {[hi!][][delete {[][][]}]}]}");
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
    }

    @Test
    public void test8729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8729");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.type();
        deleteRequest3.setParentTask("delete {[][][hi!]}", (long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.routing("delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.index("delete {[delete {[delete {[][null][null]}][][delete {[][][hi!]}]}][delete {[][null][null]}][delete {[null][null][delete {[][][hi!]}]}]}");
        java.lang.String str12 = deleteRequest9.id();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException13 = deleteRequest9.validate();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(actionRequestValidationException13);
    }

    @Test
    public void test8730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8730");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str7 = deleteRequest6.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest6.getParentTask();
        deleteRequest3.setParentTask(taskId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.consistencyLevel(writeConsistencyLevel14);
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest15.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.index.VersionType versionType21 = deleteRequest20.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str27 = deleteRequest26.getDescription();
        java.lang.String str28 = deleteRequest26.routing();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest15.consistencyLevel(writeConsistencyLevel29);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException31 = deleteRequest15.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest15.version(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str41 = deleteRequest40.id();
        java.lang.String str42 = deleteRequest40.index();
        org.elasticsearch.tasks.TaskId taskId43 = deleteRequest40.getParentTask();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException44 = deleteRequest40.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue47 = deleteRequest46.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress48 = null;
        deleteRequest46.remoteAddress(transportAddress48);
        org.elasticsearch.common.unit.TimeValue timeValue50 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest46.timeout(timeValue50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest40.timeout(timeValue50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest40.version((long) ' ');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest54.parent("hi!");
        org.elasticsearch.tasks.TaskId taskId57 = deleteRequest56.getParentTask();
        org.elasticsearch.tasks.Task task58 = deleteRequest33.createTask((long) (short) -1, "delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}", "delete {[][delete {[delete {[][][hi!]}][null][null]}][]}", taskId57);
        org.elasticsearch.action.support.IndicesOptions indicesOptions59 = deleteRequest33.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str64 = deleteRequest63.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest63.version((long) (short) 100);
        java.lang.String str67 = deleteRequest63.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue70 = deleteRequest69.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress71 = null;
        deleteRequest69.remoteAddress(transportAddress71);
        java.lang.String str73 = deleteRequest69.index();
        org.elasticsearch.index.VersionType versionType74 = deleteRequest69.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest63.versionType(versionType74);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest75.version((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest86 = deleteRequest84.type("delete {[][][]}");
        java.lang.String str87 = deleteRequest84.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest89 = deleteRequest84.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest91 = deleteRequest89.parent("delete {[][][]}");
        java.lang.String str92 = deleteRequest89.type();
        org.elasticsearch.tasks.TaskId taskId93 = deleteRequest89.getParentTask();
        org.elasticsearch.tasks.Task task94 = deleteRequest75.createTask((long) '#', "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}", "delete {[][][null]}", taskId93);
        org.elasticsearch.tasks.Task task95 = deleteRequest33.createTask(0L, "delete {[delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][delete {[hi!][null][null]}][hi!]}]}", "delete {[][][delete {[hi!][null][null]}]}", taskId93);
        java.lang.String str96 = deleteRequest33.routing();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel97 = deleteRequest33.consistencyLevel();
        org.elasticsearch.index.shard.IndexShard indexShard98 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult99 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest33, indexShard98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertNotNull(versionType21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][][]}" + "'", str27, "delete {[][][]}");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel29 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel29.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNull(actionRequestValidationException31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(taskId43);
        org.junit.Assert.assertNull(actionRequestValidationException44);
        org.junit.Assert.assertNotNull(timeValue47);
        org.junit.Assert.assertNotNull(timeValue50);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(taskId57);
        org.junit.Assert.assertNotNull(task58);
        org.junit.Assert.assertNotNull(indicesOptions59);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(timeValue70);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "delete {[null][null][null]}" + "'", str73, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(versionType74);
        org.junit.Assert.assertNotNull(deleteRequest75);
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertNotNull(deleteRequest86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "delete {[][][]}" + "'", str87, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest89);
        org.junit.Assert.assertNotNull(deleteRequest91);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "delete {[][][]}" + "'", str92, "delete {[][][]}");
        org.junit.Assert.assertNotNull(taskId93);
        org.junit.Assert.assertNotNull(task94);
        org.junit.Assert.assertNotNull(task95);
        org.junit.Assert.assertNull(str96);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel97 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel97.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test8731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8731");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.routing("delete {[null][null][delete {[null][null][null]}]}");
        java.lang.String str8 = deleteRequest3.toString();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[][delete {[][][hi!]}][delete {[][][]}]}" + "'", str8, "delete {[][delete {[][][hi!]}][delete {[][][]}]}");
    }

    @Test
    public void test8732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8732");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        java.lang.String str4 = deleteRequest2.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest2.parent("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest2.parent("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.routing("delete {[][][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.setShardId(shardId11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}", "delete {[delete {[hi!][null][null]}][null][null]}", "delete {[null][null][null]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy17 = deleteRequest16.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest10.setRefreshPolicy(refreshPolicy17);
        java.lang.String str19 = deleteRequest10.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId27 = null;
        org.elasticsearch.tasks.Task task28 = deleteRequest23.createTask(0L, "", "", taskId27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest23.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType31 = deleteRequest23.versionType();
        java.lang.String str32 = deleteRequest23.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress33 = deleteRequest23.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy34 = deleteRequest23.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str36 = deleteRequest35.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest35.version((long) (short) 100);
        java.lang.String str39 = deleteRequest35.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue42 = deleteRequest41.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress43 = null;
        deleteRequest41.remoteAddress(transportAddress43);
        java.lang.String str45 = deleteRequest41.index();
        org.elasticsearch.index.VersionType versionType46 = deleteRequest41.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest35.versionType(versionType46);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest23.versionType(versionType46);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest10.versionType(versionType46);
        org.elasticsearch.common.transport.TransportAddress transportAddress50 = null;
        deleteRequest10.remoteAddress(transportAddress50);
        java.lang.String str52 = deleteRequest10.routing();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str4, "delete {[delete {[][][hi!]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + refreshPolicy17 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy17.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str19, "delete {[delete {[][][hi!]}][null][null]}");
        org.junit.Assert.assertNotNull(task28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(versionType31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(transportAddress33);
        org.junit.Assert.assertTrue("'" + refreshPolicy34 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy34.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(timeValue42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "delete {[null][null][null]}" + "'", str45, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(versionType46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "delete {[][][hi!]}" + "'", str52, "delete {[][][hi!]}");
    }

    @Test
    public void test8733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8733");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.setRefreshPolicy("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy10 = deleteRequest6.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId18 = null;
        org.elasticsearch.tasks.Task task19 = deleteRequest14.createTask(0L, "", "", taskId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType22 = deleteRequest14.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest14.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest6.consistencyLevel(writeConsistencyLevel23);
        long long25 = deleteRequest6.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId33 = null;
        org.elasticsearch.tasks.Task task34 = deleteRequest29.createTask(0L, "", "", taskId33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest29.setRefreshPolicy("");
        java.lang.String str37 = deleteRequest36.toString();
        java.lang.String[] strArray38 = deleteRequest36.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest36.index("");
        org.elasticsearch.common.unit.TimeValue timeValue41 = deleteRequest40.timeout();
        org.elasticsearch.index.VersionType versionType42 = deleteRequest40.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest6.versionType(versionType42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest49.type("delete {[null][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress52 = deleteRequest51.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest51.setShardId(shardId53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest54.version((long) '4');
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy57 = deleteRequest54.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest47.setRefreshPolicy(refreshPolicy57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest6.setRefreshPolicy(refreshPolicy57);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest59.setRefreshPolicy("delete {[][delete {[][][hi!]}][delete {[][][]}]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[][delete {[][][hi!]}][delete {[][][]}]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + refreshPolicy10 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy10.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(task19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-3L) + "'", long25 == (-3L));
        org.junit.Assert.assertNotNull(task34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "delete {[][][]}" + "'", str37, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(timeValue41);
        org.junit.Assert.assertNotNull(versionType42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNull(transportAddress52);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertTrue("'" + refreshPolicy57 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy57.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest59);
    }

    @Test
    public void test8734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8734");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue2 = deleteRequest1.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress3 = null;
        deleteRequest1.remoteAddress(transportAddress3);
        org.elasticsearch.common.unit.TimeValue timeValue5 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest1.timeout(timeValue5);
        java.lang.String str7 = deleteRequest1.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest1.routing("delete {[][delete {[][][]}][delete {[][][]}]}");
        java.lang.String str10 = deleteRequest1.parent();
        long long11 = deleteRequest1.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.setRefreshPolicy("");
        java.lang.String[] strArray23 = deleteRequest22.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId31 = null;
        org.elasticsearch.tasks.Task task32 = deleteRequest27.createTask(0L, "", "", taskId31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest27.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel35 = deleteRequest34.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest22.consistencyLevel(writeConsistencyLevel35);
        deleteRequest36.setParentTask("hi!", (long) (short) 100);
        java.lang.String str40 = deleteRequest36.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest44.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType47 = deleteRequest46.versionType();
        java.lang.String str48 = deleteRequest46.index();
        org.elasticsearch.common.unit.TimeValue timeValue49 = deleteRequest46.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest36.timeout(timeValue49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest1.timeout(timeValue49);
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest1.setShardId(shardId52);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str58 = deleteRequest57.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest57.id("hi!");
        org.elasticsearch.tasks.TaskId taskId61 = deleteRequest60.getParentTask();
        org.elasticsearch.tasks.TaskId taskId62 = deleteRequest60.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest60.routing("delete {[delete {[hi!][null][null]}][null][null]}");
        java.lang.String str65 = deleteRequest64.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest64.id("delete {[delete {[][][hi!]}][null][null]}");
        org.elasticsearch.index.VersionType versionType68 = deleteRequest67.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest1.versionType(versionType68);
        org.junit.Assert.assertNotNull(timeValue2);
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-3L) + "'", long11 == (-3L));
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(task32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel35 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel35.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(versionType47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertNotNull(timeValue49);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(taskId61);
        org.junit.Assert.assertNotNull(taskId62);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!" + "'", str65, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNotNull(versionType68);
        org.junit.Assert.assertNotNull(deleteRequest69);
    }

    @Test
    public void test8735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8735");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str13 = deleteRequest12.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException14 = deleteRequest12.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure16 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "hi!", (java.lang.Throwable) actionRequestValidationException14, "delete {[][][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure18 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "", (java.lang.Throwable) actionRequestValidationException14, "delete {[][][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure20 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[][delete {[][][]}][delete {[][][]}]}", (java.lang.Throwable) actionRequestValidationException14, "");
        java.lang.Throwable throwable21 = shardFailure20.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure23 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "hi!", throwable21, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure25 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}", throwable21, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure27 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[hi!][hi!][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}]}", throwable21, "delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[][delete {[][null][null]}][delete {[][][]}]}]}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[null][null][null]}" + "'", str13, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException14);
        org.junit.Assert.assertNotNull(throwable21);
        org.junit.Assert.assertEquals(throwable21.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable21.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable21.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test8736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8736");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType6 = deleteRequest5.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = deleteRequest10.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy21 = deleteRequest15.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest10.setRefreshPolicy(refreshPolicy21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest5.setRefreshPolicy(refreshPolicy21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest5.id("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        boolean boolean26 = deleteRequest5.getShouldPersistResult();
        org.elasticsearch.index.VersionType versionType27 = deleteRequest5.versionType();
        java.lang.String[] strArray28 = deleteRequest5.indices();
        java.lang.String str29 = deleteRequest5.routing();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertNull(transportAddress11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertTrue("'" + refreshPolicy21 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy21.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(versionType27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNull(str29);
    }

    @Test
    public void test8737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8737");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest10.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId13 = null;
        deleteRequest10.setParentTask(taskId13);
        deleteRequest10.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest10.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        java.lang.String str19 = deleteRequest18.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest18.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest18.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest18.id("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy26 = deleteRequest18.getRefreshPolicy();
        org.elasticsearch.action.support.IndicesOptions indicesOptions27 = deleteRequest18.indicesOptions();
        org.elasticsearch.common.transport.TransportAddress transportAddress28 = deleteRequest18.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId29 = deleteRequest18.shardId();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions12);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertTrue("'" + refreshPolicy26 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy26.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(indicesOptions27);
        org.junit.Assert.assertNull(transportAddress28);
        org.junit.Assert.assertNull(shardId29);
    }

    @Test
    public void test8738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8738");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str7 = deleteRequest6.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest6.getParentTask();
        deleteRequest3.setParentTask(taskId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.consistencyLevel(writeConsistencyLevel14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.type("delete {[delete {[][][hi!]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest17.routing("delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest17.type("delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}");
        java.lang.String str24 = deleteRequest23.routing();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput25 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest23.writeTo(streamOutput25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}" + "'", str24, "delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}");
    }

    @Test
    public void test8739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8739");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version(10L);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy4 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.routing("delete {[null][delete {[null][null][delete {[][][hi!]}]}][]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setRefreshPolicy("delete {[][][delete {[][][hi!]}]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[][][delete {[][][hi!]}]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "delete {[null][null][null]}" + "'", str1, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertTrue("'" + refreshPolicy4 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy4.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest6);
    }

    @Test
    public void test8740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8740");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.common.unit.TimeValue timeValue5 = deleteRequest3.timeout();
        long long6 = deleteRequest3.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.index("");
        java.lang.String str9 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.parent("hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = null;
        deleteRequest3.remoteAddress(transportAddress12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest14.index("");
        java.lang.String str19 = deleteRequest14.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.index("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue24 = deleteRequest23.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress25 = null;
        deleteRequest23.remoteAddress(transportAddress25);
        java.lang.String str27 = deleteRequest23.index();
        org.elasticsearch.index.VersionType versionType28 = deleteRequest23.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest21.versionType(versionType28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest3.versionType(versionType28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.version((long) (byte) 100);
        org.elasticsearch.common.transport.TransportAddress transportAddress33 = deleteRequest30.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest30.type("delete {[][delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}][]}");
        java.lang.String str36 = deleteRequest35.type();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-3L) + "'", long6 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(timeValue24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[null][null][null]}" + "'", str27, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNull(transportAddress33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "delete {[][delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}][]}" + "'", str36, "delete {[][delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}][]}");
    }

    @Test
    public void test8741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8741");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.consistencyLevel(writeConsistencyLevel23);
        deleteRequest24.setParentTask("hi!", (long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest24.routing("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest24.id("delete {[delete {[hi!][null][null]}][delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}][delete {[][][]}]}");
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
    }

    @Test
    public void test8742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8742");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        org.elasticsearch.action.support.IndicesOptions indicesOptions9 = deleteRequest8.indicesOptions();
        org.elasticsearch.action.support.IndicesOptions indicesOptions10 = deleteRequest8.indicesOptions();
        java.lang.String str11 = deleteRequest8.routing();
        deleteRequest8.setParentTask("delete {[delete {[][][]}][null][null]}", 1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId22 = null;
        org.elasticsearch.tasks.Task task23 = deleteRequest18.createTask(0L, "", "", taskId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest18.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel26 = deleteRequest25.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions27 = deleteRequest25.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId28 = null;
        deleteRequest25.setParentTask(taskId28);
        deleteRequest25.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest25.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        java.lang.String str34 = deleteRequest33.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest33.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest33.setRefreshPolicy("");
        org.elasticsearch.common.unit.TimeValue timeValue39 = deleteRequest38.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest8.timeout(timeValue39);
        java.lang.String str41 = deleteRequest40.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest40.index("delete {[null][delete {[][delete {[hi!][null][null]}][hi!]}][delete {[][][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest40.type("delete {[null][null][delete {[][][hi!]}]}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(indicesOptions9);
        org.junit.Assert.assertNotNull(indicesOptions10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel26 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel26.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions27);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(timeValue39);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "delete {[][][]}" + "'", str41, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest45);
    }

    @Test
    public void test8743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8743");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest10.indicesOptions();
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = deleteRequest10.remoteAddress();
        java.lang.String str14 = deleteRequest10.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest10.id("delete {[][hi!][delete {[null][null][null]}]}");
        java.lang.String str17 = deleteRequest16.type();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions12);
        org.junit.Assert.assertNull(transportAddress13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test8744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8744");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long10 = deleteRequest9.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str12 = deleteRequest11.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest14.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest18.getParentTask();
        deleteRequest9.setParentTask(taskId19);
        org.elasticsearch.tasks.Task task21 = deleteRequest3.createTask((long) ' ', "delete {[][][hi!]}", "delete {[][][]}", taskId19);
        java.lang.String str22 = deleteRequest3.getDescription();
        org.elasticsearch.common.unit.TimeValue timeValue23 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest3.routing("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest3.timeout("delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][delete {[][hi!][]}][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][delete {[][hi!][]}][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][][]}" + "'", str4, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[][][]}" + "'", str22, "delete {[][][]}");
        org.junit.Assert.assertNotNull(timeValue23);
        org.junit.Assert.assertNotNull(deleteRequest25);
    }

    @Test
    public void test8745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8745");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("delete {[][][]}");
        deleteRequest7.setParentTask("delete {[delete {[][][hi!]}][null][null]}", (long) (short) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.id("");
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = null;
        deleteRequest12.remoteAddress(transportAddress13);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest12);
    }

    @Test
    public void test8746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8746");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version((long) (short) 100);
        java.lang.String str4 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("delete {[hi!][null][null]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest6.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.version(10L);
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.setShardId(shardId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest9.id("delete {[delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][null][null]}");
        java.lang.String[] strArray14 = deleteRequest13.indices();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(actionRequestValidationException7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test8747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8747");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str6 = deleteRequest5.type();
        deleteRequest5.setParentTask("delete {[][][hi!]}", (long) (short) 1);
        boolean boolean10 = deleteRequest5.getShouldPersistResult();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[][delete {[][][]}][delete {[][delete {[][][hi!]}][delete {[][][]}]}]}", deleteRequest5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test8748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8748");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][null][null]}", "delete {[hi!][null][null]}", "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.setShardId(shardId4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}");
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task12 = deleteRequest5.createTask((long) (-1), "", "delete {[delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][null][null]}", taskId11);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertNotNull(task12);
    }

    @Test
    public void test8749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8749");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest3.index();
        java.lang.String str12 = deleteRequest3.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest14.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue19 = deleteRequest18.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest14.timeout(timeValue19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.timeout(timeValue19);
        long long22 = deleteRequest21.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.type("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress25 = null;
        deleteRequest24.remoteAddress(transportAddress25);
        java.lang.String str27 = deleteRequest24.id();
        java.lang.String str28 = deleteRequest24.parent();
        org.elasticsearch.index.shard.ShardId shardId29 = deleteRequest24.shardId();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(shardId29);
    }

    @Test
    public void test8750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8750");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest10.indicesOptions();
        java.lang.String str13 = deleteRequest10.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str15 = deleteRequest14.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.version((long) (short) 100);
        deleteRequest14.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str21 = deleteRequest20.parent();
        org.elasticsearch.index.VersionType versionType22 = deleteRequest20.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest14.versionType(versionType22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.versionType(versionType22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.id("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        java.lang.String str27 = deleteRequest24.routing();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[][][]}" + "'", str13, "delete {[][][]}");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(str27);
    }

    @Test
    public void test8751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8751");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = deleteRequest3.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.setShardId(shardId6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType14 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest7.versionType(versionType14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.id("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest15.id("delete {[delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}][delete {[hi!][null][null]}][hi!]}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(transportAddress5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
    }

    @Test
    public void test8752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8752");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress2 = deleteRequest0.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId3 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.setShardId(shardId3);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId12 = null;
        org.elasticsearch.tasks.Task task13 = deleteRequest8.createTask(0L, "", "", taskId12);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = deleteRequest8.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest0.setRefreshPolicy(refreshPolicy14);
        java.lang.String str16 = deleteRequest0.getDescription();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException17 = deleteRequest0.validate();
        org.elasticsearch.common.transport.TransportAddress transportAddress18 = null;
        deleteRequest0.remoteAddress(transportAddress18);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(transportAddress2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertTrue("'" + refreshPolicy14 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy14.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[null][null][null]}" + "'", str16, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException17);
    }

    @Test
    public void test8753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8753");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest10.toString();
        java.lang.String[] strArray12 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.index("");
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest14.timeout();
        deleteRequest14.setParentTask("hi!", (long) (short) 100);
        org.elasticsearch.index.shard.IndexShard indexShard19 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete20 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest14, indexShard19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(timeValue15);
    }

    @Test
    public void test8754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8754");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException2 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest6.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest6.id("delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        java.lang.String str13 = deleteRequest6.index();
        long long14 = deleteRequest6.version();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel15 = deleteRequest6.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest0.consistencyLevel(writeConsistencyLevel15);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "delete {[null][null][null]}" + "'", str1, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException2);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-3L) + "'", long14 == (-3L));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel15 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel15.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest16);
    }

    @Test
    public void test8755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8755");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.type("delete {[null][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest1.setShardId(shardId4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.version((long) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest7.routing("delete {[delete {[][][]}][delete {[null][null][null]}][null]}");
        java.lang.Class<?> wildcardClass12 = deleteRequest7.getClass();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test8756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8756");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        java.lang.String str4 = deleteRequest2.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest2.parent("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest2.parent("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.routing("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.index("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str20 = deleteRequest19.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long26 = deleteRequest25.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str28 = deleteRequest27.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue31 = deleteRequest30.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest27.timeout(timeValue31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId35 = deleteRequest34.getParentTask();
        deleteRequest25.setParentTask(taskId35);
        org.elasticsearch.tasks.Task task37 = deleteRequest19.createTask((long) ' ', "delete {[][][hi!]}", "delete {[][][]}", taskId35);
        org.elasticsearch.tasks.Task task38 = deleteRequest10.createTask(0L, "delete {[][delete {[][][hi!]}][delete {[][][]}]}", "", taskId35);
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest10.setShardId(shardId39);
        org.elasticsearch.common.unit.TimeValue timeValue41 = deleteRequest10.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest10.routing("delete {[][delete {[delete {[][][hi!]}][null][null]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest10.version(97L);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str4, "delete {[delete {[][][hi!]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[][][]}" + "'", str20, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(timeValue31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(taskId35);
        org.junit.Assert.assertNotNull(task37);
        org.junit.Assert.assertNotNull(task38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(timeValue41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest45);
    }

    @Test
    public void test8757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8757");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.index("");
        java.lang.String str5 = deleteRequest0.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.index("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = null;
        deleteRequest9.remoteAddress(transportAddress11);
        java.lang.String str13 = deleteRequest9.index();
        org.elasticsearch.index.VersionType versionType14 = deleteRequest9.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest7.versionType(versionType14);
        deleteRequest15.setParentTask("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}", 100L);
        java.lang.String[] strArray19 = deleteRequest15.indices();
        java.lang.String str20 = deleteRequest15.routing();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[null][null][null]}" + "'", str13, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test8758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8758");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.consistencyLevel(writeConsistencyLevel23);
        deleteRequest24.setParentTask("hi!", (long) (short) 100);
        java.lang.String str28 = deleteRequest24.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest24.parent("delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}");
        org.elasticsearch.index.shard.ShardId shardId31 = deleteRequest24.shardId();
        org.elasticsearch.action.support.IndicesOptions indicesOptions32 = deleteRequest24.indicesOptions();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNull(shardId31);
        org.junit.Assert.assertNotNull(indicesOptions32);
    }

    @Test
    public void test8759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8759");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.setRefreshPolicy(refreshPolicy14);
        java.lang.String str16 = deleteRequest3.toString();
        java.lang.String str17 = deleteRequest3.id();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(transportAddress13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[][][]}" + "'", str16, "delete {[][][]}");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test8760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8760");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version((long) (short) 100);
        deleteRequest0.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.index("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException8 = deleteRequest0.validate();
        long long9 = deleteRequest0.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.parent("delete {[][hi!][delete {[][][]}]}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(actionRequestValidationException8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 100L + "'", long9 == 100L);
        org.junit.Assert.assertNotNull(deleteRequest11);
    }

    @Test
    public void test8761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8761");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.index("");
        java.lang.String str15 = deleteRequest14.routing();
        java.lang.String str16 = deleteRequest14.parent();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[][][]}" + "'", str16, "delete {[][][]}");
    }

    @Test
    public void test8762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8762");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.setRefreshPolicy("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy10 = deleteRequest6.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId18 = null;
        org.elasticsearch.tasks.Task task19 = deleteRequest14.createTask(0L, "", "", taskId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType22 = deleteRequest14.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest14.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest6.consistencyLevel(writeConsistencyLevel23);
        org.elasticsearch.index.shard.ShardId shardId25 = deleteRequest24.shardId();
        org.elasticsearch.index.shard.ShardId shardId26 = deleteRequest24.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue27 = deleteRequest24.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest24.routing("delete {[][][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.version(97L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + refreshPolicy10 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy10.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(task19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNull(shardId25);
        org.junit.Assert.assertNull(shardId26);
        org.junit.Assert.assertNotNull(timeValue27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
    }

    @Test
    public void test8763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8763");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = deleteRequest3.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.setShardId(shardId6);
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.setShardId(shardId8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.id("delete {[delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = deleteRequest11.remoteAddress();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass13 = transportAddress12.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(transportAddress5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(transportAddress12);
    }

    @Test
    public void test8764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8764");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest10.indicesOptions();
        java.lang.String str13 = deleteRequest10.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str15 = deleteRequest14.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.version((long) (short) 100);
        deleteRequest14.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str21 = deleteRequest20.parent();
        org.elasticsearch.index.VersionType versionType22 = deleteRequest20.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest14.versionType(versionType22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.versionType(versionType22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.id("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        java.lang.String str27 = deleteRequest24.parent();
        long long28 = deleteRequest24.primaryTerm();
        java.lang.String str29 = deleteRequest24.id();
        deleteRequest24.setParentTask("delete {[delete {[][][]}][delete {[][delete {[][][]}][delete {[][][]}]}][delete {[delete {[][null][null]}][][]}]}", (long) (short) 10);
        org.elasticsearch.index.VersionType versionType33 = deleteRequest24.versionType();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[][][]}" + "'", str13, "delete {[][][]}");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}" + "'", str29, "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.junit.Assert.assertNotNull(versionType33);
    }

    @Test
    public void test8765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8765");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException8 = deleteRequest7.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions24 = deleteRequest22.indicesOptions();
        java.lang.String str25 = deleteRequest22.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str27 = deleteRequest26.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest26.version((long) (short) 100);
        deleteRequest26.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str33 = deleteRequest32.parent();
        org.elasticsearch.index.VersionType versionType34 = deleteRequest32.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest26.versionType(versionType34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest22.versionType(versionType34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest10.versionType(versionType34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest7.versionType(versionType34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.type("delete {[hi!][null][null]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy41 = deleteRequest40.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId49 = null;
        org.elasticsearch.tasks.Task task50 = deleteRequest45.createTask(0L, "", "", taskId49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest45.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel53 = deleteRequest52.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions54 = deleteRequest52.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId55 = null;
        deleteRequest52.setParentTask(taskId55);
        deleteRequest52.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest52.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.index.VersionType versionType61 = deleteRequest60.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest40.versionType(versionType61);
        deleteRequest40.primaryTerm((long) '4');
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(actionRequestValidationException8);
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[][][]}" + "'", str25, "delete {[][][]}");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(versionType34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertTrue("'" + refreshPolicy41 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy41.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task50);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel53 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel53.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions54);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(versionType61);
        org.junit.Assert.assertNotNull(deleteRequest62);
    }

    @Test
    public void test8766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8766");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][]}", "delete {[null][null][null]}", "delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][hi!]}");
        java.lang.String str6 = deleteRequest3.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel7 = deleteRequest3.consistencyLevel();
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.setShardId(shardId8);
        org.elasticsearch.common.transport.TransportAddress transportAddress10 = deleteRequest9.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.routing("delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}");
        java.lang.String str13 = deleteRequest9.id();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}" + "'", str6, "delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel7 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel7.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNull(transportAddress10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[null][null][null]}" + "'", str13, "delete {[null][null][null]}");
    }

    @Test
    public void test8767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8767");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.consistencyLevel(writeConsistencyLevel23);
        deleteRequest24.setParentTask("hi!", (long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest24.routing("hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress30 = null;
        deleteRequest29.remoteAddress(transportAddress30);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy32 = deleteRequest29.getRefreshPolicy();
        java.lang.String str33 = deleteRequest29.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest29.id("delete {[delete {[][][hi!]}][null][null]}");
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertTrue("'" + refreshPolicy32 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy32.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNotNull(deleteRequest35);
    }

    @Test
    public void test8768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8768");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest10.toString();
        java.lang.String[] strArray12 = deleteRequest10.indices();
        deleteRequest10.primaryTerm(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest10.routing("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest16.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest16.type("delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy20 = deleteRequest19.getRefreshPolicy();
        java.lang.String str21 = deleteRequest19.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest19.parent("delete {[null][null][delete {[null][null][null]}]}");
        java.lang.String str24 = deleteRequest23.getDescription();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + refreshPolicy20 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy20.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "delete {[][delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}][]}" + "'", str24, "delete {[][delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}][]}");
    }

    @Test
    public void test8769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8769");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][delete {[][hi!][]}][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}]}", deleteRequest2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test8770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8770");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel1 = deleteRequest0.consistencyLevel();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy2 = deleteRequest0.getRefreshPolicy();
        long long3 = deleteRequest0.version();
        java.lang.String str4 = deleteRequest0.getDescription();
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel1 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel1.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + refreshPolicy2 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy2.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-3L) + "'", long3 == (-3L));
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[null][null][null]}" + "'", str4, "delete {[null][null][null]}");
    }

    @Test
    public void test8771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8771");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.setRefreshPolicy(refreshPolicy14);
        long long16 = deleteRequest3.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest19.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue24 = deleteRequest23.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest19.timeout(timeValue24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str27 = deleteRequest26.parent();
        org.elasticsearch.index.VersionType versionType28 = deleteRequest26.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest19.versionType(versionType28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest3.versionType(versionType28);
        org.elasticsearch.common.unit.TimeValue timeValue31 = deleteRequest30.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest30.id("delete {[][null][null]}");
        java.lang.String str34 = deleteRequest33.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest33.index("delete {[][delete {[hi!][null][null]}][delete {[][][]}]}");
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(transportAddress13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(timeValue24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(timeValue31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(deleteRequest36);
    }

    @Test
    public void test8772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8772");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest1.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue6 = deleteRequest5.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.timeout(timeValue6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.id("");
        org.elasticsearch.index.VersionType versionType10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.versionType(versionType10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.routing("delete {[delete {[delete {[][null][null]}][][]}][][]}");
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
    }

    @Test
    public void test8773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8773");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][]}", "delete {[][delete {[][][]}][delete {[][][]}]}", "delete {[delete {[][null][null]}][][]}");
        deleteRequest3.setParentTask("delete {[delete {[][][]}][null][null]}", (long) (byte) 1);
        java.lang.String str7 = deleteRequest3.toString();
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.routing("delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[delete {[][][]}][delete {[][delete {[][][]}][delete {[][][]}]}][delete {[delete {[][null][null]}][][]}]}" + "'", str7, "delete {[delete {[][][]}][delete {[][delete {[][][]}][delete {[][][]}]}][delete {[delete {[][null][null]}][][]}]}");
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest10);
    }

    @Test
    public void test8774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8774");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version((long) (short) 100);
        java.lang.String str4 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long7 = deleteRequest6.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.index("");
        boolean boolean10 = deleteRequest6.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest6.version((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest6.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.timeout(timeValue13);
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = null;
        deleteRequest3.remoteAddress(transportAddress15);
        java.lang.String str17 = deleteRequest3.getDescription();
        long long18 = deleteRequest3.primaryTerm();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[null][null][null]}" + "'", str17, "delete {[null][null][null]}");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
    }

    @Test
    public void test8775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8775");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][hi!]}");
        org.elasticsearch.common.unit.TimeValue timeValue6 = deleteRequest5.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.type("delete {[delete {[hi!][null][null]}][null][null]}");
        java.lang.String str9 = deleteRequest5.toString();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][][]}]}" + "'", str9, "delete {[][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][][]}]}");
    }

    @Test
    public void test8776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8776");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[][][]}]}][delete {[null][null][null]}]}][null][null]}", "delete {[delete {[delete {[][null][null]}][][delete {[][][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}]}]}][][]}", "delete {[][delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[][][]}]}][delete {[null][null][null]}]}");
    }

    @Test
    public void test8777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8777");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.setShardId(shardId4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.routing("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        java.lang.String str8 = deleteRequest7.type();
        java.lang.String str9 = deleteRequest7.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str14 = deleteRequest13.id();
        java.lang.String str15 = deleteRequest13.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str17 = deleteRequest16.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest16.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId20 = deleteRequest16.getParentTask();
        deleteRequest13.setParentTask(taskId20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel24 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest13.consistencyLevel(writeConsistencyLevel24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest13.type("delete {[delete {[][][hi!]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.type("delete {[][][]}");
        org.elasticsearch.tasks.TaskId taskId30 = deleteRequest29.getParentTask();
        deleteRequest7.setParentTask(taskId30);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "delete {[null][null][null]}" + "'", str1, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(taskId20);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel24 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel24.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(taskId30);
    }

    @Test
    public void test8778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8778");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException8 = deleteRequest7.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions24 = deleteRequest22.indicesOptions();
        java.lang.String str25 = deleteRequest22.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str27 = deleteRequest26.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest26.version((long) (short) 100);
        deleteRequest26.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str33 = deleteRequest32.parent();
        org.elasticsearch.index.VersionType versionType34 = deleteRequest32.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest26.versionType(versionType34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest22.versionType(versionType34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest10.versionType(versionType34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest7.versionType(versionType34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.type("delete {[hi!][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue41 = deleteRequest38.timeout();
        java.lang.String str42 = deleteRequest38.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest38.index("delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}][delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}][]}");
        java.lang.String str45 = deleteRequest44.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest44.parent("delete {[delete {[delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}][delete {[][null][null]}][delete {[][hi!][delete {[null][null][null]}]}]}][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(actionRequestValidationException8);
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[][][]}" + "'", str25, "delete {[][][]}");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(versionType34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(timeValue41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "delete {[hi!][null][null]}" + "'", str42, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "delete {[hi!][null][null]}" + "'", str45, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest47);
    }

    @Test
    public void test8779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8779");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel1 = deleteRequest0.consistencyLevel();
        java.lang.String str2 = deleteRequest0.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.index("hi!");
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.setShardId(shardId5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.setShardId(shardId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.routing("delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.version((long) (short) 100);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel1 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel1.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
    }

    @Test
    public void test8780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8780");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}", "delete {[][delete {[delete {[][null][null]}][][]}][delete {[null][delete {[null][null][null]}][null]}]}", "delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.parent("delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.index("delete {[][delete {[][][]}][]}");
        java.lang.String str8 = deleteRequest5.parent();
        org.elasticsearch.index.shard.IndexShard indexShard9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete10 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest5, indexShard9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}" + "'", str8, "delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}");
    }

    @Test
    public void test8781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8781");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        java.lang.String str7 = deleteRequest3.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = null;
        deleteRequest9.remoteAddress(transportAddress11);
        java.lang.String str13 = deleteRequest9.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest9.parent("delete {[hi!][null][null]}");
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest15.getParentTask();
        deleteRequest3.setParentTask(taskId16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest3.type("delete {[null][null][null]}");
        java.lang.String str20 = deleteRequest3.routing();
        org.elasticsearch.index.VersionType versionType21 = deleteRequest3.versionType();
        long long22 = deleteRequest3.primaryTerm();
        long long23 = deleteRequest3.version();
        org.elasticsearch.common.unit.TimeValue timeValue24 = deleteRequest3.timeout();
        java.lang.Class<?> wildcardClass25 = deleteRequest3.getClass();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[null][null][null]}" + "'", str13, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(versionType21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-3L) + "'", long23 == (-3L));
        org.junit.Assert.assertNotNull(timeValue24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test8782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8782");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest2.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.parent("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId15 = null;
        org.elasticsearch.tasks.Task task16 = deleteRequest11.createTask(0L, "", "", taskId15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest11.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType19 = deleteRequest11.versionType();
        java.lang.String str20 = deleteRequest11.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress21 = deleteRequest11.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy22 = deleteRequest11.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str24 = deleteRequest23.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest23.version((long) (short) 100);
        java.lang.String str27 = deleteRequest23.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue30 = deleteRequest29.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress31 = null;
        deleteRequest29.remoteAddress(transportAddress31);
        java.lang.String str33 = deleteRequest29.index();
        org.elasticsearch.index.VersionType versionType34 = deleteRequest29.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest23.versionType(versionType34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest11.versionType(versionType34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest7.versionType(versionType34);
        org.elasticsearch.index.VersionType versionType38 = deleteRequest7.versionType();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput39 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest7.writeTo(streamOutput39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(task16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(versionType19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(transportAddress21);
        org.junit.Assert.assertTrue("'" + refreshPolicy22 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy22.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(timeValue30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "delete {[null][null][null]}" + "'", str33, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(versionType34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(versionType38);
    }

    @Test
    public void test8783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8783");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][]}", "delete {[][null][null]}", "hi!");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy4 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str6 = deleteRequest5.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue9 = deleteRequest8.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.timeout(timeValue9);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId13 = deleteRequest12.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest15.type("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest15.id("delete {[hi!][][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][null][null]}", "", "delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId36 = null;
        org.elasticsearch.tasks.Task task37 = deleteRequest32.createTask(0L, "", "", taskId36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest32.setRefreshPolicy("");
        java.lang.String str40 = deleteRequest39.toString();
        java.lang.String[] strArray41 = deleteRequest39.indices();
        java.lang.String[] strArray42 = deleteRequest39.indices();
        org.elasticsearch.tasks.TaskId taskId43 = deleteRequest39.getParentTask();
        org.elasticsearch.tasks.Task task44 = deleteRequest25.createTask((long) 100, "delete {[delete {[hi!][null][null]}][null][null]}", "delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}", taskId43);
        long long45 = deleteRequest25.version();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException46 = deleteRequest25.validate();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy47 = deleteRequest25.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest21.setRefreshPolicy(refreshPolicy47);
        org.elasticsearch.common.transport.TransportAddress transportAddress49 = null;
        deleteRequest48.remoteAddress(transportAddress49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str52 = deleteRequest51.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue55 = deleteRequest54.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest51.timeout(timeValue55);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest56.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId59 = deleteRequest58.getParentTask();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException60 = deleteRequest58.validate();
        org.elasticsearch.common.unit.TimeValue timeValue61 = deleteRequest58.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest58.parent("hi!");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy64 = deleteRequest58.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest48.setRefreshPolicy(refreshPolicy64);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest3.setRefreshPolicy(refreshPolicy64);
        org.junit.Assert.assertTrue("'" + refreshPolicy4 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy4.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(timeValue9);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(taskId13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(task37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "delete {[][][]}" + "'", str40, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(taskId43);
        org.junit.Assert.assertNotNull(task44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-3L) + "'", long45 == (-3L));
        org.junit.Assert.assertNull(actionRequestValidationException46);
        org.junit.Assert.assertTrue("'" + refreshPolicy47 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy47.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(timeValue55);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(taskId59);
        org.junit.Assert.assertNotNull(actionRequestValidationException60);
        org.junit.Assert.assertNotNull(timeValue61);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertTrue("'" + refreshPolicy64 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy64.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(deleteRequest66);
    }

    @Test
    public void test8784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8784");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress2 = deleteRequest0.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId3 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.setShardId(shardId3);
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = null;
        deleteRequest0.remoteAddress(transportAddress5);
        java.lang.String str7 = deleteRequest0.id();
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest0.getParentTask();
        long long9 = deleteRequest0.version();
        org.elasticsearch.action.support.IndicesOptions indicesOptions10 = deleteRequest0.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest0.version((long) (byte) -1);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.setShardId(shardId13);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(transportAddress2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(taskId8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-3L) + "'", long9 == (-3L));
        org.junit.Assert.assertNotNull(indicesOptions10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
    }

    @Test
    public void test8785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8785");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.type("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.type("delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.parent("delete {[null][delete {[][delete {[hi!][null][null]}][hi!]}][delete {[][][hi!]}]}");
        java.lang.String[] strArray14 = deleteRequest13.indices();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test8786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8786");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest10.toString();
        java.lang.String str12 = deleteRequest10.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest10.index("delete {[delete {[][null][null]}][null][null]}");
        java.lang.String str17 = deleteRequest16.getDescription();
        java.lang.String str18 = deleteRequest16.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str20 = deleteRequest19.parent();
        deleteRequest19.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str24 = deleteRequest23.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest23.version((long) (short) 100);
        java.lang.String str27 = deleteRequest26.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest26.id("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long32 = deleteRequest31.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str34 = deleteRequest33.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue37 = deleteRequest36.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest33.timeout(timeValue37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId41 = deleteRequest40.getParentTask();
        deleteRequest31.setParentTask(taskId41);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel43 = deleteRequest31.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest26.consistencyLevel(writeConsistencyLevel43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest19.consistencyLevel(writeConsistencyLevel43);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy46 = deleteRequest19.getRefreshPolicy();
        org.elasticsearch.action.support.IndicesOptions indicesOptions47 = deleteRequest19.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId48 = deleteRequest19.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId56 = null;
        org.elasticsearch.tasks.Task task57 = deleteRequest52.createTask(0L, "", "", taskId56);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest52.setRefreshPolicy("");
        java.lang.String str60 = deleteRequest59.toString();
        java.lang.String[] strArray61 = deleteRequest59.indices();
        deleteRequest59.primaryTerm(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest59.routing("delete {[null][null][null]}");
        java.lang.String str66 = deleteRequest65.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId74 = null;
        org.elasticsearch.tasks.Task task75 = deleteRequest70.createTask(0L, "", "", taskId74);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest70.setRefreshPolicy("");
        deleteRequest77.primaryTerm(1L);
        deleteRequest77.primaryTerm((long) 0);
        java.lang.String str82 = deleteRequest77.type();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy83 = deleteRequest77.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = deleteRequest65.setRefreshPolicy(refreshPolicy83);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest85 = deleteRequest19.setRefreshPolicy(refreshPolicy83);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest86 = deleteRequest16.setRefreshPolicy(refreshPolicy83);
        java.lang.String str87 = deleteRequest16.routing();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][][]}" + "'", str12, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[delete {[delete {[][null][null]}][null][null]}][][]}" + "'", str17, "delete {[delete {[delete {[][null][null]}][null][null]}][][]}");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[delete {[delete {[][null][null]}][null][null]}][][]}" + "'", str18, "delete {[delete {[delete {[][null][null]}][null][null]}][][]}");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(timeValue37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(taskId41);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel43 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel43.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertTrue("'" + refreshPolicy46 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy46.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(indicesOptions47);
        org.junit.Assert.assertNotNull(taskId48);
        org.junit.Assert.assertNotNull(task57);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "delete {[][][]}" + "'", str60, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(task75);
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
        org.junit.Assert.assertTrue("'" + refreshPolicy83 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy83.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(deleteRequest84);
        org.junit.Assert.assertNotNull(deleteRequest85);
        org.junit.Assert.assertNotNull(deleteRequest86);
        org.junit.Assert.assertNull(str87);
    }

    @Test
    public void test8787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8787");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str9 = deleteRequest8.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException10 = deleteRequest8.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure12 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "hi!", (java.lang.Throwable) actionRequestValidationException10, "delete {[][][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure14 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "", (java.lang.Throwable) actionRequestValidationException10, "delete {[][][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure16 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][delete {[][][]}][delete {[][][]}]}", (java.lang.Throwable) actionRequestValidationException10, "");
        java.lang.Throwable throwable17 = shardFailure16.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure19 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][null][null]}", throwable17, "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        java.lang.String str20 = shardFailure19.indexUUID;
        java.lang.String str21 = shardFailure19.indexUUID;
        java.lang.String str22 = shardFailure19.reason;
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[null][null][null]}" + "'", str9, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException10);
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable17.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}" + "'", str20, "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}" + "'", str21, "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[][null][null]}" + "'", str22, "delete {[][null][null]}");
    }

    @Test
    public void test8788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8788");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][null][null]}", throwable2, "delete {[][][hi!]}");
        java.lang.String str5 = shardFailure4.reason;
        java.lang.Throwable throwable6 = shardFailure4.cause;
        java.lang.String str7 = shardFailure4.indexUUID;
        java.lang.Throwable throwable8 = shardFailure4.cause;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[null][null][null]}" + "'", str5, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(throwable6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[][][hi!]}" + "'", str7, "delete {[][][hi!]}");
        org.junit.Assert.assertNull(throwable8);
    }

    @Test
    public void test8789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8789");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][null][null]}][delete {[hi!][null][null]}][delete {[hi!][null][null]}]}");
        deleteRequest1.setParentTask("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}", 1L);
    }

    @Test
    public void test8790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8790");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        java.lang.String str4 = deleteRequest2.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest2.version((long) (short) 100);
        long long7 = deleteRequest2.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest2.version(0L);
        deleteRequest2.setParentTask("delete {[delete {[][null][null]}][null][null]}", (long) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest14.setParentTask("hi!", (long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.type("delete {[][][]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy24 = deleteRequest21.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest14.setRefreshPolicy(refreshPolicy24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.type("delete {[][][]}");
        java.lang.String str32 = deleteRequest29.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest29.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel36 = deleteRequest35.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel37 = deleteRequest35.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest29.consistencyLevel(writeConsistencyLevel37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest25.consistencyLevel(writeConsistencyLevel37);
        java.lang.String str40 = deleteRequest25.routing();
        org.elasticsearch.index.VersionType versionType41 = deleteRequest25.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest2.versionType(versionType41);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 100L + "'", long7 == 100L);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertTrue("'" + refreshPolicy24 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy24.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[][][]}" + "'", str32, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel36 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel36.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel37 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel37.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(versionType41);
        org.junit.Assert.assertNotNull(deleteRequest42);
    }

    @Test
    public void test8791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8791");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "hi!", throwable2, "delete {[null][null][null]}");
        java.lang.String str5 = shardFailure4.indexUUID;
        java.lang.Throwable throwable6 = shardFailure4.cause;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting7 = shardFailure4.routing;
        java.lang.Throwable throwable8 = shardFailure4.cause;
        java.lang.String str9 = shardFailure4.reason;
        java.lang.String str10 = shardFailure4.indexUUID;
        java.lang.Throwable throwable11 = shardFailure4.cause;
        java.lang.Throwable throwable12 = shardFailure4.cause;
        java.lang.String str13 = shardFailure4.reason;
        java.lang.Throwable throwable14 = shardFailure4.cause;
        java.lang.String str15 = shardFailure4.indexUUID;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[null][null][null]}" + "'", str5, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(throwable6);
        org.junit.Assert.assertNull(shardRouting7);
        org.junit.Assert.assertNull(throwable8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[null][null][null]}" + "'", str10, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(throwable11);
        org.junit.Assert.assertNull(throwable12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNull(throwable14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[null][null][null]}" + "'", str15, "delete {[null][null][null]}");
    }

    @Test
    public void test8792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8792");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy9 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId17 = null;
        org.elasticsearch.tasks.Task task18 = deleteRequest13.createTask(0L, "", "", taskId17);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy19 = deleteRequest13.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest3.setRefreshPolicy(refreshPolicy19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId28 = null;
        org.elasticsearch.tasks.Task task29 = deleteRequest24.createTask(0L, "", "", taskId28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest24.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType32 = deleteRequest24.versionType();
        java.lang.String str33 = deleteRequest24.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId41 = null;
        org.elasticsearch.tasks.Task task42 = deleteRequest37.createTask(0L, "", "", taskId41);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy43 = deleteRequest37.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest24.setRefreshPolicy(refreshPolicy43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest3.setRefreshPolicy(refreshPolicy43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str47 = deleteRequest46.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue50 = deleteRequest49.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest46.timeout(timeValue50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest51.id("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest53.version((long) 10);
        org.elasticsearch.action.support.IndicesOptions indicesOptions56 = deleteRequest53.indicesOptions();
        java.lang.String str57 = deleteRequest53.type();
        deleteRequest53.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest53.type("delete {[delete {[hi!][null][null]}][null][null]}");
        org.elasticsearch.tasks.TaskId taskId62 = deleteRequest61.getParentTask();
        deleteRequest45.setParentTask(taskId62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest45.parent("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest65.index("delete {[delete {[][][hi!]}][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[null][null][null]}]}");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput68 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest65.writeTo(streamOutput68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertTrue("'" + refreshPolicy9 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy9.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertTrue("'" + refreshPolicy19 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy19.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(task29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(versionType32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "delete {[][][]}" + "'", str33, "delete {[][][]}");
        org.junit.Assert.assertNotNull(task42);
        org.junit.Assert.assertTrue("'" + refreshPolicy43 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy43.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(timeValue50);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(indicesOptions56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(taskId62);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(deleteRequest67);
    }

    @Test
    public void test8793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8793");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.support.IndicesOptions indicesOptions6 = deleteRequest3.indicesOptions();
        java.lang.String str7 = deleteRequest3.id();
        java.lang.String str8 = deleteRequest3.getDescription();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(transportAddress5);
        org.junit.Assert.assertNotNull(indicesOptions6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[][][]}" + "'", str8, "delete {[][][]}");
    }

    @Test
    public void test8794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8794");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId12 = null;
        org.elasticsearch.tasks.Task task13 = deleteRequest8.createTask(0L, "", "", taskId12);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = deleteRequest8.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.setRefreshPolicy(refreshPolicy14);
        java.lang.String str16 = deleteRequest3.index();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest3.setShardId(shardId17);
        java.lang.String str19 = deleteRequest18.parent();
        java.lang.String str20 = deleteRequest18.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest22.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue27 = deleteRequest26.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest22.timeout(timeValue27);
        java.lang.String str29 = deleteRequest22.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException30 = deleteRequest22.validate();
        org.elasticsearch.common.transport.TransportAddress transportAddress31 = deleteRequest22.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId42 = null;
        org.elasticsearch.tasks.Task task43 = deleteRequest38.createTask(0L, "", "", taskId42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest38.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel46 = deleteRequest45.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions47 = deleteRequest45.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId48 = null;
        deleteRequest45.setParentTask(taskId48);
        deleteRequest45.primaryTerm((long) (-1));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest58.type("delete {[][][]}");
        java.lang.String str61 = deleteRequest58.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest58.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str68 = deleteRequest67.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue71 = deleteRequest70.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest67.timeout(timeValue71);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest72.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId75 = deleteRequest74.getParentTask();
        org.elasticsearch.tasks.Task task76 = deleteRequest63.createTask((long) ' ', "delete {[delete {[][][hi!]}][null][null]}", "delete {[][null][null]}", taskId75);
        org.elasticsearch.tasks.Task task77 = deleteRequest45.createTask((long) (short) 0, "hi!", "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}", taskId75);
        org.elasticsearch.tasks.Task task78 = deleteRequest22.createTask((long) (byte) 10, "delete {[][null][null]}", "delete {[delete {[][][hi!]}][null][null]}", taskId75);
        deleteRequest18.setParentTask(taskId75);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest83 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str84 = deleteRequest83.id();
        java.lang.String str85 = deleteRequest83.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest86 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str87 = deleteRequest86.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest89 = deleteRequest86.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId90 = deleteRequest86.getParentTask();
        deleteRequest83.setParentTask(taskId90);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest92 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel93 = deleteRequest92.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel94 = deleteRequest92.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest95 = deleteRequest83.consistencyLevel(writeConsistencyLevel94);
        org.elasticsearch.tasks.TaskId taskId96 = deleteRequest95.getParentTask();
        deleteRequest18.setParentTask(taskId96);
        java.lang.String str98 = deleteRequest18.parent();
        java.lang.String str99 = deleteRequest18.toString();
        org.junit.Assert.assertNull(transportAddress4);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertTrue("'" + refreshPolicy14 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy14.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(timeValue27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "delete {[][null][null]}" + "'", str29, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException30);
        org.junit.Assert.assertNull(transportAddress31);
        org.junit.Assert.assertNotNull(task43);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel46 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel46.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions47);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "delete {[][][]}" + "'", str61, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(timeValue71);
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertNotNull(taskId75);
        org.junit.Assert.assertNotNull(task76);
        org.junit.Assert.assertNotNull(task77);
        org.junit.Assert.assertNotNull(task78);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "" + "'", str84, "");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertNotNull(deleteRequest89);
        org.junit.Assert.assertNotNull(taskId90);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel93 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel93.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel94 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel94.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest95);
        org.junit.Assert.assertNotNull(taskId96);
        org.junit.Assert.assertNull(str98);
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "delete {[hi!][][delete {[][][]}]}" + "'", str99, "delete {[hi!][][delete {[][][]}]}");
    }

    @Test
    public void test8795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8795");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId2 = deleteRequest1.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId10 = null;
        org.elasticsearch.tasks.Task task11 = deleteRequest6.createTask(0L, "", "", taskId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest6.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest13.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions15 = deleteRequest13.indicesOptions();
        java.lang.String str16 = deleteRequest13.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str18 = deleteRequest17.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest17.version((long) (short) 100);
        deleteRequest17.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str24 = deleteRequest23.parent();
        org.elasticsearch.index.VersionType versionType25 = deleteRequest23.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest17.versionType(versionType25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest13.versionType(versionType25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest1.versionType(versionType25);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy29 = deleteRequest1.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest1.parent("delete {[null][null][null]}");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput32 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest31.writeTo(streamOutput32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId2);
        org.junit.Assert.assertNotNull(task11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[][][]}" + "'", str16, "delete {[][][]}");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(versionType25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertTrue("'" + refreshPolicy29 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy29.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest31);
    }

    @Test
    public void test8796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8796");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long10 = deleteRequest9.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str12 = deleteRequest11.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest14.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest18.getParentTask();
        deleteRequest9.setParentTask(taskId19);
        org.elasticsearch.tasks.Task task21 = deleteRequest3.createTask((long) ' ', "delete {[][][hi!]}", "delete {[][][]}", taskId19);
        long long22 = deleteRequest3.version();
        java.lang.String str23 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest3.routing("delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy26 = deleteRequest3.getRefreshPolicy();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][][]}" + "'", str4, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-3L) + "'", long22 == (-3L));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertTrue("'" + refreshPolicy26 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy26.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
    }

    @Test
    public void test8797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8797");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        java.lang.String str6 = deleteRequest3.id();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
    }

    @Test
    public void test8798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8798");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest1.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue6 = deleteRequest5.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.timeout(timeValue6);
        java.lang.String str8 = deleteRequest1.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str16 = deleteRequest15.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.type("delete {[][][]}");
        java.lang.String str23 = deleteRequest20.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest20.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId33 = null;
        org.elasticsearch.tasks.Task task34 = deleteRequest29.createTask(0L, "", "", taskId33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest29.setRefreshPolicy("");
        java.lang.String str37 = deleteRequest36.toString();
        java.lang.String[] strArray38 = deleteRequest36.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest36.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str49 = deleteRequest48.id();
        java.lang.String str50 = deleteRequest48.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str52 = deleteRequest51.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest51.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId55 = deleteRequest51.getParentTask();
        deleteRequest48.setParentTask(taskId55);
        deleteRequest44.setParentTask(taskId55);
        deleteRequest40.setParentTask(taskId55);
        deleteRequest25.setParentTask(taskId55);
        deleteRequest15.setParentTask(taskId55);
        org.elasticsearch.tasks.Task task61 = deleteRequest1.createTask((long) 100, "delete {[][][hi!]}", "hi!", taskId55);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest1.routing("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress64 = deleteRequest1.remoteAddress();
        java.lang.String str65 = deleteRequest1.parent();
        org.elasticsearch.tasks.TaskId taskId66 = deleteRequest1.getParentTask();
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[][][]}" + "'", str23, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(task34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "delete {[][][]}" + "'", str37, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(taskId55);
        org.junit.Assert.assertNotNull(task61);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNull(transportAddress64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(taskId66);
    }

    @Test
    public void test8799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8799");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][delete {[][][]}]}");
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.setShardId(shardId2);
        java.lang.String str4 = deleteRequest1.routing();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test8800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8800");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}", "delete {[][][hi!]}", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str11 = deleteRequest10.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.id("hi!");
        org.elasticsearch.tasks.TaskId taskId14 = deleteRequest13.getParentTask();
        org.elasticsearch.tasks.TaskId taskId15 = deleteRequest13.getParentTask();
        org.elasticsearch.tasks.Task task16 = deleteRequest3.createTask((-1L), "", "hi!", taskId15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest3.routing("delete {[delete {[delete {[][null][null]}][][delete {[][][hi!]}]}][delete {[][null][null]}][delete {[null][null][delete {[][][hi!]}]}]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException19 = deleteRequest3.validate();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.setRefreshPolicy("delete {[][delete {[delete {[][][hi!]}][null][null]}][]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[][delete {[delete {[][][hi!]}][null][null]}][]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(taskId14);
        org.junit.Assert.assertNotNull(taskId15);
        org.junit.Assert.assertNotNull(task16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNull(actionRequestValidationException19);
    }

    @Test
    public void test8801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8801");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        deleteRequest0.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.version(10L);
        deleteRequest7.primaryTerm((-1L));
        org.elasticsearch.common.transport.TransportAddress transportAddress10 = deleteRequest7.remoteAddress();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(transportAddress10);
    }

    @Test
    public void test8802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8802");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[][][]}");
        java.lang.String str3 = deleteRequest0.toString();
        java.lang.String str4 = deleteRequest0.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId12 = null;
        org.elasticsearch.tasks.Task task13 = deleteRequest8.createTask(0L, "", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest8.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType16 = deleteRequest8.versionType();
        java.lang.String str17 = deleteRequest8.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId25 = null;
        org.elasticsearch.tasks.Task task26 = deleteRequest21.createTask(0L, "", "", taskId25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest21.setRefreshPolicy("");
        java.lang.String str29 = deleteRequest28.toString();
        java.lang.String[] strArray30 = deleteRequest28.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest28.index("");
        org.elasticsearch.common.unit.TimeValue timeValue33 = deleteRequest32.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest8.timeout(timeValue33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress39 = deleteRequest38.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId47 = null;
        org.elasticsearch.tasks.Task task48 = deleteRequest43.createTask(0L, "", "", taskId47);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy49 = deleteRequest43.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest38.setRefreshPolicy(refreshPolicy49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest34.setRefreshPolicy(refreshPolicy49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest0.setRefreshPolicy(refreshPolicy49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest0.id("delete {[null][null][null]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions55 = deleteRequest54.indicesOptions();
        java.lang.String str56 = deleteRequest54.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue59 = deleteRequest58.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress60 = null;
        deleteRequest58.remoteAddress(transportAddress60);
        java.lang.String str62 = deleteRequest58.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest58.parent("delete {[hi!][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue65 = deleteRequest58.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest58.id("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest58.id("");
        org.elasticsearch.common.unit.TimeValue timeValue70 = deleteRequest69.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest54.timeout(timeValue70);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest54.index("");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest73.timeout("delete {[delete {[null][null][null]}][null][null]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[null][null][null]}][null][null]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "delete {[null][null][null]}" + "'", str3, "delete {[null][null][null]}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][][]}" + "'", str4, "delete {[][][]}");
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(versionType16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "delete {[][][]}" + "'", str29, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(timeValue33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNull(transportAddress39);
        org.junit.Assert.assertNotNull(task48);
        org.junit.Assert.assertTrue("'" + refreshPolicy49 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy49.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(indicesOptions55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(timeValue59);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "delete {[null][null][null]}" + "'", str62, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(timeValue65);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(timeValue70);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(deleteRequest73);
    }

    @Test
    public void test8803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8803");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "delete {[][][]}", "delete {[delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}][delete {[][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}][]}][delete {[][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][delete {[][][]}]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str5 = deleteRequest4.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = deleteRequest4.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest4.setShardId(shardId7);
        java.lang.String str9 = deleteRequest4.id();
        java.lang.String str10 = deleteRequest4.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str15 = deleteRequest14.id();
        java.lang.String str16 = deleteRequest14.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str18 = deleteRequest17.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest17.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest17.getParentTask();
        deleteRequest14.setParentTask(taskId21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel24 = deleteRequest23.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest23.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest14.consistencyLevel(writeConsistencyLevel25);
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest26.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.index.VersionType versionType32 = deleteRequest31.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest26.versionType(versionType32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest4.versionType(versionType32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest3.versionType(versionType32);
        deleteRequest35.setParentTask("delete {[delete {[][][hi!]}][null][null]}", (long) 0);
        java.lang.String str39 = deleteRequest35.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest35.version((long) 10);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(transportAddress6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel24 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel24.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(taskId27);
        org.junit.Assert.assertNotNull(versionType32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "delete {[delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}][delete {[][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}][]}][delete {[][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][delete {[][][]}]}]}" + "'", str39, "delete {[delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}][delete {[][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}][]}][delete {[][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][delete {[][][]}]}]}");
        org.junit.Assert.assertNotNull(deleteRequest41);
    }

    @Test
    public void test8804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8804");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}", "delete {[][null][null]}", "delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId11 = null;
        org.elasticsearch.tasks.Task task12 = deleteRequest7.createTask(0L, "", "", taskId11);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy13 = deleteRequest7.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.setRefreshPolicy(refreshPolicy13);
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = null;
        deleteRequest14.remoteAddress(transportAddress15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest14.parent("delete {[delete {[delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}][null][null]}][null][null]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException19 = deleteRequest14.validate();
        org.junit.Assert.assertNotNull(task12);
        org.junit.Assert.assertTrue("'" + refreshPolicy13 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy13.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNull(actionRequestValidationException19);
    }

    @Test
    public void test8805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8805");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "hi!", throwable2, "delete {[null][null][null]}");
        java.lang.String str5 = shardFailure4.reason;
        java.lang.String str6 = shardFailure4.reason;
        java.lang.Throwable throwable7 = shardFailure4.cause;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = shardFailure4.routing;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNull(throwable7);
        org.junit.Assert.assertNull(shardRouting8);
    }

    @Test
    public void test8806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8806");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}", "delete {[][delete {[][][]}][delete {[][][]}]}", "delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        deleteRequest3.primaryTerm((long) (-1));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.type("delete {[][][hi!]}");
        java.lang.String str12 = deleteRequest9.getDescription();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy13 = deleteRequest9.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.setRefreshPolicy(refreshPolicy13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest3.version(97L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest3.id("delete {[delete {[delete {[][][hi!]}][null][null]}][delete {[][][]}][]}");
        java.lang.String str19 = deleteRequest3.index();
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][delete {[][][hi!]}][delete {[][][]}]}" + "'", str12, "delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.junit.Assert.assertTrue("'" + refreshPolicy13 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy13.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}" + "'", str19, "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
    }

    @Test
    public void test8807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8807");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str7 = deleteRequest6.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest6.getParentTask();
        deleteRequest3.setParentTask(taskId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.consistencyLevel(writeConsistencyLevel14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.type("delete {[delete {[][][hi!]}][null][null]}");
        deleteRequest3.primaryTerm((-1L));
        org.elasticsearch.common.transport.TransportAddress transportAddress20 = null;
        deleteRequest3.remoteAddress(transportAddress20);
        org.elasticsearch.index.VersionType versionType22 = deleteRequest3.versionType();
        java.lang.String str23 = deleteRequest3.type();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str23, "delete {[delete {[][][hi!]}][null][null]}");
    }

    @Test
    public void test8808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8808");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.setRefreshPolicy("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy10 = deleteRequest6.getRefreshPolicy();
        long long11 = deleteRequest6.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest6.id("delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = deleteRequest13.remoteAddress();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException15 = deleteRequest13.validate();
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = deleteRequest13.remoteAddress();
        org.elasticsearch.common.transport.TransportAddress transportAddress17 = deleteRequest13.remoteAddress();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + refreshPolicy10 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy10.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-3L) + "'", long11 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNull(transportAddress14);
        org.junit.Assert.assertNull(actionRequestValidationException15);
        org.junit.Assert.assertNull(transportAddress16);
        org.junit.Assert.assertNull(transportAddress17);
    }

    @Test
    public void test8809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8809");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.type("delete {[null][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = deleteRequest3.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.version((long) '4');
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy9 = deleteRequest6.getRefreshPolicy();
        java.lang.String str10 = deleteRequest6.getDescription();
        org.elasticsearch.common.unit.TimeValue timeValue11 = deleteRequest6.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest6.version(52L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.routing("delete {[delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}][delete {[hi!][null][null]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str20 = deleteRequest19.id();
        java.lang.String str21 = deleteRequest19.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str23 = deleteRequest22.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest22.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId26 = deleteRequest22.getParentTask();
        deleteRequest19.setParentTask(taskId26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = deleteRequest28.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel30 = deleteRequest28.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest19.consistencyLevel(writeConsistencyLevel30);
        org.elasticsearch.tasks.TaskId taskId32 = deleteRequest31.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.index.VersionType versionType37 = deleteRequest36.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest31.versionType(versionType37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str43 = deleteRequest42.getDescription();
        java.lang.String str44 = deleteRequest42.routing();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel45 = deleteRequest42.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest31.consistencyLevel(writeConsistencyLevel45);
        java.lang.String str47 = deleteRequest46.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str52 = deleteRequest51.parent();
        deleteRequest51.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest51.setRefreshPolicy("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException57 = deleteRequest56.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest56.index("delete {[hi!][null][null]}");
        deleteRequest56.setParentTask("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}", 10L);
        java.lang.String str63 = deleteRequest56.parent();
        org.elasticsearch.tasks.TaskId taskId64 = deleteRequest56.getParentTask();
        org.elasticsearch.tasks.Task task65 = deleteRequest46.createTask((long) 100, "delete {[delete {[hi!][null][null]}][null][null]}", "delete {[][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}][]}", taskId64);
        deleteRequest15.setParentTask(taskId64);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(transportAddress4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + refreshPolicy9 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy9.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][delete {[null][null][null]}][null]}" + "'", str10, "delete {[][delete {[null][null][null]}][null]}");
        org.junit.Assert.assertNotNull(timeValue11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(taskId26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel29 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel29.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel30 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel30.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(taskId32);
        org.junit.Assert.assertNotNull(versionType37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "delete {[][][]}" + "'", str43, "delete {[][][]}");
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel45 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel45.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(actionRequestValidationException57);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(taskId64);
        org.junit.Assert.assertNotNull(task65);
    }

    @Test
    public void test8810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8810");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str8 = deleteRequest7.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue11 = deleteRequest10.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.timeout(timeValue11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId15 = deleteRequest14.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.id("delete {[][][hi!]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy20 = deleteRequest17.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.setRefreshPolicy(refreshPolicy20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.type("delete {[delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}][null][null]}");
        org.elasticsearch.common.io.stream.StreamInput streamInput24 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest23.readFrom(streamInput24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(timeValue11);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(taskId15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + refreshPolicy20 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy20.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
    }

    @Test
    public void test8811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8811");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.routing("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.version((long) (short) -1);
        java.lang.String str16 = deleteRequest13.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest13.type("delete {[delete {[][][hi!]}][null][null]}");
        java.lang.String[] strArray19 = deleteRequest18.indices();
        boolean boolean20 = deleteRequest18.getShouldPersistResult();
        org.elasticsearch.index.shard.ShardId shardId21 = deleteRequest18.shardId();
        org.elasticsearch.index.shard.ShardId shardId22 = deleteRequest18.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest18.consistencyLevel();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(shardId21);
        org.junit.Assert.assertNull(shardId22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test8812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8812");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][null][null]}][][delete {[][][hi!]}]}", "delete {[][null][null]}", "delete {[null][null][delete {[][][hi!]}]}");
        long long4 = deleteRequest3.primaryTerm();
        java.lang.String str5 = deleteRequest3.toString();
        org.elasticsearch.index.VersionType versionType6 = deleteRequest3.versionType();
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[delete {[delete {[][null][null]}][][delete {[][][hi!]}]}][delete {[][null][null]}][delete {[null][null][delete {[][][hi!]}]}]}" + "'", str5, "delete {[delete {[delete {[][null][null]}][][delete {[][][hi!]}]}][delete {[][null][null]}][delete {[null][null][delete {[][][hi!]}]}]}");
        org.junit.Assert.assertNotNull(versionType6);
    }

    @Test
    public void test8813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8813");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = deleteRequest3.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.setShardId(shardId6);
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.setShardId(shardId8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId17 = null;
        org.elasticsearch.tasks.Task task18 = deleteRequest13.createTask(0L, "", "", taskId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest13.setRefreshPolicy("");
        java.lang.String[] strArray21 = deleteRequest20.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long24 = deleteRequest23.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str26 = deleteRequest25.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue29 = deleteRequest28.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest25.timeout(timeValue29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId33 = deleteRequest32.getParentTask();
        deleteRequest23.setParentTask(taskId33);
        deleteRequest20.setParentTask(taskId33);
        deleteRequest20.setParentTask("delete {[hi!][null][null]}", (long) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str40 = deleteRequest39.parent();
        deleteRequest39.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest39.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest44.type("delete {[null][null][null]}");
        java.lang.String str47 = deleteRequest44.parent();
        boolean boolean48 = deleteRequest44.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest44.index("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel51 = deleteRequest50.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest20.consistencyLevel(writeConsistencyLevel51);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest9.consistencyLevel(writeConsistencyLevel51);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(transportAddress5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(timeValue29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(taskId33);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel51 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel51.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest53);
    }

    @Test
    public void test8814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8814");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str9 = deleteRequest8.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException10 = deleteRequest8.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure12 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "hi!", (java.lang.Throwable) actionRequestValidationException10, "delete {[][][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure14 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "", (java.lang.Throwable) actionRequestValidationException10, "delete {[][][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure16 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][delete {[][][]}][delete {[][][]}]}", (java.lang.Throwable) actionRequestValidationException10, "");
        java.lang.Throwable throwable17 = shardFailure16.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure19 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][delete {[null][null][null]}][null]}", throwable17, "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting20 = shardFailure19.routing;
        java.lang.String str21 = shardFailure19.indexUUID;
        java.lang.String str22 = shardFailure19.indexUUID;
        java.lang.String str23 = shardFailure19.indexUUID;
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[null][null][null]}" + "'", str9, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException10);
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable17.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNull(shardRouting20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}" + "'", str21, "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}" + "'", str22, "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}" + "'", str23, "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}");
    }

    @Test
    public void test8815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8815");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str7 = deleteRequest6.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest6.getParentTask();
        deleteRequest3.setParentTask(taskId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str13 = deleteRequest12.parent();
        deleteRequest12.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.type("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.version((long) '#');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel24 = deleteRequest22.consistencyLevel();
        deleteRequest22.setParentTask("delete {[delete {[][][hi!]}][null][null]}", (long) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId35 = null;
        org.elasticsearch.tasks.Task task36 = deleteRequest31.createTask(0L, "", "", taskId35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest31.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType39 = deleteRequest31.versionType();
        java.lang.String str40 = deleteRequest31.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress41 = deleteRequest31.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy42 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest31.setRefreshPolicy(refreshPolicy42);
        long long44 = deleteRequest31.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue45 = deleteRequest31.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest22.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest21.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest3.timeout(timeValue45);
        long long49 = deleteRequest48.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest48.parent("delete {[hi!][][delete {[][][]}]}");
        java.lang.String str52 = deleteRequest51.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest56.type("delete {[][][]}");
        java.lang.String str59 = deleteRequest56.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest56.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest61.parent("delete {[][][]}");
        java.lang.String str64 = deleteRequest61.type();
        org.elasticsearch.tasks.TaskId taskId65 = deleteRequest61.getParentTask();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel66 = deleteRequest61.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest51.consistencyLevel(writeConsistencyLevel66);
        deleteRequest67.setParentTask("delete {[delete {[][delete {[][][]}][delete {[][][]}]}][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[null][null][null]}]}", (long) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest67.parent("delete {[][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress73 = null;
        deleteRequest67.remoteAddress(transportAddress73);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel24 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel24.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(task36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(versionType39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(transportAddress41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertNotNull(timeValue45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 0L + "'", long49 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "delete {[][][]}" + "'", str52, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "delete {[][][]}" + "'", str59, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "delete {[][][]}" + "'", str64, "delete {[][][]}");
        org.junit.Assert.assertNotNull(taskId65);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel66 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel66.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNotNull(deleteRequest72);
    }

    @Test
    public void test8816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8816");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = deleteRequest0.remoteAddress();
        long long7 = deleteRequest0.version();
        boolean boolean8 = deleteRequest0.getShouldPersistResult();
        deleteRequest0.primaryTerm((long) (byte) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}", "delete {[hi!][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel15 = deleteRequest14.consistencyLevel();
        java.lang.String str16 = deleteRequest14.index();
        deleteRequest14.setParentTask("delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}", (long) (short) 100);
        org.elasticsearch.index.VersionType versionType20 = deleteRequest14.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest0.versionType(versionType20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest0.type("delete {[hi!][][delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}]}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(transportAddress6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-3L) + "'", long7 == (-3L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel15 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel15.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(versionType20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
    }

    @Test
    public void test8817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8817");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][null][null]}", throwable2, "delete {[][][hi!]}");
        java.lang.String str5 = shardFailure4.reason;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = shardFailure4.routing;
        java.lang.String str7 = shardFailure4.indexUUID;
        java.lang.String str8 = shardFailure4.indexUUID;
        java.lang.String str9 = shardFailure4.reason;
        java.lang.String str10 = shardFailure4.reason;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[null][null][null]}" + "'", str5, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(shardRouting6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[][][hi!]}" + "'", str7, "delete {[][][hi!]}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[][][hi!]}" + "'", str8, "delete {[][][hi!]}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[null][null][null]}" + "'", str9, "delete {[null][null][null]}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[null][null][null]}" + "'", str10, "delete {[null][null][null]}");
    }

    @Test
    public void test8818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8818");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.setRefreshPolicy(refreshPolicy14);
        org.elasticsearch.action.support.IndicesOptions indicesOptions16 = deleteRequest3.indicesOptions();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest3.setShardId(shardId17);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest3.setShardId(shardId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][null][null]}", "", "delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId38 = null;
        org.elasticsearch.tasks.Task task39 = deleteRequest34.createTask(0L, "", "", taskId38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest34.setRefreshPolicy("");
        java.lang.String str42 = deleteRequest41.toString();
        java.lang.String[] strArray43 = deleteRequest41.indices();
        java.lang.String[] strArray44 = deleteRequest41.indices();
        org.elasticsearch.tasks.TaskId taskId45 = deleteRequest41.getParentTask();
        org.elasticsearch.tasks.Task task46 = deleteRequest27.createTask((long) 100, "delete {[delete {[hi!][null][null]}][null][null]}", "delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}", taskId45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str51 = deleteRequest50.id();
        java.lang.String str52 = deleteRequest50.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str54 = deleteRequest53.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest53.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId57 = deleteRequest53.getParentTask();
        deleteRequest50.setParentTask(taskId57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel60 = deleteRequest59.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel61 = deleteRequest59.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest50.consistencyLevel(writeConsistencyLevel61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest50.type("delete {[delete {[][][hi!]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest64.type("delete {[][][]}");
        org.elasticsearch.tasks.TaskId taskId67 = deleteRequest66.getParentTask();
        deleteRequest27.setParentTask(taskId67);
        org.elasticsearch.tasks.Task task69 = deleteRequest20.createTask(32L, "delete {[][delete {[][][hi!]}][delete {[][][]}]}", "delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}", taskId67);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest20.routing("delete {[][delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}][]}");
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(transportAddress13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(indicesOptions16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(task39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "delete {[][][]}" + "'", str42, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(taskId45);
        org.junit.Assert.assertNotNull(task46);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(taskId57);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel60 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel60.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel61 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel61.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNotNull(taskId67);
        org.junit.Assert.assertNotNull(task69);
        org.junit.Assert.assertNotNull(deleteRequest71);
    }

    @Test
    public void test8819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8819");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str15 = deleteRequest14.id();
        org.elasticsearch.common.unit.TimeValue timeValue16 = deleteRequest14.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.timeout(timeValue16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str22 = deleteRequest21.id();
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.setShardId(shardId23);
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest21.setShardId(shardId25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.parent("delete {[][][]}");
        org.elasticsearch.index.VersionType versionType30 = deleteRequest29.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest26.versionType(versionType30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest31.parent("delete {[hi!][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue34 = deleteRequest31.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest17.timeout(timeValue34);
        long long36 = deleteRequest17.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest17.parent("delete {[delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][delete {[hi!][null][null]}][hi!]}]}");
        java.lang.String str39 = deleteRequest17.parent();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput40 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest17.writeTo(streamOutput40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(versionType30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(timeValue34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-3L) + "'", long36 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "delete {[delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][delete {[hi!][null][null]}][hi!]}]}" + "'", str39, "delete {[delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][delete {[hi!][null][null]}][hi!]}]}");
    }

    @Test
    public void test8820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8820");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId20 = null;
        org.elasticsearch.tasks.Task task21 = deleteRequest16.createTask(0L, "", "", taskId20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest16.setRefreshPolicy("");
        deleteRequest23.primaryTerm(1L);
        java.lang.String str26 = deleteRequest23.routing();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy27 = deleteRequest23.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest3.setRefreshPolicy(refreshPolicy27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId36 = null;
        org.elasticsearch.tasks.Task task37 = deleteRequest32.createTask(0L, "", "", taskId36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest32.setRefreshPolicy("");
        java.lang.String str40 = deleteRequest39.toString();
        java.lang.String[] strArray41 = deleteRequest39.indices();
        deleteRequest39.primaryTerm(0L);
        org.elasticsearch.common.unit.TimeValue timeValue44 = deleteRequest39.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest28.timeout(timeValue44);
        java.lang.String str46 = deleteRequest45.toString();
        org.elasticsearch.index.shard.ShardId shardId47 = deleteRequest45.shardId();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][][]}" + "'", str12, "delete {[][][]}");
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + refreshPolicy27 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy27.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(task37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "delete {[][][]}" + "'", str40, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(timeValue44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "delete {[][][]}" + "'", str46, "delete {[][][]}");
        org.junit.Assert.assertNull(shardId47);
    }

    @Test
    public void test8821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8821");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}", "delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.parent("");
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.setShardId(shardId6);
        deleteRequest5.primaryTerm((long) (byte) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId17 = null;
        org.elasticsearch.tasks.Task task18 = deleteRequest13.createTask(0L, "", "", taskId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest13.setRefreshPolicy("");
        java.lang.String[] strArray21 = deleteRequest20.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId29 = null;
        org.elasticsearch.tasks.Task task30 = deleteRequest25.createTask(0L, "", "", taskId29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest25.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel33 = deleteRequest32.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest20.consistencyLevel(writeConsistencyLevel33);
        deleteRequest34.setParentTask("hi!", (long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest34.routing("hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress40 = null;
        deleteRequest39.remoteAddress(transportAddress40);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy42 = deleteRequest39.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest5.setRefreshPolicy(refreshPolicy42);
        java.lang.String str44 = deleteRequest43.parent();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(task30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel33 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel33.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertTrue("'" + refreshPolicy42 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy42.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
    }

    @Test
    public void test8822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8822");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str13 = deleteRequest12.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException14 = deleteRequest12.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure16 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "hi!", (java.lang.Throwable) actionRequestValidationException14, "delete {[][][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure18 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "", (java.lang.Throwable) actionRequestValidationException14, "delete {[][][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure20 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[][delete {[][][]}][delete {[][][]}]}", (java.lang.Throwable) actionRequestValidationException14, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure22 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[][delete {[][][]}][delete {[][][]}]}", (java.lang.Throwable) actionRequestValidationException14, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure24 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}", (java.lang.Throwable) actionRequestValidationException14, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure26 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][delete {[null][null][null]}][null]}", (java.lang.Throwable) actionRequestValidationException14, "delete {[delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}][][]}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[null][null][null]}" + "'", str13, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException14);
    }

    @Test
    public void test8823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8823");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][delete {[][delete {[hi!][null][null]}][hi!]}][delete {[][][hi!]}]}", "delete {[][hi!][]}", "delete {[delete {[delete {[][null][null]}][][]}][][delete {[][][]}]}");
    }

    @Test
    public void test8824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8824");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[][][hi!]}][null][null]}", throwable2, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}");
        java.lang.Throwable throwable5 = shardFailure4.cause;
        org.junit.Assert.assertNull(throwable5);
    }

    @Test
    public void test8825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8825");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.setRefreshPolicy("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy10 = deleteRequest6.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId18 = null;
        org.elasticsearch.tasks.Task task19 = deleteRequest14.createTask(0L, "", "", taskId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType22 = deleteRequest14.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest14.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest6.consistencyLevel(writeConsistencyLevel23);
        long long25 = deleteRequest6.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId33 = null;
        org.elasticsearch.tasks.Task task34 = deleteRequest29.createTask(0L, "", "", taskId33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest29.setRefreshPolicy("");
        java.lang.String str37 = deleteRequest36.toString();
        java.lang.String[] strArray38 = deleteRequest36.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest36.index("");
        org.elasticsearch.common.unit.TimeValue timeValue41 = deleteRequest40.timeout();
        org.elasticsearch.index.VersionType versionType42 = deleteRequest40.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest6.versionType(versionType42);
        org.elasticsearch.index.shard.ShardId shardId44 = deleteRequest6.shardId();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput45 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest6.writeTo(streamOutput45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + refreshPolicy10 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy10.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(task19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-3L) + "'", long25 == (-3L));
        org.junit.Assert.assertNotNull(task34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "delete {[][][]}" + "'", str37, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(timeValue41);
        org.junit.Assert.assertNotNull(versionType42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNull(shardId44);
    }

    @Test
    public void test8826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8826");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest3.consistencyLevel(writeConsistencyLevel11);
        deleteRequest12.setParentTask("hi!", 1L);
        java.lang.String str16 = deleteRequest12.index();
        long long17 = deleteRequest12.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.setShardId(shardId20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.routing("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy24 = deleteRequest23.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest12.setRefreshPolicy(refreshPolicy24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest12.index("delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions28 = deleteRequest27.indicesOptions();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-3L) + "'", long17 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertTrue("'" + refreshPolicy24 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy24.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(indicesOptions28);
    }

    @Test
    public void test8827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8827");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("delete {[][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = deleteRequest5.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.version((long) (short) -1);
        long long11 = deleteRequest8.primaryTerm();
        long long12 = deleteRequest8.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest8.version((long) (short) 100);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(transportAddress6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(deleteRequest14);
    }

    @Test
    public void test8828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8828");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId4 = deleteRequest0.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.id("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest0.index("delete {[hi!][null][null]}");
        java.lang.String str9 = deleteRequest0.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.version((long) 'a');
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = deleteRequest0.remoteAddress();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(taskId4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(transportAddress12);
    }

    @Test
    public void test8829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8829");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.action.support.IndicesOptions indicesOptions7 = deleteRequest6.indicesOptions();
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest6.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest10.setParentTask("hi!", (long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.type("delete {[][][]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy20 = deleteRequest17.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest10.setRefreshPolicy(refreshPolicy20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest6.setRefreshPolicy(refreshPolicy20);
        org.elasticsearch.action.support.IndicesOptions indicesOptions23 = deleteRequest22.indicesOptions();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(indicesOptions7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + refreshPolicy20 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy20.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(indicesOptions23);
    }

    @Test
    public void test8830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8830");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[][][]}");
        java.lang.String str3 = deleteRequest0.id();
        java.lang.String[] strArray4 = deleteRequest0.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str6 = deleteRequest5.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress7 = deleteRequest5.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest5.getParentTask();
        deleteRequest0.setParentTask(taskId8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId17 = null;
        org.elasticsearch.tasks.Task task18 = deleteRequest13.createTask(0L, "", "", taskId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest13.setRefreshPolicy("");
        deleteRequest20.primaryTerm(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest20.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str29 = deleteRequest28.id();
        org.elasticsearch.common.unit.TimeValue timeValue30 = deleteRequest28.timeout();
        long long31 = deleteRequest28.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest28.index("");
        java.lang.String str34 = deleteRequest28.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest28.parent("hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress37 = null;
        deleteRequest28.remoteAddress(transportAddress37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest39.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest39.index("");
        java.lang.String str44 = deleteRequest39.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest39.index("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue49 = deleteRequest48.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress50 = null;
        deleteRequest48.remoteAddress(transportAddress50);
        java.lang.String str52 = deleteRequest48.index();
        org.elasticsearch.index.VersionType versionType53 = deleteRequest48.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest46.versionType(versionType53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest28.versionType(versionType53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest24.versionType(versionType53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest0.versionType(versionType53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId65 = null;
        org.elasticsearch.tasks.Task task66 = deleteRequest61.createTask(0L, "", "", taskId65);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest61.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel69 = deleteRequest68.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest57.consistencyLevel(writeConsistencyLevel69);
        java.lang.String str71 = deleteRequest70.id();
        java.lang.Class<?> wildcardClass72 = deleteRequest70.getClass();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(transportAddress7);
        org.junit.Assert.assertNotNull(taskId8);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(timeValue30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-3L) + "'", long31 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(timeValue49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "delete {[null][null][null]}" + "'", str52, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(versionType53);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(task66);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel69 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel69.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test8831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8831");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        java.lang.String str4 = deleteRequest2.type();
        long long5 = deleteRequest2.primaryTerm();
        long long6 = deleteRequest2.version();
        java.lang.String str7 = deleteRequest2.type();
        deleteRequest2.primaryTerm(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest2.index("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        java.lang.String str12 = deleteRequest11.toString();
        java.lang.String str13 = deleteRequest11.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest11.index("delete {[][][delete {[][delete {[][][hi!]}][delete {[][][]}]}]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = deleteRequest15.remoteAddress();
        java.lang.String str17 = deleteRequest15.toString();
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest15.shardId();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-3L) + "'", long6 == (-3L));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}" + "'", str12, "delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}" + "'", str13, "delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(transportAddress16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[delete {[][][delete {[][delete {[][][hi!]}][delete {[][][]}]}]}][null][null]}" + "'", str17, "delete {[delete {[][][delete {[][delete {[][][hi!]}][delete {[][][]}]}]}][null][null]}");
        org.junit.Assert.assertNull(shardId18);
    }

    @Test
    public void test8832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8832");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        java.lang.String str4 = deleteRequest2.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest2.version((long) (short) 100);
        long long7 = deleteRequest2.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest2.version(0L);
        deleteRequest2.setParentTask("delete {[delete {[][null][null]}][null][null]}", (long) 0);
        deleteRequest2.setParentTask("delete {[][null][delete {[][delete {[][][hi!]}][delete {[][][]}]}]}", (long) (short) 1);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 100L + "'", long7 == 100L);
        org.junit.Assert.assertNotNull(deleteRequest9);
    }

    @Test
    public void test8833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8833");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        java.lang.String str9 = deleteRequest3.index();
        long long10 = deleteRequest3.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest3.type("delete {[null][null][delete {[hi!][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.routing("delete {[delete {[][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][][]}]}][delete {[][][hi!]}][delete {[][][]}]}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-3L) + "'", long10 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
    }

    @Test
    public void test8834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8834");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        org.elasticsearch.index.VersionType versionType2 = deleteRequest0.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.version((long) 'a');
        java.lang.String str5 = deleteRequest0.toString();
        boolean boolean6 = deleteRequest0.getShouldPersistResult();
        long long7 = deleteRequest0.primaryTerm();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(versionType2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[null][null][null]}" + "'", str5, "delete {[null][null][null]}");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
    }

    @Test
    public void test8835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8835");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.consistencyLevel(writeConsistencyLevel23);
        deleteRequest24.setParentTask("hi!", (long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest24.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest24.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId39 = null;
        org.elasticsearch.tasks.Task task40 = deleteRequest35.createTask(0L, "", "", taskId39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest35.setRefreshPolicy("");
        java.lang.String str43 = deleteRequest42.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long46 = deleteRequest45.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str48 = deleteRequest47.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue51 = deleteRequest50.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest47.timeout(timeValue51);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest52.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId55 = deleteRequest54.getParentTask();
        deleteRequest45.setParentTask(taskId55);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel57 = deleteRequest45.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest42.consistencyLevel(writeConsistencyLevel57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest31.consistencyLevel(writeConsistencyLevel57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest63.type("delete {[][][]}");
        java.lang.String str66 = deleteRequest63.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest63.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest63.index("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest74.type("delete {[][][]}");
        java.lang.String str77 = deleteRequest74.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = deleteRequest74.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = deleteRequest79.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest83 = deleteRequest79.type("delete {[][][]}");
        org.elasticsearch.common.unit.TimeValue timeValue84 = deleteRequest79.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest85 = deleteRequest70.timeout(timeValue84);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest86 = deleteRequest31.timeout(timeValue84);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest88 = deleteRequest31.routing("delete {[delete {[][null][null]}][][delete {[][][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest90 = deleteRequest31.version((long) (short) 10);
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(task40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "delete {[][][]}" + "'", str43, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(timeValue51);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(taskId55);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel57 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel57.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "delete {[][][]}" + "'", str66, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "delete {[][][]}" + "'", str77, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest79);
        org.junit.Assert.assertNotNull(deleteRequest81);
        org.junit.Assert.assertNotNull(deleteRequest83);
        org.junit.Assert.assertNotNull(timeValue84);
        org.junit.Assert.assertNotNull(deleteRequest85);
        org.junit.Assert.assertNotNull(deleteRequest86);
        org.junit.Assert.assertNotNull(deleteRequest88);
        org.junit.Assert.assertNotNull(deleteRequest90);
    }

    @Test
    public void test8836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8836");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId20 = null;
        org.elasticsearch.tasks.Task task21 = deleteRequest16.createTask(0L, "", "", taskId20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest16.setRefreshPolicy("");
        deleteRequest23.primaryTerm(1L);
        java.lang.String str26 = deleteRequest23.routing();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy27 = deleteRequest23.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest3.setRefreshPolicy(refreshPolicy27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId36 = null;
        org.elasticsearch.tasks.Task task37 = deleteRequest32.createTask(0L, "", "", taskId36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest32.setRefreshPolicy("");
        java.lang.String str40 = deleteRequest39.toString();
        java.lang.String[] strArray41 = deleteRequest39.indices();
        deleteRequest39.primaryTerm(0L);
        org.elasticsearch.common.unit.TimeValue timeValue44 = deleteRequest39.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest28.timeout(timeValue44);
        java.lang.String str46 = deleteRequest45.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest47.index("delete {[][][hi!]}");
        java.lang.String str50 = deleteRequest49.parent();
        java.lang.String str51 = deleteRequest49.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest49.parent("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest49.parent("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest55.routing("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest57.index("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.index.VersionType versionType60 = deleteRequest59.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest45.versionType(versionType60);
        java.lang.String str62 = deleteRequest45.type();
        java.lang.String str63 = deleteRequest45.getDescription();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][][]}" + "'", str12, "delete {[][][]}");
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + refreshPolicy27 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy27.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(task37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "delete {[][][]}" + "'", str40, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(timeValue44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "delete {[][][]}" + "'", str46, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str51, "delete {[delete {[][][hi!]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(versionType60);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "delete {[][][]}" + "'", str63, "delete {[][][]}");
    }

    @Test
    public void test8837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8837");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest3.consistencyLevel(writeConsistencyLevel11);
        deleteRequest12.setParentTask("hi!", 1L);
        java.lang.String str16 = deleteRequest12.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest12.id("delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions19 = deleteRequest12.indicesOptions();
        java.lang.String[] strArray20 = deleteRequest12.indices();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(indicesOptions19);
        org.junit.Assert.assertNotNull(strArray20);
    }

    @Test
    public void test8838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8838");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest7.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.id("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.parent("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard indexShard15 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete16 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest14, indexShard15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(taskId8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
    }

    @Test
    public void test8839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8839");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest3.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.timeout(timeValue8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str11 = deleteRequest10.parent();
        org.elasticsearch.index.VersionType versionType12 = deleteRequest10.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.versionType(versionType12);
        long long14 = deleteRequest13.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest13.type("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException17 = deleteRequest13.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure19 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][delete {[][][hi!]}][delete {[][][]}]}", (java.lang.Throwable) actionRequestValidationException17, "");
        java.lang.String str20 = shardFailure19.indexUUID;
        java.lang.String str21 = shardFailure19.reason;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting22 = shardFailure19.routing;
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(actionRequestValidationException17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[][delete {[][][hi!]}][delete {[][][]}]}" + "'", str21, "delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.junit.Assert.assertNull(shardRouting22);
    }

    @Test
    public void test8840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8840");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.common.unit.TimeValue timeValue5 = deleteRequest3.timeout();
        java.lang.String str6 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str11 = deleteRequest10.getDescription();
        org.elasticsearch.index.VersionType versionType12 = deleteRequest10.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.versionType(versionType12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.version((long) (short) 1);
        boolean boolean16 = deleteRequest3.getShouldPersistResult();
        java.lang.String str17 = deleteRequest3.parent();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test8841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8841");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str3 = deleteRequest2.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue6 = deleteRequest5.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest2.timeout(timeValue6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.id("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.version((long) 10);
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = deleteRequest9.remoteAddress();
        long long13 = deleteRequest9.primaryTerm();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "", deleteRequest9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(transportAddress12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
    }

    @Test
    public void test8842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8842");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.setRefreshPolicy(refreshPolicy14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.type("delete {[][][]}");
        java.lang.String str22 = deleteRequest19.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest19.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.parent("delete {[][][]}");
        long long27 = deleteRequest26.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest26.routing("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest33.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType36 = deleteRequest35.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress41 = deleteRequest40.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId49 = null;
        org.elasticsearch.tasks.Task task50 = deleteRequest45.createTask(0L, "", "", taskId49);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy51 = deleteRequest45.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest40.setRefreshPolicy(refreshPolicy51);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest35.setRefreshPolicy(refreshPolicy51);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel55 = deleteRequest54.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel56 = deleteRequest54.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest35.consistencyLevel(writeConsistencyLevel56);
        long long58 = deleteRequest35.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.shard.ShardId shardId61 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest60.setShardId(shardId61);
        deleteRequest60.primaryTerm((long) 1);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy65 = deleteRequest60.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest35.setRefreshPolicy(refreshPolicy65);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest29.setRefreshPolicy(refreshPolicy65);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest15.setRefreshPolicy(refreshPolicy65);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel69 = deleteRequest68.consistencyLevel();
        org.elasticsearch.index.shard.ShardId shardId70 = deleteRequest68.shardId();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(transportAddress13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[][][]}" + "'", str22, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-3L) + "'", long27 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(versionType36);
        org.junit.Assert.assertNull(transportAddress41);
        org.junit.Assert.assertNotNull(task50);
        org.junit.Assert.assertTrue("'" + refreshPolicy51 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy51.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel55 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel55.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel56 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel56.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + (-3L) + "'", long58 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertTrue("'" + refreshPolicy65 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy65.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel69 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel69.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(shardId70);
    }

    @Test
    public void test8843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8843");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str7 = deleteRequest6.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException8 = deleteRequest6.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure10 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "hi!", (java.lang.Throwable) actionRequestValidationException8, "delete {[][][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure12 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", (java.lang.Throwable) actionRequestValidationException8, "delete {[][][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure14 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][delete {[][][]}][delete {[][][]}]}", (java.lang.Throwable) actionRequestValidationException8, "");
        java.lang.Throwable throwable15 = shardFailure14.cause;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = shardFailure14.routing;
        java.lang.String str17 = shardFailure14.reason;
        java.lang.String str18 = shardFailure14.indexUUID;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting19 = shardFailure14.routing;
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[null][null][null]}" + "'", str7, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException8);
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable15.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNull(shardRouting16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[][delete {[][][]}][delete {[][][]}]}" + "'", str17, "delete {[][delete {[][][]}][delete {[][][]}]}");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNull(shardRouting19);
    }

    @Test
    public void test8844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8844");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][hi!]}", "delete {[hi!][null][null]}", "delete {[null][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        java.lang.String str6 = deleteRequest3.type();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy7 = deleteRequest3.getRefreshPolicy();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[hi!][null][null]}" + "'", str6, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + refreshPolicy7 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy7.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
    }

    @Test
    public void test8845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8845");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[null][null][null]}][null]}", "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}", "delete {[][delete {[][][]}][delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest3.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.index("delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}][delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][hi!][delete {[][][]}]}]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.timeout("delete {[delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}][delete {[delete {[][null][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}][delete {[delete {[][null][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertNotNull(deleteRequest6);
    }

    @Test
    public void test8846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8846");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str8 = deleteRequest7.id();
        java.lang.String str9 = deleteRequest7.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str11 = deleteRequest10.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId14 = deleteRequest10.getParentTask();
        deleteRequest7.setParentTask(taskId14);
        deleteRequest3.setParentTask(taskId14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest3.index("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.version((long) '#');
        java.lang.String str21 = deleteRequest20.id();
        org.elasticsearch.index.shard.IndexShard indexShard22 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult23 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest20, indexShard22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(taskId14);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[][][]}" + "'", str21, "delete {[][][]}");
    }

    @Test
    public void test8847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8847");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest10.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId13 = null;
        deleteRequest10.setParentTask(taskId13);
        deleteRequest10.primaryTerm((long) (-1));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}", "delete {[][][hi!]}", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str31 = deleteRequest30.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest30.id("hi!");
        org.elasticsearch.tasks.TaskId taskId34 = deleteRequest33.getParentTask();
        org.elasticsearch.tasks.TaskId taskId35 = deleteRequest33.getParentTask();
        org.elasticsearch.tasks.Task task36 = deleteRequest23.createTask((-1L), "", "hi!", taskId35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel41 = deleteRequest40.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel42 = deleteRequest40.consistencyLevel();
        deleteRequest40.primaryTerm((long) (short) 10);
        long long45 = deleteRequest40.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId56 = null;
        org.elasticsearch.tasks.Task task57 = deleteRequest52.createTask(0L, "", "", taskId56);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest52.setRefreshPolicy("");
        java.lang.String str60 = deleteRequest59.toString();
        java.lang.String[] strArray61 = deleteRequest59.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest59.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str72 = deleteRequest71.id();
        java.lang.String str73 = deleteRequest71.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str75 = deleteRequest74.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest74.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId78 = deleteRequest74.getParentTask();
        deleteRequest71.setParentTask(taskId78);
        deleteRequest67.setParentTask(taskId78);
        deleteRequest63.setParentTask(taskId78);
        org.elasticsearch.tasks.Task task82 = deleteRequest40.createTask((-1L), "delete {[][delete {[][][]}][delete {[][][]}]}", "delete {[][][hi!]}", taskId78);
        org.elasticsearch.tasks.Task task83 = deleteRequest23.createTask((long) (byte) 100, "delete {[][][hi!]}", "delete {[][][hi!]}", taskId78);
        org.elasticsearch.tasks.Task task84 = deleteRequest10.createTask((long) (-1), "delete {[delete {[][][hi!]}][null][null]}", "delete {[][null][null]}", taskId78);
        deleteRequest10.primaryTerm((long) (short) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest90 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.index.VersionType versionType91 = deleteRequest90.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel92 = deleteRequest90.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest93 = deleteRequest10.consistencyLevel(writeConsistencyLevel92);
        java.lang.Class<?> wildcardClass94 = deleteRequest93.getClass();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions12);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(taskId34);
        org.junit.Assert.assertNotNull(taskId35);
        org.junit.Assert.assertNotNull(task36);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel41 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel41.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel42 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel42.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-3L) + "'", long45 == (-3L));
        org.junit.Assert.assertNotNull(task57);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "delete {[][][]}" + "'", str60, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertNotNull(taskId78);
        org.junit.Assert.assertNotNull(task82);
        org.junit.Assert.assertNotNull(task83);
        org.junit.Assert.assertNotNull(task84);
        org.junit.Assert.assertNotNull(versionType91);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel92 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel92.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test8848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8848");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.common.unit.TimeValue timeValue2 = deleteRequest1.timeout();
        java.lang.String str3 = deleteRequest1.id();
        java.lang.String str4 = deleteRequest1.id();
        org.elasticsearch.index.VersionType versionType5 = deleteRequest1.versionType();
        org.junit.Assert.assertNotNull(timeValue2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(versionType5);
    }

    @Test
    public void test8849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8849");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][delete {[null][null][null]}]}", "delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}", "hi!");
    }

    @Test
    public void test8850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8850");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = deleteRequest0.remoteAddress();
        long long7 = deleteRequest0.version();
        boolean boolean8 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue11 = deleteRequest10.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = null;
        deleteRequest10.remoteAddress(transportAddress12);
        java.lang.String str14 = deleteRequest10.index();
        org.elasticsearch.index.VersionType versionType15 = deleteRequest10.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest0.versionType(versionType15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("", "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}", "delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.index("delete {[][][hi!]}");
        java.lang.String str27 = deleteRequest26.parent();
        java.lang.String str28 = deleteRequest26.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest26.version((long) (short) 100);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel31 = deleteRequest30.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId39 = null;
        org.elasticsearch.tasks.Task task40 = deleteRequest35.createTask(0L, "", "", taskId39);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy41 = deleteRequest35.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest30.setRefreshPolicy(refreshPolicy41);
        org.elasticsearch.common.unit.TimeValue timeValue43 = deleteRequest30.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest23.timeout(timeValue43);
        java.lang.String[] strArray45 = deleteRequest44.indices();
        org.elasticsearch.tasks.TaskId taskId46 = deleteRequest44.getParentTask();
        org.elasticsearch.tasks.Task task47 = deleteRequest0.createTask(35L, "delete {[delete {[][][hi!]}][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[null][null][null]}]}", "delete {[][delete {[delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[delete {[][][hi!]}][null][delete {[][][]}]}][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}]}][]}", taskId46);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(transportAddress6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-3L) + "'", long7 == (-3L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(timeValue11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[null][null][null]}" + "'", str14, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(versionType15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel31 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel31.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(task40);
        org.junit.Assert.assertTrue("'" + refreshPolicy41 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy41.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(timeValue43);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(taskId46);
        org.junit.Assert.assertNotNull(task47);
    }

    @Test
    public void test8851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8851");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.routing("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.version((long) (short) -1);
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = deleteRequest13.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest13.id("delete {[delete {[delete {[][][hi!]}][null][null]}][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel19 = deleteRequest13.consistencyLevel();
        java.lang.String str20 = deleteRequest13.routing();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(transportAddress16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel19 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel19.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[null][null][null]}" + "'", str20, "delete {[null][null][null]}");
    }

    @Test
    public void test8852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8852");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str7 = deleteRequest6.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest6.getParentTask();
        deleteRequest3.setParentTask(taskId10);
        org.elasticsearch.common.unit.TimeValue timeValue12 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.id("delete {[delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][null][null]}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertNotNull(timeValue12);
        org.junit.Assert.assertNotNull(deleteRequest14);
    }

    @Test
    public void test8853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8853");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel1 = deleteRequest0.consistencyLevel();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy2 = deleteRequest0.getRefreshPolicy();
        deleteRequest0.setParentTask("delete {[hi!][null][null]}", (long) (short) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId13 = null;
        org.elasticsearch.tasks.Task task14 = deleteRequest9.createTask(0L, "", "", taskId13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest9.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType17 = deleteRequest9.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel18 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest0.consistencyLevel(writeConsistencyLevel18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.type("delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.index.VersionType versionType22 = deleteRequest19.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest19.id("delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel1 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel1.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + refreshPolicy2 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy2.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(versionType17);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel18 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel18.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertNotNull(deleteRequest24);
    }

    @Test
    public void test8854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8854");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.type("delete {[null][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = deleteRequest3.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.version((long) '4');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId16 = null;
        org.elasticsearch.tasks.Task task17 = deleteRequest12.createTask(0L, "", "", taskId16);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel18 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress23 = deleteRequest22.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId31 = null;
        org.elasticsearch.tasks.Task task32 = deleteRequest27.createTask(0L, "", "", taskId31);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy33 = deleteRequest27.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest22.setRefreshPolicy(refreshPolicy33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest12.setRefreshPolicy(refreshPolicy33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest6.setRefreshPolicy(refreshPolicy33);
        org.elasticsearch.tasks.TaskId taskId37 = deleteRequest36.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][null][null]}", "delete {[hi!][null][null]}", "delete {[hi!][null][null]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy42 = deleteRequest41.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest41.version((long) '4');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest46.type("delete {[null][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress49 = deleteRequest48.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest48.setShardId(shardId50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest51.version((long) '4');
        org.elasticsearch.common.transport.TransportAddress transportAddress54 = deleteRequest53.remoteAddress();
        org.elasticsearch.index.VersionType versionType55 = deleteRequest53.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest41.versionType(versionType55);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest36.versionType(versionType55);
        org.elasticsearch.common.transport.TransportAddress transportAddress58 = null;
        deleteRequest57.remoteAddress(transportAddress58);
        org.elasticsearch.common.transport.TransportAddress transportAddress60 = deleteRequest57.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest57.id("delete {[][delete {[][][]}][delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}]}");
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(transportAddress4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(task17);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel18 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel18.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(transportAddress23);
        org.junit.Assert.assertNotNull(task32);
        org.junit.Assert.assertTrue("'" + refreshPolicy33 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy33.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(taskId37);
        org.junit.Assert.assertTrue("'" + refreshPolicy42 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy42.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNull(transportAddress49);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNull(transportAddress54);
        org.junit.Assert.assertNotNull(versionType55);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNull(transportAddress60);
        org.junit.Assert.assertNotNull(deleteRequest62);
    }

    @Test
    public void test8855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8855");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId12 = null;
        org.elasticsearch.tasks.Task task13 = deleteRequest8.createTask(0L, "", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest8.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel16 = deleteRequest15.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions17 = deleteRequest15.indicesOptions();
        java.lang.String str18 = deleteRequest15.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str20 = deleteRequest19.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest19.version((long) (short) 100);
        deleteRequest19.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str26 = deleteRequest25.parent();
        org.elasticsearch.index.VersionType versionType27 = deleteRequest25.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest19.versionType(versionType27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest15.versionType(versionType27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest3.versionType(versionType27);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy31 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest1.setRefreshPolicy(refreshPolicy31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.type("delete {[delete {[][delete {[null][null][null]}][delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}]}][delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}][]}");
        org.elasticsearch.common.io.stream.StreamInput streamInput35 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest32.readFrom(streamInput35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel16 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel16.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[][][]}" + "'", str18, "delete {[][][]}");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(versionType27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertTrue("'" + refreshPolicy31 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy31.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
    }

    @Test
    public void test8856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8856");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("delete {[][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = deleteRequest5.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.index("delete {[][][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.setShardId(shardId9);
        java.lang.String[] strArray11 = deleteRequest5.indices();
        java.lang.String str12 = deleteRequest5.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId20 = null;
        org.elasticsearch.tasks.Task task21 = deleteRequest16.createTask(0L, "", "", taskId20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest16.setRefreshPolicy("");
        java.lang.String str24 = deleteRequest23.toString();
        java.lang.String[] strArray25 = deleteRequest23.indices();
        deleteRequest23.primaryTerm(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest23.routing("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue30 = deleteRequest29.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest29.type("delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy33 = deleteRequest32.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest5.setRefreshPolicy(refreshPolicy33);
        deleteRequest34.primaryTerm((long) (short) 0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(transportAddress6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "delete {[][][]}" + "'", str24, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(timeValue30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + refreshPolicy33 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy33.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(deleteRequest34);
    }

    @Test
    public void test8857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8857");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[][][]}");
        java.lang.String str9 = deleteRequest8.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId17 = null;
        org.elasticsearch.tasks.Task task18 = deleteRequest13.createTask(0L, "", "", taskId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest13.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel21 = deleteRequest20.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions22 = deleteRequest20.indicesOptions();
        java.lang.String str23 = deleteRequest20.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str25 = deleteRequest24.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest24.version((long) (short) 100);
        deleteRequest24.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str31 = deleteRequest30.parent();
        org.elasticsearch.index.VersionType versionType32 = deleteRequest30.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest24.versionType(versionType32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest20.versionType(versionType32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest34.id("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        java.lang.String str37 = deleteRequest34.parent();
        java.lang.String[] strArray38 = deleteRequest34.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest34.version((long) (byte) 10);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy41 = deleteRequest40.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest8.setRefreshPolicy(refreshPolicy41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest8.id("delete {[delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}][delete {[][delete {[null][null][null]}][delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}]}][delete {[delete {[hi!][null][null]}][null][null]}]}");
        java.lang.String[] strArray45 = deleteRequest8.indices();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[][][]}" + "'", str9, "delete {[][][]}");
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel21 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel21.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[][][]}" + "'", str23, "delete {[][][]}");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(versionType32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertTrue("'" + refreshPolicy41 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy41.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(strArray45);
    }

    @Test
    public void test8858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8858");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = null;
        deleteRequest10.remoteAddress(transportAddress11);
        boolean boolean13 = deleteRequest10.getShouldPersistResult();
        org.elasticsearch.action.support.IndicesOptions indicesOptions14 = deleteRequest10.indicesOptions();
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = deleteRequest10.remoteAddress();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(indicesOptions14);
        org.junit.Assert.assertNull(transportAddress15);
    }

    @Test
    public void test8859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8859");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}", "delete {[delete {[hi!][null][null]}][null][null]}", "delete {[null][null][null]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy4 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId12 = null;
        org.elasticsearch.tasks.Task task13 = deleteRequest8.createTask(0L, "", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest8.setRefreshPolicy("");
        java.lang.String str16 = deleteRequest15.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long19 = deleteRequest18.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str21 = deleteRequest20.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue24 = deleteRequest23.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest20.timeout(timeValue24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId28 = deleteRequest27.getParentTask();
        deleteRequest18.setParentTask(taskId28);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel30 = deleteRequest18.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest15.consistencyLevel(writeConsistencyLevel30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId39 = null;
        org.elasticsearch.tasks.Task task40 = deleteRequest35.createTask(0L, "", "", taskId39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest35.setRefreshPolicy("");
        deleteRequest42.primaryTerm(1L);
        boolean boolean45 = deleteRequest42.getShouldPersistResult();
        java.lang.String str46 = deleteRequest42.id();
        org.elasticsearch.index.VersionType versionType47 = deleteRequest42.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest15.versionType(versionType47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest49.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest51.type("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId61 = null;
        org.elasticsearch.tasks.Task task62 = deleteRequest57.createTask(0L, "", "", taskId61);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy63 = deleteRequest57.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId71 = null;
        org.elasticsearch.tasks.Task task72 = deleteRequest67.createTask(0L, "", "", taskId71);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy73 = deleteRequest67.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest57.setRefreshPolicy(refreshPolicy73);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest53.setRefreshPolicy(refreshPolicy73);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest53.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        deleteRequest53.primaryTerm((long) ' ');
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel80 = deleteRequest53.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = deleteRequest15.consistencyLevel(writeConsistencyLevel80);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest82 = deleteRequest3.consistencyLevel(writeConsistencyLevel80);
        org.junit.Assert.assertTrue("'" + refreshPolicy4 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy4.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[][][]}" + "'", str16, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(timeValue24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(taskId28);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel30 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel30.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(task40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertNotNull(versionType47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(task62);
        org.junit.Assert.assertTrue("'" + refreshPolicy63 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy63.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task72);
        org.junit.Assert.assertTrue("'" + refreshPolicy73 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy73.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertNotNull(deleteRequest75);
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel80 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel80.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest81);
        org.junit.Assert.assertNotNull(deleteRequest82);
    }

    @Test
    public void test8860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8860");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][null][null]}", "delete {[hi!][null][null]}", "delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.setRefreshPolicy("");
        long long6 = deleteRequest5.primaryTerm();
        java.lang.String[] strArray7 = deleteRequest5.indices();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException8 = deleteRequest5.validate();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel9 = deleteRequest5.consistencyLevel();
        java.lang.String str10 = deleteRequest5.index();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNull(actionRequestValidationException8);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel9 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel9.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][null][null]}" + "'", str10, "delete {[][null][null]}");
    }

    @Test
    public void test8861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8861");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel1 = deleteRequest0.consistencyLevel();
        java.lang.String str2 = deleteRequest0.parent();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel3 = deleteRequest0.consistencyLevel();
        boolean boolean4 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.type("delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}");
        java.lang.String[] strArray7 = deleteRequest6.indices();
        long long8 = deleteRequest6.primaryTerm();
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel1 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel1.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel3 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel3.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
    }

    @Test
    public void test8862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8862");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest5.id("delete {[][][]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException10 = deleteRequest9.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId13 = deleteRequest12.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId21 = null;
        org.elasticsearch.tasks.Task task22 = deleteRequest17.createTask(0L, "", "", taskId21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest17.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions26 = deleteRequest24.indicesOptions();
        java.lang.String str27 = deleteRequest24.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str29 = deleteRequest28.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest28.version((long) (short) 100);
        deleteRequest28.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str35 = deleteRequest34.parent();
        org.elasticsearch.index.VersionType versionType36 = deleteRequest34.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest28.versionType(versionType36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest24.versionType(versionType36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest12.versionType(versionType36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest9.versionType(versionType36);
        deleteRequest9.primaryTerm((long) (short) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest9.version((long) (short) -1);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException45 = deleteRequest9.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure47 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[null][null][null]}][delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}][delete {[][delete {[delete {[][null][null]}][][]}][delete {[null][delete {[null][null][null]}][null]}]}]}", (java.lang.Throwable) actionRequestValidationException45, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNull(actionRequestValidationException10);
        org.junit.Assert.assertNull(shardId13);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][][]}" + "'", str27, "delete {[][][]}");
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(versionType36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(actionRequestValidationException45);
    }

    @Test
    public void test8863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8863");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.getDescription();
        org.elasticsearch.action.support.IndicesOptions indicesOptions5 = deleteRequest3.indicesOptions();
        java.lang.String str6 = deleteRequest3.getDescription();
        long long7 = deleteRequest3.primaryTerm();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.timeout("delete {[null][null][delete {[null][null][null]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[null][null][delete {[null][null][null]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][][]}" + "'", str4, "delete {[][][]}");
        org.junit.Assert.assertNotNull(indicesOptions5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
    }

    @Test
    public void test8864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8864");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("hi!");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy4 = deleteRequest0.getRefreshPolicy();
        java.lang.String str5 = deleteRequest0.getDescription();
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = deleteRequest0.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.version((long) (-1));
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest10.getParentTask();
        deleteRequest10.primaryTerm((long) (short) 10);
        org.elasticsearch.common.unit.TimeValue timeValue14 = deleteRequest10.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest0.timeout(timeValue14);
        deleteRequest0.primaryTerm((long) 100);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "delete {[null][null][null]}" + "'", str1, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertTrue("'" + refreshPolicy4 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy4.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[null][null][null]}" + "'", str5, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(transportAddress6);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertNotNull(timeValue14);
        org.junit.Assert.assertNotNull(deleteRequest15);
    }

    @Test
    public void test8865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8865");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][null][null]}", throwable2, "delete {[][][hi!]}");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting5 = shardFailure4.routing;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = shardFailure4.routing;
        java.lang.String str7 = shardFailure4.indexUUID;
        java.lang.String str8 = shardFailure4.reason;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting9 = shardFailure4.routing;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = shardFailure4.routing;
        java.lang.String str11 = shardFailure4.indexUUID;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = shardFailure4.routing;
        org.junit.Assert.assertNull(shardRouting5);
        org.junit.Assert.assertNull(shardRouting6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[][][hi!]}" + "'", str7, "delete {[][][hi!]}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[null][null][null]}" + "'", str8, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(shardRouting9);
        org.junit.Assert.assertNull(shardRouting10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][hi!]}" + "'", str11, "delete {[][][hi!]}");
        org.junit.Assert.assertNull(shardRouting12);
    }

    @Test
    public void test8866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8866");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.consistencyLevel(writeConsistencyLevel23);
        deleteRequest24.setParentTask("hi!", (long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest24.routing("hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress30 = deleteRequest29.remoteAddress();
        deleteRequest29.primaryTerm(0L);
        java.lang.String str33 = deleteRequest29.parent();
        org.elasticsearch.index.shard.IndexShard indexShard34 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete35 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest29, indexShard34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNull(transportAddress30);
        org.junit.Assert.assertNull(str33);
    }

    @Test
    public void test8867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8867");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}", "delete {[][delete {[delete {[][][hi!]}][null][null]}][]}", "delete {[null][delete {[][delete {[hi!][null][null]}][hi!]}][delete {[][][hi!]}]}");
        java.lang.String[] strArray4 = deleteRequest3.indices();
        org.junit.Assert.assertNotNull(strArray4);
    }

    @Test
    public void test8868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8868");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        deleteRequest10.primaryTerm(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.type("hi!");
        java.lang.String str15 = deleteRequest14.parent();
        org.elasticsearch.action.support.IndicesOptions indicesOptions16 = deleteRequest14.indicesOptions();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(indicesOptions16);
    }

    @Test
    public void test8869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8869");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str7 = deleteRequest6.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest6.getParentTask();
        deleteRequest3.setParentTask(taskId10);
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.version(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest3.routing("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str21 = deleteRequest20.id();
        java.lang.String str22 = deleteRequest20.index();
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest20.getParentTask();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException24 = deleteRequest20.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue27 = deleteRequest26.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress28 = null;
        deleteRequest26.remoteAddress(transportAddress28);
        org.elasticsearch.common.unit.TimeValue timeValue30 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest26.timeout(timeValue30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest20.timeout(timeValue30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest3.timeout(timeValue30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest40.type("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId50 = null;
        org.elasticsearch.tasks.Task task51 = deleteRequest46.createTask(0L, "", "", taskId50);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy52 = deleteRequest46.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId60 = null;
        org.elasticsearch.tasks.Task task61 = deleteRequest56.createTask(0L, "", "", taskId60);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy62 = deleteRequest56.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest46.setRefreshPolicy(refreshPolicy62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest42.setRefreshPolicy(refreshPolicy62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest42.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        deleteRequest66.setParentTask("delete {[][][hi!]}", (long) (byte) 100);
        org.elasticsearch.common.transport.TransportAddress transportAddress70 = null;
        deleteRequest66.remoteAddress(transportAddress70);
        org.elasticsearch.index.VersionType versionType72 = deleteRequest66.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest37.versionType(versionType72);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest3.versionType(versionType72);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException75 = deleteRequest74.validate();
        java.lang.String str76 = deleteRequest74.index();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertNull(actionRequestValidationException24);
        org.junit.Assert.assertNotNull(timeValue27);
        org.junit.Assert.assertNotNull(timeValue30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(task51);
        org.junit.Assert.assertTrue("'" + refreshPolicy52 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy52.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task61);
        org.junit.Assert.assertTrue("'" + refreshPolicy62 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy62.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNotNull(versionType72);
        org.junit.Assert.assertNotNull(deleteRequest73);
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertNull(actionRequestValidationException75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
    }

    @Test
    public void test8870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8870");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = null;
        deleteRequest10.remoteAddress(transportAddress11);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest10.consistencyLevel();
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = deleteRequest10.remoteAddress();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(transportAddress14);
    }

    @Test
    public void test8871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8871");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.id("delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.type("delete {[][][]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy16 = deleteRequest13.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.setRefreshPolicy(refreshPolicy16);
        org.elasticsearch.common.transport.TransportAddress transportAddress18 = deleteRequest3.remoteAddress();
        java.lang.String str19 = deleteRequest3.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.id("delete {[delete {[hi!][null][null]}][null][delete {[][][hi!]}]}");
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.setShardId(shardId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.index("delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}");
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + refreshPolicy16 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy16.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(transportAddress18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[][][]}" + "'", str19, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
    }

    @Test
    public void test8872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8872");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version((long) (short) 100);
        boolean boolean4 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = null;
        deleteRequest3.remoteAddress(transportAddress5);
        java.lang.String[] strArray7 = deleteRequest3.indices();
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.setShardId(shardId8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.type("delete {[delete {[][][]}][delete {[null][null][null]}][delete {[null][null][null]}]}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
    }

    @Test
    public void test8873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8873");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = null;
        deleteRequest10.remoteAddress(transportAddress11);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest10.consistencyLevel();
        org.elasticsearch.index.shard.ShardId shardId14 = deleteRequest10.shardId();
        boolean boolean15 = deleteRequest10.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest10.index("delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[][][]}][delete {[][][]}]}", "delete {[delete {[hi!][null][null]}][null][null]}", "delete {[][null][null]}");
        org.elasticsearch.index.VersionType versionType22 = deleteRequest21.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest17.versionType(versionType22);
        org.elasticsearch.index.VersionType versionType24 = deleteRequest23.versionType();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(shardId14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(versionType24);
    }

    @Test
    public void test8874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8874");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest9.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue14 = deleteRequest13.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest9.timeout(timeValue14);
        java.lang.String str16 = deleteRequest9.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException17 = deleteRequest9.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure19 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[delete {[][][hi!]}][null][null]}", (java.lang.Throwable) actionRequestValidationException17, "delete {[][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure21 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "", (java.lang.Throwable) actionRequestValidationException17, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure23 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "hi!", (java.lang.Throwable) actionRequestValidationException17, "delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure25 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][null][null]}", (java.lang.Throwable) actionRequestValidationException17, "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting26 = shardFailure25.routing;
        java.lang.Throwable throwable27 = shardFailure25.cause;
        java.lang.Throwable throwable28 = shardFailure25.cause;
        org.junit.Assert.assertNotNull(timeValue14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[][null][null]}" + "'", str16, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException17);
        org.junit.Assert.assertNull(shardRouting26);
        org.junit.Assert.assertNotNull(throwable27);
        org.junit.Assert.assertEquals(throwable27.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable27.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable27.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertNotNull(throwable28);
        org.junit.Assert.assertEquals(throwable28.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable28.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable28.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
    }

    @Test
    public void test8875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8875");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue2 = deleteRequest1.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress3 = null;
        deleteRequest1.remoteAddress(transportAddress3);
        org.elasticsearch.common.unit.TimeValue timeValue5 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest1.timeout(timeValue5);
        java.lang.String[] strArray7 = deleteRequest6.indices();
        org.junit.Assert.assertNotNull(timeValue2);
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(strArray7);
    }

    @Test
    public void test8876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8876");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str3 = deleteRequest2.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue6 = deleteRequest5.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest2.timeout(timeValue6);
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = deleteRequest2.remoteAddress();
        long long9 = deleteRequest2.version();
        java.lang.String str10 = deleteRequest2.routing();
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest2.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest2.routing("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException14 = deleteRequest2.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure16 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][][]}", (java.lang.Throwable) actionRequestValidationException14, "delete {[][hi!][delete {[][delete {[delete {[][][hi!]}][null][null]}][]}]}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(transportAddress8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-3L) + "'", long9 == (-3L));
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(actionRequestValidationException14);
    }

    @Test
    public void test8877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8877");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest2.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.parent("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId15 = null;
        org.elasticsearch.tasks.Task task16 = deleteRequest11.createTask(0L, "", "", taskId15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest11.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType19 = deleteRequest11.versionType();
        java.lang.String str20 = deleteRequest11.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress21 = deleteRequest11.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy22 = deleteRequest11.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str24 = deleteRequest23.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest23.version((long) (short) 100);
        java.lang.String str27 = deleteRequest23.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue30 = deleteRequest29.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress31 = null;
        deleteRequest29.remoteAddress(transportAddress31);
        java.lang.String str33 = deleteRequest29.index();
        org.elasticsearch.index.VersionType versionType34 = deleteRequest29.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest23.versionType(versionType34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest11.versionType(versionType34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest7.versionType(versionType34);
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest37.setShardId(shardId38);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(task16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(versionType19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(transportAddress21);
        org.junit.Assert.assertTrue("'" + refreshPolicy22 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy22.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(timeValue30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "delete {[null][null][null]}" + "'", str33, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(versionType34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest39);
    }

    @Test
    public void test8878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8878");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest1.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue6 = deleteRequest5.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.timeout(timeValue6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str9 = deleteRequest8.parent();
        org.elasticsearch.index.VersionType versionType10 = deleteRequest8.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest1.versionType(versionType10);
        long long12 = deleteRequest11.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.type("");
        java.lang.String str15 = deleteRequest14.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.id("delete {[delete {[][][]}][null][null]}");
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest17.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str23 = deleteRequest22.id();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest22.setShardId(shardId24);
        java.lang.String str26 = deleteRequest22.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue29 = deleteRequest28.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress30 = null;
        deleteRequest28.remoteAddress(transportAddress30);
        java.lang.String str32 = deleteRequest28.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest28.parent("delete {[hi!][null][null]}");
        org.elasticsearch.tasks.TaskId taskId35 = deleteRequest34.getParentTask();
        deleteRequest22.setParentTask(taskId35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest22.type("delete {[null][null][null]}");
        java.lang.String str39 = deleteRequest22.routing();
        org.elasticsearch.index.VersionType versionType40 = deleteRequest22.versionType();
        long long41 = deleteRequest22.primaryTerm();
        long long42 = deleteRequest22.version();
        org.elasticsearch.common.unit.TimeValue timeValue43 = deleteRequest22.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest17.timeout(timeValue43);
        org.elasticsearch.index.shard.ShardId shardId45 = deleteRequest17.shardId();
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(versionType10);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[][][null]}" + "'", str15, "delete {[][][null]}");
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(timeValue29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[null][null][null]}" + "'", str32, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(taskId35);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(versionType40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 0L + "'", long41 == 0L);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-3L) + "'", long42 == (-3L));
        org.junit.Assert.assertNotNull(timeValue43);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNull(shardId45);
    }

    @Test
    public void test8879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8879");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel9 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = deleteRequest13.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId22 = null;
        org.elasticsearch.tasks.Task task23 = deleteRequest18.createTask(0L, "", "", taskId22);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy24 = deleteRequest18.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest13.setRefreshPolicy(refreshPolicy24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest3.setRefreshPolicy(refreshPolicy24);
        java.lang.String str27 = deleteRequest26.parent();
        java.lang.String[] strArray28 = deleteRequest26.indices();
        deleteRequest26.setParentTask("delete {[delete {[][null][null]}][][]}", 1L);
        java.lang.String str32 = deleteRequest26.getDescription();
        java.lang.String str33 = deleteRequest26.id();
        java.lang.String[] strArray34 = deleteRequest26.indices();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy35 = deleteRequest26.getRefreshPolicy();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel9 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel9.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(transportAddress14);
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertTrue("'" + refreshPolicy24 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy24.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[][][]}" + "'", str32, "delete {[][][]}");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + refreshPolicy35 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy35.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
    }

    @Test
    public void test8880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8880");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version((long) (short) 100);
        boolean boolean4 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = null;
        deleteRequest3.remoteAddress(transportAddress5);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}", "delete {[delete {[hi!][null][null]}][null][null]}", "delete {[null][null][null]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy11 = deleteRequest10.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest3.setRefreshPolicy(refreshPolicy11);
        org.elasticsearch.index.shard.IndexShard indexShard13 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete14 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest12, indexShard13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + refreshPolicy11 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy11.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest12);
    }

    @Test
    public void test8881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8881");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = deleteRequest3.remoteAddress();
        java.lang.String str14 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest3.parent("");
        java.lang.String str17 = deleteRequest3.toString();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(transportAddress13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[][][]}" + "'", str17, "delete {[][][]}");
    }

    @Test
    public void test8882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8882");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[null][null][null]}][null]}", "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}", "delete {[][delete {[][][]}][delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.parent("delete {[hi!][][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel8 = deleteRequest5.consistencyLevel();
        org.elasticsearch.index.VersionType versionType9 = deleteRequest5.versionType();
        org.elasticsearch.common.transport.TransportAddress transportAddress10 = deleteRequest5.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][null][null]}", "delete {[][][delete {[hi!][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId22 = null;
        org.elasticsearch.tasks.Task task23 = deleteRequest18.createTask(0L, "", "", taskId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest18.setRefreshPolicy("");
        java.lang.String str26 = deleteRequest25.toString();
        java.lang.String str27 = deleteRequest25.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.type("delete {[null][null][null]}");
        java.lang.String str32 = deleteRequest29.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest29.index("");
        org.elasticsearch.common.unit.TimeValue timeValue35 = deleteRequest34.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest25.timeout(timeValue35);
        org.elasticsearch.index.VersionType versionType37 = deleteRequest36.versionType();
        org.elasticsearch.index.VersionType versionType38 = deleteRequest36.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest14.versionType(versionType38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str44 = deleteRequest43.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest43.id("hi!");
        org.elasticsearch.tasks.TaskId taskId47 = deleteRequest46.getParentTask();
        org.elasticsearch.tasks.TaskId taskId48 = deleteRequest46.getParentTask();
        org.elasticsearch.common.unit.TimeValue timeValue49 = deleteRequest46.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest53.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest53.id("delete {[][][]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException58 = deleteRequest57.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId61 = deleteRequest60.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId69 = null;
        org.elasticsearch.tasks.Task task70 = deleteRequest65.createTask(0L, "", "", taskId69);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest65.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel73 = deleteRequest72.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions74 = deleteRequest72.indicesOptions();
        java.lang.String str75 = deleteRequest72.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str77 = deleteRequest76.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = deleteRequest76.version((long) (short) 100);
        deleteRequest76.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest82 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str83 = deleteRequest82.parent();
        org.elasticsearch.index.VersionType versionType84 = deleteRequest82.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest85 = deleteRequest76.versionType(versionType84);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest86 = deleteRequest72.versionType(versionType84);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = deleteRequest60.versionType(versionType84);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest88 = deleteRequest57.versionType(versionType84);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest89 = deleteRequest46.versionType(versionType84);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy90 = deleteRequest89.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest91 = deleteRequest39.setRefreshPolicy(refreshPolicy90);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest92 = deleteRequest5.setRefreshPolicy(refreshPolicy90);
        java.lang.String str93 = deleteRequest5.getDescription();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel8 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel8.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNull(transportAddress10);
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "delete {[][][]}" + "'", str26, "delete {[][][]}");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][][]}" + "'", str27, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(timeValue35);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(versionType37);
        org.junit.Assert.assertNotNull(versionType38);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(taskId47);
        org.junit.Assert.assertNotNull(taskId48);
        org.junit.Assert.assertNotNull(timeValue49);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNull(actionRequestValidationException58);
        org.junit.Assert.assertNull(shardId61);
        org.junit.Assert.assertNotNull(task70);
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel73 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel73.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "delete {[][][]}" + "'", str75, "delete {[][][]}");
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(deleteRequest79);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNotNull(versionType84);
        org.junit.Assert.assertNotNull(deleteRequest85);
        org.junit.Assert.assertNotNull(deleteRequest86);
        org.junit.Assert.assertNotNull(deleteRequest87);
        org.junit.Assert.assertNotNull(deleteRequest88);
        org.junit.Assert.assertNotNull(deleteRequest89);
        org.junit.Assert.assertTrue("'" + refreshPolicy90 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy90.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest91);
        org.junit.Assert.assertNotNull(deleteRequest92);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "delete {[delete {[][delete {[null][null][null]}][null]}][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][delete {[][][]}][delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}]}]}" + "'", str93, "delete {[delete {[][delete {[null][null][null]}][null]}][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][delete {[][][]}][delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}]}]}");
    }

    @Test
    public void test8883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8883");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.setShardId(shardId2);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy6 = deleteRequest5.getRefreshPolicy();
        java.lang.String str7 = deleteRequest5.getDescription();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + refreshPolicy6 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy6.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[hi!][null][null]}" + "'", str7, "delete {[hi!][null][null]}");
    }

    @Test
    public void test8884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8884");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.type("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId12 = null;
        org.elasticsearch.tasks.Task task13 = deleteRequest8.createTask(0L, "", "", taskId12);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = deleteRequest8.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId22 = null;
        org.elasticsearch.tasks.Task task23 = deleteRequest18.createTask(0L, "", "", taskId22);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy24 = deleteRequest18.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest8.setRefreshPolicy(refreshPolicy24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest4.setRefreshPolicy(refreshPolicy24);
        java.lang.String str27 = deleteRequest26.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.index("delete {[][][hi!]}");
        java.lang.String str31 = deleteRequest30.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest30.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest33.parent("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId43 = null;
        org.elasticsearch.tasks.Task task44 = deleteRequest39.createTask(0L, "", "", taskId43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest39.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType47 = deleteRequest39.versionType();
        java.lang.String str48 = deleteRequest39.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress49 = deleteRequest39.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy50 = deleteRequest39.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str52 = deleteRequest51.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest51.version((long) (short) 100);
        java.lang.String str55 = deleteRequest51.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue58 = deleteRequest57.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress59 = null;
        deleteRequest57.remoteAddress(transportAddress59);
        java.lang.String str61 = deleteRequest57.index();
        org.elasticsearch.index.VersionType versionType62 = deleteRequest57.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest51.versionType(versionType62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest39.versionType(versionType62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest35.versionType(versionType62);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy66 = deleteRequest65.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest26.setRefreshPolicy(refreshPolicy66);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest67.index("delete {[delete {[null][null][null]}][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest69.id("delete {[][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][][]}]}");
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertTrue("'" + refreshPolicy14 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy14.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertTrue("'" + refreshPolicy24 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy24.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(task44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(versionType47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(transportAddress49);
        org.junit.Assert.assertTrue("'" + refreshPolicy50 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy50.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(timeValue58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "delete {[null][null][null]}" + "'", str61, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(versionType62);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertTrue("'" + refreshPolicy66 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy66.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(deleteRequest71);
    }

    @Test
    public void test8885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8885");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("delete {[][][]}");
        java.lang.String str10 = deleteRequest7.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId22 = null;
        org.elasticsearch.tasks.Task task23 = deleteRequest18.createTask(0L, "", "", taskId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest18.setRefreshPolicy("");
        java.lang.String[] strArray26 = deleteRequest25.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId34 = null;
        org.elasticsearch.tasks.Task task35 = deleteRequest30.createTask(0L, "", "", taskId34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest30.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = deleteRequest37.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest25.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue42 = deleteRequest41.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress43 = null;
        deleteRequest41.remoteAddress(transportAddress43);
        org.elasticsearch.common.unit.TimeValue timeValue45 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest41.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest25.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest14.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest3.timeout(timeValue45);
        org.elasticsearch.action.support.IndicesOptions indicesOptions50 = deleteRequest49.indicesOptions();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel51 = deleteRequest49.consistencyLevel();
        java.lang.String str52 = deleteRequest49.getDescription();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest49.timeout("delete {[delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][delete {[null][null][null]}][]}][delete {[][][]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][delete {[null][null][null]}][]}][delete {[][][]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][][]}" + "'", str10, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(task35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel38 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel38.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(timeValue42);
        org.junit.Assert.assertNotNull(timeValue45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(indicesOptions50);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel51 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel51.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "delete {[null][null][null]}" + "'", str52, "delete {[null][null][null]}");
    }

    @Test
    public void test8886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8886");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long2 = deleteRequest1.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest1.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.index("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str10 = deleteRequest9.parent();
        org.elasticsearch.index.VersionType versionType11 = deleteRequest9.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.type("delete {[][][hi!]}");
        org.elasticsearch.common.unit.TimeValue timeValue18 = deleteRequest17.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest9.timeout(timeValue18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest6.timeout(timeValue18);
        boolean boolean21 = deleteRequest20.getShouldPersistResult();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput22 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest20.writeTo(streamOutput22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(timeValue18);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test8887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8887");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str3 = deleteRequest2.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest2.parent("hi!");
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.setShardId(shardId6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest5.routing("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        java.lang.String str10 = deleteRequest9.type();
        java.lang.String str11 = deleteRequest9.type();
        deleteRequest9.primaryTerm((long) 'a');
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[][delete {[null][null][null]}][delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}]}][delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}][]}", deleteRequest9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "delete {[null][null][null]}" + "'", str3, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test8888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8888");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.setRefreshPolicy("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy10 = deleteRequest6.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId18 = null;
        org.elasticsearch.tasks.Task task19 = deleteRequest14.createTask(0L, "", "", taskId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType22 = deleteRequest14.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest14.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest6.consistencyLevel(writeConsistencyLevel23);
        deleteRequest6.primaryTerm((long) '#');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str31 = deleteRequest30.id();
        org.elasticsearch.common.transport.TransportAddress transportAddress32 = deleteRequest30.remoteAddress();
        org.elasticsearch.index.VersionType versionType33 = deleteRequest30.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest6.versionType(versionType33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest6.id("delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str41 = deleteRequest40.id();
        java.lang.String str42 = deleteRequest40.index();
        org.elasticsearch.tasks.TaskId taskId43 = deleteRequest40.getParentTask();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException44 = deleteRequest40.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue47 = deleteRequest46.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress48 = null;
        deleteRequest46.remoteAddress(transportAddress48);
        org.elasticsearch.common.unit.TimeValue timeValue50 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest46.timeout(timeValue50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest40.timeout(timeValue50);
        java.lang.String str53 = deleteRequest40.toString();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy54 = deleteRequest40.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest36.setRefreshPolicy(refreshPolicy54);
        java.lang.String str56 = deleteRequest36.id();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + refreshPolicy10 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy10.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(task19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNull(transportAddress32);
        org.junit.Assert.assertNotNull(versionType33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(taskId43);
        org.junit.Assert.assertNull(actionRequestValidationException44);
        org.junit.Assert.assertNotNull(timeValue47);
        org.junit.Assert.assertNotNull(timeValue50);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "delete {[][][]}" + "'", str53, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + refreshPolicy54 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy54.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][null][null]}" + "'", str56, "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][null][null]}");
    }

    @Test
    public void test8889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8889");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][null][null]}", throwable2, "delete {[][][]}");
        java.lang.String str5 = shardFailure4.reason;
        java.lang.Throwable throwable6 = shardFailure4.cause;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting7 = shardFailure4.routing;
        java.lang.String str8 = shardFailure4.indexUUID;
        java.lang.String str9 = shardFailure4.indexUUID;
        java.lang.Throwable throwable10 = shardFailure4.cause;
        java.lang.Throwable throwable11 = shardFailure4.cause;
        java.lang.Throwable throwable12 = shardFailure4.cause;
        java.lang.String str13 = shardFailure4.reason;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = shardFailure4.routing;
        java.lang.String str15 = shardFailure4.reason;
        java.lang.String str16 = shardFailure4.reason;
        java.lang.String str17 = shardFailure4.indexUUID;
        java.lang.String str18 = shardFailure4.indexUUID;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[null][null][null]}" + "'", str5, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(throwable6);
        org.junit.Assert.assertNull(shardRouting7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[][][]}" + "'", str8, "delete {[][][]}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[][][]}" + "'", str9, "delete {[][][]}");
        org.junit.Assert.assertNull(throwable10);
        org.junit.Assert.assertNull(throwable11);
        org.junit.Assert.assertNull(throwable12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[null][null][null]}" + "'", str13, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(shardRouting14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[null][null][null]}" + "'", str15, "delete {[null][null][null]}");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[null][null][null]}" + "'", str16, "delete {[null][null][null]}");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[][][]}" + "'", str17, "delete {[][][]}");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[][][]}" + "'", str18, "delete {[][][]}");
    }

    @Test
    public void test8890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8890");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("delete {[][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = deleteRequest5.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str11 = deleteRequest10.id();
        java.lang.String str12 = deleteRequest10.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str14 = deleteRequest13.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest13.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest13.getParentTask();
        deleteRequest10.setParentTask(taskId17);
        deleteRequest5.setParentTask(taskId17);
        java.lang.String str20 = deleteRequest5.toString();
        org.elasticsearch.index.shard.IndexShard indexShard21 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete22 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest5, indexShard21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(transportAddress6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[null][null][null]}" + "'", str20, "delete {[null][null][null]}");
    }

    @Test
    public void test8891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8891");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str9 = deleteRequest8.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException10 = deleteRequest8.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure12 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "hi!", (java.lang.Throwable) actionRequestValidationException10, "delete {[][][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure14 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "", (java.lang.Throwable) actionRequestValidationException10, "delete {[][][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure16 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][delete {[][][hi!]}][delete {[][][]}]}", (java.lang.Throwable) actionRequestValidationException10, "delete {[][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure18 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][][hi!]}", (java.lang.Throwable) actionRequestValidationException10, "delete {[][delete {[hi!][null][null]}][delete {[][][]}]}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[null][null][null]}" + "'", str9, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException10);
    }

    @Test
    public void test8892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8892");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}", "delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}", "delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}");
        boolean boolean4 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest3.validate();
        java.lang.String str6 = deleteRequest3.getDescription();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(actionRequestValidationException5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}]}" + "'", str6, "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}]}");
    }

    @Test
    public void test8893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8893");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        org.elasticsearch.action.support.IndicesOptions indicesOptions9 = deleteRequest8.indicesOptions();
        org.elasticsearch.common.transport.TransportAddress transportAddress10 = null;
        deleteRequest8.remoteAddress(transportAddress10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest8.index("delete {[delete {[delete {[][][hi!]}][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[null][null][null]}]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str15 = deleteRequest14.parent();
        deleteRequest14.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest14.setRefreshPolicy("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException20 = deleteRequest19.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest19.index("delete {[hi!][null][null]}");
        java.lang.String str23 = deleteRequest22.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.index("delete {[][][hi!]}");
        java.lang.String str30 = deleteRequest29.parent();
        org.elasticsearch.tasks.TaskId taskId31 = deleteRequest29.getParentTask();
        org.elasticsearch.tasks.Task task32 = deleteRequest22.createTask((long) (-1), "delete {[][delete {[][][]}][delete {[][][]}]}", "delete {[hi!][null][null]}", taskId31);
        java.lang.String str33 = deleteRequest22.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue36 = deleteRequest35.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress37 = null;
        deleteRequest35.remoteAddress(transportAddress37);
        java.lang.String str39 = deleteRequest35.index();
        org.elasticsearch.index.VersionType versionType40 = deleteRequest35.versionType();
        org.elasticsearch.index.shard.ShardId shardId41 = deleteRequest35.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest35.version(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str45 = deleteRequest44.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest44.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest47.routing("delete {[][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress50 = deleteRequest49.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest49.index("delete {[][][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest49.setShardId(shardId53);
        java.lang.String[] strArray55 = deleteRequest49.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[hi!][null][null]}", "delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest60.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest62.type("delete {[][][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel65 = deleteRequest64.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest59.consistencyLevel(writeConsistencyLevel65);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest49.consistencyLevel(writeConsistencyLevel65);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest43.consistencyLevel(writeConsistencyLevel65);
        org.elasticsearch.common.unit.TimeValue timeValue69 = deleteRequest43.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest22.timeout(timeValue69);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest8.timeout(timeValue69);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(indicesOptions9);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(actionRequestValidationException20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[hi!][null][null]}" + "'", str23, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(taskId31);
        org.junit.Assert.assertNotNull(task32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "delete {[hi!][null][null]}" + "'", str33, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(timeValue36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "delete {[null][null][null]}" + "'", str39, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(versionType40);
        org.junit.Assert.assertNull(shardId41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNull(transportAddress50);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel65 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel65.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertNotNull(timeValue69);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNotNull(deleteRequest71);
    }

    @Test
    public void test8894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8894");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}", "delete {[hi!][null][null]}", "hi!");
        org.elasticsearch.tasks.TaskId taskId4 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.index("delete {[][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}][]}");
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.routing("delete {[delete {[][][]}][null][null]}");
        org.junit.Assert.assertNotNull(taskId4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
    }

    @Test
    public void test8895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8895");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str3 = deleteRequest2.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException4 = deleteRequest2.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure6 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "hi!", (java.lang.Throwable) actionRequestValidationException4, "delete {[][][]}");
        java.lang.String str7 = shardFailure6.reason;
        java.lang.String str8 = shardFailure6.reason;
        java.lang.String str9 = shardFailure6.reason;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "delete {[null][null][null]}" + "'", str3, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
    }

    @Test
    public void test8896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8896");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "hi!", throwable2, "delete {[null][null][null]}");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting5 = shardFailure4.routing;
        java.lang.String str6 = shardFailure4.indexUUID;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting7 = shardFailure4.routing;
        java.lang.String str8 = shardFailure4.reason;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting9 = shardFailure4.routing;
        java.lang.Throwable throwable10 = shardFailure4.cause;
        org.junit.Assert.assertNull(shardRouting5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[null][null][null]}" + "'", str6, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(shardRouting7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNull(shardRouting9);
        org.junit.Assert.assertNull(throwable10);
    }

    @Test
    public void test8897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8897");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.tasks.TaskId taskId6 = deleteRequest3.getParentTask();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest3.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = null;
        deleteRequest9.remoteAddress(transportAddress11);
        org.elasticsearch.common.unit.TimeValue timeValue13 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest9.timeout(timeValue13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.timeout(timeValue13);
        long long16 = deleteRequest3.version();
        long long17 = deleteRequest3.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest3.parent("delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.id("delete {[][][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}]}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(taskId6);
        org.junit.Assert.assertNull(actionRequestValidationException7);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-3L) + "'", long16 == (-3L));
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-3L) + "'", long17 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
    }

    @Test
    public void test8898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8898");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        deleteRequest0.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.type("delete {[null][null][null]}");
        java.lang.String str8 = deleteRequest5.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.index("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest5.routing("delete {[hi!][null][null]}");
        long long13 = deleteRequest5.primaryTerm();
        org.elasticsearch.action.support.IndicesOptions indicesOptions14 = deleteRequest5.indicesOptions();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 100L + "'", long13 == 100L);
        org.junit.Assert.assertNotNull(indicesOptions14);
    }

    @Test
    public void test8899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8899");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.index.VersionType versionType4 = deleteRequest3.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.version((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version((long) (byte) 1);
        org.junit.Assert.assertNotNull(versionType4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
    }

    @Test
    public void test8900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8900");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        org.elasticsearch.action.support.IndicesOptions indicesOptions9 = deleteRequest8.indicesOptions();
        org.elasticsearch.action.support.IndicesOptions indicesOptions10 = deleteRequest8.indicesOptions();
        java.lang.String str11 = deleteRequest8.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str16 = deleteRequest15.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.id("hi!");
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest18.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId27 = null;
        org.elasticsearch.tasks.Task task28 = deleteRequest23.createTask(0L, "", "", taskId27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest23.setRefreshPolicy("");
        java.lang.String[] strArray31 = deleteRequest30.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId39 = null;
        org.elasticsearch.tasks.Task task40 = deleteRequest35.createTask(0L, "", "", taskId39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest35.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel43 = deleteRequest42.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest30.consistencyLevel(writeConsistencyLevel43);
        deleteRequest44.setParentTask("hi!", (long) (short) 100);
        org.elasticsearch.index.VersionType versionType48 = deleteRequest44.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest18.versionType(versionType48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest8.versionType(versionType48);
        org.elasticsearch.common.transport.TransportAddress transportAddress51 = deleteRequest8.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy52 = deleteRequest8.getRefreshPolicy();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(indicesOptions9);
        org.junit.Assert.assertNotNull(indicesOptions10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(task40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel43 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel43.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(versionType48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNull(transportAddress51);
        org.junit.Assert.assertTrue("'" + refreshPolicy52 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy52.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
    }

    @Test
    public void test8901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8901");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.setRefreshPolicy(refreshPolicy14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.type("delete {[][][]}");
        java.lang.String str22 = deleteRequest19.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest19.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.parent("delete {[][][]}");
        long long27 = deleteRequest26.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest26.routing("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest33.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType36 = deleteRequest35.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress41 = deleteRequest40.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId49 = null;
        org.elasticsearch.tasks.Task task50 = deleteRequest45.createTask(0L, "", "", taskId49);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy51 = deleteRequest45.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest40.setRefreshPolicy(refreshPolicy51);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest35.setRefreshPolicy(refreshPolicy51);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel55 = deleteRequest54.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel56 = deleteRequest54.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest35.consistencyLevel(writeConsistencyLevel56);
        long long58 = deleteRequest35.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.shard.ShardId shardId61 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest60.setShardId(shardId61);
        deleteRequest60.primaryTerm((long) 1);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy65 = deleteRequest60.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest35.setRefreshPolicy(refreshPolicy65);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest29.setRefreshPolicy(refreshPolicy65);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest15.setRefreshPolicy(refreshPolicy65);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest68.version((long) ' ');
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(transportAddress13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[][][]}" + "'", str22, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-3L) + "'", long27 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(versionType36);
        org.junit.Assert.assertNull(transportAddress41);
        org.junit.Assert.assertNotNull(task50);
        org.junit.Assert.assertTrue("'" + refreshPolicy51 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy51.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel55 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel55.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel56 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel56.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + (-3L) + "'", long58 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertTrue("'" + refreshPolicy65 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy65.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertNotNull(deleteRequest70);
    }

    @Test
    public void test8902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8902");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest10.indicesOptions();
        java.lang.String str13 = deleteRequest10.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str15 = deleteRequest14.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.version((long) (short) 100);
        deleteRequest14.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str21 = deleteRequest20.parent();
        org.elasticsearch.index.VersionType versionType22 = deleteRequest20.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest14.versionType(versionType22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.versionType(versionType22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.id("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        java.lang.String str27 = deleteRequest24.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest24.version((long) (byte) 10);
        boolean boolean30 = deleteRequest29.getShouldPersistResult();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[][][]}" + "'", str13, "delete {[][][]}");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test8903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8903");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest1.setParentTask("hi!", (long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.type("delete {[][][]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy11 = deleteRequest8.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest1.setRefreshPolicy(refreshPolicy11);
        java.lang.String str13 = deleteRequest1.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest1.version((long) 10);
        org.elasticsearch.common.unit.TimeValue timeValue16 = deleteRequest1.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest18.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue23 = deleteRequest22.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest18.timeout(timeValue23);
        java.lang.String str25 = deleteRequest18.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException26 = deleteRequest18.validate();
        java.lang.String str27 = deleteRequest18.type();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest18.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest1.consistencyLevel(writeConsistencyLevel28);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + refreshPolicy11 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy11.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(timeValue23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[][null][null]}" + "'", str25, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
    }

    @Test
    public void test8904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8904");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel3 = deleteRequest2.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel4 = deleteRequest2.consistencyLevel();
        deleteRequest2.primaryTerm((long) (short) 10);
        long long7 = deleteRequest2.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId18 = null;
        org.elasticsearch.tasks.Task task19 = deleteRequest14.createTask(0L, "", "", taskId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.setRefreshPolicy("");
        java.lang.String str22 = deleteRequest21.toString();
        java.lang.String[] strArray23 = deleteRequest21.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest21.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str34 = deleteRequest33.id();
        java.lang.String str35 = deleteRequest33.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str37 = deleteRequest36.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest36.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId40 = deleteRequest36.getParentTask();
        deleteRequest33.setParentTask(taskId40);
        deleteRequest29.setParentTask(taskId40);
        deleteRequest25.setParentTask(taskId40);
        org.elasticsearch.tasks.Task task44 = deleteRequest2.createTask((-1L), "delete {[][delete {[][][]}][delete {[][][]}]}", "delete {[][][hi!]}", taskId40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest2.parent("");
        java.lang.String str47 = deleteRequest2.routing();
        deleteRequest2.setParentTask("delete {[][delete {[null][null][null]}][null]}", 0L);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel51 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest2.consistencyLevel(writeConsistencyLevel51);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest56.type("delete {[][][]}");
        java.lang.String str59 = deleteRequest56.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest56.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest61.parent("delete {[][][]}");
        java.lang.String str64 = deleteRequest61.type();
        org.elasticsearch.tasks.TaskId taskId65 = deleteRequest61.getParentTask();
        deleteRequest2.setParentTask(taskId65);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[][delete {[][null][null]}][delete {[][][]}]}]}", deleteRequest2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel3 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel3.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel4 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel4.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-3L) + "'", long7 == (-3L));
        org.junit.Assert.assertNotNull(task19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[][][]}" + "'", str22, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(taskId40);
        org.junit.Assert.assertNotNull(task44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "delete {[][][]}" + "'", str59, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "delete {[][][]}" + "'", str64, "delete {[][][]}");
        org.junit.Assert.assertNotNull(taskId65);
    }

    @Test
    public void test8905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8905");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest10.toString();
        java.lang.String[] strArray12 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.index("");
        java.lang.String str15 = deleteRequest10.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest10.version((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.parent("delete {[][][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}]}");
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
    }

    @Test
    public void test8906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8906");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str9 = deleteRequest8.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException10 = deleteRequest8.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure12 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "hi!", (java.lang.Throwable) actionRequestValidationException10, "delete {[][][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure14 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "", (java.lang.Throwable) actionRequestValidationException10, "delete {[][][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure16 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][delete {[][][hi!]}][delete {[][][]}]}", (java.lang.Throwable) actionRequestValidationException10, "delete {[][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure18 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][null][null]}", (java.lang.Throwable) actionRequestValidationException10, "delete {[][delete {[][][]}][delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}]}");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting19 = shardFailure18.routing;
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[null][null][null]}" + "'", str9, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException10);
        org.junit.Assert.assertNull(shardRouting19);
    }

    @Test
    public void test8907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8907");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue2 = deleteRequest1.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress3 = null;
        deleteRequest1.remoteAddress(transportAddress3);
        java.lang.String str5 = deleteRequest1.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.parent("delete {[hi!][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest1.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest1.id("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest1.id("");
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.setShardId(shardId13);
        boolean boolean15 = deleteRequest14.getShouldPersistResult();
        java.lang.String str16 = deleteRequest14.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.index("delete {[][][hi!]}");
        java.lang.String str23 = deleteRequest22.parent();
        java.lang.String str24 = deleteRequest22.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest22.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest22.version(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str36 = deleteRequest35.id();
        java.lang.String str37 = deleteRequest35.index();
        org.elasticsearch.tasks.TaskId taskId38 = deleteRequest35.getParentTask();
        org.elasticsearch.tasks.Task task39 = deleteRequest22.createTask((long) (short) 100, "delete {[delete {[hi!][null][null]}][null][null]}", "delete {[][delete {[][][]}][delete {[][][]}]}", taskId38);
        org.elasticsearch.tasks.Task task40 = deleteRequest14.createTask((long) 10, "delete {[][][delete {[hi!][null][null]}]}", "delete {[][delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[][][]}]}][]}", taskId38);
        org.junit.Assert.assertNotNull(timeValue2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[null][null][null]}" + "'", str5, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[null][null][null]}" + "'", str16, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(taskId38);
        org.junit.Assert.assertNotNull(task39);
        org.junit.Assert.assertNotNull(task40);
    }

    @Test
    public void test8908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8908");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.parent("delete {[][][]}");
        org.elasticsearch.index.VersionType versionType12 = deleteRequest11.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest8.versionType(versionType12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.parent("delete {[hi!][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue16 = deleteRequest13.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest13.type("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str23 = deleteRequest22.id();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest22.setShardId(shardId24);
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest22.setShardId(shardId26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.parent("delete {[][][]}");
        org.elasticsearch.index.VersionType versionType31 = deleteRequest30.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest27.versionType(versionType31);
        deleteRequest32.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel36 = deleteRequest35.consistencyLevel();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy37 = deleteRequest35.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest32.setRefreshPolicy(refreshPolicy37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str43 = deleteRequest42.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long49 = deleteRequest48.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str51 = deleteRequest50.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue54 = deleteRequest53.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest50.timeout(timeValue54);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest55.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId58 = deleteRequest57.getParentTask();
        deleteRequest48.setParentTask(taskId58);
        org.elasticsearch.tasks.Task task60 = deleteRequest42.createTask((long) ' ', "delete {[][][hi!]}", "delete {[][][]}", taskId58);
        deleteRequest32.setParentTask(taskId58);
        deleteRequest18.setParentTask(taskId58);
        org.elasticsearch.action.support.IndicesOptions indicesOptions63 = deleteRequest18.indicesOptions();
        java.lang.String str64 = deleteRequest18.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest18.id("delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}][delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}][]}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(versionType31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel36 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel36.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + refreshPolicy37 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy37.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "delete {[][][]}" + "'", str43, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 0L + "'", long49 == 0L);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(timeValue54);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(taskId58);
        org.junit.Assert.assertNotNull(task60);
        org.junit.Assert.assertNotNull(indicesOptions63);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(deleteRequest66);
    }

    @Test
    public void test8909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8909");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        java.lang.String str4 = deleteRequest2.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest2.parent("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest2.parent("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.routing("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.index("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException13 = deleteRequest10.validate();
        java.lang.String str14 = deleteRequest10.index();
        java.lang.String str15 = deleteRequest10.toString();
        java.lang.String str16 = deleteRequest10.getDescription();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str4, "delete {[delete {[][][hi!]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(actionRequestValidationException13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}" + "'", str14, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][null][null]}" + "'", str15, "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][null][null]}");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][null][null]}" + "'", str16, "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][null][null]}");
    }

    @Test
    public void test8910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8910");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel1 = deleteRequest0.consistencyLevel();
        java.lang.String str2 = deleteRequest0.parent();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel3 = deleteRequest0.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.type("delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.index("delete {[delete {[delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}][delete {[hi!][null][null]}][hi!]}][delete {[][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][][]}]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId18 = null;
        org.elasticsearch.tasks.Task task19 = deleteRequest14.createTask(0L, "", "", taskId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.setRefreshPolicy("");
        java.lang.String str22 = deleteRequest21.toString();
        java.lang.String[] strArray23 = deleteRequest21.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest21.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str34 = deleteRequest33.id();
        java.lang.String str35 = deleteRequest33.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str37 = deleteRequest36.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest36.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId40 = deleteRequest36.getParentTask();
        deleteRequest33.setParentTask(taskId40);
        deleteRequest29.setParentTask(taskId40);
        deleteRequest25.setParentTask(taskId40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest25.parent("delete {[delete {[][][hi!]}][null][null]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions46 = deleteRequest25.indicesOptions();
        boolean boolean47 = deleteRequest25.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest25.routing("delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}");
        deleteRequest25.setParentTask("delete {[][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][][]}]}", (long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest25.id("delete {[][delete {[][][]}][delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest54.index("delete {[delete {[][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][][]}]}][delete {[][][hi!]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.shard.ShardId shardId59 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest58.setShardId(shardId59);
        deleteRequest58.primaryTerm((long) 1);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy63 = deleteRequest58.getRefreshPolicy();
        org.elasticsearch.tasks.TaskId taskId64 = deleteRequest58.getParentTask();
        deleteRequest56.setParentTask(taskId64);
        org.elasticsearch.tasks.Task task66 = deleteRequest7.createTask((long) '#', "", "delete {[delete {[][delete {[][][]}][delete {[][][]}]}][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[null][null][null]}]}", taskId64);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel1 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel1.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel3 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel3.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(task19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[][][]}" + "'", str22, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(taskId40);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(indicesOptions46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertTrue("'" + refreshPolicy63 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy63.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(taskId64);
        org.junit.Assert.assertNotNull(task66);
    }

    @Test
    public void test8911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8911");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}][][delete {[][][null]}]}", "delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}", "delete {[][delete {[delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}][delete {[hi!][null][null]}][hi!]}][]}");
    }

    @Test
    public void test8912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8912");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][null][null]}", throwable2, "delete {[][][]}");
        java.lang.String str5 = shardFailure4.reason;
        java.lang.Throwable throwable6 = shardFailure4.cause;
        java.lang.String str7 = shardFailure4.indexUUID;
        java.lang.Throwable throwable8 = shardFailure4.cause;
        java.lang.String str9 = shardFailure4.indexUUID;
        java.lang.String str10 = shardFailure4.reason;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[null][null][null]}" + "'", str5, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(throwable6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[][][]}" + "'", str7, "delete {[][][]}");
        org.junit.Assert.assertNull(throwable8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[][][]}" + "'", str9, "delete {[][][]}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[null][null][null]}" + "'", str10, "delete {[null][null][null]}");
    }

    @Test
    public void test8913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8913");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str6 = deleteRequest5.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.id("hi!");
        org.elasticsearch.tasks.TaskId taskId9 = deleteRequest8.getParentTask();
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest8.getParentTask();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest8.validate();
        long long12 = deleteRequest8.version();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}][delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}][]}", deleteRequest8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(taskId9);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertNull(actionRequestValidationException11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-3L) + "'", long12 == (-3L));
    }

    @Test
    public void test8914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8914");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str7 = deleteRequest6.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest6.getParentTask();
        deleteRequest3.setParentTask(taskId10);
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        long long15 = deleteRequest3.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.type("delete {[hi!][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel21 = deleteRequest18.consistencyLevel();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest18.setShardId(shardId22);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel24 = deleteRequest23.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest3.consistencyLevel(writeConsistencyLevel24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str27 = deleteRequest26.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue30 = deleteRequest29.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest26.timeout(timeValue30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest31.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId34 = deleteRequest33.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest33.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest36.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest42.type("delete {[][][hi!]}");
        java.lang.String str45 = deleteRequest42.getDescription();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy46 = deleteRequest42.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest36.setRefreshPolicy(refreshPolicy46);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest25.setRefreshPolicy(refreshPolicy46);
        java.lang.String str49 = deleteRequest48.routing();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel21 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel21.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel24 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel24.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(timeValue30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(taskId34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "delete {[][delete {[][][hi!]}][delete {[][][]}]}" + "'", str45, "delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.junit.Assert.assertTrue("'" + refreshPolicy46 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy46.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNull(str49);
    }

    @Test
    public void test8915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8915");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest3.consistencyLevel(writeConsistencyLevel11);
        deleteRequest12.setParentTask("hi!", 1L);
        java.lang.String str16 = deleteRequest12.index();
        long long17 = deleteRequest12.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.setShardId(shardId20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.routing("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy24 = deleteRequest23.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest12.setRefreshPolicy(refreshPolicy24);
        java.lang.Class<?> wildcardClass26 = refreshPolicy24.getClass();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-3L) + "'", long17 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertTrue("'" + refreshPolicy24 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy24.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test8916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8916");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest6.type("delete {[hi!][null][null]}");
        org.elasticsearch.tasks.TaskId taskId12 = null;
        deleteRequest6.setParentTask(taskId12);
        org.elasticsearch.action.support.IndicesOptions indicesOptions14 = deleteRequest6.indicesOptions();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(indicesOptions14);
    }

    @Test
    public void test8917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8917");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest3.consistencyLevel(writeConsistencyLevel11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId20 = null;
        org.elasticsearch.tasks.Task task21 = deleteRequest16.createTask(0L, "", "", taskId20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest16.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel24 = deleteRequest23.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest23.routing("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.version((long) (short) -1);
        java.lang.String str29 = deleteRequest26.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest26.type("delete {[delete {[][][hi!]}][null][null]}");
        org.elasticsearch.tasks.TaskId taskId32 = deleteRequest26.getParentTask();
        deleteRequest3.setParentTask(taskId32);
        deleteRequest3.setParentTask("delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][null][null]}", (long) (byte) 1);
        org.elasticsearch.index.shard.IndexShard indexShard37 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult38 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest3, indexShard37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel24 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel24.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(taskId32);
    }

    @Test
    public void test8918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8918");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest3.setParentTask("hi!", (long) (short) 1);
        long long7 = deleteRequest3.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.type("delete {[][][]}");
        java.lang.String str14 = deleteRequest11.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel18 = deleteRequest17.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel19 = deleteRequest17.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest11.consistencyLevel(writeConsistencyLevel19);
        java.lang.String str21 = deleteRequest11.routing();
        deleteRequest11.setParentTask("delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}", (long) (byte) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str32 = deleteRequest31.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest31.id("hi!");
        java.lang.String str35 = deleteRequest34.routing();
        org.elasticsearch.common.transport.TransportAddress transportAddress36 = null;
        deleteRequest34.remoteAddress(transportAddress36);
        org.elasticsearch.common.transport.TransportAddress transportAddress38 = deleteRequest34.remoteAddress();
        java.lang.String[] strArray39 = deleteRequest34.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str41 = deleteRequest40.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue44 = deleteRequest43.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest40.timeout(timeValue44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest45.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId48 = deleteRequest47.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest47.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel52 = deleteRequest51.consistencyLevel();
        java.lang.String str53 = deleteRequest51.parent();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel54 = deleteRequest51.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel55 = deleteRequest51.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest50.consistencyLevel(writeConsistencyLevel55);
        org.elasticsearch.tasks.TaskId taskId57 = deleteRequest50.getParentTask();
        deleteRequest34.setParentTask(taskId57);
        org.elasticsearch.tasks.Task task59 = deleteRequest11.createTask((long) ' ', "delete {[delete {[][null][null]}][][delete {[][][hi!]}]}", "delete {[][delete {[][][]}][]}", taskId57);
        deleteRequest3.setParentTask(taskId57);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[null][delete {[null][null][null]}][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[hi!][null][null]}]}", deleteRequest3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-3L) + "'", long7 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[][][]}" + "'", str14, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel18 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel18.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel19 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel19.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(transportAddress38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(timeValue44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(taskId48);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel52 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel52.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel54 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel54.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel55 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel55.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(taskId57);
        org.junit.Assert.assertNotNull(task59);
    }

    @Test
    public void test8919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8919");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[][][]}][delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}]}", "delete {[delete {[delete {[][null][null]}][][delete {[][][hi!]}]}][delete {[][null][null]}][delete {[null][null][delete {[][][hi!]}]}]}", "delete {[delete {[][][hi!]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel8 = deleteRequest7.consistencyLevel();
        java.lang.String str9 = deleteRequest7.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest7.index("hi!");
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest7.setShardId(shardId12);
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.setShardId(shardId14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.routing("delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.routing("delete {[][delete {[delete {[][][hi!]}][null][null]}][]}");
        org.elasticsearch.tasks.TaskId taskId20 = deleteRequest17.getParentTask();
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest17.getParentTask();
        org.elasticsearch.tasks.Task task22 = deleteRequest3.createTask((long) (-1), "delete {[hi!][delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[hi!][null][null]}]}", "delete {[delete {[][][hi!]}][null][delete {[][][]}]}", taskId21);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel8 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel8.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(taskId20);
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(task22);
    }

    @Test
    public void test8920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8920");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId4 = deleteRequest0.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.id("delete {[][][hi!]}");
        java.lang.String str7 = deleteRequest0.type();
        java.lang.String str8 = deleteRequest0.toString();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest0.setShardId(shardId9);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(taskId4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[null][null][delete {[][][hi!]}]}" + "'", str8, "delete {[null][null][delete {[][][hi!]}]}");
        org.junit.Assert.assertNotNull(deleteRequest10);
    }

    @Test
    public void test8921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8921");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel12 = deleteRequest3.consistencyLevel();
        java.lang.String str13 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue16 = deleteRequest15.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress17 = null;
        deleteRequest15.remoteAddress(transportAddress17);
        java.lang.String str19 = deleteRequest15.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest15.parent("delete {[hi!][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue22 = deleteRequest15.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest3.timeout(timeValue22);
        org.elasticsearch.common.transport.TransportAddress transportAddress24 = deleteRequest3.remoteAddress();
        java.lang.String str25 = deleteRequest3.index();
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest3.setShardId(shardId26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.routing("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel12 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel12.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[][][]}" + "'", str13, "delete {[][][]}");
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[null][null][null]}" + "'", str19, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(timeValue22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(transportAddress24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
    }

    @Test
    public void test8922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8922");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress2 = deleteRequest0.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId3 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.setShardId(shardId3);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId12 = null;
        org.elasticsearch.tasks.Task task13 = deleteRequest8.createTask(0L, "", "", taskId12);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = deleteRequest8.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest0.setRefreshPolicy(refreshPolicy14);
        java.lang.String str16 = deleteRequest0.getDescription();
        java.lang.String str17 = deleteRequest0.index();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(transportAddress2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertTrue("'" + refreshPolicy14 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy14.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[null][null][null]}" + "'", str16, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test8923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8923");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long2 = deleteRequest1.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.index("");
        boolean boolean5 = deleteRequest1.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.version((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest1.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str13 = deleteRequest12.id();
        java.lang.String str14 = deleteRequest12.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str16 = deleteRequest15.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest15.getParentTask();
        deleteRequest12.setParentTask(taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel22 = deleteRequest21.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest21.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest12.consistencyLevel(writeConsistencyLevel23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest12.type("delete {[delete {[][][hi!]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest26.routing("delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy31 = deleteRequest26.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest1.setRefreshPolicy(refreshPolicy31);
        deleteRequest32.setParentTask("delete {[delete {[][][hi!]}][null][null]}", 0L);
        java.lang.String str36 = deleteRequest32.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest32.timeout("delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}][delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}][]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}][delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}][]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel22 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel22.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertTrue("'" + refreshPolicy31 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy31.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "delete {[][null][null]}" + "'", str36, "delete {[][null][null]}");
    }

    @Test
    public void test8924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8924");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId9 = null;
        org.elasticsearch.tasks.Task task10 = deleteRequest5.createTask(0L, "", "", taskId9);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest5.setRefreshPolicy("");
        java.lang.String str13 = deleteRequest12.toString();
        java.lang.String[] strArray14 = deleteRequest12.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest12.index("");
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest16.timeout();
        deleteRequest16.setParentTask("hi!", (long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.type("delete {[][][hi!]}");
        java.lang.String str26 = deleteRequest23.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest23.parent("delete {[delete {[hi!][null][null]}][null][delete {[][][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.index("delete {[][][hi!]}");
        java.lang.String str32 = deleteRequest31.parent();
        java.lang.String str33 = deleteRequest31.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest31.parent("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest31.parent("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest37.routing("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest39.index("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException42 = deleteRequest39.validate();
        java.lang.String str43 = deleteRequest39.index();
        java.lang.String str44 = deleteRequest39.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str46 = deleteRequest45.index();
        deleteRequest45.setParentTask("delete {[][][hi!]}", (long) '#');
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException50 = deleteRequest45.validate();
        long long51 = deleteRequest45.primaryTerm();
        deleteRequest45.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str58 = deleteRequest57.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest57.id("hi!");
        org.elasticsearch.tasks.TaskId taskId61 = deleteRequest60.getParentTask();
        org.elasticsearch.tasks.TaskId taskId62 = deleteRequest60.getParentTask();
        org.elasticsearch.common.unit.TimeValue timeValue63 = deleteRequest60.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest45.timeout(timeValue63);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long67 = deleteRequest66.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest66.index("");
        boolean boolean70 = deleteRequest66.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest66.version((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue73 = deleteRequest66.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest45.timeout(timeValue73);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest39.timeout(timeValue73);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest23.timeout(timeValue73);
        org.elasticsearch.tasks.TaskId taskId77 = deleteRequest76.getParentTask();
        org.elasticsearch.common.unit.TimeValue timeValue78 = deleteRequest76.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = deleteRequest16.timeout(timeValue78);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[delete {[][][hi!]}][null][null]}][hi!][hi!]}", deleteRequest16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[][][]}" + "'", str13, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str33, "delete {[delete {[][][hi!]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(actionRequestValidationException42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}" + "'", str43, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][null][null]}" + "'", str44, "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][null][null]}");
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(actionRequestValidationException50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(taskId61);
        org.junit.Assert.assertNotNull(taskId62);
        org.junit.Assert.assertNotNull(timeValue63);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 0L + "'", long67 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertNotNull(timeValue73);
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertNotNull(deleteRequest75);
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertNotNull(taskId77);
        org.junit.Assert.assertNotNull(timeValue78);
        org.junit.Assert.assertNotNull(deleteRequest79);
    }

    @Test
    public void test8925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8925");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        java.lang.String str9 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str11 = deleteRequest10.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.routing("delete {[][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = deleteRequest15.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str21 = deleteRequest20.id();
        java.lang.String str22 = deleteRequest20.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str24 = deleteRequest23.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest23.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest23.getParentTask();
        deleteRequest20.setParentTask(taskId27);
        deleteRequest15.setParentTask(taskId27);
        deleteRequest3.setParentTask(taskId27);
        org.elasticsearch.index.shard.ShardId shardId31 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.index.VersionType versionType36 = deleteRequest35.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest3.versionType(versionType36);
        long long38 = deleteRequest3.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest3.type("");
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest3.setShardId(shardId41);
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest3.setShardId(shardId43);
        org.elasticsearch.common.transport.TransportAddress transportAddress45 = null;
        deleteRequest3.remoteAddress(transportAddress45);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(transportAddress16);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(taskId27);
        org.junit.Assert.assertNull(shardId31);
        org.junit.Assert.assertNotNull(versionType36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest44);
    }

    @Test
    public void test8926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8926");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.version((long) (-1));
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.index("delete {[][delete {[][][]}][delete {[][][]}]}");
        java.lang.String str8 = deleteRequest7.index();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[][delete {[][][]}][delete {[][][]}]}" + "'", str8, "delete {[][delete {[][][]}][delete {[][][]}]}");
    }

    @Test
    public void test8927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8927");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.type("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId12 = null;
        org.elasticsearch.tasks.Task task13 = deleteRequest8.createTask(0L, "", "", taskId12);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = deleteRequest8.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId22 = null;
        org.elasticsearch.tasks.Task task23 = deleteRequest18.createTask(0L, "", "", taskId22);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy24 = deleteRequest18.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest8.setRefreshPolicy(refreshPolicy24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest4.setRefreshPolicy(refreshPolicy24);
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest4.setShardId(shardId27);
        org.elasticsearch.common.transport.TransportAddress transportAddress29 = deleteRequest4.remoteAddress();
        java.lang.String[] strArray30 = deleteRequest4.indices();
        org.elasticsearch.action.support.IndicesOptions indicesOptions31 = deleteRequest4.indicesOptions();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertTrue("'" + refreshPolicy14 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy14.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertTrue("'" + refreshPolicy24 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy24.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNull(transportAddress29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(indicesOptions31);
    }

    @Test
    public void test8928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8928");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str10 = deleteRequest9.id();
        java.lang.String str11 = deleteRequest9.index();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest9.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest0.createTask((-1L), "delete {[][][hi!]}", "delete {[][delete {[][][]}][delete {[][][]}]}", taskId12);
        deleteRequest0.setParentTask("delete {[delete {[][][hi!]}][null][null]}", (long) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest0.parent("delete {[delete {[null][null][null]}][null][null]}");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        deleteRequest0.setParentTask(taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("delete {[][][]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest0.consistencyLevel(writeConsistencyLevel27);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
    }

    @Test
    public void test8929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8929");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}", "hi!", "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str7 = deleteRequest6.parent();
        deleteRequest6.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest6.setRefreshPolicy("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy12 = deleteRequest11.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest5.setRefreshPolicy(refreshPolicy12);
        long long14 = deleteRequest13.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest13.id("delete {[delete {[null][null][null]}][][]}");
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertTrue("'" + refreshPolicy12 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy12.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-3L) + "'", long14 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest16);
    }

    @Test
    public void test8930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8930");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][hi!]}][null][null]}", "delete {[][][]}", "");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel4 = deleteRequest3.consistencyLevel();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId14 = null;
        org.elasticsearch.tasks.Task task15 = deleteRequest10.createTask(0L, "", "", taskId14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest10.setRefreshPolicy("");
        java.lang.String[] strArray18 = deleteRequest17.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId26 = null;
        org.elasticsearch.tasks.Task task27 = deleteRequest22.createTask(0L, "", "", taskId26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel30 = deleteRequest29.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest17.consistencyLevel(writeConsistencyLevel30);
        deleteRequest31.setParentTask("hi!", (long) (short) 100);
        java.lang.String str35 = deleteRequest31.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest39.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType42 = deleteRequest41.versionType();
        java.lang.String str43 = deleteRequest41.index();
        org.elasticsearch.common.unit.TimeValue timeValue44 = deleteRequest41.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest31.timeout(timeValue44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest3.timeout(timeValue44);
        org.elasticsearch.common.transport.TransportAddress transportAddress47 = deleteRequest46.remoteAddress();
        org.elasticsearch.common.io.stream.StreamInput streamInput48 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest46.readFrom(streamInput48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel4 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel4.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(task15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(task27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel30 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel30.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(versionType42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(timeValue44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNull(transportAddress47);
    }

    @Test
    public void test8931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8931");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel1 = deleteRequest0.consistencyLevel();
        java.lang.String str2 = deleteRequest0.parent();
        boolean boolean3 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.id("delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType15 = deleteRequest14.versionType();
        deleteRequest14.primaryTerm((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest14.routing("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId27 = null;
        org.elasticsearch.tasks.Task task28 = deleteRequest23.createTask(0L, "", "", taskId27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest23.setRefreshPolicy("");
        java.lang.String str31 = deleteRequest30.toString();
        java.lang.String[] strArray32 = deleteRequest30.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest30.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str43 = deleteRequest42.id();
        java.lang.String str44 = deleteRequest42.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str46 = deleteRequest45.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest45.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId49 = deleteRequest45.getParentTask();
        deleteRequest42.setParentTask(taskId49);
        deleteRequest38.setParentTask(taskId49);
        deleteRequest34.setParentTask(taskId49);
        deleteRequest19.setParentTask(taskId49);
        org.elasticsearch.tasks.Task task54 = deleteRequest0.createTask((long) (byte) 100, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}", "delete {[null][delete {[][delete {[hi!][null][null]}][hi!]}][delete {[][][hi!]}]}", taskId49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest0.index("delete {[][delete {[][][]}][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel1 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel1.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(versionType15);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(task28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "delete {[][][]}" + "'", str31, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(taskId49);
        org.junit.Assert.assertNotNull(task54);
        org.junit.Assert.assertNotNull(deleteRequest56);
    }

    @Test
    public void test8932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8932");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        deleteRequest0.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str5 = deleteRequest4.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest4.version((long) (short) 100);
        java.lang.String str8 = deleteRequest7.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.id("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long13 = deleteRequest12.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str15 = deleteRequest14.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue18 = deleteRequest17.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest14.timeout(timeValue18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId22 = deleteRequest21.getParentTask();
        deleteRequest12.setParentTask(taskId22);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel24 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest7.consistencyLevel(writeConsistencyLevel24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest0.consistencyLevel(writeConsistencyLevel24);
        deleteRequest0.setParentTask("delete {[null][delete {[delete {[][delete {[delete {[][][hi!]}][null][null]}][]}][null][null]}][null]}", (long) (byte) 0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(timeValue18);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(taskId22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel24 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel24.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest26);
    }

    @Test
    public void test8933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8933");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = deleteRequest3.getRefreshPolicy();
        long long15 = deleteRequest3.primaryTerm();
        deleteRequest3.setParentTask("delete {[null][delete {[null][null][null]}][null]}", (long) (byte) 0);
        java.lang.String str19 = deleteRequest3.type();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(transportAddress13);
        org.junit.Assert.assertTrue("'" + refreshPolicy14 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy14.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
    }

    @Test
    public void test8934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8934");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[][][]}");
        java.lang.String str3 = deleteRequest0.toString();
        java.lang.String str4 = deleteRequest0.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId12 = null;
        org.elasticsearch.tasks.Task task13 = deleteRequest8.createTask(0L, "", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest8.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType16 = deleteRequest8.versionType();
        java.lang.String str17 = deleteRequest8.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId25 = null;
        org.elasticsearch.tasks.Task task26 = deleteRequest21.createTask(0L, "", "", taskId25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest21.setRefreshPolicy("");
        java.lang.String str29 = deleteRequest28.toString();
        java.lang.String[] strArray30 = deleteRequest28.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest28.index("");
        org.elasticsearch.common.unit.TimeValue timeValue33 = deleteRequest32.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest8.timeout(timeValue33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress39 = deleteRequest38.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId47 = null;
        org.elasticsearch.tasks.Task task48 = deleteRequest43.createTask(0L, "", "", taskId47);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy49 = deleteRequest43.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest38.setRefreshPolicy(refreshPolicy49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest34.setRefreshPolicy(refreshPolicy49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest0.setRefreshPolicy(refreshPolicy49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest0.id("delete {[null][null][null]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions55 = deleteRequest54.indicesOptions();
        java.lang.String str56 = deleteRequest54.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue59 = deleteRequest58.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress60 = null;
        deleteRequest58.remoteAddress(transportAddress60);
        java.lang.String str62 = deleteRequest58.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest58.parent("delete {[hi!][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue65 = deleteRequest58.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest58.id("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest58.id("");
        org.elasticsearch.common.unit.TimeValue timeValue70 = deleteRequest69.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest54.timeout(timeValue70);
        org.elasticsearch.index.shard.ShardId shardId72 = deleteRequest71.shardId();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "delete {[null][null][null]}" + "'", str3, "delete {[null][null][null]}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][][]}" + "'", str4, "delete {[][][]}");
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(versionType16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "delete {[][][]}" + "'", str29, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(timeValue33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNull(transportAddress39);
        org.junit.Assert.assertNotNull(task48);
        org.junit.Assert.assertTrue("'" + refreshPolicy49 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy49.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(indicesOptions55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(timeValue59);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "delete {[null][null][null]}" + "'", str62, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(timeValue65);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(timeValue70);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNull(shardId72);
    }

    @Test
    public void test8935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8935");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest10.toString();
        java.lang.String str12 = deleteRequest10.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest10.index("delete {[delete {[][null][null]}][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest10.timeout();
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest10.shardId();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][][]}" + "'", str12, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNull(shardId18);
    }

    @Test
    public void test8936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8936");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest10.toString();
        java.lang.String str12 = deleteRequest10.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.routing("delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest10.index("delete {[][delete {[][][]}][delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}]}");
        long long17 = deleteRequest16.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel19 = deleteRequest18.consistencyLevel();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy20 = deleteRequest18.getRefreshPolicy();
        deleteRequest18.setParentTask("delete {[hi!][null][null]}", (long) (short) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId31 = null;
        org.elasticsearch.tasks.Task task32 = deleteRequest27.createTask(0L, "", "", taskId31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest27.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType35 = deleteRequest27.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel36 = deleteRequest27.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest18.consistencyLevel(writeConsistencyLevel36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest37.type("delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.index.VersionType versionType40 = deleteRequest37.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest16.versionType(versionType40);
        org.elasticsearch.common.unit.TimeValue timeValue42 = deleteRequest41.timeout();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][][]}" + "'", str12, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-3L) + "'", long17 == (-3L));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel19 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel19.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + refreshPolicy20 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy20.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(versionType35);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel36 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel36.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(versionType40);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(timeValue42);
    }

    @Test
    public void test8937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8937");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue2 = deleteRequest1.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress3 = null;
        deleteRequest1.remoteAddress(transportAddress3);
        java.lang.String str5 = deleteRequest1.index();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException6 = deleteRequest1.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str11 = deleteRequest10.id();
        java.lang.String str12 = deleteRequest10.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.type("delete {[][][]}");
        java.lang.String str15 = deleteRequest14.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel18 = deleteRequest17.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest1.consistencyLevel(writeConsistencyLevel18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId27 = null;
        org.elasticsearch.tasks.Task task28 = deleteRequest23.createTask(0L, "", "", taskId27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest23.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType31 = deleteRequest23.versionType();
        java.lang.String str32 = deleteRequest23.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress33 = deleteRequest23.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy34 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest23.setRefreshPolicy(refreshPolicy34);
        long long36 = deleteRequest23.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue37 = deleteRequest23.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest39.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue44 = deleteRequest43.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest39.timeout(timeValue44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str47 = deleteRequest46.parent();
        org.elasticsearch.index.VersionType versionType48 = deleteRequest46.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest39.versionType(versionType48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest23.versionType(versionType48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest19.versionType(versionType48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId59 = null;
        org.elasticsearch.tasks.Task task60 = deleteRequest55.createTask(0L, "", "", taskId59);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest55.setRefreshPolicy("");
        java.lang.String[] strArray63 = deleteRequest62.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId71 = null;
        org.elasticsearch.tasks.Task task72 = deleteRequest67.createTask(0L, "", "", taskId71);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest67.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel75 = deleteRequest74.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest62.consistencyLevel(writeConsistencyLevel75);
        deleteRequest76.setParentTask("hi!", (long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel81 = deleteRequest80.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel82 = deleteRequest80.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest83 = deleteRequest76.consistencyLevel(writeConsistencyLevel82);
        org.elasticsearch.common.unit.TimeValue timeValue84 = deleteRequest83.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest85 = deleteRequest19.timeout(timeValue84);
        org.elasticsearch.common.io.stream.StreamInput streamInput86 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest85.readFrom(streamInput86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(timeValue2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[null][null][null]}" + "'", str5, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[][][]}" + "'", str15, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel18 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel18.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(task28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(versionType31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(transportAddress33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertNotNull(timeValue37);
        org.junit.Assert.assertNotNull(timeValue44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(versionType48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(task60);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(task72);
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel75 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel75.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel81 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel81.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel82 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel82.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest83);
        org.junit.Assert.assertNotNull(timeValue84);
        org.junit.Assert.assertNotNull(deleteRequest85);
    }

    @Test
    public void test8938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8938");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("delete {[][][]}");
        java.lang.String str10 = deleteRequest7.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId22 = null;
        org.elasticsearch.tasks.Task task23 = deleteRequest18.createTask(0L, "", "", taskId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest18.setRefreshPolicy("");
        java.lang.String[] strArray26 = deleteRequest25.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId34 = null;
        org.elasticsearch.tasks.Task task35 = deleteRequest30.createTask(0L, "", "", taskId34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest30.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = deleteRequest37.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest25.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue42 = deleteRequest41.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress43 = null;
        deleteRequest41.remoteAddress(transportAddress43);
        org.elasticsearch.common.unit.TimeValue timeValue45 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest41.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest25.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest14.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest3.timeout(timeValue45);
        org.elasticsearch.action.support.IndicesOptions indicesOptions50 = deleteRequest49.indicesOptions();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel51 = deleteRequest49.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions52 = deleteRequest49.indicesOptions();
        java.lang.String str53 = deleteRequest49.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest49.id("delete {[null][delete {[null][null][null]}][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.shard.ShardId shardId61 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest60.setShardId(shardId61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest62.routing("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy65 = deleteRequest64.getRefreshPolicy();
        org.elasticsearch.tasks.TaskId taskId66 = deleteRequest64.getParentTask();
        org.elasticsearch.tasks.Task task67 = deleteRequest49.createTask((-1L), "delete {[][delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[][][]}]}][delete {[null][null][null]}]}", "delete {[][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][delete {[][][]}]}", taskId66);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy68 = deleteRequest49.getRefreshPolicy();
        java.lang.String str69 = deleteRequest49.routing();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][][]}" + "'", str10, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(task35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel38 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel38.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(timeValue42);
        org.junit.Assert.assertNotNull(timeValue45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(indicesOptions50);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel51 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel51.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertTrue("'" + refreshPolicy65 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy65.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(taskId66);
        org.junit.Assert.assertNotNull(task67);
        org.junit.Assert.assertTrue("'" + refreshPolicy68 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy68.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNull(str69);
    }

    @Test
    public void test8939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8939");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId18 = null;
        org.elasticsearch.tasks.Task task19 = deleteRequest14.createTask(0L, "", "", taskId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.setRefreshPolicy("");
        java.lang.String[] strArray22 = deleteRequest21.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId30 = null;
        org.elasticsearch.tasks.Task task31 = deleteRequest26.createTask(0L, "", "", taskId30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest26.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel34 = deleteRequest33.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest21.consistencyLevel(writeConsistencyLevel34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue38 = deleteRequest37.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress39 = null;
        deleteRequest37.remoteAddress(transportAddress39);
        org.elasticsearch.common.unit.TimeValue timeValue41 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest37.timeout(timeValue41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest21.timeout(timeValue41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest10.timeout(timeValue41);
        org.elasticsearch.index.shard.ShardId shardId45 = deleteRequest44.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest44.parent("delete {[][hi!][delete {[null][null][null]}]}");
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(task19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(task31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel34 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel34.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(timeValue38);
        org.junit.Assert.assertNotNull(timeValue41);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNull(shardId45);
        org.junit.Assert.assertNotNull(deleteRequest47);
    }

    @Test
    public void test8940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8940");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.setShardId(shardId2);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest1.index("");
        boolean boolean6 = deleteRequest5.getShouldPersistResult();
        java.lang.String str7 = deleteRequest5.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest5.type("delete {[delete {[][][]}][delete {[null][null][null]}][delete {[null][null][null]}]}");
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest9);
    }

    @Test
    public void test8941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8941");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.type("delete {[hi!][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue5 = deleteRequest2.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest2.version((long) (byte) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long10 = deleteRequest9.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue11 = deleteRequest9.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest2.timeout(timeValue11);
        org.elasticsearch.action.support.IndicesOptions indicesOptions13 = deleteRequest12.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.type("");
        java.lang.String str16 = deleteRequest12.index();
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest12.timeout();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(timeValue11);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(indicesOptions13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(timeValue17);
    }

    @Test
    public void test8942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8942");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str7 = deleteRequest6.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException8 = deleteRequest6.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure10 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "hi!", (java.lang.Throwable) actionRequestValidationException8, "delete {[][][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure12 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", (java.lang.Throwable) actionRequestValidationException8, "delete {[][][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure14 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][delete {[][][hi!]}][delete {[][][]}]}", (java.lang.Throwable) actionRequestValidationException8, "delete {[][null][null]}");
        java.lang.String str15 = shardFailure14.reason;
        java.lang.String str16 = shardFailure14.indexUUID;
        java.lang.String str17 = shardFailure14.reason;
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[null][null][null]}" + "'", str7, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException8);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[][delete {[][][hi!]}][delete {[][][]}]}" + "'", str15, "delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[][null][null]}" + "'", str16, "delete {[][null][null]}");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[][delete {[][][hi!]}][delete {[][][]}]}" + "'", str17, "delete {[][delete {[][][hi!]}][delete {[][][]}]}");
    }

    @Test
    public void test8943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8943");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.index("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        boolean boolean11 = deleteRequest10.getShouldPersistResult();
        long long12 = deleteRequest10.version();
        java.lang.String str13 = deleteRequest10.getDescription();
        java.lang.String str14 = deleteRequest10.id();
        deleteRequest10.primaryTerm((-3L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.index("delete {[][][hi!]}");
        java.lang.String str20 = deleteRequest19.parent();
        java.lang.String str21 = deleteRequest19.type();
        long long22 = deleteRequest19.primaryTerm();
        long long23 = deleteRequest19.version();
        java.lang.String str24 = deleteRequest19.type();
        java.lang.String str25 = deleteRequest19.type();
        java.lang.String str26 = deleteRequest19.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str34 = deleteRequest33.id();
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest33.setShardId(shardId35);
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest33.setShardId(shardId37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest33.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest40.routing("delete {[][][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel43 = deleteRequest40.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.shard.ShardId shardId49 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest48.setShardId(shardId49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest48.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest53.index("delete {[][][hi!]}");
        java.lang.String str56 = deleteRequest55.parent();
        java.lang.String str57 = deleteRequest55.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest55.parent("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest55.parent("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest61.routing("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest63.index("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        java.lang.String str66 = deleteRequest63.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str71 = deleteRequest70.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest70.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId74 = deleteRequest70.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest70.id("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str81 = deleteRequest80.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest83 = deleteRequest80.id("hi!");
        org.elasticsearch.tasks.TaskId taskId84 = deleteRequest83.getParentTask();
        org.elasticsearch.tasks.TaskId taskId85 = deleteRequest83.getParentTask();
        deleteRequest76.setParentTask(taskId85);
        org.elasticsearch.tasks.Task task87 = deleteRequest63.createTask(0L, "", "delete {[null][null][null]}", taskId85);
        deleteRequest52.setParentTask(taskId85);
        org.elasticsearch.tasks.Task task89 = deleteRequest40.createTask((long) '#', "delete {[delete {[delete {[][][hi!]}][null][null]}][null][null]}", "delete {[delete {[delete {[][][hi!]}][null][null]}][null][null]}", taskId85);
        org.elasticsearch.tasks.Task task90 = deleteRequest19.createTask(1L, "delete {[][delete {[][][]}][]}", "delete {[][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}][]}", taskId85);
        org.elasticsearch.common.unit.TimeValue timeValue91 = deleteRequest19.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest92 = deleteRequest10.timeout(timeValue91);
        java.lang.String str93 = deleteRequest92.getDescription();
        org.elasticsearch.index.shard.IndexShard indexShard94 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult95 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest92, indexShard94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-3L) + "'", long12 == (-3L));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}" + "'", str13, "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[][][]}" + "'", str14, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-3L) + "'", long23 == (-3L));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel43 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel43.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str57, "delete {[delete {[][][hi!]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}" + "'", str66, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(deleteRequest73);
        org.junit.Assert.assertNotNull(taskId74);
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
        org.junit.Assert.assertNotNull(deleteRequest83);
        org.junit.Assert.assertNotNull(taskId84);
        org.junit.Assert.assertNotNull(taskId85);
        org.junit.Assert.assertNotNull(task87);
        org.junit.Assert.assertNotNull(task89);
        org.junit.Assert.assertNotNull(task90);
        org.junit.Assert.assertNotNull(timeValue91);
        org.junit.Assert.assertNotNull(deleteRequest92);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}" + "'", str93, "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}");
    }

    @Test
    public void test8944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8944");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        deleteRequest0.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.setRefreshPolicy("");
        java.lang.String str6 = deleteRequest0.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str11 = deleteRequest10.id();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.setShardId(shardId12);
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest10.setShardId(shardId14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest10.setRefreshPolicy("");
        org.elasticsearch.common.transport.TransportAddress transportAddress18 = null;
        deleteRequest17.remoteAddress(transportAddress18);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = deleteRequest17.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest0.consistencyLevel(writeConsistencyLevel20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest0.parent("delete {[delete {[delete {[][null][null]}][null][null]}][][]}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel20 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel20.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
    }

    @Test
    public void test8945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8945");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.type("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.type("delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long14 = deleteRequest13.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest13.index("");
        boolean boolean17 = deleteRequest13.getShouldPersistResult();
        deleteRequest13.primaryTerm((long) 0);
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest13.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest11.timeout(timeValue20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str26 = deleteRequest25.id();
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest25.setShardId(shardId27);
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest25.setShardId(shardId29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest31.parent("delete {[][][]}");
        org.elasticsearch.index.VersionType versionType34 = deleteRequest33.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest30.versionType(versionType34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest11.versionType(versionType34);
        org.elasticsearch.index.VersionType versionType37 = deleteRequest36.versionType();
        java.lang.String str38 = deleteRequest36.parent();
        java.lang.String str39 = deleteRequest36.index();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(versionType34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(versionType37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
    }

    @Test
    public void test8946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8946");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.type("delete {[null][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest1.setShardId(shardId4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.index("hi!");
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest5.setShardId(shardId8);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
    }

    @Test
    public void test8947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8947");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.setRefreshPolicy("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy10 = deleteRequest6.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId18 = null;
        org.elasticsearch.tasks.Task task19 = deleteRequest14.createTask(0L, "", "", taskId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType22 = deleteRequest14.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest14.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest6.consistencyLevel(writeConsistencyLevel23);
        org.elasticsearch.index.shard.ShardId shardId25 = deleteRequest24.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest24.index("delete {[][delete {[delete {[][null][null]}][][]}][delete {[null][delete {[null][null][null]}][null]}]}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + refreshPolicy10 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy10.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(task19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNull(shardId25);
        org.junit.Assert.assertNotNull(deleteRequest27);
    }

    @Test
    public void test8948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8948");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.setRefreshPolicy("");
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId21 = null;
        org.elasticsearch.tasks.Task task22 = deleteRequest17.createTask(0L, "", "", taskId21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest17.setRefreshPolicy("");
        java.lang.String[] strArray25 = deleteRequest24.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId33 = null;
        org.elasticsearch.tasks.Task task34 = deleteRequest29.createTask(0L, "", "", taskId33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest29.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel37 = deleteRequest36.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest24.consistencyLevel(writeConsistencyLevel37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue41 = deleteRequest40.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress42 = null;
        deleteRequest40.remoteAddress(transportAddress42);
        org.elasticsearch.common.unit.TimeValue timeValue44 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest40.timeout(timeValue44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest24.timeout(timeValue44);
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest46.setShardId(shardId47);
        org.elasticsearch.tasks.TaskId taskId49 = deleteRequest46.getParentTask();
        org.elasticsearch.tasks.Task task50 = deleteRequest9.createTask((long) (byte) 100, "delete {[][delete {[][][]}][delete {[][][]}]}", "delete {[][][]}", taskId49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest9.id("delete {[delete {[][null][null]}][][]}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(task34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel37 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel37.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(timeValue41);
        org.junit.Assert.assertNotNull(timeValue44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(taskId49);
        org.junit.Assert.assertNotNull(task50);
        org.junit.Assert.assertNotNull(deleteRequest52);
    }

    @Test
    public void test8949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8949");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][null][null]}][null][null]}", "delete {[delete {[delete {[][][hi!]}][null][null]}][][]}", "delete {[delete {[][hi!][delete {[null][null][null]}]}][][]}");
    }

    @Test
    public void test8950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8950");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}][delete {[][null][null]}][delete {[][hi!][delete {[null][null][null]}]}]}", "delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[][delete {[][null][null]}][delete {[][][]}]}]}", "delete {[delete {[][][hi!]}][delete {[null][null][null]}][]}");
        org.elasticsearch.index.VersionType versionType4 = deleteRequest3.versionType();
        org.junit.Assert.assertNotNull(versionType4);
    }

    @Test
    public void test8951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8951");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId20 = null;
        org.elasticsearch.tasks.Task task21 = deleteRequest16.createTask(0L, "", "", taskId20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest16.setRefreshPolicy("");
        deleteRequest23.primaryTerm(1L);
        java.lang.String str26 = deleteRequest23.routing();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy27 = deleteRequest23.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest3.setRefreshPolicy(refreshPolicy27);
        java.lang.String str29 = deleteRequest28.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest28.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest28.version(100L);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException34 = deleteRequest33.validate();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][][]}" + "'", str12, "delete {[][][]}");
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + refreshPolicy27 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy27.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "delete {[][][]}" + "'", str29, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNull(actionRequestValidationException34);
    }

    @Test
    public void test8952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8952");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("delete {[][][]}");
        java.lang.String str10 = deleteRequest7.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId22 = null;
        org.elasticsearch.tasks.Task task23 = deleteRequest18.createTask(0L, "", "", taskId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest18.setRefreshPolicy("");
        java.lang.String[] strArray26 = deleteRequest25.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId34 = null;
        org.elasticsearch.tasks.Task task35 = deleteRequest30.createTask(0L, "", "", taskId34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest30.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = deleteRequest37.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest25.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue42 = deleteRequest41.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress43 = null;
        deleteRequest41.remoteAddress(transportAddress43);
        org.elasticsearch.common.unit.TimeValue timeValue45 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest41.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest25.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest14.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest3.timeout(timeValue45);
        org.elasticsearch.action.support.IndicesOptions indicesOptions50 = deleteRequest49.indicesOptions();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel51 = deleteRequest49.consistencyLevel();
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest49.setShardId(shardId52);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest55.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue60 = deleteRequest59.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest55.timeout(timeValue60);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str63 = deleteRequest62.parent();
        org.elasticsearch.index.VersionType versionType64 = deleteRequest62.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest55.versionType(versionType64);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest49.versionType(versionType64);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][hi!]}", "delete {[null][null][null]}", "");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy71 = deleteRequest70.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest49.setRefreshPolicy(refreshPolicy71);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest72.type("delete {[null][delete {[][delete {[hi!][null][null]}][hi!]}][delete {[][][hi!]}]}");
        org.elasticsearch.common.io.stream.StreamInput streamInput75 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest74.readFrom(streamInput75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][][]}" + "'", str10, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(task35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel38 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel38.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(timeValue42);
        org.junit.Assert.assertNotNull(timeValue45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(indicesOptions50);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel51 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel51.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(timeValue60);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(versionType64);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertTrue("'" + refreshPolicy71 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy71.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertNotNull(deleteRequest74);
    }

    @Test
    public void test8953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8953");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[][][]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy3 = deleteRequest0.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest5.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest5.timeout(timeValue10);
        java.lang.String str12 = deleteRequest5.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str20 = deleteRequest19.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("delete {[][][]}");
        java.lang.String str27 = deleteRequest24.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest24.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId37 = null;
        org.elasticsearch.tasks.Task task38 = deleteRequest33.createTask(0L, "", "", taskId37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest33.setRefreshPolicy("");
        java.lang.String str41 = deleteRequest40.toString();
        java.lang.String[] strArray42 = deleteRequest40.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest40.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str53 = deleteRequest52.id();
        java.lang.String str54 = deleteRequest52.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str56 = deleteRequest55.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest55.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId59 = deleteRequest55.getParentTask();
        deleteRequest52.setParentTask(taskId59);
        deleteRequest48.setParentTask(taskId59);
        deleteRequest44.setParentTask(taskId59);
        deleteRequest29.setParentTask(taskId59);
        deleteRequest19.setParentTask(taskId59);
        org.elasticsearch.tasks.Task task65 = deleteRequest5.createTask((long) 100, "delete {[][][hi!]}", "hi!", taskId59);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest5.routing("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.tasks.TaskId taskId68 = deleteRequest5.getParentTask();
        deleteRequest0.setParentTask(taskId68);
        java.lang.String str70 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest0.index("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest72.index("delete {[delete {[delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}][delete {[hi!][null][null]}][hi!]}][delete {[][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][][]}]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest74.id("delete {[delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertTrue("'" + refreshPolicy3 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy3.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][][]}" + "'", str27, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(task38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "delete {[][][]}" + "'", str41, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(taskId59);
        org.junit.Assert.assertNotNull(task65);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNotNull(taskId68);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertNotNull(deleteRequest76);
    }

    @Test
    public void test8954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8954");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.setRefreshPolicy("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy10 = deleteRequest6.getRefreshPolicy();
        long long11 = deleteRequest6.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest6.id("delete {[][][delete {[delete {[][null][null]}][][]}]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.setRefreshPolicy("delete {[delete {[delete {[][null][null]}][][delete {[][][hi!]}]}][delete {[][null][null]}][delete {[null][null][delete {[][][hi!]}]}]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[delete {[delete {[][null][null]}][][delete {[][][hi!]}]}][delete {[][null][null]}][delete {[null][null][delete {[][][hi!]}]}]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + refreshPolicy10 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy10.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest13);
    }

    @Test
    public void test8955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8955");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest10.toString();
        java.lang.String str12 = deleteRequest10.getDescription();
        java.lang.String str13 = deleteRequest10.toString();
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest10.setShardId(shardId14);
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][][]}" + "'", str12, "delete {[][][]}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[][][]}" + "'", str13, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest15);
    }

    @Test
    public void test8956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8956");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str6 = deleteRequest5.id();
        java.lang.String str7 = deleteRequest5.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str9 = deleteRequest8.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest8.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest8.getParentTask();
        deleteRequest5.setParentTask(taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel15 = deleteRequest14.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel16 = deleteRequest14.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest5.consistencyLevel(writeConsistencyLevel16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest5.type("delete {[delete {[][][hi!]}][null][null]}");
        deleteRequest5.primaryTerm((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str26 = deleteRequest25.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest25.id("hi!");
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest28.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest28.setRefreshPolicy("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy32 = deleteRequest28.getRefreshPolicy();
        long long33 = deleteRequest28.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest28.id("delete {[][][]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel36 = deleteRequest28.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest5.consistencyLevel(writeConsistencyLevel36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest5.parent("delete {[][delete {[][null][null]}][delete {[][][]}]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[][delete {[][delete {[null][null][null]}][]}][delete {[][][]}]}", deleteRequest39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel15 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel15.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel16 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel16.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertTrue("'" + refreshPolicy32 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy32.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-3L) + "'", long33 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel36 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel36.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest39);
    }

    @Test
    public void test8957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8957");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][hi!]}][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue2 = deleteRequest1.timeout();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy3 = deleteRequest1.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId11 = null;
        org.elasticsearch.tasks.Task task12 = deleteRequest7.createTask(0L, "", "", taskId11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.setRefreshPolicy("");
        java.lang.String[] strArray15 = deleteRequest14.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId23 = null;
        org.elasticsearch.tasks.Task task24 = deleteRequest19.createTask(0L, "", "", taskId23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest19.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest14.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue31 = deleteRequest30.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress32 = null;
        deleteRequest30.remoteAddress(transportAddress32);
        org.elasticsearch.common.unit.TimeValue timeValue34 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest30.timeout(timeValue34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest14.timeout(timeValue34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest36.parent("delete {[][][hi!]}");
        org.elasticsearch.common.unit.TimeValue timeValue39 = deleteRequest38.timeout();
        org.elasticsearch.index.VersionType versionType40 = deleteRequest38.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest1.versionType(versionType40);
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest1.setShardId(shardId42);
        org.junit.Assert.assertNotNull(timeValue2);
        org.junit.Assert.assertTrue("'" + refreshPolicy3 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy3.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(task24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(timeValue31);
        org.junit.Assert.assertNotNull(timeValue34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(timeValue39);
        org.junit.Assert.assertNotNull(versionType40);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest43);
    }

    @Test
    public void test8958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8958");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str15 = deleteRequest14.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException16 = deleteRequest14.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure18 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "hi!", (java.lang.Throwable) actionRequestValidationException16, "delete {[][][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure20 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "", (java.lang.Throwable) actionRequestValidationException16, "delete {[][][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure22 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[][delete {[][][]}][delete {[][][]}]}", (java.lang.Throwable) actionRequestValidationException16, "");
        java.lang.Throwable throwable23 = shardFailure22.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure25 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "hi!", throwable23, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure27 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}", throwable23, "delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure29 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[][delete {[][null][null]}][delete {[][][]}]}]}", throwable23, "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure31 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[][hi!][delete {[null][null][null]}]}][][]}", throwable23, "delete {[delete {[delete {[][null][null]}][][delete {[][][hi!]}]}][delete {[][null][null]}][delete {[null][null][delete {[][][hi!]}]}]}");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[null][null][null]}" + "'", str15, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException16);
        org.junit.Assert.assertNotNull(throwable23);
        org.junit.Assert.assertEquals(throwable23.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable23.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable23.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test8959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8959");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = deleteRequest0.remoteAddress();
        java.lang.String str7 = deleteRequest0.toString();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy8 = deleteRequest0.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str10 = deleteRequest9.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.version((long) (short) 100);
        java.lang.String str13 = deleteRequest9.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue16 = deleteRequest15.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress17 = null;
        deleteRequest15.remoteAddress(transportAddress17);
        java.lang.String str19 = deleteRequest15.index();
        org.elasticsearch.index.VersionType versionType20 = deleteRequest15.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest9.versionType(versionType20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str23 = deleteRequest22.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue26 = deleteRequest25.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest22.timeout(timeValue26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId30 = deleteRequest29.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest29.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.type("delete {[][][hi!]}");
        java.lang.String str41 = deleteRequest38.getDescription();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy42 = deleteRequest38.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest32.setRefreshPolicy(refreshPolicy42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest9.setRefreshPolicy(refreshPolicy42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest0.setRefreshPolicy(refreshPolicy42);
        java.lang.String str46 = deleteRequest0.type();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(transportAddress6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[null][null][null]}" + "'", str7, "delete {[null][null][null]}");
        org.junit.Assert.assertTrue("'" + refreshPolicy8 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy8.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[null][null][null]}" + "'", str19, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(versionType20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(timeValue26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(taskId30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "delete {[][delete {[][][hi!]}][delete {[][][]}]}" + "'", str41, "delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.junit.Assert.assertTrue("'" + refreshPolicy42 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy42.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNull(str46);
    }

    @Test
    public void test8960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8960");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.type("delete {[null][null][null]}");
        java.lang.String str4 = deleteRequest1.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest1.index("");
        org.elasticsearch.common.transport.TransportAddress transportAddress7 = null;
        deleteRequest6.remoteAddress(transportAddress7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest6.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest6.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest6.routing("delete {[delete {[][null][null]}][][delete {[null][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest6.routing("delete {[null][null][delete {[null][null][null]}]}");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput16 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest6.writeTo(streamOutput16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
    }

    @Test
    public void test8961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8961");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest1.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue6 = deleteRequest5.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.timeout(timeValue6);
        java.lang.String str8 = deleteRequest1.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException9 = deleteRequest1.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest1.type("delete {[delete {[][][hi!]}][null][null]}");
        java.lang.String[] strArray12 = deleteRequest11.indices();
        long long13 = deleteRequest11.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest11.parent("delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}");
        java.lang.String str16 = deleteRequest15.routing();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException17 = deleteRequest15.validate();
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[][null][null]}" + "'", str8, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-3L) + "'", long13 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(actionRequestValidationException17);
    }

    @Test
    public void test8962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8962");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str13 = deleteRequest12.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException14 = deleteRequest12.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure16 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "hi!", (java.lang.Throwable) actionRequestValidationException14, "delete {[][][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure18 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "", (java.lang.Throwable) actionRequestValidationException14, "delete {[][][hi!]}");
        java.lang.String str19 = shardFailure18.reason;
        java.lang.Throwable throwable20 = shardFailure18.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure22 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[null][null][null]}", throwable20, "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure24 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}", throwable20, "delete {[][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure26 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", throwable20, "delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure28 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][null][delete {[][][hi!]}]}", throwable20, "delete {[][delete {[][][]}][delete {[][][]}]}");
        java.lang.Throwable throwable29 = shardFailure28.cause;
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[null][null][null]}" + "'", str13, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(throwable20);
        org.junit.Assert.assertEquals(throwable20.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable20.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable20.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable29);
        org.junit.Assert.assertEquals(throwable29.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable29.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable29.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test8963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8963");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.type("delete {[null][null][null]}");
        java.lang.String str4 = deleteRequest1.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest1.index("");
        java.lang.String[] strArray7 = deleteRequest6.indices();
        java.lang.String str8 = deleteRequest6.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest6.routing("delete {[][][]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions11 = deleteRequest6.indicesOptions();
        long long12 = deleteRequest6.primaryTerm();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[][delete {[null][null][null]}][null]}" + "'", str8, "delete {[][delete {[null][null][null]}][null]}");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(indicesOptions11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
    }

    @Test
    public void test8964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8964");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}");
        java.lang.String str2 = deleteRequest1.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str7 = deleteRequest6.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long13 = deleteRequest12.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str15 = deleteRequest14.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue18 = deleteRequest17.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest14.timeout(timeValue18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId22 = deleteRequest21.getParentTask();
        deleteRequest12.setParentTask(taskId22);
        org.elasticsearch.tasks.Task task24 = deleteRequest6.createTask((long) ' ', "delete {[][][hi!]}", "delete {[][][]}", taskId22);
        java.lang.String[] strArray25 = deleteRequest6.indices();
        java.lang.String[] strArray26 = deleteRequest6.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest6.id("delete {[][null][null]}");
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest28.getParentTask();
        deleteRequest1.setParentTask(taskId29);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}][null][null]}" + "'", str2, "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}][null][null]}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[][][]}" + "'", str7, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(timeValue18);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(taskId22);
        org.junit.Assert.assertNotNull(task24);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(taskId29);
    }

    @Test
    public void test8965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8965");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException2 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest4.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue9 = deleteRequest8.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest4.timeout(timeValue9);
        java.lang.String str11 = deleteRequest4.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str19 = deleteRequest18.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.type("delete {[][][]}");
        java.lang.String str26 = deleteRequest23.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest23.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId36 = null;
        org.elasticsearch.tasks.Task task37 = deleteRequest32.createTask(0L, "", "", taskId36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest32.setRefreshPolicy("");
        java.lang.String str40 = deleteRequest39.toString();
        java.lang.String[] strArray41 = deleteRequest39.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest39.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str52 = deleteRequest51.id();
        java.lang.String str53 = deleteRequest51.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str55 = deleteRequest54.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest54.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId58 = deleteRequest54.getParentTask();
        deleteRequest51.setParentTask(taskId58);
        deleteRequest47.setParentTask(taskId58);
        deleteRequest43.setParentTask(taskId58);
        deleteRequest28.setParentTask(taskId58);
        deleteRequest18.setParentTask(taskId58);
        org.elasticsearch.tasks.Task task64 = deleteRequest4.createTask((long) 100, "delete {[][][hi!]}", "hi!", taskId58);
        deleteRequest0.setParentTask(taskId58);
        org.elasticsearch.index.shard.ShardId shardId66 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest0.setShardId(shardId66);
        org.elasticsearch.common.unit.TimeValue timeValue68 = deleteRequest67.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str73 = deleteRequest72.id();
        org.elasticsearch.index.shard.ShardId shardId74 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest72.setShardId(shardId74);
        org.elasticsearch.action.support.IndicesOptions indicesOptions76 = deleteRequest75.indicesOptions();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy77 = deleteRequest75.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = deleteRequest67.setRefreshPolicy(refreshPolicy77);
        java.lang.String str79 = deleteRequest67.parent();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput80 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest67.writeTo(streamOutput80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "delete {[null][null][null]}" + "'", str1, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException2);
        org.junit.Assert.assertNotNull(timeValue9);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "delete {[][][]}" + "'", str26, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(task37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "delete {[][][]}" + "'", str40, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(taskId58);
        org.junit.Assert.assertNotNull(task64);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNotNull(timeValue68);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertNotNull(deleteRequest75);
        org.junit.Assert.assertNotNull(indicesOptions76);
        org.junit.Assert.assertTrue("'" + refreshPolicy77 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy77.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest78);
        org.junit.Assert.assertNull(str79);
    }

    @Test
    public void test8966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8966");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.parent("hi!");
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest9.getParentTask();
        java.lang.String[] strArray11 = deleteRequest9.indices();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertNotNull(strArray11);
    }

    @Test
    public void test8967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8967");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.setShardId(shardId2);
        deleteRequest1.primaryTerm((long) 1);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy6 = deleteRequest1.getRefreshPolicy();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest1.setShardId(shardId7);
        java.lang.String str9 = deleteRequest8.routing();
        java.lang.String[] strArray10 = deleteRequest8.indices();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertTrue("'" + refreshPolicy6 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy6.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strArray10);
    }

    @Test
    public void test8968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8968");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest1.setParentTask("hi!", (long) (short) 1);
        java.lang.String[] strArray5 = deleteRequest1.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest7.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue12 = deleteRequest11.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest7.timeout(timeValue12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest1.timeout(timeValue12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.id("delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}");
        long long17 = deleteRequest14.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest14.id("delete {[delete {[][][]}][null][null]}");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(timeValue12);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-3L) + "'", long17 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest19);
    }

    @Test
    public void test8969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8969");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.index("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        deleteRequest10.setParentTask("delete {[null][null][null]}", (long) (short) -1);
        long long14 = deleteRequest10.version();
        java.lang.String str15 = deleteRequest10.parent();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel16 = deleteRequest10.consistencyLevel();
        org.elasticsearch.common.io.stream.StreamInput streamInput17 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest10.readFrom(streamInput17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-3L) + "'", long14 == (-3L));
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel16 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel16.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test8970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8970");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.consistencyLevel(writeConsistencyLevel23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue27 = deleteRequest26.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress28 = null;
        deleteRequest26.remoteAddress(transportAddress28);
        org.elasticsearch.common.unit.TimeValue timeValue30 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest26.timeout(timeValue30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest10.timeout(timeValue30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.parent("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest34.id("delete {[delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}][delete {[][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}][]}][delete {[][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][delete {[][][]}]}]}");
        org.elasticsearch.index.VersionType versionType37 = deleteRequest34.versionType();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(timeValue27);
        org.junit.Assert.assertNotNull(timeValue30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(versionType37);
    }

    @Test
    public void test8971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8971");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[][][]}");
        java.lang.String str3 = deleteRequest0.toString();
        java.lang.String str4 = deleteRequest0.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId12 = null;
        org.elasticsearch.tasks.Task task13 = deleteRequest8.createTask(0L, "", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest8.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType16 = deleteRequest8.versionType();
        java.lang.String str17 = deleteRequest8.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId25 = null;
        org.elasticsearch.tasks.Task task26 = deleteRequest21.createTask(0L, "", "", taskId25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest21.setRefreshPolicy("");
        java.lang.String str29 = deleteRequest28.toString();
        java.lang.String[] strArray30 = deleteRequest28.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest28.index("");
        org.elasticsearch.common.unit.TimeValue timeValue33 = deleteRequest32.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest8.timeout(timeValue33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress39 = deleteRequest38.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId47 = null;
        org.elasticsearch.tasks.Task task48 = deleteRequest43.createTask(0L, "", "", taskId47);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy49 = deleteRequest43.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest38.setRefreshPolicy(refreshPolicy49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest34.setRefreshPolicy(refreshPolicy49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest0.setRefreshPolicy(refreshPolicy49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest0.id("delete {[null][null][null]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions55 = deleteRequest54.indicesOptions();
        org.elasticsearch.index.shard.ShardId shardId56 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest54.setShardId(shardId56);
        java.lang.String str58 = deleteRequest57.getDescription();
        deleteRequest57.setParentTask("delete {[hi!][][delete {[][][]}]}", (long) (byte) 1);
        org.elasticsearch.tasks.TaskId taskId62 = deleteRequest57.getParentTask();
        org.elasticsearch.common.unit.TimeValue timeValue63 = deleteRequest57.timeout();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "delete {[null][null][null]}" + "'", str3, "delete {[null][null][null]}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][][]}" + "'", str4, "delete {[][][]}");
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(versionType16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "delete {[][][]}" + "'", str29, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(timeValue33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNull(transportAddress39);
        org.junit.Assert.assertNotNull(task48);
        org.junit.Assert.assertTrue("'" + refreshPolicy49 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy49.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(indicesOptions55);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "delete {[null][null][delete {[null][null][null]}]}" + "'", str58, "delete {[null][null][delete {[null][null][null]}]}");
        org.junit.Assert.assertNotNull(taskId62);
        org.junit.Assert.assertNotNull(timeValue63);
    }

    @Test
    public void test8972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8972");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest3.consistencyLevel(writeConsistencyLevel11);
        deleteRequest12.setParentTask("hi!", 1L);
        java.lang.String str16 = deleteRequest12.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest12.id("delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}");
        java.lang.String str19 = deleteRequest12.getDescription();
        org.elasticsearch.tasks.TaskId taskId20 = deleteRequest12.getParentTask();
        org.elasticsearch.common.transport.TransportAddress transportAddress21 = deleteRequest12.remoteAddress();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[][delete {[][][]}][delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}]}" + "'", str19, "delete {[][delete {[][][]}][delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}]}");
        org.junit.Assert.assertNotNull(taskId20);
        org.junit.Assert.assertNull(transportAddress21);
    }

    @Test
    public void test8973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8973");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.setRefreshPolicy("");
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        java.lang.String[] strArray11 = deleteRequest9.indices();
        org.elasticsearch.index.shard.ShardId shardId12 = deleteRequest9.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest9.timeout();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNull(shardId12);
        org.junit.Assert.assertNotNull(timeValue13);
    }

    @Test
    public void test8974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8974");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = deleteRequest3.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.setShardId(shardId6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.parent("delete {[][][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str16 = deleteRequest15.id();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.setShardId(shardId17);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest15.setShardId(shardId19);
        org.elasticsearch.action.support.IndicesOptions indicesOptions21 = deleteRequest20.indicesOptions();
        org.elasticsearch.action.support.IndicesOptions indicesOptions22 = deleteRequest20.indicesOptions();
        java.lang.String str23 = deleteRequest20.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str28 = deleteRequest27.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest27.id("hi!");
        org.elasticsearch.tasks.TaskId taskId31 = deleteRequest30.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId39 = null;
        org.elasticsearch.tasks.Task task40 = deleteRequest35.createTask(0L, "", "", taskId39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest35.setRefreshPolicy("");
        java.lang.String[] strArray43 = deleteRequest42.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId51 = null;
        org.elasticsearch.tasks.Task task52 = deleteRequest47.createTask(0L, "", "", taskId51);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest47.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel55 = deleteRequest54.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest42.consistencyLevel(writeConsistencyLevel55);
        deleteRequest56.setParentTask("hi!", (long) (short) 100);
        org.elasticsearch.index.VersionType versionType60 = deleteRequest56.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest30.versionType(versionType60);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest20.versionType(versionType60);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest3.versionType(versionType60);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(transportAddress5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(indicesOptions21);
        org.junit.Assert.assertNotNull(indicesOptions22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(taskId31);
        org.junit.Assert.assertNotNull(task40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(task52);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel55 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel55.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(versionType60);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest63);
    }

    @Test
    public void test8975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8975");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][delete {[hi!][null][null]}][null]}");
        long long2 = deleteRequest1.version();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-3L) + "'", long2 == (-3L));
    }

    @Test
    public void test8976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8976");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        java.lang.String str4 = deleteRequest2.type();
        long long5 = deleteRequest2.primaryTerm();
        org.elasticsearch.index.VersionType versionType6 = deleteRequest2.versionType();
        org.elasticsearch.action.support.IndicesOptions indicesOptions7 = deleteRequest2.indicesOptions();
        java.lang.String str8 = deleteRequest2.parent();
        java.lang.String str9 = deleteRequest2.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest2.parent("delete {[null][delete {[null][null][delete {[][][hi!]}]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str13 = deleteRequest12.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException14 = deleteRequest12.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest16.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue21 = deleteRequest20.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest16.timeout(timeValue21);
        java.lang.String str23 = deleteRequest16.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str31 = deleteRequest30.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest35.type("delete {[][][]}");
        java.lang.String str38 = deleteRequest35.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest35.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId48 = null;
        org.elasticsearch.tasks.Task task49 = deleteRequest44.createTask(0L, "", "", taskId48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest44.setRefreshPolicy("");
        java.lang.String str52 = deleteRequest51.toString();
        java.lang.String[] strArray53 = deleteRequest51.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest51.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str64 = deleteRequest63.id();
        java.lang.String str65 = deleteRequest63.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str67 = deleteRequest66.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest66.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId70 = deleteRequest66.getParentTask();
        deleteRequest63.setParentTask(taskId70);
        deleteRequest59.setParentTask(taskId70);
        deleteRequest55.setParentTask(taskId70);
        deleteRequest40.setParentTask(taskId70);
        deleteRequest30.setParentTask(taskId70);
        org.elasticsearch.tasks.Task task76 = deleteRequest16.createTask((long) 100, "delete {[][][hi!]}", "hi!", taskId70);
        deleteRequest12.setParentTask(taskId70);
        org.elasticsearch.index.shard.ShardId shardId78 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = deleteRequest12.setShardId(shardId78);
        org.elasticsearch.common.unit.TimeValue timeValue80 = deleteRequest79.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = deleteRequest2.timeout(timeValue80);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertNotNull(indicesOptions7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str9, "delete {[delete {[][][hi!]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[null][null][null]}" + "'", str13, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException14);
        org.junit.Assert.assertNotNull(timeValue21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "delete {[][][]}" + "'", str38, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(task49);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "delete {[][][]}" + "'", str52, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(taskId70);
        org.junit.Assert.assertNotNull(task76);
        org.junit.Assert.assertNotNull(deleteRequest79);
        org.junit.Assert.assertNotNull(timeValue80);
        org.junit.Assert.assertNotNull(deleteRequest81);
    }

    @Test
    public void test8977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8977");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long10 = deleteRequest9.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.index("");
        boolean boolean13 = deleteRequest9.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest9.version((long) 1);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException16 = deleteRequest9.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure18 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}", (java.lang.Throwable) actionRequestValidationException16, "delete {[delete {[delete {[][][hi!]}][null][null]}][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure20 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[null][delete {[][delete {[hi!][null][null]}][hi!]}][delete {[][][hi!]}]}", (java.lang.Throwable) actionRequestValidationException16, "delete {[][][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure22 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][][]}", (java.lang.Throwable) actionRequestValidationException16, "delete {[delete {[hi!][][delete {[][][]}]}][delete {[][delete {[hi!][null][null]}][hi!]}][delete {[][][delete {[][delete {[][][hi!]}][delete {[][][]}]}]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure24 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[][][hi!]}][null][null]}][delete {[][][]}][]}", (java.lang.Throwable) actionRequestValidationException16, "delete {[][delete {[null][null][null]}][null]}");
        java.lang.String str25 = shardFailure24.reason;
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(actionRequestValidationException16);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[delete {[delete {[][][hi!]}][null][null]}][delete {[][][]}][]}" + "'", str25, "delete {[delete {[delete {[][][hi!]}][null][null]}][delete {[][][]}][]}");
    }

    @Test
    public void test8978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8978");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str3 = deleteRequest2.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue6 = deleteRequest5.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest2.timeout(timeValue6);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException8 = deleteRequest7.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure10 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}][delete {[hi!][null][null]}][hi!]}][delete {[][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][][]}]}][delete {[][][]}]}", (java.lang.Throwable) actionRequestValidationException8, "delete {[delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}][null][null]}");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting11 = shardFailure10.routing;
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(actionRequestValidationException8);
        org.junit.Assert.assertNull(shardRouting11);
    }

    @Test
    public void test8979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8979");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][delete {[][][]}]}", deleteRequest2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test8980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8980");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.type("delete {[null][null][null]}");
        java.lang.String str4 = deleteRequest1.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest1.index("");
        java.lang.String str7 = deleteRequest6.toString();
        org.elasticsearch.index.VersionType versionType8 = deleteRequest6.versionType();
        java.lang.String str9 = deleteRequest6.id();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[][delete {[null][null][null]}][null]}" + "'", str7, "delete {[][delete {[null][null][null]}][null]}");
        org.junit.Assert.assertNotNull(versionType8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test8981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8981");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long8 = deleteRequest7.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.index("");
        boolean boolean11 = deleteRequest7.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest7.version((long) 1);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException14 = deleteRequest7.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure16 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "", (java.lang.Throwable) actionRequestValidationException14, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure18 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}", (java.lang.Throwable) actionRequestValidationException14, "delete {[][][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure20 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][hi!][]}", (java.lang.Throwable) actionRequestValidationException14, "delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(actionRequestValidationException14);
    }

    @Test
    public void test8982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8982");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue2 = deleteRequest1.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress3 = null;
        deleteRequest1.remoteAddress(transportAddress3);
        java.lang.String str5 = deleteRequest1.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.parent("delete {[hi!][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest1.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest1.parent("delete {[delete {[][delete {[][][]}][delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}]}][delete {[delete {[delete {[][null][null]}][][delete {[][][hi!]}]}][delete {[][null][null]}][delete {[null][null][delete {[][][hi!]}]}]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.parent("delete {[][][]}");
        java.lang.String str14 = deleteRequest11.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.index("delete {[][][hi!]}");
        java.lang.String str18 = deleteRequest17.parent();
        java.lang.String str19 = deleteRequest17.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest17.parent("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId29 = null;
        org.elasticsearch.tasks.Task task30 = deleteRequest25.createTask(0L, "", "", taskId29);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel31 = deleteRequest25.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress36 = deleteRequest35.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId44 = null;
        org.elasticsearch.tasks.Task task45 = deleteRequest40.createTask(0L, "", "", taskId44);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy46 = deleteRequest40.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest35.setRefreshPolicy(refreshPolicy46);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest25.setRefreshPolicy(refreshPolicy46);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest17.setRefreshPolicy(refreshPolicy46);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest11.setRefreshPolicy(refreshPolicy46);
        org.elasticsearch.common.unit.TimeValue timeValue51 = deleteRequest11.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest10.timeout(timeValue51);
        org.junit.Assert.assertNotNull(timeValue2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[null][null][null]}" + "'", str5, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[null][null][null]}" + "'", str14, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str19, "delete {[delete {[][][hi!]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(task30);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel31 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel31.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(transportAddress36);
        org.junit.Assert.assertNotNull(task45);
        org.junit.Assert.assertTrue("'" + refreshPolicy46 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy46.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(timeValue51);
        org.junit.Assert.assertNotNull(deleteRequest52);
    }

    @Test
    public void test8983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8983");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        deleteRequest0.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.setRefreshPolicy("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException6 = deleteRequest5.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.index("delete {[hi!][null][null]}");
        java.lang.String str9 = deleteRequest8.index();
        java.lang.String str10 = deleteRequest8.routing();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.setRefreshPolicy("delete {[][hi!][delete {[][][]}]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[][hi!][delete {[][][]}]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(actionRequestValidationException6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[hi!][null][null]}" + "'", str9, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test8984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8984");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = deleteRequest3.remoteAddress();
        java.lang.String str5 = deleteRequest3.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId16 = null;
        org.elasticsearch.tasks.Task task17 = deleteRequest12.createTask(0L, "", "", taskId16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest12.setRefreshPolicy("");
        java.lang.String[] strArray20 = deleteRequest19.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId28 = null;
        org.elasticsearch.tasks.Task task29 = deleteRequest24.createTask(0L, "", "", taskId28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest24.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel32 = deleteRequest31.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest19.consistencyLevel(writeConsistencyLevel32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue36 = deleteRequest35.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress37 = null;
        deleteRequest35.remoteAddress(transportAddress37);
        org.elasticsearch.common.unit.TimeValue timeValue39 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest35.timeout(timeValue39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest19.timeout(timeValue39);
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest41.setShardId(shardId42);
        org.elasticsearch.tasks.TaskId taskId44 = deleteRequest41.getParentTask();
        org.elasticsearch.tasks.Task task45 = deleteRequest3.createTask((long) '#', "delete {[][][]}", "delete {[][][hi!]}", taskId44);
        boolean boolean46 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.index.shard.ShardId shardId47 = deleteRequest3.shardId();
        org.elasticsearch.common.transport.TransportAddress transportAddress48 = null;
        deleteRequest3.remoteAddress(transportAddress48);
        java.lang.String[] strArray50 = deleteRequest3.indices();
        org.junit.Assert.assertNull(transportAddress4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(task17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(task29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel32 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel32.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(timeValue36);
        org.junit.Assert.assertNotNull(timeValue39);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(taskId44);
        org.junit.Assert.assertNotNull(task45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(shardId47);
        org.junit.Assert.assertNotNull(strArray50);
    }

    @Test
    public void test8985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8985");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest1.setParentTask("hi!", (long) (short) 1);
        java.lang.String[] strArray5 = deleteRequest1.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest7.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue12 = deleteRequest11.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest7.timeout(timeValue12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest1.timeout(timeValue12);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel15 = deleteRequest1.consistencyLevel();
        java.lang.String str16 = deleteRequest1.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId24 = null;
        org.elasticsearch.tasks.Task task25 = deleteRequest20.createTask(0L, "", "", taskId24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest20.setRefreshPolicy("");
        java.lang.String[] strArray28 = deleteRequest27.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId36 = null;
        org.elasticsearch.tasks.Task task37 = deleteRequest32.createTask(0L, "", "", taskId36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest32.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel40 = deleteRequest39.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest27.consistencyLevel(writeConsistencyLevel40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue44 = deleteRequest43.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress45 = null;
        deleteRequest43.remoteAddress(transportAddress45);
        org.elasticsearch.common.unit.TimeValue timeValue47 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest43.timeout(timeValue47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest27.timeout(timeValue47);
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest49.setShardId(shardId50);
        org.elasticsearch.tasks.TaskId taskId52 = deleteRequest49.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest49.id("delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel55 = deleteRequest49.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest1.consistencyLevel(writeConsistencyLevel55);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(timeValue12);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel15 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel15.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[][null][null]}" + "'", str16, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(task25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(task37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel40 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel40.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(timeValue44);
        org.junit.Assert.assertNotNull(timeValue47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(taskId52);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel55 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel55.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest56);
    }

    @Test
    public void test8986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8986");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}][delete {[][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}][]}][delete {[][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][delete {[][][]}]}]}", "delete {[][delete {[null][null][null]}][]}", "delete {[delete {[delete {[][][hi!]}][null][null]}][delete {[][][]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.parent("delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}][delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][hi!][delete {[][][]}]}]}");
        org.junit.Assert.assertNotNull(deleteRequest5);
    }

    @Test
    public void test8987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8987");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue2 = deleteRequest1.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress3 = null;
        deleteRequest1.remoteAddress(transportAddress3);
        org.elasticsearch.common.unit.TimeValue timeValue5 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest1.timeout(timeValue5);
        java.lang.String str7 = deleteRequest1.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest1.routing("delete {[][delete {[][][]}][delete {[][][]}]}");
        java.lang.String str10 = deleteRequest1.id();
        java.lang.String str11 = deleteRequest1.routing();
        java.lang.String str12 = deleteRequest1.routing();
        org.junit.Assert.assertNotNull(timeValue2);
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][delete {[][][]}][delete {[][][]}]}" + "'", str11, "delete {[][delete {[][][]}][delete {[][][]}]}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][delete {[][][]}][delete {[][][]}]}" + "'", str12, "delete {[][delete {[][][]}][delete {[][][]}]}");
    }

    @Test
    public void test8988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8988");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.type();
        deleteRequest3.setParentTask("delete {[][][hi!]}", (long) (short) 1);
        java.lang.String str8 = deleteRequest3.parent();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel9 = deleteRequest3.consistencyLevel();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel9 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel9.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test8989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8989");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long10 = deleteRequest9.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str12 = deleteRequest11.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest14.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest18.getParentTask();
        deleteRequest9.setParentTask(taskId19);
        org.elasticsearch.tasks.Task task21 = deleteRequest3.createTask((long) ' ', "delete {[][][hi!]}", "delete {[][][]}", taskId19);
        java.lang.String str22 = deleteRequest3.getDescription();
        org.elasticsearch.common.unit.TimeValue timeValue23 = deleteRequest3.timeout();
        org.elasticsearch.action.support.IndicesOptions indicesOptions24 = deleteRequest3.indicesOptions();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][][]}" + "'", str4, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[][][]}" + "'", str22, "delete {[][][]}");
        org.junit.Assert.assertNotNull(timeValue23);
        org.junit.Assert.assertNotNull(indicesOptions24);
    }

    @Test
    public void test8990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8990");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy9 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId17 = null;
        org.elasticsearch.tasks.Task task18 = deleteRequest13.createTask(0L, "", "", taskId17);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy19 = deleteRequest13.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest3.setRefreshPolicy(refreshPolicy19);
        java.lang.String str21 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest3.id("hi!");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel24 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.type("delete {[][][]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel31 = deleteRequest30.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest3.consistencyLevel(writeConsistencyLevel31);
        boolean boolean33 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId41 = null;
        org.elasticsearch.tasks.Task task42 = deleteRequest37.createTask(0L, "", "", taskId41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest37.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel45 = deleteRequest44.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions46 = deleteRequest44.indicesOptions();
        java.lang.String str47 = deleteRequest44.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str49 = deleteRequest48.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest48.version((long) (short) 100);
        deleteRequest48.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str55 = deleteRequest54.parent();
        org.elasticsearch.index.VersionType versionType56 = deleteRequest54.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest48.versionType(versionType56);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest44.versionType(versionType56);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest59.parent("delete {[][][]}");
        org.elasticsearch.index.VersionType versionType62 = deleteRequest61.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest44.versionType(versionType62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest3.versionType(versionType62);
        deleteRequest64.setParentTask("delete {[delete {[][null][null]}][delete {[hi!][null][null]}][delete {[hi!][null][null]}]}", (-3L));
        org.elasticsearch.common.unit.TimeValue timeValue68 = deleteRequest64.timeout();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertTrue("'" + refreshPolicy9 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy9.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertTrue("'" + refreshPolicy19 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy19.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[][][]}" + "'", str21, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel24 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel24.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel31 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel31.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(task42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel45 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel45.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "delete {[][][]}" + "'", str47, "delete {[][][]}");
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(versionType56);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(versionType62);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(timeValue68);
    }

    @Test
    public void test8991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8991");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.consistencyLevel(writeConsistencyLevel23);
        deleteRequest24.setParentTask("hi!", (long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest24.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest24.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId39 = null;
        org.elasticsearch.tasks.Task task40 = deleteRequest35.createTask(0L, "", "", taskId39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest35.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel43 = deleteRequest42.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions44 = deleteRequest42.indicesOptions();
        java.lang.String str45 = deleteRequest42.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str47 = deleteRequest46.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest46.version((long) (short) 100);
        deleteRequest46.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str53 = deleteRequest52.parent();
        org.elasticsearch.index.VersionType versionType54 = deleteRequest52.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest46.versionType(versionType54);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest42.versionType(versionType54);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest31.versionType(versionType54);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest57.parent("");
        org.elasticsearch.index.shard.ShardId shardId60 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest59.setShardId(shardId60);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException62 = deleteRequest61.validate();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException63 = deleteRequest61.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest61.version((-3L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest61.parent("delete {[][delete {[hi!][null][null]}][]}");
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(task40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel43 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel43.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "delete {[][][]}" + "'", str45, "delete {[][][]}");
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(versionType54);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNull(actionRequestValidationException62);
        org.junit.Assert.assertNull(actionRequestValidationException63);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(deleteRequest67);
    }

    @Test
    public void test8992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8992");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest3.consistencyLevel(writeConsistencyLevel11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.routing("delete {[delete {[][][hi!]}][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = deleteRequest14.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.index("delete {[delete {[null][null][null]}][null][null]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.timeout("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(transportAddress15);
        org.junit.Assert.assertNotNull(deleteRequest17);
    }

    @Test
    public void test8993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8993");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.routing("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.version((long) (short) -1);
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = deleteRequest13.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest13.id("delete {[delete {[delete {[][][hi!]}][null][null]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest13.index("delete {[][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][delete {[][][]}]}");
        java.lang.String str21 = deleteRequest20.index();
        long long22 = deleteRequest20.version();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(transportAddress16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][delete {[][][]}]}" + "'", str21, "delete {[][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][delete {[][][]}]}");
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
    }

    @Test
    public void test8994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8994");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.index("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.type("delete {[][][]}");
        java.lang.String str17 = deleteRequest14.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest14.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest19.type("delete {[][][]}");
        org.elasticsearch.common.unit.TimeValue timeValue24 = deleteRequest19.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest10.timeout(timeValue24);
        org.elasticsearch.common.transport.TransportAddress transportAddress26 = null;
        deleteRequest10.remoteAddress(transportAddress26);
        java.lang.Class<?> wildcardClass28 = deleteRequest10.getClass();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[][][]}" + "'", str17, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(timeValue24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test8995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8995");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest1.setParentTask("hi!", (long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.type("delete {[][][]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy11 = deleteRequest8.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest1.setRefreshPolicy(refreshPolicy11);
        java.lang.String str13 = deleteRequest1.index();
        java.lang.String[] strArray14 = deleteRequest1.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest1.type("delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + refreshPolicy11 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy11.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(deleteRequest16);
    }

    @Test
    public void test8996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8996");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.setRefreshPolicy(refreshPolicy14);
        long long16 = deleteRequest3.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest19.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue24 = deleteRequest23.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest19.timeout(timeValue24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str27 = deleteRequest26.parent();
        org.elasticsearch.index.VersionType versionType28 = deleteRequest26.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest19.versionType(versionType28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest3.versionType(versionType28);
        java.lang.String str31 = deleteRequest3.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest3.type("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest33.setShardId(shardId34);
        long long36 = deleteRequest35.version();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(transportAddress13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(timeValue24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-3L) + "'", long36 == (-3L));
    }

    @Test
    public void test8997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8997");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.setShardId(shardId12);
        long long14 = deleteRequest10.version();
        java.lang.String[] strArray15 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str20 = deleteRequest19.id();
        org.elasticsearch.common.transport.TransportAddress transportAddress21 = deleteRequest19.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest19.setShardId(shardId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType30 = deleteRequest29.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest23.versionType(versionType30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest10.versionType(versionType30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest10.parent("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest34.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str41 = deleteRequest40.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long47 = deleteRequest46.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str49 = deleteRequest48.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue52 = deleteRequest51.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest48.timeout(timeValue52);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest53.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId56 = deleteRequest55.getParentTask();
        deleteRequest46.setParentTask(taskId56);
        org.elasticsearch.tasks.Task task58 = deleteRequest40.createTask((long) ' ', "delete {[][][hi!]}", "delete {[][][]}", taskId56);
        java.lang.String[] strArray59 = deleteRequest40.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest60.index("delete {[][][hi!]}");
        java.lang.String str63 = deleteRequest62.parent();
        java.lang.String str64 = deleteRequest62.type();
        long long65 = deleteRequest62.primaryTerm();
        long long66 = deleteRequest62.version();
        java.lang.String str67 = deleteRequest62.type();
        deleteRequest62.primaryTerm(1L);
        org.elasticsearch.common.transport.TransportAddress transportAddress70 = deleteRequest62.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest71.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest73.type("delete {[hi!][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel76 = deleteRequest73.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest62.consistencyLevel(writeConsistencyLevel76);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = deleteRequest40.consistencyLevel(writeConsistencyLevel76);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = deleteRequest36.consistencyLevel(writeConsistencyLevel76);
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-3L) + "'", long14 == (-3L));
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNull(transportAddress21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(versionType30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "delete {[][][]}" + "'", str41, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 0L + "'", long47 == 0L);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(timeValue52);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(taskId56);
        org.junit.Assert.assertNotNull(task58);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 0L + "'", long65 == 0L);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + (-3L) + "'", long66 == (-3L));
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNull(transportAddress70);
        org.junit.Assert.assertNotNull(deleteRequest73);
        org.junit.Assert.assertNotNull(deleteRequest75);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel76 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel76.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertNotNull(deleteRequest78);
        org.junit.Assert.assertNotNull(deleteRequest79);
    }

    @Test
    public void test8998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8998");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        org.elasticsearch.action.support.IndicesOptions indicesOptions9 = deleteRequest8.indicesOptions();
        org.elasticsearch.action.support.IndicesOptions indicesOptions10 = deleteRequest8.indicesOptions();
        java.lang.String str11 = deleteRequest8.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str16 = deleteRequest15.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.id("hi!");
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest18.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId27 = null;
        org.elasticsearch.tasks.Task task28 = deleteRequest23.createTask(0L, "", "", taskId27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest23.setRefreshPolicy("");
        java.lang.String[] strArray31 = deleteRequest30.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId39 = null;
        org.elasticsearch.tasks.Task task40 = deleteRequest35.createTask(0L, "", "", taskId39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest35.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel43 = deleteRequest42.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest30.consistencyLevel(writeConsistencyLevel43);
        deleteRequest44.setParentTask("hi!", (long) (short) 100);
        org.elasticsearch.index.VersionType versionType48 = deleteRequest44.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest18.versionType(versionType48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest8.versionType(versionType48);
        boolean boolean51 = deleteRequest50.getShouldPersistResult();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(indicesOptions9);
        org.junit.Assert.assertNotNull(indicesOptions10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(task40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel43 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel43.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(versionType48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test8999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test8999");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str7 = deleteRequest6.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest6.getParentTask();
        deleteRequest3.setParentTask(taskId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.consistencyLevel(writeConsistencyLevel14);
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest15.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.index.VersionType versionType21 = deleteRequest20.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str27 = deleteRequest26.getDescription();
        java.lang.String str28 = deleteRequest26.routing();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest15.consistencyLevel(writeConsistencyLevel29);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel31 = deleteRequest30.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest30.version((long) 0);
        org.elasticsearch.common.unit.TimeValue timeValue34 = deleteRequest33.timeout();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertNotNull(versionType21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][][]}" + "'", str27, "delete {[][][]}");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel29 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel29.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel31 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel31.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(timeValue34);
    }

    @Test
    public void test9000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test9000");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.id("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.version((long) 10);
        org.elasticsearch.common.transport.TransportAddress transportAddress10 = deleteRequest7.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str15 = deleteRequest14.id();
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.setShardId(shardId16);
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest14.setShardId(shardId18);
        java.lang.String str20 = deleteRequest14.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str22 = deleteRequest21.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.routing("delete {[][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress27 = deleteRequest26.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str32 = deleteRequest31.id();
        java.lang.String str33 = deleteRequest31.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str35 = deleteRequest34.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest34.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId38 = deleteRequest34.getParentTask();
        deleteRequest31.setParentTask(taskId38);
        deleteRequest26.setParentTask(taskId38);
        deleteRequest14.setParentTask(taskId38);
        org.elasticsearch.index.shard.ShardId shardId42 = deleteRequest14.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.index.VersionType versionType47 = deleteRequest46.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest14.versionType(versionType47);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel49 = deleteRequest14.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest7.consistencyLevel(writeConsistencyLevel49);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy51 = deleteRequest7.getRefreshPolicy();
        java.lang.String str52 = deleteRequest7.type();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy53 = deleteRequest7.getRefreshPolicy();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNull(transportAddress10);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(transportAddress27);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(taskId38);
        org.junit.Assert.assertNull(shardId42);
        org.junit.Assert.assertNotNull(versionType47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel49 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel49.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertTrue("'" + refreshPolicy51 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy51.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + refreshPolicy53 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy53.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
    }
}

